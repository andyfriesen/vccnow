
.event 0
* 00 00 00 00               01 13 .exec EnforceAnimation
  02 00 00 00               01 0f .exec FadeIn
  04 00 00 00                  01 .literal
  05 00 00 00         01 00 00 00 1
  09 00 00 00                  ff .end (operand)
  0a 00 00 00               02 1f .var0 DRAWPARTY
  0c 00 00 00                  01 .set
  0d 00 00 00                  01 .literal
  0e 00 00 00         00 00 00 00 0
  12 00 00 00                  ff .end (operand)
  13 00 00 00               01 22 .exec DisableMenu
  15 00 00 00               03 00 .var1 FLAGS
  17 00 00 00                  01 .literal
  18 00 00 00         20 03 00 00 800
  1c 00 00 00                  ff .end (operand)
  1d 00 00 00                  01 .set
  1e 00 00 00                  01 .literal
  1f 00 00 00         01 00 00 00 1
  23 00 00 00                  ff .end (operand)
  24 00 00 00               03 00 .var1 FLAGS
  26 00 00 00                  01 .literal
  27 00 00 00         e9 03 00 00 1001
  2b 00 00 00                  ff .end (operand)
  2c 00 00 00                  01 .set
  2d 00 00 00                  01 .literal
  2e 00 00 00         00 00 00 00 0
  32 00 00 00                  ff .end (operand)
  33 00 00 00               03 00 .var1 FLAGS
  35 00 00 00                  01 .literal
  36 00 00 00         ea 03 00 00 1002
  3a 00 00 00                  ff .end (operand)
  3b 00 00 00                  01 .set
  3c 00 00 00                  01 .literal
  3d 00 00 00         00 00 00 00 0
  41 00 00 00                  ff .end (operand)
  42 00 00 00               03 00 .var1 FLAGS
  44 00 00 00                  01 .literal
  45 00 00 00         eb 03 00 00 1003
  49 00 00 00                  ff .end (operand)
  4a 00 00 00                  01 .set
  4b 00 00 00                  01 .literal
  4c 00 00 00         00 00 00 00 0
  50 00 00 00                  ff .end (operand)
  51 00 00 00               03 00 .var1 FLAGS
  53 00 00 00                  01 .literal
  54 00 00 00         ec 03 00 00 1004
  58 00 00 00                  ff .end (operand)
  59 00 00 00                  01 .set
  5a 00 00 00                  01 .literal
  5b 00 00 00         00 00 00 00 0
  5f 00 00 00                  ff .end (operand)
  60 00 00 00               03 00 .var1 FLAGS
  62 00 00 00                  01 .literal
  63 00 00 00         ed 03 00 00 1005
  67 00 00 00                  ff .end (operand)
  68 00 00 00                  01 .set
  69 00 00 00                  01 .literal
  6a 00 00 00         00 00 00 00 0
  6e 00 00 00                  ff .end (operand)
  6f 00 00 00               03 00 .var1 FLAGS
  71 00 00 00                  01 .literal
  72 00 00 00         ee 03 00 00 1006
  76 00 00 00                  ff .end (operand)
  77 00 00 00                  01 .set
  78 00 00 00                  01 .literal
  79 00 00 00         00 00 00 00 0
  7d 00 00 00                  ff .end (operand)
  7e 00 00 00               03 00 .var1 FLAGS
  80 00 00 00                  01 .literal
  81 00 00 00         ef 03 00 00 1007
  85 00 00 00                  ff .end (operand)
  86 00 00 00                  01 .set
  87 00 00 00                  01 .literal
  88 00 00 00         00 00 00 00 0
  8c 00 00 00                  ff .end (operand)
  8d 00 00 00               03 00 .var1 FLAGS
  8f 00 00 00                  01 .literal
  90 00 00 00         f0 03 00 00 1008
  94 00 00 00                  ff .end (operand)
  95 00 00 00                  01 .set
  96 00 00 00                  01 .literal
  97 00 00 00         00 00 00 00 0
  9b 00 00 00                  ff .end (operand)
  9c 00 00 00                  0a .switch
  9d 00 00 00               03 00 .var1 FLAGS
  9f 00 00 00                  01 .literal
  a0 00 00 00         f5 01 00 00 501
  a4 00 00 00                  ff .end (operand)
  a5 00 00 00                  ff .end (operand)
  a6 00 00 00                  0b .case
  a7 00 00 00                  05 .group
  a8 00 00 00                  01 .literal
  a9 00 00 00         00 00 00 00 0
  ad 00 00 00                  ff .end (operand)
  ae 00 00 00                  ff .end (operand)
  af 00 00 00         c3 00 00 00 .case-end-address
  b3 00 00 00               03 11 .var1 ENTITY.CHRINDEX
  b5 00 00 00                  01 .literal
  b6 00 00 00         07 00 00 00 7
  ba 00 00 00                  ff .end (operand)
  bb 00 00 00                  01 .set
  bc 00 00 00                  01 .literal
  bd 00 00 00         10 00 00 00 16
  c1 00 00 00                  ff .end (operand)
  c2 00 00 00                  ff .end (block)
 :c3 00 00 00                  0b .case
  c4 00 00 00                  05 .group
  c5 00 00 00                  01 .literal
  c6 00 00 00         01 00 00 00 1
  ca 00 00 00                  ff .end (operand)
  cb 00 00 00                  ff .end (operand)
  cc 00 00 00         e0 00 00 00 .case-end-address
  d0 00 00 00               03 11 .var1 ENTITY.CHRINDEX
  d2 00 00 00                  01 .literal
  d3 00 00 00         07 00 00 00 7
  d7 00 00 00                  ff .end (operand)
  d8 00 00 00                  01 .set
  d9 00 00 00                  01 .literal
  da 00 00 00         07 00 00 00 7
  de 00 00 00                  ff .end (operand)
  df 00 00 00                  ff .end (block)
 :e0 00 00 00                  0b .case
  e1 00 00 00                  05 .group
  e2 00 00 00                  01 .literal
  e3 00 00 00         02 00 00 00 2
  e7 00 00 00                  ff .end (operand)
  e8 00 00 00                  ff .end (operand)
  e9 00 00 00         fd 00 00 00 .case-end-address
  ed 00 00 00               03 11 .var1 ENTITY.CHRINDEX
  ef 00 00 00                  01 .literal
  f0 00 00 00         07 00 00 00 7
  f4 00 00 00                  ff .end (operand)
  f5 00 00 00                  01 .set
  f6 00 00 00                  01 .literal
  f7 00 00 00         0e 00 00 00 14
  fb 00 00 00                  ff .end (operand)
  fc 00 00 00                  ff .end (block)
 :fd 00 00 00                  0b .case
  fe 00 00 00                  05 .group
  ff 00 00 00                  01 .literal
  00 01 00 00         03 00 00 00 3
  04 01 00 00                  ff .end (operand)
  05 01 00 00                  ff .end (operand)
  06 01 00 00         1a 01 00 00 .case-end-address
  0a 01 00 00               03 11 .var1 ENTITY.CHRINDEX
  0c 01 00 00                  01 .literal
  0d 01 00 00         07 00 00 00 7
  11 01 00 00                  ff .end (operand)
  12 01 00 00                  01 .set
  13 01 00 00                  01 .literal
  14 01 00 00         0f 00 00 00 15
  18 01 00 00                  ff .end (operand)
  19 01 00 00                  ff .end (block)
 :1a 01 00 00                  0b .case
  1b 01 00 00                  05 .group
  1c 01 00 00                  01 .literal
  1d 01 00 00         04 00 00 00 4
  21 01 00 00                  ff .end (operand)
  22 01 00 00                  ff .end (operand)
  23 01 00 00         37 01 00 00 .case-end-address
  27 01 00 00               03 11 .var1 ENTITY.CHRINDEX
  29 01 00 00                  01 .literal
  2a 01 00 00         07 00 00 00 7
  2e 01 00 00                  ff .end (operand)
  2f 01 00 00                  01 .set
  30 01 00 00                  01 .literal
  31 01 00 00         12 00 00 00 18
  35 01 00 00                  ff .end (operand)
  36 01 00 00                  ff .end (block)
 :37 01 00 00                  0b .case
  38 01 00 00                  05 .group
  39 01 00 00                  01 .literal
  3a 01 00 00         05 00 00 00 5
  3e 01 00 00                  ff .end (operand)
  3f 01 00 00                  ff .end (operand)
  40 01 00 00         54 01 00 00 .case-end-address
  44 01 00 00               03 11 .var1 ENTITY.CHRINDEX
  46 01 00 00                  01 .literal
  47 01 00 00         07 00 00 00 7
  4b 01 00 00                  ff .end (operand)
  4c 01 00 00                  01 .set
  4d 01 00 00                  01 .literal
  4e 01 00 00         14 00 00 00 20
  52 01 00 00                  ff .end (operand)
  53 01 00 00                  ff .end (block)
 :54 01 00 00                  0b .case
  55 01 00 00                  05 .group
  56 01 00 00                  01 .literal
  57 01 00 00         06 00 00 00 6
  5b 01 00 00                  ff .end (operand)
  5c 01 00 00                  ff .end (operand)
  5d 01 00 00         71 01 00 00 .case-end-address
  61 01 00 00               03 11 .var1 ENTITY.CHRINDEX
  63 01 00 00                  01 .literal
  64 01 00 00         07 00 00 00 7
  68 01 00 00                  ff .end (operand)
  69 01 00 00                  01 .set
  6a 01 00 00                  01 .literal
  6b 01 00 00         15 00 00 00 21
  6f 01 00 00                  ff .end (operand)
  70 01 00 00                  ff .end (block)
 :71 01 00 00                  0b .case
  72 01 00 00                  05 .group
  73 01 00 00                  01 .literal
  74 01 00 00         07 00 00 00 7
  78 01 00 00                  ff .end (operand)
  79 01 00 00                  ff .end (operand)
  7a 01 00 00         8e 01 00 00 .case-end-address
  7e 01 00 00               03 11 .var1 ENTITY.CHRINDEX
  80 01 00 00                  01 .literal
  81 01 00 00         07 00 00 00 7
  85 01 00 00                  ff .end (operand)
  86 01 00 00                  01 .set
  87 01 00 00                  01 .literal
  88 01 00 00         17 00 00 00 23
  8c 01 00 00                  ff .end (operand)
  8d 01 00 00                  ff .end (block)
 :8e 01 00 00                  0b .case
  8f 01 00 00                  05 .group
  90 01 00 00                  01 .literal
  91 01 00 00         08 00 00 00 8
  95 01 00 00                  ff .end (operand)
  96 01 00 00                  ff .end (operand)
  97 01 00 00         ab 01 00 00 .case-end-address
  9b 01 00 00               03 11 .var1 ENTITY.CHRINDEX
  9d 01 00 00                  01 .literal
  9e 01 00 00         07 00 00 00 7
  a2 01 00 00                  ff .end (operand)
  a3 01 00 00                  01 .set
  a4 01 00 00                  01 .literal
  a5 01 00 00         13 00 00 00 19
  a9 01 00 00                  ff .end (operand)
  aa 01 00 00                  ff .end (block)
 :ab 01 00 00                  ff .end (switch)
  ac 01 00 00                  0a .switch
  ad 01 00 00               03 00 .var1 FLAGS
  af 01 00 00                  01 .literal
  b0 01 00 00         02 02 00 00 514
  b4 01 00 00                  ff .end (operand)
  b5 01 00 00                  ff .end (operand)
  b6 01 00 00                  0b .case
  b7 01 00 00                  05 .group
  b8 01 00 00                  01 .literal
  b9 01 00 00         00 00 00 00 0
  bd 01 00 00                  ff .end (operand)
  be 01 00 00                  ff .end (operand)
  bf 01 00 00         d3 01 00 00 .case-end-address
  c3 01 00 00               03 11 .var1 ENTITY.CHRINDEX
  c5 01 00 00                  01 .literal
  c6 01 00 00         05 00 00 00 5
  ca 01 00 00                  ff .end (operand)
  cb 01 00 00                  01 .set
  cc 01 00 00                  01 .literal
  cd 01 00 00         10 00 00 00 16
  d1 01 00 00                  ff .end (operand)
  d2 01 00 00                  ff .end (block)
 :d3 01 00 00                  0b .case
  d4 01 00 00                  05 .group
  d5 01 00 00                  01 .literal
  d6 01 00 00         01 00 00 00 1
  da 01 00 00                  ff .end (operand)
  db 01 00 00                  ff .end (operand)
  dc 01 00 00         f0 01 00 00 .case-end-address
  e0 01 00 00               03 11 .var1 ENTITY.CHRINDEX
  e2 01 00 00                  01 .literal
  e3 01 00 00         05 00 00 00 5
  e7 01 00 00                  ff .end (operand)
  e8 01 00 00                  01 .set
  e9 01 00 00                  01 .literal
  ea 01 00 00         07 00 00 00 7
  ee 01 00 00                  ff .end (operand)
  ef 01 00 00                  ff .end (block)
 :f0 01 00 00                  0b .case
  f1 01 00 00                  05 .group
  f2 01 00 00                  01 .literal
  f3 01 00 00         02 00 00 00 2
  f7 01 00 00                  ff .end (operand)
  f8 01 00 00                  ff .end (operand)
  f9 01 00 00         0d 02 00 00 .case-end-address
  fd 01 00 00               03 11 .var1 ENTITY.CHRINDEX
  ff 01 00 00                  01 .literal
  00 02 00 00         05 00 00 00 5
  04 02 00 00                  ff .end (operand)
  05 02 00 00                  01 .set
  06 02 00 00                  01 .literal
  07 02 00 00         0e 00 00 00 14
  0b 02 00 00                  ff .end (operand)
  0c 02 00 00                  ff .end (block)
 :0d 02 00 00                  0b .case
  0e 02 00 00                  05 .group
  0f 02 00 00                  01 .literal
  10 02 00 00         03 00 00 00 3
  14 02 00 00                  ff .end (operand)
  15 02 00 00                  ff .end (operand)
  16 02 00 00         2a 02 00 00 .case-end-address
  1a 02 00 00               03 11 .var1 ENTITY.CHRINDEX
  1c 02 00 00                  01 .literal
  1d 02 00 00         05 00 00 00 5
  21 02 00 00                  ff .end (operand)
  22 02 00 00                  01 .set
  23 02 00 00                  01 .literal
  24 02 00 00         0f 00 00 00 15
  28 02 00 00                  ff .end (operand)
  29 02 00 00                  ff .end (block)
 :2a 02 00 00                  0b .case
  2b 02 00 00                  05 .group
  2c 02 00 00                  01 .literal
  2d 02 00 00         04 00 00 00 4
  31 02 00 00                  ff .end (operand)
  32 02 00 00                  ff .end (operand)
  33 02 00 00         47 02 00 00 .case-end-address
  37 02 00 00               03 11 .var1 ENTITY.CHRINDEX
  39 02 00 00                  01 .literal
  3a 02 00 00         05 00 00 00 5
  3e 02 00 00                  ff .end (operand)
  3f 02 00 00                  01 .set
  40 02 00 00                  01 .literal
  41 02 00 00         12 00 00 00 18
  45 02 00 00                  ff .end (operand)
  46 02 00 00                  ff .end (block)
 :47 02 00 00                  0b .case
  48 02 00 00                  05 .group
  49 02 00 00                  01 .literal
  4a 02 00 00         05 00 00 00 5
  4e 02 00 00                  ff .end (operand)
  4f 02 00 00                  ff .end (operand)
  50 02 00 00         64 02 00 00 .case-end-address
  54 02 00 00               03 11 .var1 ENTITY.CHRINDEX
  56 02 00 00                  01 .literal
  57 02 00 00         05 00 00 00 5
  5b 02 00 00                  ff .end (operand)
  5c 02 00 00                  01 .set
  5d 02 00 00                  01 .literal
  5e 02 00 00         14 00 00 00 20
  62 02 00 00                  ff .end (operand)
  63 02 00 00                  ff .end (block)
 :64 02 00 00                  0b .case
  65 02 00 00                  05 .group
  66 02 00 00                  01 .literal
  67 02 00 00         06 00 00 00 6
  6b 02 00 00                  ff .end (operand)
  6c 02 00 00                  ff .end (operand)
  6d 02 00 00         81 02 00 00 .case-end-address
  71 02 00 00               03 11 .var1 ENTITY.CHRINDEX
  73 02 00 00                  01 .literal
  74 02 00 00         05 00 00 00 5
  78 02 00 00                  ff .end (operand)
  79 02 00 00                  01 .set
  7a 02 00 00                  01 .literal
  7b 02 00 00         16 00 00 00 22
  7f 02 00 00                  ff .end (operand)
  80 02 00 00                  ff .end (block)
 :81 02 00 00                  0b .case
  82 02 00 00                  05 .group
  83 02 00 00                  01 .literal
  84 02 00 00         07 00 00 00 7
  88 02 00 00                  ff .end (operand)
  89 02 00 00                  ff .end (operand)
  8a 02 00 00         9e 02 00 00 .case-end-address
  8e 02 00 00               03 11 .var1 ENTITY.CHRINDEX
  90 02 00 00                  01 .literal
  91 02 00 00         05 00 00 00 5
  95 02 00 00                  ff .end (operand)
  96 02 00 00                  01 .set
  97 02 00 00                  01 .literal
  98 02 00 00         17 00 00 00 23
  9c 02 00 00                  ff .end (operand)
  9d 02 00 00                  ff .end (block)
 :9e 02 00 00                  0b .case
  9f 02 00 00                  05 .group
  a0 02 00 00                  01 .literal
  a1 02 00 00         08 00 00 00 8
  a5 02 00 00                  ff .end (operand)
  a6 02 00 00                  ff .end (operand)
  a7 02 00 00         bb 02 00 00 .case-end-address
  ab 02 00 00               03 11 .var1 ENTITY.CHRINDEX
  ad 02 00 00                  01 .literal
  ae 02 00 00         05 00 00 00 5
  b2 02 00 00                  ff .end (operand)
  b3 02 00 00                  01 .set
  b4 02 00 00                  01 .literal
  b5 02 00 00         13 00 00 00 19
  b9 02 00 00                  ff .end (operand)
  ba 02 00 00                  ff .end (block)
 :bb 02 00 00                  ff .end (switch)
  bc 02 00 00                  0a .switch
  bd 02 00 00               03 00 .var1 FLAGS
  bf 02 00 00                  01 .literal
  c0 02 00 00         0f 02 00 00 527
  c4 02 00 00                  ff .end (operand)
  c5 02 00 00                  ff .end (operand)
  c6 02 00 00                  0b .case
  c7 02 00 00                  05 .group
  c8 02 00 00                  01 .literal
  c9 02 00 00         00 00 00 00 0
  cd 02 00 00                  ff .end (operand)
  ce 02 00 00                  ff .end (operand)
  cf 02 00 00         e3 02 00 00 .case-end-address
  d3 02 00 00               03 11 .var1 ENTITY.CHRINDEX
  d5 02 00 00                  01 .literal
  d6 02 00 00         06 00 00 00 6
  da 02 00 00                  ff .end (operand)
  db 02 00 00                  01 .set
  dc 02 00 00                  01 .literal
  dd 02 00 00         10 00 00 00 16
  e1 02 00 00                  ff .end (operand)
  e2 02 00 00                  ff .end (block)
 :e3 02 00 00                  0b .case
  e4 02 00 00                  05 .group
  e5 02 00 00                  01 .literal
  e6 02 00 00         01 00 00 00 1
  ea 02 00 00                  ff .end (operand)
  eb 02 00 00                  ff .end (operand)
  ec 02 00 00         00 03 00 00 .case-end-address
  f0 02 00 00               03 11 .var1 ENTITY.CHRINDEX
  f2 02 00 00                  01 .literal
  f3 02 00 00         06 00 00 00 6
  f7 02 00 00                  ff .end (operand)
  f8 02 00 00                  01 .set
  f9 02 00 00                  01 .literal
  fa 02 00 00         07 00 00 00 7
  fe 02 00 00                  ff .end (operand)
  ff 02 00 00                  ff .end (block)
 :00 03 00 00                  0b .case
  01 03 00 00                  05 .group
  02 03 00 00                  01 .literal
  03 03 00 00         02 00 00 00 2
  07 03 00 00                  ff .end (operand)
  08 03 00 00                  ff .end (operand)
  09 03 00 00         1d 03 00 00 .case-end-address
  0d 03 00 00               03 11 .var1 ENTITY.CHRINDEX
  0f 03 00 00                  01 .literal
  10 03 00 00         06 00 00 00 6
  14 03 00 00                  ff .end (operand)
  15 03 00 00                  01 .set
  16 03 00 00                  01 .literal
  17 03 00 00         0e 00 00 00 14
  1b 03 00 00                  ff .end (operand)
  1c 03 00 00                  ff .end (block)
 :1d 03 00 00                  0b .case
  1e 03 00 00                  05 .group
  1f 03 00 00                  01 .literal
  20 03 00 00         03 00 00 00 3
  24 03 00 00                  ff .end (operand)
  25 03 00 00                  ff .end (operand)
  26 03 00 00         3a 03 00 00 .case-end-address
  2a 03 00 00               03 11 .var1 ENTITY.CHRINDEX
  2c 03 00 00                  01 .literal
  2d 03 00 00         06 00 00 00 6
  31 03 00 00                  ff .end (operand)
  32 03 00 00                  01 .set
  33 03 00 00                  01 .literal
  34 03 00 00         0f 00 00 00 15
  38 03 00 00                  ff .end (operand)
  39 03 00 00                  ff .end (block)
 :3a 03 00 00                  0b .case
  3b 03 00 00                  05 .group
  3c 03 00 00                  01 .literal
  3d 03 00 00         04 00 00 00 4
  41 03 00 00                  ff .end (operand)
  42 03 00 00                  ff .end (operand)
  43 03 00 00         57 03 00 00 .case-end-address
  47 03 00 00               03 11 .var1 ENTITY.CHRINDEX
  49 03 00 00                  01 .literal
  4a 03 00 00         06 00 00 00 6
  4e 03 00 00                  ff .end (operand)
  4f 03 00 00                  01 .set
  50 03 00 00                  01 .literal
  51 03 00 00         12 00 00 00 18
  55 03 00 00                  ff .end (operand)
  56 03 00 00                  ff .end (block)
 :57 03 00 00                  0b .case
  58 03 00 00                  05 .group
  59 03 00 00                  01 .literal
  5a 03 00 00         05 00 00 00 5
  5e 03 00 00                  ff .end (operand)
  5f 03 00 00                  ff .end (operand)
  60 03 00 00         74 03 00 00 .case-end-address
  64 03 00 00               03 11 .var1 ENTITY.CHRINDEX
  66 03 00 00                  01 .literal
  67 03 00 00         06 00 00 00 6
  6b 03 00 00                  ff .end (operand)
  6c 03 00 00                  01 .set
  6d 03 00 00                  01 .literal
  6e 03 00 00         14 00 00 00 20
  72 03 00 00                  ff .end (operand)
  73 03 00 00                  ff .end (block)
 :74 03 00 00                  0b .case
  75 03 00 00                  05 .group
  76 03 00 00                  01 .literal
  77 03 00 00         06 00 00 00 6
  7b 03 00 00                  ff .end (operand)
  7c 03 00 00                  ff .end (operand)
  7d 03 00 00         91 03 00 00 .case-end-address
  81 03 00 00               03 11 .var1 ENTITY.CHRINDEX
  83 03 00 00                  01 .literal
  84 03 00 00         06 00 00 00 6
  88 03 00 00                  ff .end (operand)
  89 03 00 00                  01 .set
  8a 03 00 00                  01 .literal
  8b 03 00 00         15 00 00 00 21
  8f 03 00 00                  ff .end (operand)
  90 03 00 00                  ff .end (block)
 :91 03 00 00                  0b .case
  92 03 00 00                  05 .group
  93 03 00 00                  01 .literal
  94 03 00 00         07 00 00 00 7
  98 03 00 00                  ff .end (operand)
  99 03 00 00                  ff .end (operand)
  9a 03 00 00         ae 03 00 00 .case-end-address
  9e 03 00 00               03 11 .var1 ENTITY.CHRINDEX
  a0 03 00 00                  01 .literal
  a1 03 00 00         07 00 00 00 7
  a5 03 00 00                  ff .end (operand)
  a6 03 00 00                  01 .set
  a7 03 00 00                  01 .literal
  a8 03 00 00         17 00 00 00 23
  ac 03 00 00                  ff .end (operand)
  ad 03 00 00                  ff .end (block)
 :ae 03 00 00                  0b .case
  af 03 00 00                  05 .group
  b0 03 00 00                  01 .literal
  b1 03 00 00         08 00 00 00 8
  b5 03 00 00                  ff .end (operand)
  b6 03 00 00                  ff .end (operand)
  b7 03 00 00         cb 03 00 00 .case-end-address
  bb 03 00 00               03 11 .var1 ENTITY.CHRINDEX
  bd 03 00 00                  01 .literal
  be 03 00 00         05 00 00 00 5
  c2 03 00 00                  ff .end (operand)
  c3 03 00 00                  01 .set
  c4 03 00 00                  01 .literal
  c5 03 00 00         13 00 00 00 19
  c9 03 00 00                  ff .end (operand)
  ca 03 00 00                  ff .end (block)
 :cb 03 00 00                  ff .end (switch)
if0
 :cc 03 00 00               05 01 .if [terms=1]
  ce 03 00 00         eb 03 00 00 .else
  d2 03 00 00               03 02 .var1 CHAR
  d4 03 00 00                  01 .literal
  d5 03 00 00         01 00 00 00 1
  d9 03 00 00                  ff .end (operand)
  da 03 00 00                  ff .end (operand)
  dc 03 00 00                  01 .if-sign-nonzero
  dc 03 00 00               03 17 .var1 ENTITY.LOCX
  de 03 00 00                  01 .literal
  df 03 00 00         08 00 00 00 8
  e3 03 00 00                  ff .end (operand)
  e4 03 00 00                  05 .decset
  e5 03 00 00                  01 .literal
  e6 03 00 00         03 00 00 00 3
  ea 03 00 00                  ff .end (operand)
if1
::eb 03 00 00               05 01 .if [terms=1]
  ed 03 00 00         0a 04 00 00 .else
  f1 03 00 00               03 02 .var1 CHAR
  f3 03 00 00                  01 .literal
  f4 03 00 00         01 00 00 00 1
  f8 03 00 00                  ff .end (operand)
  f9 03 00 00                  ff .end (operand)
  fb 03 00 00                  00 .if-sign-zero
  fb 03 00 00               03 17 .var1 ENTITY.LOCX
  fd 03 00 00                  01 .literal
  fe 03 00 00         08 00 00 00 8
  02 04 00 00                  ff .end (operand)
  03 04 00 00                  04 .incset
  04 04 00 00                  01 .literal
  05 04 00 00         07 00 00 00 7
  09 04 00 00                  ff .end (operand)
if2
::0a 04 00 00               05 01 .if [terms=1]
  0c 04 00 00         29 04 00 00 .else
  10 04 00 00               03 02 .var1 CHAR
  12 04 00 00                  01 .literal
  13 04 00 00         02 00 00 00 2
  17 04 00 00                  ff .end (operand)
  18 04 00 00                  ff .end (operand)
  1a 04 00 00                  01 .if-sign-nonzero
  1a 04 00 00               03 17 .var1 ENTITY.LOCX
  1c 04 00 00                  01 .literal
  1d 04 00 00         0d 00 00 00 13
  21 04 00 00                  ff .end (operand)
  22 04 00 00                  05 .decset
  23 04 00 00                  01 .literal
  24 04 00 00         03 00 00 00 3
  28 04 00 00                  ff .end (operand)
if3
::29 04 00 00               05 01 .if [terms=1]
  2b 04 00 00         48 04 00 00 .else
  2f 04 00 00               03 02 .var1 CHAR
  31 04 00 00                  01 .literal
  32 04 00 00         02 00 00 00 2
  36 04 00 00                  ff .end (operand)
  37 04 00 00                  ff .end (operand)
  39 04 00 00                  00 .if-sign-zero
  39 04 00 00               03 17 .var1 ENTITY.LOCX
  3b 04 00 00                  01 .literal
  3c 04 00 00         0d 00 00 00 13
  40 04 00 00                  ff .end (operand)
  41 04 00 00                  04 .incset
  42 04 00 00                  01 .literal
  43 04 00 00         07 00 00 00 7
  47 04 00 00                  ff .end (operand)
if4
::48 04 00 00               05 01 .if [terms=1]
  4a 04 00 00         67 04 00 00 .else
  4e 04 00 00               03 02 .var1 CHAR
  50 04 00 00                  01 .literal
  51 04 00 00         03 00 00 00 3
  55 04 00 00                  ff .end (operand)
  56 04 00 00                  ff .end (operand)
  58 04 00 00                  01 .if-sign-nonzero
  58 04 00 00               03 17 .var1 ENTITY.LOCX
  5a 04 00 00                  01 .literal
  5b 04 00 00         0a 00 00 00 10
  5f 04 00 00                  ff .end (operand)
  60 04 00 00                  05 .decset
  61 04 00 00                  01 .literal
  62 04 00 00         03 00 00 00 3
  66 04 00 00                  ff .end (operand)
if5
::67 04 00 00               05 01 .if [terms=1]
  69 04 00 00         86 04 00 00 .else
  6d 04 00 00               03 02 .var1 CHAR
  6f 04 00 00                  01 .literal
  70 04 00 00         03 00 00 00 3
  74 04 00 00                  ff .end (operand)
  75 04 00 00                  ff .end (operand)
  77 04 00 00                  00 .if-sign-zero
  77 04 00 00               03 17 .var1 ENTITY.LOCX
  79 04 00 00                  01 .literal
  7a 04 00 00         0a 00 00 00 10
  7e 04 00 00                  ff .end (operand)
  7f 04 00 00                  04 .incset
  80 04 00 00                  01 .literal
  81 04 00 00         07 00 00 00 7
  85 04 00 00                  ff .end (operand)
if6
::86 04 00 00               05 01 .if [terms=1]
  88 04 00 00         a5 04 00 00 .else
  8c 04 00 00               03 02 .var1 CHAR
  8e 04 00 00                  01 .literal
  8f 04 00 00         04 00 00 00 4
  93 04 00 00                  ff .end (operand)
  94 04 00 00                  ff .end (operand)
  96 04 00 00                  01 .if-sign-nonzero
  96 04 00 00               03 17 .var1 ENTITY.LOCX
  98 04 00 00                  01 .literal
  99 04 00 00         09 00 00 00 9
  9d 04 00 00                  ff .end (operand)
  9e 04 00 00                  05 .decset
  9f 04 00 00                  01 .literal
  a0 04 00 00         03 00 00 00 3
  a4 04 00 00                  ff .end (operand)
if7
::a5 04 00 00               05 01 .if [terms=1]
  a7 04 00 00         c4 04 00 00 .else
  ab 04 00 00               03 02 .var1 CHAR
  ad 04 00 00                  01 .literal
  ae 04 00 00         04 00 00 00 4
  b2 04 00 00                  ff .end (operand)
  b3 04 00 00                  ff .end (operand)
  b5 04 00 00                  00 .if-sign-zero
  b5 04 00 00               03 17 .var1 ENTITY.LOCX
  b7 04 00 00                  01 .literal
  b8 04 00 00         09 00 00 00 9
  bc 04 00 00                  ff .end (operand)
  bd 04 00 00                  04 .incset
  be 04 00 00                  01 .literal
  bf 04 00 00         07 00 00 00 7
  c3 04 00 00                  ff .end (operand)
if8
::c4 04 00 00               05 01 .if [terms=1]
  c6 04 00 00         e3 04 00 00 .else
  ca 04 00 00               03 02 .var1 CHAR
  cc 04 00 00                  01 .literal
  cd 04 00 00         05 00 00 00 5
  d1 04 00 00                  ff .end (operand)
  d2 04 00 00                  ff .end (operand)
  d4 04 00 00                  01 .if-sign-nonzero
  d4 04 00 00               03 17 .var1 ENTITY.LOCX
  d6 04 00 00                  01 .literal
  d7 04 00 00         0e 00 00 00 14
  db 04 00 00                  ff .end (operand)
  dc 04 00 00                  05 .decset
  dd 04 00 00                  01 .literal
  de 04 00 00         03 00 00 00 3
  e2 04 00 00                  ff .end (operand)
if9
::e3 04 00 00               05 01 .if [terms=1]
  e5 04 00 00         02 05 00 00 .else
  e9 04 00 00               03 02 .var1 CHAR
  eb 04 00 00                  01 .literal
  ec 04 00 00         05 00 00 00 5
  f0 04 00 00                  ff .end (operand)
  f1 04 00 00                  ff .end (operand)
  f3 04 00 00                  00 .if-sign-zero
  f3 04 00 00               03 17 .var1 ENTITY.LOCX
  f5 04 00 00                  01 .literal
  f6 04 00 00         0e 00 00 00 14
  fa 04 00 00                  ff .end (operand)
  fb 04 00 00                  04 .incset
  fc 04 00 00                  01 .literal
  fd 04 00 00         07 00 00 00 7
  01 05 00 00                  ff .end (operand)
if10
::02 05 00 00               05 01 .if [terms=1]
  04 05 00 00         21 05 00 00 .else
  08 05 00 00               03 02 .var1 CHAR
  0a 05 00 00                  01 .literal
  0b 05 00 00         06 00 00 00 6
  0f 05 00 00                  ff .end (operand)
  10 05 00 00                  ff .end (operand)
  12 05 00 00                  01 .if-sign-nonzero
  12 05 00 00               03 17 .var1 ENTITY.LOCX
  14 05 00 00                  01 .literal
  15 05 00 00         0f 00 00 00 15
  19 05 00 00                  ff .end (operand)
  1a 05 00 00                  05 .decset
  1b 05 00 00                  01 .literal
  1c 05 00 00         03 00 00 00 3
  20 05 00 00                  ff .end (operand)
if11
::21 05 00 00               05 01 .if [terms=1]
  23 05 00 00         40 05 00 00 .else
  27 05 00 00               03 02 .var1 CHAR
  29 05 00 00                  01 .literal
  2a 05 00 00         06 00 00 00 6
  2e 05 00 00                  ff .end (operand)
  2f 05 00 00                  ff .end (operand)
  31 05 00 00                  00 .if-sign-zero
  31 05 00 00               03 17 .var1 ENTITY.LOCX
  33 05 00 00                  01 .literal
  34 05 00 00         0f 00 00 00 15
  38 05 00 00                  ff .end (operand)
  39 05 00 00                  04 .incset
  3a 05 00 00                  01 .literal
  3b 05 00 00         07 00 00 00 7
  3f 05 00 00                  ff .end (operand)
if12
::40 05 00 00               05 01 .if [terms=1]
  42 05 00 00         5f 05 00 00 .else
  46 05 00 00               03 02 .var1 CHAR
  48 05 00 00                  01 .literal
  49 05 00 00         07 00 00 00 7
  4d 05 00 00                  ff .end (operand)
  4e 05 00 00                  ff .end (operand)
  50 05 00 00                  01 .if-sign-nonzero
  50 05 00 00               03 17 .var1 ENTITY.LOCX
  52 05 00 00                  01 .literal
  53 05 00 00         0c 00 00 00 12
  57 05 00 00                  ff .end (operand)
  58 05 00 00                  05 .decset
  59 05 00 00                  01 .literal
  5a 05 00 00         03 00 00 00 3
  5e 05 00 00                  ff .end (operand)
if13
::5f 05 00 00               05 01 .if [terms=1]
  61 05 00 00         7e 05 00 00 .else
  65 05 00 00               03 02 .var1 CHAR
  67 05 00 00                  01 .literal
  68 05 00 00         07 00 00 00 7
  6c 05 00 00                  ff .end (operand)
  6d 05 00 00                  ff .end (operand)
  6f 05 00 00                  00 .if-sign-zero
  6f 05 00 00               03 17 .var1 ENTITY.LOCX
  71 05 00 00                  01 .literal
  72 05 00 00         0c 00 00 00 12
  76 05 00 00                  ff .end (operand)
  77 05 00 00                  04 .incset
  78 05 00 00                  01 .literal
  79 05 00 00         07 00 00 00 7
  7d 05 00 00                  ff .end (operand)
if14
::7e 05 00 00               05 01 .if [terms=1]
  80 05 00 00         9d 05 00 00 .else
  84 05 00 00               03 02 .var1 CHAR
  86 05 00 00                  01 .literal
  87 05 00 00         08 00 00 00 8
  8b 05 00 00                  ff .end (operand)
  8c 05 00 00                  ff .end (operand)
  8e 05 00 00                  01 .if-sign-nonzero
  8e 05 00 00               03 17 .var1 ENTITY.LOCX
  90 05 00 00                  01 .literal
  91 05 00 00         0b 00 00 00 11
  95 05 00 00                  ff .end (operand)
  96 05 00 00                  05 .decset
  97 05 00 00                  01 .literal
  98 05 00 00         03 00 00 00 3
  9c 05 00 00                  ff .end (operand)
if15
::9d 05 00 00               05 01 .if [terms=1]
  9f 05 00 00         bc 05 00 00 .else
  a3 05 00 00               03 02 .var1 CHAR
  a5 05 00 00                  01 .literal
  a6 05 00 00         08 00 00 00 8
  aa 05 00 00                  ff .end (operand)
  ab 05 00 00                  ff .end (operand)
  ad 05 00 00                  00 .if-sign-zero
  ad 05 00 00               03 17 .var1 ENTITY.LOCX
  af 05 00 00                  01 .literal
  b0 05 00 00         0b 00 00 00 11
  b4 05 00 00                  ff .end (operand)
  b5 05 00 00                  04 .incset
  b6 05 00 00                  01 .literal
  b7 05 00 00         07 00 00 00 7
  bb 05 00 00                  ff .end (operand)
::bc 05 00 00               03 00 .var1 FLAGS
  be 05 00 00                  01 .literal
  bf 05 00 00         56 02 00 00 598
  c3 05 00 00                  ff .end (operand)
  c4 05 00 00                  01 .set
  c5 05 00 00               03 00 .var1 FLAGS
  c7 05 00 00                  01 .literal
  c8 05 00 00         f8 01 00 00 504
  cc 05 00 00                  ff .end (operand)
  cd 05 00 00                  ff .end (operand)
  ce 05 00 00               03 00 .var1 FLAGS
  d0 05 00 00                  01 .literal
  d1 05 00 00         57 02 00 00 599
  d5 05 00 00                  ff .end (operand)
  d6 05 00 00                  01 .set
  d7 05 00 00               03 00 .var1 FLAGS
  d9 05 00 00                  01 .literal
  da 05 00 00         05 02 00 00 517
  de 05 00 00                  ff .end (operand)
  df 05 00 00                  ff .end (operand)
  e0 05 00 00               03 00 .var1 FLAGS
  e2 05 00 00                  01 .literal
  e3 05 00 00         58 02 00 00 600
  e7 05 00 00                  ff .end (operand)
  e8 05 00 00                  01 .set
  e9 05 00 00               03 00 .var1 FLAGS
  eb 05 00 00                  01 .literal
  ec 05 00 00         12 02 00 00 530
  f0 05 00 00                  ff .end (operand)
  f1 05 00 00                  ff .end (operand)
  f2 05 00 00               02 2f .var0 LAYERVC
  f4 05 00 00                  01 .set
  f5 05 00 00                  01 .literal
  f6 05 00 00         01 00 00 00 1
  fa 05 00 00                  ff .end (operand)
  fb 05 00 00               01 17 .exec ChainEvent
  fe 05 00 00                  01 .literal
  ff 05 00 00         01 00 00 00 1
  03 06 00 00                  ff .end (operand)
  04 06 00 00                  ff .end (block)

.event 1
* 05 06 00 00               03 0e .var1 FACE
  07 06 00 00                  01 .literal
  08 06 00 00         05 00 00 00 5
  0c 06 00 00                  ff .end (operand)
  0d 06 00 00                  01 .set
  0e 06 00 00                  01 .literal
  0f 06 00 00         00 00 00 00 0
  13 06 00 00                  ff .end (operand)
  14 06 00 00               03 0e .var1 FACE
  16 06 00 00                  01 .literal
  17 06 00 00         06 00 00 00 6
  1b 06 00 00                  ff .end (operand)
  1c 06 00 00                  01 .set
  1d 06 00 00                  01 .literal
  1e 06 00 00         00 00 00 00 0
  22 06 00 00                  ff .end (operand)
  23 06 00 00               03 0e .var1 FACE
  25 06 00 00                  01 .literal
  26 06 00 00         07 00 00 00 7
  2a 06 00 00                  ff .end (operand)
  2b 06 00 00                  01 .set
  2c 06 00 00                  01 .literal
  2d 06 00 00         00 00 00 00 0
  31 06 00 00                  ff .end (operand)
  32 06 00 00               03 0e .var1 FACE
  34 06 00 00                  01 .literal
  35 06 00 00         08 00 00 00 8
  39 06 00 00                  ff .end (operand)
  3a 06 00 00                  01 .set
  3b 06 00 00                  01 .literal
  3c 06 00 00         00 00 00 00 0
  40 06 00 00                  ff .end (operand)
  41 06 00 00               03 0e .var1 FACE
  43 06 00 00                  01 .literal
  44 06 00 00         09 00 00 00 9
  48 06 00 00                  ff .end (operand)
  49 06 00 00                  01 .set
  4a 06 00 00                  01 .literal
  4b 06 00 00         00 00 00 00 0
  4f 06 00 00                  ff .end (operand)
  50 06 00 00               03 0e .var1 FACE
  52 06 00 00                  01 .literal
  53 06 00 00         0a 00 00 00 10
  57 06 00 00                  ff .end (operand)
  58 06 00 00                  01 .set
  59 06 00 00                  01 .literal
  5a 06 00 00         00 00 00 00 0
  5e 06 00 00                  ff .end (operand)
  5f 06 00 00               03 0e .var1 FACE
  61 06 00 00                  01 .literal
  62 06 00 00         0b 00 00 00 11
  66 06 00 00                  ff .end (operand)
  67 06 00 00                  01 .set
  68 06 00 00                  01 .literal
  69 06 00 00         00 00 00 00 0
  6d 06 00 00                  ff .end (operand)
  6e 06 00 00               03 0e .var1 FACE
  70 06 00 00                  01 .literal
  71 06 00 00         0c 00 00 00 12
  75 06 00 00                  ff .end (operand)
  76 06 00 00                  01 .set
  77 06 00 00                  01 .literal
  78 06 00 00         00 00 00 00 0
  7c 06 00 00                  ff .end (operand)
  7d 06 00 00               03 0e .var1 FACE
  7f 06 00 00                  01 .literal
  80 06 00 00         0d 00 00 00 13
  84 06 00 00                  ff .end (operand)
  85 06 00 00                  01 .set
  86 06 00 00                  01 .literal
  87 06 00 00         00 00 00 00 0
  8b 06 00 00                  ff .end (operand)
  8c 06 00 00               03 0e .var1 FACE
  8e 06 00 00                  01 .literal
  8f 06 00 00         0e 00 00 00 14
  93 06 00 00                  ff .end (operand)
  94 06 00 00                  01 .set
  95 06 00 00                  01 .literal
  96 06 00 00         00 00 00 00 0
  9a 06 00 00                  ff .end (operand)
  9b 06 00 00               03 0e .var1 FACE
  9d 06 00 00                  01 .literal
  9e 06 00 00         0f 00 00 00 15
  a2 06 00 00                  ff .end (operand)
  a3 06 00 00                  01 .set
  a4 06 00 00                  01 .literal
  a5 06 00 00         00 00 00 00 0
  a9 06 00 00                  ff .end (operand)
if16
 :aa 06 00 00               05 01 .if [terms=1]
  ac 06 00 00         cf 06 00 00 .else
  b0 06 00 00               03 00 .var1 FLAGS
  b2 06 00 00                  01 .literal
  b3 06 00 00         56 02 00 00 598
  b7 06 00 00                  ff .end (operand)
  b8 06 00 00                  ff .end (operand)
  ba 06 00 00                  04 .if-sign-nonzero
  ba 06 00 00                  01 .literal
  bb 06 00 00         00 00 00 00 0
  bf 06 00 00                  ff .end (operand)
  c0 06 00 00               03 0d .var1 SPECIALFRAME
  c2 06 00 00                  01 .literal
  c3 06 00 00         07 00 00 00 7
  c7 06 00 00                  ff .end (operand)
  c8 06 00 00                  01 .set
  c9 06 00 00                  01 .literal
  ca 06 00 00         00 00 00 00 0
  ce 06 00 00                  ff .end (operand)
if17
::cf 06 00 00               05 01 .if [terms=1]
  d1 06 00 00         f4 06 00 00 .else
  d5 06 00 00               03 00 .var1 FLAGS
  d7 06 00 00                  01 .literal
  d8 06 00 00         57 02 00 00 599
  dc 06 00 00                  ff .end (operand)
  dd 06 00 00                  ff .end (operand)
  df 06 00 00                  04 .if-sign-nonzero
  df 06 00 00                  01 .literal
  e0 06 00 00         00 00 00 00 0
  e4 06 00 00                  ff .end (operand)
  e5 06 00 00               03 0d .var1 SPECIALFRAME
  e7 06 00 00                  01 .literal
  e8 06 00 00         05 00 00 00 5
  ec 06 00 00                  ff .end (operand)
  ed 06 00 00                  01 .set
  ee 06 00 00                  01 .literal
  ef 06 00 00         00 00 00 00 0
  f3 06 00 00                  ff .end (operand)
if18
::f4 06 00 00               05 01 .if [terms=1]
  f6 06 00 00         19 07 00 00 .else
  fa 06 00 00               03 00 .var1 FLAGS
  fc 06 00 00                  01 .literal
  fd 06 00 00         58 02 00 00 600
  01 07 00 00                  ff .end (operand)
  02 07 00 00                  ff .end (operand)
  04 07 00 00                  04 .if-sign-nonzero
  04 07 00 00                  01 .literal
  05 07 00 00         00 00 00 00 0
  09 07 00 00                  ff .end (operand)
  0a 07 00 00               03 0d .var1 SPECIALFRAME
  0c 07 00 00                  01 .literal
  0d 07 00 00         06 00 00 00 6
  11 07 00 00                  ff .end (operand)
  12 07 00 00                  01 .set
  13 07 00 00                  01 .literal
  14 07 00 00         00 00 00 00 0
  18 07 00 00                  ff .end (operand)
if19
::19 07 00 00               05 01 .if [terms=1]
  1b 07 00 00         3e 07 00 00 .else
  1f 07 00 00               03 07 .var1 CURHP
  21 07 00 00                  01 .literal
  22 07 00 00         01 00 00 00 1
  26 07 00 00                  ff .end (operand)
  27 07 00 00                  ff .end (operand)
  29 07 00 00                  04 .if-sign-nonzero
  29 07 00 00                  01 .literal
  2a 07 00 00         00 00 00 00 0
  2e 07 00 00                  ff .end (operand)
  2f 07 00 00               03 0d .var1 SPECIALFRAME
  31 07 00 00                  01 .literal
  32 07 00 00         08 00 00 00 8
  36 07 00 00                  ff .end (operand)
  37 07 00 00                  01 .set
  38 07 00 00                  01 .literal
  39 07 00 00         00 00 00 00 0
  3d 07 00 00                  ff .end (operand)
if20
::3e 07 00 00               05 01 .if [terms=1]
  40 07 00 00         63 07 00 00 .else
  44 07 00 00               03 07 .var1 CURHP
  46 07 00 00                  01 .literal
  47 07 00 00         02 00 00 00 2
  4b 07 00 00                  ff .end (operand)
  4c 07 00 00                  ff .end (operand)
  4e 07 00 00                  04 .if-sign-nonzero
  4e 07 00 00                  01 .literal
  4f 07 00 00         00 00 00 00 0
  53 07 00 00                  ff .end (operand)
  54 07 00 00               03 0d .var1 SPECIALFRAME
  56 07 00 00                  01 .literal
  57 07 00 00         0d 00 00 00 13
  5b 07 00 00                  ff .end (operand)
  5c 07 00 00                  01 .set
  5d 07 00 00                  01 .literal
  5e 07 00 00         00 00 00 00 0
  62 07 00 00                  ff .end (operand)
if21
::63 07 00 00               05 01 .if [terms=1]
  65 07 00 00         88 07 00 00 .else
  69 07 00 00               03 07 .var1 CURHP
  6b 07 00 00                  01 .literal
  6c 07 00 00         03 00 00 00 3
  70 07 00 00                  ff .end (operand)
  71 07 00 00                  ff .end (operand)
  73 07 00 00                  04 .if-sign-nonzero
  73 07 00 00                  01 .literal
  74 07 00 00         00 00 00 00 0
  78 07 00 00                  ff .end (operand)
  79 07 00 00               03 0d .var1 SPECIALFRAME
  7b 07 00 00                  01 .literal
  7c 07 00 00         0a 00 00 00 10
  80 07 00 00                  ff .end (operand)
  81 07 00 00                  01 .set
  82 07 00 00                  01 .literal
  83 07 00 00         00 00 00 00 0
  87 07 00 00                  ff .end (operand)
if22
::88 07 00 00               05 01 .if [terms=1]
  8a 07 00 00         ad 07 00 00 .else
  8e 07 00 00               03 07 .var1 CURHP
  90 07 00 00                  01 .literal
  91 07 00 00         04 00 00 00 4
  95 07 00 00                  ff .end (operand)
  96 07 00 00                  ff .end (operand)
  98 07 00 00                  04 .if-sign-nonzero
  98 07 00 00                  01 .literal
  99 07 00 00         00 00 00 00 0
  9d 07 00 00                  ff .end (operand)
  9e 07 00 00               03 0d .var1 SPECIALFRAME
  a0 07 00 00                  01 .literal
  a1 07 00 00         09 00 00 00 9
  a5 07 00 00                  ff .end (operand)
  a6 07 00 00                  01 .set
  a7 07 00 00                  01 .literal
  a8 07 00 00         00 00 00 00 0
  ac 07 00 00                  ff .end (operand)
if23
::ad 07 00 00               05 01 .if [terms=1]
  af 07 00 00         d2 07 00 00 .else
  b3 07 00 00               03 07 .var1 CURHP
  b5 07 00 00                  01 .literal
  b6 07 00 00         05 00 00 00 5
  ba 07 00 00                  ff .end (operand)
  bb 07 00 00                  ff .end (operand)
  bd 07 00 00                  04 .if-sign-nonzero
  bd 07 00 00                  01 .literal
  be 07 00 00         00 00 00 00 0
  c2 07 00 00                  ff .end (operand)
  c3 07 00 00               03 0d .var1 SPECIALFRAME
  c5 07 00 00                  01 .literal
  c6 07 00 00         0e 00 00 00 14
  ca 07 00 00                  ff .end (operand)
  cb 07 00 00                  01 .set
  cc 07 00 00                  01 .literal
  cd 07 00 00         00 00 00 00 0
  d1 07 00 00                  ff .end (operand)
if24
::d2 07 00 00               05 01 .if [terms=1]
  d4 07 00 00         f7 07 00 00 .else
  d8 07 00 00               03 07 .var1 CURHP
  da 07 00 00                  01 .literal
  db 07 00 00         06 00 00 00 6
  df 07 00 00                  ff .end (operand)
  e0 07 00 00                  ff .end (operand)
  e2 07 00 00                  04 .if-sign-nonzero
  e2 07 00 00                  01 .literal
  e3 07 00 00         00 00 00 00 0
  e7 07 00 00                  ff .end (operand)
  e8 07 00 00               03 0d .var1 SPECIALFRAME
  ea 07 00 00                  01 .literal
  eb 07 00 00         0f 00 00 00 15
  ef 07 00 00                  ff .end (operand)
  f0 07 00 00                  01 .set
  f1 07 00 00                  01 .literal
  f2 07 00 00         00 00 00 00 0
  f6 07 00 00                  ff .end (operand)
if25
::f7 07 00 00               05 01 .if [terms=1]
  f9 07 00 00         1c 08 00 00 .else
  fd 07 00 00               03 07 .var1 CURHP
  ff 07 00 00                  01 .literal
  00 08 00 00         07 00 00 00 7
  04 08 00 00                  ff .end (operand)
  05 08 00 00                  ff .end (operand)
  07 08 00 00                  04 .if-sign-nonzero
  07 08 00 00                  01 .literal
  08 08 00 00         00 00 00 00 0
  0c 08 00 00                  ff .end (operand)
  0d 08 00 00               03 0d .var1 SPECIALFRAME
  0f 08 00 00                  01 .literal
  10 08 00 00         0c 00 00 00 12
  14 08 00 00                  ff .end (operand)
  15 08 00 00                  01 .set
  16 08 00 00                  01 .literal
  17 08 00 00         00 00 00 00 0
  1b 08 00 00                  ff .end (operand)
if26
::1c 08 00 00               05 01 .if [terms=1]
  1e 08 00 00         41 08 00 00 .else
  22 08 00 00               03 07 .var1 CURHP
  24 08 00 00                  01 .literal
  25 08 00 00         08 00 00 00 8
  29 08 00 00                  ff .end (operand)
  2a 08 00 00                  ff .end (operand)
  2c 08 00 00                  04 .if-sign-nonzero
  2c 08 00 00                  01 .literal
  2d 08 00 00         00 00 00 00 0
  31 08 00 00                  ff .end (operand)
  32 08 00 00               03 0d .var1 SPECIALFRAME
  34 08 00 00                  01 .literal
  35 08 00 00         0b 00 00 00 11
  39 08 00 00                  ff .end (operand)
  3a 08 00 00                  01 .set
  3b 08 00 00                  01 .literal
  3c 08 00 00         00 00 00 00 0
  40 08 00 00                  ff .end (operand)
::41 08 00 00               01 39 .exec VcClear
  43 08 00 00               01 50 .exec VcBox
  45 08 00 00                  01 .literal
  46 08 00 00         f0 00 00 00 240
  4a 08 00 00                  ff .end (operand)
  4b 08 00 00                  01 .literal
  4c 08 00 00         0a 00 00 00 10
  50 08 00 00                  ff .end (operand)
  51 08 00 00                  01 .literal
  52 08 00 00         3a 01 00 00 314
  56 08 00 00                  ff .end (operand)
  57 08 00 00                  01 .literal
  58 08 00 00         c6 00 00 00 198
  5c 08 00 00                  ff .end (operand)
  5d 08 00 00               03 00 .var1 FLAGS
  5f 08 00 00                  01 .literal
  60 08 00 00         53 02 00 00 595
  64 08 00 00                  ff .end (operand)
  65 08 00 00                  01 .set
  66 08 00 00                  01 .literal
  67 08 00 00         0d 00 00 00 13
  6b 08 00 00                  ff .end (operand)
if27
 :6c 08 00 00               05 01 .if [terms=1]
  6e 08 00 00         4c 09 00 00 .else
  72 08 00 00               03 02 .var1 CHAR
  74 08 00 00                  01 .literal
  75 08 00 00         01 00 00 00 1
  79 08 00 00                  ff .end (operand)
  7a 08 00 00                  ff .end (operand)
  7c 08 00 00                  01 .if-sign-nonzero
  7c 08 00 00               03 00 .var1 FLAGS
  7e 08 00 00                  01 .literal
  7f 08 00 00         53 02 00 00 595
  83 08 00 00                  ff .end (operand)
  84 08 00 00                  04 .incset
  85 08 00 00                  01 .literal
  86 08 00 00         0a 00 00 00 10
  8a 08 00 00                  ff .end (operand)
  8b 08 00 00               01 3b .exec VcText
  8d 08 00 00                  01 .literal
  8e 08 00 00         f5 00 00 00 245
  92 08 00 00                  ff .end (operand)
  93 08 00 00               03 00 .var1 FLAGS
  95 08 00 00                  01 .literal
  96 08 00 00         53 02 00 00 595
  9a 08 00 00                  ff .end (operand)
  9b 08 00 00                  ff .end (operand)
  9c 08 00 00                     "Sam"

              53 61 6d 00 
  a0 08 00 00               03 00 .var1 FLAGS
  a2 08 00 00                  01 .literal
  a3 08 00 00         53 02 00 00 595
  a7 08 00 00                  ff .end (operand)
  a8 08 00 00                  04 .incset
  a9 08 00 00                  01 .literal
  aa 08 00 00         0a 00 00 00 10
  ae 08 00 00                  ff .end (operand)
  af 08 00 00               01 4e .exec VcTextNum
  b1 08 00 00                  01 .literal
  b2 08 00 00         f5 00 00 00 245
  b6 08 00 00                  ff .end (operand)
  b7 08 00 00               03 00 .var1 FLAGS
  b9 08 00 00                  01 .literal
  ba 08 00 00         53 02 00 00 595
  be 08 00 00                  ff .end (operand)
  bf 08 00 00                  ff .end (operand)
  c0 08 00 00               03 07 .var1 CURHP
  c2 08 00 00                  01 .literal
  c3 08 00 00         01 00 00 00 1
  c7 08 00 00                  ff .end (operand)
  c8 08 00 00                  ff .end (operand)
  c9 08 00 00               01 3b .exec VcText
  cb 08 00 00                  01 .literal
  cc 08 00 00         09 01 00 00 265
  d0 08 00 00                  ff .end (operand)
  d1 08 00 00               03 00 .var1 FLAGS
  d3 08 00 00                  01 .literal
  d4 08 00 00         53 02 00 00 595
  d8 08 00 00                  ff .end (operand)
  d9 08 00 00                  ff .end (operand)
  da 08 00 00                     "/"

              2f 00 
  dc 08 00 00               01 4e .exec VcTextNum
  de 08 00 00                  01 .literal
  df 08 00 00         13 01 00 00 275
  e3 08 00 00                  ff .end (operand)
  e4 08 00 00               03 00 .var1 FLAGS
  e6 08 00 00                  01 .literal
  e7 08 00 00         53 02 00 00 595
  eb 08 00 00                  ff .end (operand)
  ec 08 00 00                  ff .end (operand)
  ed 08 00 00               03 08 .var1 MAXHP
  ef 08 00 00                  01 .literal
  f0 08 00 00         01 00 00 00 1
  f4 08 00 00                  ff .end (operand)
  f5 08 00 00                  ff .end (operand)
  f6 08 00 00               03 00 .var1 FLAGS
  f8 08 00 00                  01 .literal
  f9 08 00 00         53 02 00 00 595
  fd 08 00 00                  ff .end (operand)
  fe 08 00 00                  04 .incset
  ff 08 00 00                  01 .literal
  00 09 00 00         0a 00 00 00 10
  04 09 00 00                  ff .end (operand)
  05 09 00 00               01 4e .exec VcTextNum
  07 09 00 00                  01 .literal
  08 09 00 00         f5 00 00 00 245
  0c 09 00 00                  ff .end (operand)
  0d 09 00 00               03 00 .var1 FLAGS
  0f 09 00 00                  01 .literal
  10 09 00 00         53 02 00 00 595
  14 09 00 00                  ff .end (operand)
  15 09 00 00                  ff .end (operand)
  16 09 00 00               03 09 .var1 CURMP
  18 09 00 00                  01 .literal
  19 09 00 00         01 00 00 00 1
  1d 09 00 00                  ff .end (operand)
  1e 09 00 00                  ff .end (operand)
  1f 09 00 00               01 3b .exec VcText
  21 09 00 00                  01 .literal
  22 09 00 00         09 01 00 00 265
  26 09 00 00                  ff .end (operand)
  27 09 00 00               03 00 .var1 FLAGS
  29 09 00 00                  01 .literal
  2a 09 00 00         53 02 00 00 595
  2e 09 00 00                  ff .end (operand)
  2f 09 00 00                  ff .end (operand)
  30 09 00 00                     "/"

              2f 00 
  32 09 00 00               01 4e .exec VcTextNum
  34 09 00 00                  01 .literal
  35 09 00 00         13 01 00 00 275
  39 09 00 00                  ff .end (operand)
  3a 09 00 00               03 00 .var1 FLAGS
  3c 09 00 00                  01 .literal
  3d 09 00 00         53 02 00 00 595
  41 09 00 00                  ff .end (operand)
  42 09 00 00                  ff .end (operand)
  43 09 00 00               03 0a .var1 MAXMP
  45 09 00 00                  01 .literal
  46 09 00 00         01 00 00 00 1
  4a 09 00 00                  ff .end (operand)
  4b 09 00 00                  ff .end (operand)
if28
::4c 09 00 00               05 01 .if [terms=1]
  4e 09 00 00         2d 0a 00 00 .else
  52 09 00 00               03 02 .var1 CHAR
  54 09 00 00                  01 .literal
  55 09 00 00         02 00 00 00 2
  59 09 00 00                  ff .end (operand)
  5a 09 00 00                  ff .end (operand)
  5c 09 00 00                  01 .if-sign-nonzero
  5c 09 00 00               03 00 .var1 FLAGS
  5e 09 00 00                  01 .literal
  5f 09 00 00         53 02 00 00 595
  63 09 00 00                  ff .end (operand)
  64 09 00 00                  04 .incset
  65 09 00 00                  01 .literal
  66 09 00 00         0a 00 00 00 10
  6a 09 00 00                  ff .end (operand)
  6b 09 00 00               01 3b .exec VcText
  6d 09 00 00                  01 .literal
  6e 09 00 00         f5 00 00 00 245
  72 09 00 00                  ff .end (operand)
  73 09 00 00               03 00 .var1 FLAGS
  75 09 00 00                  01 .literal
  76 09 00 00         53 02 00 00 595
  7a 09 00 00                  ff .end (operand)
  7b 09 00 00                  ff .end (operand)
  7c 09 00 00                     "Webb"

              57 65 62 62 00 
  81 09 00 00               03 00 .var1 FLAGS
  83 09 00 00                  01 .literal
  84 09 00 00         53 02 00 00 595
  88 09 00 00                  ff .end (operand)
  89 09 00 00                  04 .incset
  8a 09 00 00                  01 .literal
  8b 09 00 00         0a 00 00 00 10
  8f 09 00 00                  ff .end (operand)
  90 09 00 00               01 4e .exec VcTextNum
  92 09 00 00                  01 .literal
  93 09 00 00         f5 00 00 00 245
  97 09 00 00                  ff .end (operand)
  98 09 00 00               03 00 .var1 FLAGS
  9a 09 00 00                  01 .literal
  9b 09 00 00         53 02 00 00 595
  9f 09 00 00                  ff .end (operand)
  a0 09 00 00                  ff .end (operand)
  a1 09 00 00               03 07 .var1 CURHP
  a3 09 00 00                  01 .literal
  a4 09 00 00         02 00 00 00 2
  a8 09 00 00                  ff .end (operand)
  a9 09 00 00                  ff .end (operand)
  aa 09 00 00               01 3b .exec VcText
  ac 09 00 00                  01 .literal
  ad 09 00 00         09 01 00 00 265
  b1 09 00 00                  ff .end (operand)
  b2 09 00 00               03 00 .var1 FLAGS
  b4 09 00 00                  01 .literal
  b5 09 00 00         53 02 00 00 595
  b9 09 00 00                  ff .end (operand)
  ba 09 00 00                  ff .end (operand)
  bb 09 00 00                     "/"

              2f 00 
  bd 09 00 00               01 4e .exec VcTextNum
  bf 09 00 00                  01 .literal
  c0 09 00 00         13 01 00 00 275
  c4 09 00 00                  ff .end (operand)
  c5 09 00 00               03 00 .var1 FLAGS
  c7 09 00 00                  01 .literal
  c8 09 00 00         53 02 00 00 595
  cc 09 00 00                  ff .end (operand)
  cd 09 00 00                  ff .end (operand)
  ce 09 00 00               03 08 .var1 MAXHP
  d0 09 00 00                  01 .literal
  d1 09 00 00         02 00 00 00 2
  d5 09 00 00                  ff .end (operand)
  d6 09 00 00                  ff .end (operand)
  d7 09 00 00               03 00 .var1 FLAGS
  d9 09 00 00                  01 .literal
  da 09 00 00         53 02 00 00 595
  de 09 00 00                  ff .end (operand)
  df 09 00 00                  04 .incset
  e0 09 00 00                  01 .literal
  e1 09 00 00         0a 00 00 00 10
  e5 09 00 00                  ff .end (operand)
  e6 09 00 00               01 4e .exec VcTextNum
  e8 09 00 00                  01 .literal
  e9 09 00 00         f5 00 00 00 245
  ed 09 00 00                  ff .end (operand)
  ee 09 00 00               03 00 .var1 FLAGS
  f0 09 00 00                  01 .literal
  f1 09 00 00         53 02 00 00 595
  f5 09 00 00                  ff .end (operand)
  f6 09 00 00                  ff .end (operand)
  f7 09 00 00               03 09 .var1 CURMP
  f9 09 00 00                  01 .literal
  fa 09 00 00         02 00 00 00 2
  fe 09 00 00                  ff .end (operand)
  ff 09 00 00                  ff .end (operand)
  00 0a 00 00               01 3b .exec VcText
  02 0a 00 00                  01 .literal
  03 0a 00 00         09 01 00 00 265
  07 0a 00 00                  ff .end (operand)
  08 0a 00 00               03 00 .var1 FLAGS
  0a 0a 00 00                  01 .literal
  0b 0a 00 00         53 02 00 00 595
  0f 0a 00 00                  ff .end (operand)
  10 0a 00 00                  ff .end (operand)
  11 0a 00 00                     "/"

              2f 00 
  13 0a 00 00               01 4e .exec VcTextNum
  15 0a 00 00                  01 .literal
  16 0a 00 00         13 01 00 00 275
  1a 0a 00 00                  ff .end (operand)
  1b 0a 00 00               03 00 .var1 FLAGS
  1d 0a 00 00                  01 .literal
  1e 0a 00 00         53 02 00 00 595
  22 0a 00 00                  ff .end (operand)
  23 0a 00 00                  ff .end (operand)
  24 0a 00 00               03 0a .var1 MAXMP
  26 0a 00 00                  01 .literal
  27 0a 00 00         02 00 00 00 2
  2b 0a 00 00                  ff .end (operand)
  2c 0a 00 00                  ff .end (operand)
if29
::2d 0a 00 00               05 01 .if [terms=1]
  2f 0a 00 00         0e 0b 00 00 .else
  33 0a 00 00               03 02 .var1 CHAR
  35 0a 00 00                  01 .literal
  36 0a 00 00         03 00 00 00 3
  3a 0a 00 00                  ff .end (operand)
  3b 0a 00 00                  ff .end (operand)
  3d 0a 00 00                  01 .if-sign-nonzero
  3d 0a 00 00               03 00 .var1 FLAGS
  3f 0a 00 00                  01 .literal
  40 0a 00 00         53 02 00 00 595
  44 0a 00 00                  ff .end (operand)
  45 0a 00 00                  04 .incset
  46 0a 00 00                  01 .literal
  47 0a 00 00         0a 00 00 00 10
  4b 0a 00 00                  ff .end (operand)
  4c 0a 00 00               01 3b .exec VcText
  4e 0a 00 00                  01 .literal
  4f 0a 00 00         f5 00 00 00 245
  53 0a 00 00                  ff .end (operand)
  54 0a 00 00               03 00 .var1 FLAGS
  56 0a 00 00                  01 .literal
  57 0a 00 00         53 02 00 00 595
  5b 0a 00 00                  ff .end (operand)
  5c 0a 00 00                  ff .end (operand)
  5d 0a 00 00                     "Feng"

              46 65 6e 67 00 
  62 0a 00 00               03 00 .var1 FLAGS
  64 0a 00 00                  01 .literal
  65 0a 00 00         53 02 00 00 595
  69 0a 00 00                  ff .end (operand)
  6a 0a 00 00                  04 .incset
  6b 0a 00 00                  01 .literal
  6c 0a 00 00         0a 00 00 00 10
  70 0a 00 00                  ff .end (operand)
  71 0a 00 00               01 4e .exec VcTextNum
  73 0a 00 00                  01 .literal
  74 0a 00 00         f5 00 00 00 245
  78 0a 00 00                  ff .end (operand)
  79 0a 00 00               03 00 .var1 FLAGS
  7b 0a 00 00                  01 .literal
  7c 0a 00 00         53 02 00 00 595
  80 0a 00 00                  ff .end (operand)
  81 0a 00 00                  ff .end (operand)
  82 0a 00 00               03 07 .var1 CURHP
  84 0a 00 00                  01 .literal
  85 0a 00 00         03 00 00 00 3
  89 0a 00 00                  ff .end (operand)
  8a 0a 00 00                  ff .end (operand)
  8b 0a 00 00               01 3b .exec VcText
  8d 0a 00 00                  01 .literal
  8e 0a 00 00         09 01 00 00 265
  92 0a 00 00                  ff .end (operand)
  93 0a 00 00               03 00 .var1 FLAGS
  95 0a 00 00                  01 .literal
  96 0a 00 00         53 02 00 00 595
  9a 0a 00 00                  ff .end (operand)
  9b 0a 00 00                  ff .end (operand)
  9c 0a 00 00                     "/"

              2f 00 
  9e 0a 00 00               01 4e .exec VcTextNum
  a0 0a 00 00                  01 .literal
  a1 0a 00 00         13 01 00 00 275
  a5 0a 00 00                  ff .end (operand)
  a6 0a 00 00               03 00 .var1 FLAGS
  a8 0a 00 00                  01 .literal
  a9 0a 00 00         53 02 00 00 595
  ad 0a 00 00                  ff .end (operand)
  ae 0a 00 00                  ff .end (operand)
  af 0a 00 00               03 08 .var1 MAXHP
  b1 0a 00 00                  01 .literal
  b2 0a 00 00         03 00 00 00 3
  b6 0a 00 00                  ff .end (operand)
  b7 0a 00 00                  ff .end (operand)
  b8 0a 00 00               03 00 .var1 FLAGS
  ba 0a 00 00                  01 .literal
  bb 0a 00 00         53 02 00 00 595
  bf 0a 00 00                  ff .end (operand)
  c0 0a 00 00                  04 .incset
  c1 0a 00 00                  01 .literal
  c2 0a 00 00         0a 00 00 00 10
  c6 0a 00 00                  ff .end (operand)
  c7 0a 00 00               01 4e .exec VcTextNum
  c9 0a 00 00                  01 .literal
  ca 0a 00 00         f5 00 00 00 245
  ce 0a 00 00                  ff .end (operand)
  cf 0a 00 00               03 00 .var1 FLAGS
  d1 0a 00 00                  01 .literal
  d2 0a 00 00         53 02 00 00 595
  d6 0a 00 00                  ff .end (operand)
  d7 0a 00 00                  ff .end (operand)
  d8 0a 00 00               03 09 .var1 CURMP
  da 0a 00 00                  01 .literal
  db 0a 00 00         03 00 00 00 3
  df 0a 00 00                  ff .end (operand)
  e0 0a 00 00                  ff .end (operand)
  e1 0a 00 00               01 3b .exec VcText
  e3 0a 00 00                  01 .literal
  e4 0a 00 00         09 01 00 00 265
  e8 0a 00 00                  ff .end (operand)
  e9 0a 00 00               03 00 .var1 FLAGS
  eb 0a 00 00                  01 .literal
  ec 0a 00 00         53 02 00 00 595
  f0 0a 00 00                  ff .end (operand)
  f1 0a 00 00                  ff .end (operand)
  f2 0a 00 00                     "/"

              2f 00 
  f4 0a 00 00               01 4e .exec VcTextNum
  f6 0a 00 00                  01 .literal
  f7 0a 00 00         13 01 00 00 275
  fb 0a 00 00                  ff .end (operand)
  fc 0a 00 00               03 00 .var1 FLAGS
  fe 0a 00 00                  01 .literal
  ff 0a 00 00         53 02 00 00 595
  03 0b 00 00                  ff .end (operand)
  04 0b 00 00                  ff .end (operand)
  05 0b 00 00               03 0a .var1 MAXMP
  07 0b 00 00                  01 .literal
  08 0b 00 00         03 00 00 00 3
  0c 0b 00 00                  ff .end (operand)
  0d 0b 00 00                  ff .end (operand)
if30
::0e 0b 00 00               05 01 .if [terms=1]
  10 0b 00 00         ef 0b 00 00 .else
  14 0b 00 00               03 02 .var1 CHAR
  16 0b 00 00                  01 .literal
  17 0b 00 00         04 00 00 00 4
  1b 0b 00 00                  ff .end (operand)
  1c 0b 00 00                  ff .end (operand)
  1e 0b 00 00                  01 .if-sign-nonzero
  1e 0b 00 00               03 00 .var1 FLAGS
  20 0b 00 00                  01 .literal
  21 0b 00 00         53 02 00 00 595
  25 0b 00 00                  ff .end (operand)
  26 0b 00 00                  04 .incset
  27 0b 00 00                  01 .literal
  28 0b 00 00         0a 00 00 00 10
  2c 0b 00 00                  ff .end (operand)
  2d 0b 00 00               01 3b .exec VcText
  2f 0b 00 00                  01 .literal
  30 0b 00 00         f5 00 00 00 245
  34 0b 00 00                  ff .end (operand)
  35 0b 00 00               03 00 .var1 FLAGS
  37 0b 00 00                  01 .literal
  38 0b 00 00         53 02 00 00 595
  3c 0b 00 00                  ff .end (operand)
  3d 0b 00 00                  ff .end (operand)
  3e 0b 00 00                     "Rikk"

              52 69 6b 6b 00 
  43 0b 00 00               03 00 .var1 FLAGS
  45 0b 00 00                  01 .literal
  46 0b 00 00         53 02 00 00 595
  4a 0b 00 00                  ff .end (operand)
  4b 0b 00 00                  04 .incset
  4c 0b 00 00                  01 .literal
  4d 0b 00 00         0a 00 00 00 10
  51 0b 00 00                  ff .end (operand)
  52 0b 00 00               01 4e .exec VcTextNum
  54 0b 00 00                  01 .literal
  55 0b 00 00         f5 00 00 00 245
  59 0b 00 00                  ff .end (operand)
  5a 0b 00 00               03 00 .var1 FLAGS
  5c 0b 00 00                  01 .literal
  5d 0b 00 00         53 02 00 00 595
  61 0b 00 00                  ff .end (operand)
  62 0b 00 00                  ff .end (operand)
  63 0b 00 00               03 07 .var1 CURHP
  65 0b 00 00                  01 .literal
  66 0b 00 00         04 00 00 00 4
  6a 0b 00 00                  ff .end (operand)
  6b 0b 00 00                  ff .end (operand)
  6c 0b 00 00               01 3b .exec VcText
  6e 0b 00 00                  01 .literal
  6f 0b 00 00         09 01 00 00 265
  73 0b 00 00                  ff .end (operand)
  74 0b 00 00               03 00 .var1 FLAGS
  76 0b 00 00                  01 .literal
  77 0b 00 00         53 02 00 00 595
  7b 0b 00 00                  ff .end (operand)
  7c 0b 00 00                  ff .end (operand)
  7d 0b 00 00                     "/"

              2f 00 
  7f 0b 00 00               01 4e .exec VcTextNum
  81 0b 00 00                  01 .literal
  82 0b 00 00         13 01 00 00 275
  86 0b 00 00                  ff .end (operand)
  87 0b 00 00               03 00 .var1 FLAGS
  89 0b 00 00                  01 .literal
  8a 0b 00 00         53 02 00 00 595
  8e 0b 00 00                  ff .end (operand)
  8f 0b 00 00                  ff .end (operand)
  90 0b 00 00               03 08 .var1 MAXHP
  92 0b 00 00                  01 .literal
  93 0b 00 00         04 00 00 00 4
  97 0b 00 00                  ff .end (operand)
  98 0b 00 00                  ff .end (operand)
  99 0b 00 00               03 00 .var1 FLAGS
  9b 0b 00 00                  01 .literal
  9c 0b 00 00         53 02 00 00 595
  a0 0b 00 00                  ff .end (operand)
  a1 0b 00 00                  04 .incset
  a2 0b 00 00                  01 .literal
  a3 0b 00 00         0a 00 00 00 10
  a7 0b 00 00                  ff .end (operand)
  a8 0b 00 00               01 4e .exec VcTextNum
  aa 0b 00 00                  01 .literal
  ab 0b 00 00         f5 00 00 00 245
  af 0b 00 00                  ff .end (operand)
  b0 0b 00 00               03 00 .var1 FLAGS
  b2 0b 00 00                  01 .literal
  b3 0b 00 00         53 02 00 00 595
  b7 0b 00 00                  ff .end (operand)
  b8 0b 00 00                  ff .end (operand)
  b9 0b 00 00               03 09 .var1 CURMP
  bb 0b 00 00                  01 .literal
  bc 0b 00 00         04 00 00 00 4
  c0 0b 00 00                  ff .end (operand)
  c1 0b 00 00                  ff .end (operand)
  c2 0b 00 00               01 3b .exec VcText
  c4 0b 00 00                  01 .literal
  c5 0b 00 00         09 01 00 00 265
  c9 0b 00 00                  ff .end (operand)
  ca 0b 00 00               03 00 .var1 FLAGS
  cc 0b 00 00                  01 .literal
  cd 0b 00 00         53 02 00 00 595
  d1 0b 00 00                  ff .end (operand)
  d2 0b 00 00                  ff .end (operand)
  d3 0b 00 00                     "/"

              2f 00 
  d5 0b 00 00               01 4e .exec VcTextNum
  d7 0b 00 00                  01 .literal
  d8 0b 00 00         13 01 00 00 275
  dc 0b 00 00                  ff .end (operand)
  dd 0b 00 00               03 00 .var1 FLAGS
  df 0b 00 00                  01 .literal
  e0 0b 00 00         53 02 00 00 595
  e4 0b 00 00                  ff .end (operand)
  e5 0b 00 00                  ff .end (operand)
  e6 0b 00 00               03 0a .var1 MAXMP
  e8 0b 00 00                  01 .literal
  e9 0b 00 00         04 00 00 00 4
  ed 0b 00 00                  ff .end (operand)
  ee 0b 00 00                  ff .end (operand)
if31
::ef 0b 00 00               05 01 .if [terms=1]
  f1 0b 00 00         d1 0c 00 00 .else
  f5 0b 00 00               03 02 .var1 CHAR
  f7 0b 00 00                  01 .literal
  f8 0b 00 00         05 00 00 00 5
  fc 0b 00 00                  ff .end (operand)
  fd 0b 00 00                  ff .end (operand)
  ff 0b 00 00                  01 .if-sign-nonzero
  ff 0b 00 00               03 00 .var1 FLAGS
  01 0c 00 00                  01 .literal
  02 0c 00 00         53 02 00 00 595
  06 0c 00 00                  ff .end (operand)
  07 0c 00 00                  04 .incset
  08 0c 00 00                  01 .literal
  09 0c 00 00         0a 00 00 00 10
  0d 0c 00 00                  ff .end (operand)
  0e 0c 00 00               01 3b .exec VcText
  10 0c 00 00                  01 .literal
  11 0c 00 00         f5 00 00 00 245
  15 0c 00 00                  ff .end (operand)
  16 0c 00 00               03 00 .var1 FLAGS
  18 0c 00 00                  01 .literal
  19 0c 00 00         53 02 00 00 595
  1d 0c 00 00                  ff .end (operand)
  1e 0c 00 00                  ff .end (operand)
  1f 0c 00 00                     "Dingo"

              44 69 6e 67 6f 00 
  25 0c 00 00               03 00 .var1 FLAGS
  27 0c 00 00                  01 .literal
  28 0c 00 00         53 02 00 00 595
  2c 0c 00 00                  ff .end (operand)
  2d 0c 00 00                  04 .incset
  2e 0c 00 00                  01 .literal
  2f 0c 00 00         0a 00 00 00 10
  33 0c 00 00                  ff .end (operand)
  34 0c 00 00               01 4e .exec VcTextNum
  36 0c 00 00                  01 .literal
  37 0c 00 00         f5 00 00 00 245
  3b 0c 00 00                  ff .end (operand)
  3c 0c 00 00               03 00 .var1 FLAGS
  3e 0c 00 00                  01 .literal
  3f 0c 00 00         53 02 00 00 595
  43 0c 00 00                  ff .end (operand)
  44 0c 00 00                  ff .end (operand)
  45 0c 00 00               03 07 .var1 CURHP
  47 0c 00 00                  01 .literal
  48 0c 00 00         05 00 00 00 5
  4c 0c 00 00                  ff .end (operand)
  4d 0c 00 00                  ff .end (operand)
  4e 0c 00 00               01 3b .exec VcText
  50 0c 00 00                  01 .literal
  51 0c 00 00         09 01 00 00 265
  55 0c 00 00                  ff .end (operand)
  56 0c 00 00               03 00 .var1 FLAGS
  58 0c 00 00                  01 .literal
  59 0c 00 00         53 02 00 00 595
  5d 0c 00 00                  ff .end (operand)
  5e 0c 00 00                  ff .end (operand)
  5f 0c 00 00                     "/"

              2f 00 
  61 0c 00 00               01 4e .exec VcTextNum
  63 0c 00 00                  01 .literal
  64 0c 00 00         13 01 00 00 275
  68 0c 00 00                  ff .end (operand)
  69 0c 00 00               03 00 .var1 FLAGS
  6b 0c 00 00                  01 .literal
  6c 0c 00 00         53 02 00 00 595
  70 0c 00 00                  ff .end (operand)
  71 0c 00 00                  ff .end (operand)
  72 0c 00 00               03 08 .var1 MAXHP
  74 0c 00 00                  01 .literal
  75 0c 00 00         05 00 00 00 5
  79 0c 00 00                  ff .end (operand)
  7a 0c 00 00                  ff .end (operand)
  7b 0c 00 00               03 00 .var1 FLAGS
  7d 0c 00 00                  01 .literal
  7e 0c 00 00         53 02 00 00 595
  82 0c 00 00                  ff .end (operand)
  83 0c 00 00                  04 .incset
  84 0c 00 00                  01 .literal
  85 0c 00 00         0a 00 00 00 10
  89 0c 00 00                  ff .end (operand)
  8a 0c 00 00               01 4e .exec VcTextNum
  8c 0c 00 00                  01 .literal
  8d 0c 00 00         f5 00 00 00 245
  91 0c 00 00                  ff .end (operand)
  92 0c 00 00               03 00 .var1 FLAGS
  94 0c 00 00                  01 .literal
  95 0c 00 00         53 02 00 00 595
  99 0c 00 00                  ff .end (operand)
  9a 0c 00 00                  ff .end (operand)
  9b 0c 00 00               03 09 .var1 CURMP
  9d 0c 00 00                  01 .literal
  9e 0c 00 00         05 00 00 00 5
  a2 0c 00 00                  ff .end (operand)
  a3 0c 00 00                  ff .end (operand)
  a4 0c 00 00               01 3b .exec VcText
  a6 0c 00 00                  01 .literal
  a7 0c 00 00         09 01 00 00 265
  ab 0c 00 00                  ff .end (operand)
  ac 0c 00 00               03 00 .var1 FLAGS
  ae 0c 00 00                  01 .literal
  af 0c 00 00         53 02 00 00 595
  b3 0c 00 00                  ff .end (operand)
  b4 0c 00 00                  ff .end (operand)
  b5 0c 00 00                     "/"

              2f 00 
  b7 0c 00 00               01 4e .exec VcTextNum
  b9 0c 00 00                  01 .literal
  ba 0c 00 00         13 01 00 00 275
  be 0c 00 00                  ff .end (operand)
  bf 0c 00 00               03 00 .var1 FLAGS
  c1 0c 00 00                  01 .literal
  c2 0c 00 00         53 02 00 00 595
  c6 0c 00 00                  ff .end (operand)
  c7 0c 00 00                  ff .end (operand)
  c8 0c 00 00               03 0a .var1 MAXMP
  ca 0c 00 00                  01 .literal
  cb 0c 00 00         05 00 00 00 5
  cf 0c 00 00                  ff .end (operand)
  d0 0c 00 00                  ff .end (operand)
if32
::d1 0c 00 00               05 01 .if [terms=1]
  d3 0c 00 00         b5 0d 00 00 .else
  d7 0c 00 00               03 02 .var1 CHAR
  d9 0c 00 00                  01 .literal
  da 0c 00 00         06 00 00 00 6
  de 0c 00 00                  ff .end (operand)
  df 0c 00 00                  ff .end (operand)
  e1 0c 00 00                  01 .if-sign-nonzero
  e1 0c 00 00               03 00 .var1 FLAGS
  e3 0c 00 00                  01 .literal
  e4 0c 00 00         53 02 00 00 595
  e8 0c 00 00                  ff .end (operand)
  e9 0c 00 00                  04 .incset
  ea 0c 00 00                  01 .literal
  eb 0c 00 00         0a 00 00 00 10
  ef 0c 00 00                  ff .end (operand)
  f0 0c 00 00               01 3b .exec VcText
  f2 0c 00 00                  01 .literal
  f3 0c 00 00         f5 00 00 00 245
  f7 0c 00 00                  ff .end (operand)
  f8 0c 00 00               03 00 .var1 FLAGS
  fa 0c 00 00                  01 .literal
  fb 0c 00 00         53 02 00 00 595
  ff 0c 00 00                  ff .end (operand)
  00 0d 00 00                  ff .end (operand)
  01 0d 00 00                     "Jeemdub"

              4a 65 65 6d 64 75 62 00 
  09 0d 00 00               03 00 .var1 FLAGS
  0b 0d 00 00                  01 .literal
  0c 0d 00 00         53 02 00 00 595
  10 0d 00 00                  ff .end (operand)
  11 0d 00 00                  04 .incset
  12 0d 00 00                  01 .literal
  13 0d 00 00         0a 00 00 00 10
  17 0d 00 00                  ff .end (operand)
  18 0d 00 00               01 4e .exec VcTextNum
  1a 0d 00 00                  01 .literal
  1b 0d 00 00         f5 00 00 00 245
  1f 0d 00 00                  ff .end (operand)
  20 0d 00 00               03 00 .var1 FLAGS
  22 0d 00 00                  01 .literal
  23 0d 00 00         53 02 00 00 595
  27 0d 00 00                  ff .end (operand)
  28 0d 00 00                  ff .end (operand)
  29 0d 00 00               03 07 .var1 CURHP
  2b 0d 00 00                  01 .literal
  2c 0d 00 00         06 00 00 00 6
  30 0d 00 00                  ff .end (operand)
  31 0d 00 00                  ff .end (operand)
  32 0d 00 00               01 3b .exec VcText
  34 0d 00 00                  01 .literal
  35 0d 00 00         09 01 00 00 265
  39 0d 00 00                  ff .end (operand)
  3a 0d 00 00               03 00 .var1 FLAGS
  3c 0d 00 00                  01 .literal
  3d 0d 00 00         53 02 00 00 595
  41 0d 00 00                  ff .end (operand)
  42 0d 00 00                  ff .end (operand)
  43 0d 00 00                     "/"

              2f 00 
  45 0d 00 00               01 4e .exec VcTextNum
  47 0d 00 00                  01 .literal
  48 0d 00 00         13 01 00 00 275
  4c 0d 00 00                  ff .end (operand)
  4d 0d 00 00               03 00 .var1 FLAGS
  4f 0d 00 00                  01 .literal
  50 0d 00 00         53 02 00 00 595
  54 0d 00 00                  ff .end (operand)
  55 0d 00 00                  ff .end (operand)
  56 0d 00 00               03 08 .var1 MAXHP
  58 0d 00 00                  01 .literal
  59 0d 00 00         06 00 00 00 6
  5d 0d 00 00                  ff .end (operand)
  5e 0d 00 00                  ff .end (operand)
  5f 0d 00 00               03 00 .var1 FLAGS
  61 0d 00 00                  01 .literal
  62 0d 00 00         53 02 00 00 595
  66 0d 00 00                  ff .end (operand)
  67 0d 00 00                  04 .incset
  68 0d 00 00                  01 .literal
  69 0d 00 00         0a 00 00 00 10
  6d 0d 00 00                  ff .end (operand)
  6e 0d 00 00               01 4e .exec VcTextNum
  70 0d 00 00                  01 .literal
  71 0d 00 00         f5 00 00 00 245
  75 0d 00 00                  ff .end (operand)
  76 0d 00 00               03 00 .var1 FLAGS
  78 0d 00 00                  01 .literal
  79 0d 00 00         53 02 00 00 595
  7d 0d 00 00                  ff .end (operand)
  7e 0d 00 00                  ff .end (operand)
  7f 0d 00 00               03 09 .var1 CURMP
  81 0d 00 00                  01 .literal
  82 0d 00 00         06 00 00 00 6
  86 0d 00 00                  ff .end (operand)
  87 0d 00 00                  ff .end (operand)
  88 0d 00 00               01 3b .exec VcText
  8a 0d 00 00                  01 .literal
  8b 0d 00 00         09 01 00 00 265
  8f 0d 00 00                  ff .end (operand)
  90 0d 00 00               03 00 .var1 FLAGS
  92 0d 00 00                  01 .literal
  93 0d 00 00         53 02 00 00 595
  97 0d 00 00                  ff .end (operand)
  98 0d 00 00                  ff .end (operand)
  99 0d 00 00                     "/"

              2f 00 
  9b 0d 00 00               01 4e .exec VcTextNum
  9d 0d 00 00                  01 .literal
  9e 0d 00 00         13 01 00 00 275
  a2 0d 00 00                  ff .end (operand)
  a3 0d 00 00               03 00 .var1 FLAGS
  a5 0d 00 00                  01 .literal
  a6 0d 00 00         53 02 00 00 595
  aa 0d 00 00                  ff .end (operand)
  ab 0d 00 00                  ff .end (operand)
  ac 0d 00 00               03 0a .var1 MAXMP
  ae 0d 00 00                  01 .literal
  af 0d 00 00         06 00 00 00 6
  b3 0d 00 00                  ff .end (operand)
  b4 0d 00 00                  ff .end (operand)
if33
::b5 0d 00 00               05 01 .if [terms=1]
  b7 0d 00 00         96 0e 00 00 .else
  bb 0d 00 00               03 02 .var1 CHAR
  bd 0d 00 00                  01 .literal
  be 0d 00 00         07 00 00 00 7
  c2 0d 00 00                  ff .end (operand)
  c3 0d 00 00                  ff .end (operand)
  c5 0d 00 00                  01 .if-sign-nonzero
  c5 0d 00 00               03 00 .var1 FLAGS
  c7 0d 00 00                  01 .literal
  c8 0d 00 00         53 02 00 00 595
  cc 0d 00 00                  ff .end (operand)
  cd 0d 00 00                  04 .incset
  ce 0d 00 00                  01 .literal
  cf 0d 00 00         0a 00 00 00 10
  d3 0d 00 00                  ff .end (operand)
  d4 0d 00 00               01 3b .exec VcText
  d6 0d 00 00                  01 .literal
  d7 0d 00 00         f5 00 00 00 245
  db 0d 00 00                  ff .end (operand)
  dc 0d 00 00               03 00 .var1 FLAGS
  de 0d 00 00                  01 .literal
  df 0d 00 00         53 02 00 00 595
  e3 0d 00 00                  ff .end (operand)
  e4 0d 00 00                  ff .end (operand)
  e5 0d 00 00                     "Bull"

              42 75 6c 6c 00 
  ea 0d 00 00               03 00 .var1 FLAGS
  ec 0d 00 00                  01 .literal
  ed 0d 00 00         53 02 00 00 595
  f1 0d 00 00                  ff .end (operand)
  f2 0d 00 00                  04 .incset
  f3 0d 00 00                  01 .literal
  f4 0d 00 00         0a 00 00 00 10
  f8 0d 00 00                  ff .end (operand)
  f9 0d 00 00               01 4e .exec VcTextNum
  fb 0d 00 00                  01 .literal
  fc 0d 00 00         f5 00 00 00 245
  00 0e 00 00                  ff .end (operand)
  01 0e 00 00               03 00 .var1 FLAGS
  03 0e 00 00                  01 .literal
  04 0e 00 00         53 02 00 00 595
  08 0e 00 00                  ff .end (operand)
  09 0e 00 00                  ff .end (operand)
  0a 0e 00 00               03 07 .var1 CURHP
  0c 0e 00 00                  01 .literal
  0d 0e 00 00         07 00 00 00 7
  11 0e 00 00                  ff .end (operand)
  12 0e 00 00                  ff .end (operand)
  13 0e 00 00               01 3b .exec VcText
  15 0e 00 00                  01 .literal
  16 0e 00 00         09 01 00 00 265
  1a 0e 00 00                  ff .end (operand)
  1b 0e 00 00               03 00 .var1 FLAGS
  1d 0e 00 00                  01 .literal
  1e 0e 00 00         53 02 00 00 595
  22 0e 00 00                  ff .end (operand)
  23 0e 00 00                  ff .end (operand)
  24 0e 00 00                     "/"

              2f 00 
  26 0e 00 00               01 4e .exec VcTextNum
  28 0e 00 00                  01 .literal
  29 0e 00 00         13 01 00 00 275
  2d 0e 00 00                  ff .end (operand)
  2e 0e 00 00               03 00 .var1 FLAGS
  30 0e 00 00                  01 .literal
  31 0e 00 00         53 02 00 00 595
  35 0e 00 00                  ff .end (operand)
  36 0e 00 00                  ff .end (operand)
  37 0e 00 00               03 08 .var1 MAXHP
  39 0e 00 00                  01 .literal
  3a 0e 00 00         07 00 00 00 7
  3e 0e 00 00                  ff .end (operand)
  3f 0e 00 00                  ff .end (operand)
  40 0e 00 00               03 00 .var1 FLAGS
  42 0e 00 00                  01 .literal
  43 0e 00 00         53 02 00 00 595
  47 0e 00 00                  ff .end (operand)
  48 0e 00 00                  04 .incset
  49 0e 00 00                  01 .literal
  4a 0e 00 00         0a 00 00 00 10
  4e 0e 00 00                  ff .end (operand)
  4f 0e 00 00               01 4e .exec VcTextNum
  51 0e 00 00                  01 .literal
  52 0e 00 00         f5 00 00 00 245
  56 0e 00 00                  ff .end (operand)
  57 0e 00 00               03 00 .var1 FLAGS
  59 0e 00 00                  01 .literal
  5a 0e 00 00         53 02 00 00 595
  5e 0e 00 00                  ff .end (operand)
  5f 0e 00 00                  ff .end (operand)
  60 0e 00 00               03 09 .var1 CURMP
  62 0e 00 00                  01 .literal
  63 0e 00 00         07 00 00 00 7
  67 0e 00 00                  ff .end (operand)
  68 0e 00 00                  ff .end (operand)
  69 0e 00 00               01 3b .exec VcText
  6b 0e 00 00                  01 .literal
  6c 0e 00 00         09 01 00 00 265
  70 0e 00 00                  ff .end (operand)
  71 0e 00 00               03 00 .var1 FLAGS
  73 0e 00 00                  01 .literal
  74 0e 00 00         53 02 00 00 595
  78 0e 00 00                  ff .end (operand)
  79 0e 00 00                  ff .end (operand)
  7a 0e 00 00                     "/"

              2f 00 
  7c 0e 00 00               01 4e .exec VcTextNum
  7e 0e 00 00                  01 .literal
  7f 0e 00 00         13 01 00 00 275
  83 0e 00 00                  ff .end (operand)
  84 0e 00 00               03 00 .var1 FLAGS
  86 0e 00 00                  01 .literal
  87 0e 00 00         53 02 00 00 595
  8b 0e 00 00                  ff .end (operand)
  8c 0e 00 00                  ff .end (operand)
  8d 0e 00 00               03 0a .var1 MAXMP
  8f 0e 00 00                  01 .literal
  90 0e 00 00         07 00 00 00 7
  94 0e 00 00                  ff .end (operand)
  95 0e 00 00                  ff .end (operand)
if34
::96 0e 00 00               05 01 .if [terms=1]
  98 0e 00 00         78 0f 00 00 .else
  9c 0e 00 00               03 02 .var1 CHAR
  9e 0e 00 00                  01 .literal
  9f 0e 00 00         08 00 00 00 8
  a3 0e 00 00                  ff .end (operand)
  a4 0e 00 00                  ff .end (operand)
  a6 0e 00 00                  01 .if-sign-nonzero
  a6 0e 00 00               03 00 .var1 FLAGS
  a8 0e 00 00                  01 .literal
  a9 0e 00 00         53 02 00 00 595
  ad 0e 00 00                  ff .end (operand)
  ae 0e 00 00                  04 .incset
  af 0e 00 00                  01 .literal
  b0 0e 00 00         0a 00 00 00 10
  b4 0e 00 00                  ff .end (operand)
  b5 0e 00 00               01 3b .exec VcText
  b7 0e 00 00                  01 .literal
  b8 0e 00 00         f5 00 00 00 245
  bc 0e 00 00                  ff .end (operand)
  bd 0e 00 00               03 00 .var1 FLAGS
  bf 0e 00 00                  01 .literal
  c0 0e 00 00         53 02 00 00 595
  c4 0e 00 00                  ff .end (operand)
  c5 0e 00 00                  ff .end (operand)
  c6 0e 00 00                     "Lumin"

              4c 75 6d 69 6e 00 
  cc 0e 00 00               03 00 .var1 FLAGS
  ce 0e 00 00                  01 .literal
  cf 0e 00 00         53 02 00 00 595
  d3 0e 00 00                  ff .end (operand)
  d4 0e 00 00                  04 .incset
  d5 0e 00 00                  01 .literal
  d6 0e 00 00         0a 00 00 00 10
  da 0e 00 00                  ff .end (operand)
  db 0e 00 00               01 4e .exec VcTextNum
  dd 0e 00 00                  01 .literal
  de 0e 00 00         f5 00 00 00 245
  e2 0e 00 00                  ff .end (operand)
  e3 0e 00 00               03 00 .var1 FLAGS
  e5 0e 00 00                  01 .literal
  e6 0e 00 00         53 02 00 00 595
  ea 0e 00 00                  ff .end (operand)
  eb 0e 00 00                  ff .end (operand)
  ec 0e 00 00               03 07 .var1 CURHP
  ee 0e 00 00                  01 .literal
  ef 0e 00 00         08 00 00 00 8
  f3 0e 00 00                  ff .end (operand)
  f4 0e 00 00                  ff .end (operand)
  f5 0e 00 00               01 3b .exec VcText
  f7 0e 00 00                  01 .literal
  f8 0e 00 00         09 01 00 00 265
  fc 0e 00 00                  ff .end (operand)
  fd 0e 00 00               03 00 .var1 FLAGS
  ff 0e 00 00                  01 .literal
  00 0f 00 00         53 02 00 00 595
  04 0f 00 00                  ff .end (operand)
  05 0f 00 00                  ff .end (operand)
  06 0f 00 00                     "/"

              2f 00 
  08 0f 00 00               01 4e .exec VcTextNum
  0a 0f 00 00                  01 .literal
  0b 0f 00 00         13 01 00 00 275
  0f 0f 00 00                  ff .end (operand)
  10 0f 00 00               03 00 .var1 FLAGS
  12 0f 00 00                  01 .literal
  13 0f 00 00         53 02 00 00 595
  17 0f 00 00                  ff .end (operand)
  18 0f 00 00                  ff .end (operand)
  19 0f 00 00               03 08 .var1 MAXHP
  1b 0f 00 00                  01 .literal
  1c 0f 00 00         08 00 00 00 8
  20 0f 00 00                  ff .end (operand)
  21 0f 00 00                  ff .end (operand)
  22 0f 00 00               03 00 .var1 FLAGS
  24 0f 00 00                  01 .literal
  25 0f 00 00         53 02 00 00 595
  29 0f 00 00                  ff .end (operand)
  2a 0f 00 00                  04 .incset
  2b 0f 00 00                  01 .literal
  2c 0f 00 00         0a 00 00 00 10
  30 0f 00 00                  ff .end (operand)
  31 0f 00 00               01 4e .exec VcTextNum
  33 0f 00 00                  01 .literal
  34 0f 00 00         f5 00 00 00 245
  38 0f 00 00                  ff .end (operand)
  39 0f 00 00               03 00 .var1 FLAGS
  3b 0f 00 00                  01 .literal
  3c 0f 00 00         53 02 00 00 595
  40 0f 00 00                  ff .end (operand)
  41 0f 00 00                  ff .end (operand)
  42 0f 00 00               03 09 .var1 CURMP
  44 0f 00 00                  01 .literal
  45 0f 00 00         08 00 00 00 8
  49 0f 00 00                  ff .end (operand)
  4a 0f 00 00                  ff .end (operand)
  4b 0f 00 00               01 3b .exec VcText
  4d 0f 00 00                  01 .literal
  4e 0f 00 00         09 01 00 00 265
  52 0f 00 00                  ff .end (operand)
  53 0f 00 00               03 00 .var1 FLAGS
  55 0f 00 00                  01 .literal
  56 0f 00 00         53 02 00 00 595
  5a 0f 00 00                  ff .end (operand)
  5b 0f 00 00                  ff .end (operand)
  5c 0f 00 00                     "/"

              2f 00 
  5e 0f 00 00               01 4e .exec VcTextNum
  60 0f 00 00                  01 .literal
  61 0f 00 00         13 01 00 00 275
  65 0f 00 00                  ff .end (operand)
  66 0f 00 00               03 00 .var1 FLAGS
  68 0f 00 00                  01 .literal
  69 0f 00 00         53 02 00 00 595
  6d 0f 00 00                  ff .end (operand)
  6e 0f 00 00                  ff .end (operand)
  6f 0f 00 00               03 0a .var1 MAXMP
  71 0f 00 00                  01 .literal
  72 0f 00 00         08 00 00 00 8
  76 0f 00 00                  ff .end (operand)
  77 0f 00 00                  ff .end (operand)
::78 0f 00 00               01 3b .exec VcText
  7a 0f 00 00                  01 .literal
  7b 0f 00 00         f5 00 00 00 245
  7f 0f 00 00                  ff .end (operand)
  80 0f 00 00                  01 .literal
  81 0f 00 00         ad 00 00 00 173
  85 0f 00 00                  ff .end (operand)
  86 0f 00 00                     "SP"

              53 50 00 
  89 0f 00 00               01 4e .exec VcTextNum
  8b 0f 00 00                  01 .literal
  8c 0f 00 00         f5 00 00 00 245
  90 0f 00 00                  ff .end (operand)
  91 0f 00 00                  01 .literal
  92 0f 00 00         b7 00 00 00 183
  96 0f 00 00                  ff .end (operand)
  97 0f 00 00               03 00 .var1 FLAGS
  99 0f 00 00                  01 .literal
  9a 0f 00 00         bf 02 00 00 703
  9e 0f 00 00                  ff .end (operand)
  9f 0f 00 00                  ff .end (operand)
  a0 0f 00 00               01 20 .exec Redraw
  a2 0f 00 00               03 00 .var1 FLAGS
  a4 0f 00 00                  01 .literal
  a5 0f 00 00         59 02 00 00 601
  a9 0f 00 00                  ff .end (operand)
  aa 0f 00 00                  01 .set
  ab 0f 00 00               03 22 .var1 ATK
  ad 0f 00 00                  01 .literal
  ae 0f 00 00         01 00 00 00 1
  b2 0f 00 00                  ff .end (operand)
  b3 0f 00 00                  ff .end (operand)
  b4 0f 00 00               03 00 .var1 FLAGS
  b6 0f 00 00                  01 .literal
  b7 0f 00 00         5a 02 00 00 602
  bb 0f 00 00                  ff .end (operand)
  bc 0f 00 00                  01 .set
  bd 0f 00 00               03 23 .var1 DEF
  bf 0f 00 00                  01 .literal
  c0 0f 00 00         01 00 00 00 1
  c4 0f 00 00                  ff .end (operand)
  c5 0f 00 00                  ff .end (operand)
  c6 0f 00 00               03 00 .var1 FLAGS
  c8 0f 00 00                  01 .literal
  c9 0f 00 00         cc 02 00 00 716
  cd 0f 00 00                  ff .end (operand)
  ce 0f 00 00                  01 .set
  cf 0f 00 00               03 26 .var1 MAG
  d1 0f 00 00                  01 .literal
  d2 0f 00 00         01 00 00 00 1
  d6 0f 00 00                  ff .end (operand)
  d7 0f 00 00                  ff .end (operand)
  d8 0f 00 00               03 00 .var1 FLAGS
  da 0f 00 00                  01 .literal
  db 0f 00 00         cd 02 00 00 717
  df 0f 00 00                  ff .end (operand)
  e0 0f 00 00                  01 .set
  e1 0f 00 00               03 27 .var1 MGR
  e3 0f 00 00                  01 .literal
  e4 0f 00 00         01 00 00 00 1
  e8 0f 00 00                  ff .end (operand)
  e9 0f 00 00                  ff .end (operand)
  ea 0f 00 00               03 00 .var1 FLAGS
  ec 0f 00 00                  01 .literal
  ed 0f 00 00         5b 02 00 00 603
  f1 0f 00 00                  ff .end (operand)
  f2 0f 00 00                  01 .set
  f3 0f 00 00               03 22 .var1 ATK
  f5 0f 00 00                  01 .literal
  f6 0f 00 00         02 00 00 00 2
  fa 0f 00 00                  ff .end (operand)
  fb 0f 00 00                  ff .end (operand)
  fc 0f 00 00               03 00 .var1 FLAGS
  fe 0f 00 00                  01 .literal
  ff 0f 00 00         5c 02 00 00 604
  03 10 00 00                  ff .end (operand)
  04 10 00 00                  01 .set
  05 10 00 00               03 23 .var1 DEF
  07 10 00 00                  01 .literal
  08 10 00 00         02 00 00 00 2
  0c 10 00 00                  ff .end (operand)
  0d 10 00 00                  ff .end (operand)
  0e 10 00 00               03 00 .var1 FLAGS
  10 10 00 00                  01 .literal
  11 10 00 00         ce 02 00 00 718
  15 10 00 00                  ff .end (operand)
  16 10 00 00                  01 .set
  17 10 00 00               03 26 .var1 MAG
  19 10 00 00                  01 .literal
  1a 10 00 00         02 00 00 00 2
  1e 10 00 00                  ff .end (operand)
  1f 10 00 00                  ff .end (operand)
  20 10 00 00               03 00 .var1 FLAGS
  22 10 00 00                  01 .literal
  23 10 00 00         cf 02 00 00 719
  27 10 00 00                  ff .end (operand)
  28 10 00 00                  01 .set
  29 10 00 00               03 27 .var1 MGR
  2b 10 00 00                  01 .literal
  2c 10 00 00         02 00 00 00 2
  30 10 00 00                  ff .end (operand)
  31 10 00 00                  ff .end (operand)
  32 10 00 00               03 00 .var1 FLAGS
  34 10 00 00                  01 .literal
  35 10 00 00         5d 02 00 00 605
  39 10 00 00                  ff .end (operand)
  3a 10 00 00                  01 .set
  3b 10 00 00               03 22 .var1 ATK
  3d 10 00 00                  01 .literal
  3e 10 00 00         03 00 00 00 3
  42 10 00 00                  ff .end (operand)
  43 10 00 00                  ff .end (operand)
  44 10 00 00               03 00 .var1 FLAGS
  46 10 00 00                  01 .literal
  47 10 00 00         5e 02 00 00 606
  4b 10 00 00                  ff .end (operand)
  4c 10 00 00                  01 .set
  4d 10 00 00               03 23 .var1 DEF
  4f 10 00 00                  01 .literal
  50 10 00 00         03 00 00 00 3
  54 10 00 00                  ff .end (operand)
  55 10 00 00                  ff .end (operand)
  56 10 00 00               03 00 .var1 FLAGS
  58 10 00 00                  01 .literal
  59 10 00 00         d0 02 00 00 720
  5d 10 00 00                  ff .end (operand)
  5e 10 00 00                  01 .set
  5f 10 00 00               03 26 .var1 MAG
  61 10 00 00                  01 .literal
  62 10 00 00         03 00 00 00 3
  66 10 00 00                  ff .end (operand)
  67 10 00 00                  ff .end (operand)
  68 10 00 00               03 00 .var1 FLAGS
  6a 10 00 00                  01 .literal
  6b 10 00 00         d1 02 00 00 721
  6f 10 00 00                  ff .end (operand)
  70 10 00 00                  01 .set
  71 10 00 00               03 27 .var1 MGR
  73 10 00 00                  01 .literal
  74 10 00 00         03 00 00 00 3
  78 10 00 00                  ff .end (operand)
  79 10 00 00                  ff .end (operand)
  7a 10 00 00               03 00 .var1 FLAGS
  7c 10 00 00                  01 .literal
  7d 10 00 00         5f 02 00 00 607
  81 10 00 00                  ff .end (operand)
  82 10 00 00                  01 .set
  83 10 00 00               03 22 .var1 ATK
  85 10 00 00                  01 .literal
  86 10 00 00         04 00 00 00 4
  8a 10 00 00                  ff .end (operand)
  8b 10 00 00                  ff .end (operand)
  8c 10 00 00               03 00 .var1 FLAGS
  8e 10 00 00                  01 .literal
  8f 10 00 00         60 02 00 00 608
  93 10 00 00                  ff .end (operand)
  94 10 00 00                  01 .set
  95 10 00 00               03 23 .var1 DEF
  97 10 00 00                  01 .literal
  98 10 00 00         04 00 00 00 4
  9c 10 00 00                  ff .end (operand)
  9d 10 00 00                  ff .end (operand)
  9e 10 00 00               03 00 .var1 FLAGS
  a0 10 00 00                  01 .literal
  a1 10 00 00         d2 02 00 00 722
  a5 10 00 00                  ff .end (operand)
  a6 10 00 00                  01 .set
  a7 10 00 00               03 26 .var1 MAG
  a9 10 00 00                  01 .literal
  aa 10 00 00         04 00 00 00 4
  ae 10 00 00                  ff .end (operand)
  af 10 00 00                  ff .end (operand)
  b0 10 00 00               03 00 .var1 FLAGS
  b2 10 00 00                  01 .literal
  b3 10 00 00         d3 02 00 00 723
  b7 10 00 00                  ff .end (operand)
  b8 10 00 00                  01 .set
  b9 10 00 00               03 27 .var1 MGR
  bb 10 00 00                  01 .literal
  bc 10 00 00         04 00 00 00 4
  c0 10 00 00                  ff .end (operand)
  c1 10 00 00                  ff .end (operand)
  c2 10 00 00               03 00 .var1 FLAGS
  c4 10 00 00                  01 .literal
  c5 10 00 00         61 02 00 00 609
  c9 10 00 00                  ff .end (operand)
  ca 10 00 00                  01 .set
  cb 10 00 00               03 22 .var1 ATK
  cd 10 00 00                  01 .literal
  ce 10 00 00         05 00 00 00 5
  d2 10 00 00                  ff .end (operand)
  d3 10 00 00                  ff .end (operand)
  d4 10 00 00               03 00 .var1 FLAGS
  d6 10 00 00                  01 .literal
  d7 10 00 00         62 02 00 00 610
  db 10 00 00                  ff .end (operand)
  dc 10 00 00                  01 .set
  dd 10 00 00               03 23 .var1 DEF
  df 10 00 00                  01 .literal
  e0 10 00 00         05 00 00 00 5
  e4 10 00 00                  ff .end (operand)
  e5 10 00 00                  ff .end (operand)
  e6 10 00 00               03 00 .var1 FLAGS
  e8 10 00 00                  01 .literal
  e9 10 00 00         d4 02 00 00 724
  ed 10 00 00                  ff .end (operand)
  ee 10 00 00                  01 .set
  ef 10 00 00               03 26 .var1 MAG
  f1 10 00 00                  01 .literal
  f2 10 00 00         05 00 00 00 5
  f6 10 00 00                  ff .end (operand)
  f7 10 00 00                  ff .end (operand)
  f8 10 00 00               03 00 .var1 FLAGS
  fa 10 00 00                  01 .literal
  fb 10 00 00         d5 02 00 00 725
  ff 10 00 00                  ff .end (operand)
  00 11 00 00                  01 .set
  01 11 00 00               03 27 .var1 MGR
  03 11 00 00                  01 .literal
  04 11 00 00         05 00 00 00 5
  08 11 00 00                  ff .end (operand)
  09 11 00 00                  ff .end (operand)
  0a 11 00 00               03 00 .var1 FLAGS
  0c 11 00 00                  01 .literal
  0d 11 00 00         63 02 00 00 611
  11 11 00 00                  ff .end (operand)
  12 11 00 00                  01 .set
  13 11 00 00               03 22 .var1 ATK
  15 11 00 00                  01 .literal
  16 11 00 00         06 00 00 00 6
  1a 11 00 00                  ff .end (operand)
  1b 11 00 00                  ff .end (operand)
  1c 11 00 00               03 00 .var1 FLAGS
  1e 11 00 00                  01 .literal
  1f 11 00 00         64 02 00 00 612
  23 11 00 00                  ff .end (operand)
  24 11 00 00                  01 .set
  25 11 00 00               03 23 .var1 DEF
  27 11 00 00                  01 .literal
  28 11 00 00         06 00 00 00 6
  2c 11 00 00                  ff .end (operand)
  2d 11 00 00                  ff .end (operand)
  2e 11 00 00               03 00 .var1 FLAGS
  30 11 00 00                  01 .literal
  31 11 00 00         d6 02 00 00 726
  35 11 00 00                  ff .end (operand)
  36 11 00 00                  01 .set
  37 11 00 00               03 26 .var1 MAG
  39 11 00 00                  01 .literal
  3a 11 00 00         06 00 00 00 6
  3e 11 00 00                  ff .end (operand)
  3f 11 00 00                  ff .end (operand)
  40 11 00 00               03 00 .var1 FLAGS
  42 11 00 00                  01 .literal
  43 11 00 00         d7 02 00 00 727
  47 11 00 00                  ff .end (operand)
  48 11 00 00                  01 .set
  49 11 00 00               03 27 .var1 MGR
  4b 11 00 00                  01 .literal
  4c 11 00 00         06 00 00 00 6
  50 11 00 00                  ff .end (operand)
  51 11 00 00                  ff .end (operand)
  52 11 00 00               03 00 .var1 FLAGS
  54 11 00 00                  01 .literal
  55 11 00 00         65 02 00 00 613
  59 11 00 00                  ff .end (operand)
  5a 11 00 00                  01 .set
  5b 11 00 00               03 22 .var1 ATK
  5d 11 00 00                  01 .literal
  5e 11 00 00         07 00 00 00 7
  62 11 00 00                  ff .end (operand)
  63 11 00 00                  ff .end (operand)
  64 11 00 00               03 00 .var1 FLAGS
  66 11 00 00                  01 .literal
  67 11 00 00         66 02 00 00 614
  6b 11 00 00                  ff .end (operand)
  6c 11 00 00                  01 .set
  6d 11 00 00               03 23 .var1 DEF
  6f 11 00 00                  01 .literal
  70 11 00 00         07 00 00 00 7
  74 11 00 00                  ff .end (operand)
  75 11 00 00                  ff .end (operand)
  76 11 00 00               03 00 .var1 FLAGS
  78 11 00 00                  01 .literal
  79 11 00 00         d8 02 00 00 728
  7d 11 00 00                  ff .end (operand)
  7e 11 00 00                  01 .set
  7f 11 00 00               03 26 .var1 MAG
  81 11 00 00                  01 .literal
  82 11 00 00         07 00 00 00 7
  86 11 00 00                  ff .end (operand)
  87 11 00 00                  ff .end (operand)
  88 11 00 00               03 00 .var1 FLAGS
  8a 11 00 00                  01 .literal
  8b 11 00 00         d9 02 00 00 729
  8f 11 00 00                  ff .end (operand)
  90 11 00 00                  01 .set
  91 11 00 00               03 27 .var1 MGR
  93 11 00 00                  01 .literal
  94 11 00 00         07 00 00 00 7
  98 11 00 00                  ff .end (operand)
  99 11 00 00                  ff .end (operand)
  9a 11 00 00               03 00 .var1 FLAGS
  9c 11 00 00                  01 .literal
  9d 11 00 00         67 02 00 00 615
  a1 11 00 00                  ff .end (operand)
  a2 11 00 00                  01 .set
  a3 11 00 00               03 22 .var1 ATK
  a5 11 00 00                  01 .literal
  a6 11 00 00         08 00 00 00 8
  aa 11 00 00                  ff .end (operand)
  ab 11 00 00                  ff .end (operand)
  ac 11 00 00               03 00 .var1 FLAGS
  ae 11 00 00                  01 .literal
  af 11 00 00         68 02 00 00 616
  b3 11 00 00                  ff .end (operand)
  b4 11 00 00                  01 .set
  b5 11 00 00               03 23 .var1 DEF
  b7 11 00 00                  01 .literal
  b8 11 00 00         08 00 00 00 8
  bc 11 00 00                  ff .end (operand)
  bd 11 00 00                  ff .end (operand)
  be 11 00 00               03 00 .var1 FLAGS
  c0 11 00 00                  01 .literal
  c1 11 00 00         da 02 00 00 730
  c5 11 00 00                  ff .end (operand)
  c6 11 00 00                  01 .set
  c7 11 00 00               03 26 .var1 MAG
  c9 11 00 00                  01 .literal
  ca 11 00 00         08 00 00 00 8
  ce 11 00 00                  ff .end (operand)
  cf 11 00 00                  ff .end (operand)
  d0 11 00 00               03 00 .var1 FLAGS
  d2 11 00 00                  01 .literal
  d3 11 00 00         db 02 00 00 731
  d7 11 00 00                  ff .end (operand)
  d8 11 00 00                  01 .set
  d9 11 00 00               03 27 .var1 MGR
  db 11 00 00                  01 .literal
  dc 11 00 00         08 00 00 00 8
  e0 11 00 00                  ff .end (operand)
  e1 11 00 00                  ff .end (operand)
  e2 11 00 00               03 00 .var1 FLAGS
  e4 11 00 00                  01 .literal
  e5 11 00 00         69 02 00 00 617
  e9 11 00 00                  ff .end (operand)
  ea 11 00 00                  01 .set
  eb 11 00 00               03 00 .var1 FLAGS
  ed 11 00 00                  01 .literal
  ee 11 00 00         f6 01 00 00 502
  f2 11 00 00                  ff .end (operand)
  f3 11 00 00                  ff .end (operand)
  f4 11 00 00               03 00 .var1 FLAGS
  f6 11 00 00                  01 .literal
  f7 11 00 00         6a 02 00 00 618
  fb 11 00 00                  ff .end (operand)
  fc 11 00 00                  01 .set
  fd 11 00 00               03 00 .var1 FLAGS
  ff 11 00 00                  01 .literal
  00 12 00 00         f7 01 00 00 503
  04 12 00 00                  ff .end (operand)
  05 12 00 00                  ff .end (operand)
  06 12 00 00               03 00 .var1 FLAGS
  08 12 00 00                  01 .literal
  09 12 00 00         c6 02 00 00 710
  0d 12 00 00                  ff .end (operand)
  0e 12 00 00                  01 .set
  0f 12 00 00               03 00 .var1 FLAGS
  11 12 00 00                  01 .literal
  12 12 00 00         1c 02 00 00 540
  16 12 00 00                  ff .end (operand)
  17 12 00 00                  ff .end (operand)
  18 12 00 00               03 00 .var1 FLAGS
  1a 12 00 00                  01 .literal
  1b 12 00 00         c7 02 00 00 711
  1f 12 00 00                  ff .end (operand)
  20 12 00 00                  01 .set
  21 12 00 00               03 00 .var1 FLAGS
  23 12 00 00                  01 .literal
  24 12 00 00         1d 02 00 00 541
  28 12 00 00                  ff .end (operand)
  29 12 00 00                  ff .end (operand)
  2a 12 00 00               03 00 .var1 FLAGS
  2c 12 00 00                  01 .literal
  2d 12 00 00         6b 02 00 00 619
  31 12 00 00                  ff .end (operand)
  32 12 00 00                  01 .set
  33 12 00 00               03 00 .var1 FLAGS
  35 12 00 00                  01 .literal
  36 12 00 00         03 02 00 00 515
  3a 12 00 00                  ff .end (operand)
  3b 12 00 00                  ff .end (operand)
  3c 12 00 00               03 00 .var1 FLAGS
  3e 12 00 00                  01 .literal
  3f 12 00 00         6c 02 00 00 620
  43 12 00 00                  ff .end (operand)
  44 12 00 00                  01 .set
  45 12 00 00               03 00 .var1 FLAGS
  47 12 00 00                  01 .literal
  48 12 00 00         04 02 00 00 516
  4c 12 00 00                  ff .end (operand)
  4d 12 00 00                  ff .end (operand)
  4e 12 00 00               03 00 .var1 FLAGS
  50 12 00 00                  01 .literal
  51 12 00 00         c8 02 00 00 712
  55 12 00 00                  ff .end (operand)
  56 12 00 00                  01 .set
  57 12 00 00               03 00 .var1 FLAGS
  59 12 00 00                  01 .literal
  5a 12 00 00         1e 02 00 00 542
  5e 12 00 00                  ff .end (operand)
  5f 12 00 00                  ff .end (operand)
  60 12 00 00               03 00 .var1 FLAGS
  62 12 00 00                  01 .literal
  63 12 00 00         c9 02 00 00 713
  67 12 00 00                  ff .end (operand)
  68 12 00 00                  01 .set
  69 12 00 00               03 00 .var1 FLAGS
  6b 12 00 00                  01 .literal
  6c 12 00 00         1f 02 00 00 543
  70 12 00 00                  ff .end (operand)
  71 12 00 00                  ff .end (operand)
  72 12 00 00               03 00 .var1 FLAGS
  74 12 00 00                  01 .literal
  75 12 00 00         6d 02 00 00 621
  79 12 00 00                  ff .end (operand)
  7a 12 00 00                  01 .set
  7b 12 00 00               03 00 .var1 FLAGS
  7d 12 00 00                  01 .literal
  7e 12 00 00         10 02 00 00 528
  82 12 00 00                  ff .end (operand)
  83 12 00 00                  ff .end (operand)
  84 12 00 00               03 00 .var1 FLAGS
  86 12 00 00                  01 .literal
  87 12 00 00         6e 02 00 00 622
  8b 12 00 00                  ff .end (operand)
  8c 12 00 00                  01 .set
  8d 12 00 00               03 00 .var1 FLAGS
  8f 12 00 00                  01 .literal
  90 12 00 00         11 02 00 00 529
  94 12 00 00                  ff .end (operand)
  95 12 00 00                  ff .end (operand)
  96 12 00 00               03 00 .var1 FLAGS
  98 12 00 00                  01 .literal
  99 12 00 00         ca 02 00 00 714
  9d 12 00 00                  ff .end (operand)
  9e 12 00 00                  01 .set
  9f 12 00 00               03 00 .var1 FLAGS
  a1 12 00 00                  01 .literal
  a2 12 00 00         20 02 00 00 544
  a6 12 00 00                  ff .end (operand)
  a7 12 00 00                  ff .end (operand)
  a8 12 00 00               03 00 .var1 FLAGS
  aa 12 00 00                  01 .literal
  ab 12 00 00         cb 02 00 00 715
  af 12 00 00                  ff .end (operand)
  b0 12 00 00                  01 .set
  b1 12 00 00               03 00 .var1 FLAGS
  b3 12 00 00                  01 .literal
  b4 12 00 00         21 02 00 00 545
  b8 12 00 00                  ff .end (operand)
  b9 12 00 00                  ff .end (operand)
  ba 12 00 00               03 00 .var1 FLAGS
  bc 12 00 00                  01 .literal
  bd 12 00 00         75 02 00 00 629
  c1 12 00 00                  ff .end (operand)
  c2 12 00 00                  01 .set
  c3 12 00 00                  01 .literal
  c4 12 00 00         00 00 00 00 0
  c8 12 00 00                  ff .end (operand)
  c9 12 00 00               01 17 .exec ChainEvent
  cc 12 00 00                  01 .literal
  cd 12 00 00         02 00 00 00 2
  d1 12 00 00                  ff .end (operand)
  d2 12 00 00                  ff .end (block)

.event 2
* d3 12 00 00               03 00 .var1 FLAGS
  d5 12 00 00                  01 .literal
  d6 12 00 00         75 02 00 00 629
  da 12 00 00                  ff .end (operand)
  db 12 00 00                  01 .set
  dc 12 00 00                  01 .literal
  dd 12 00 00         01 00 00 00 1
  e1 12 00 00                  ff .end (operand)
if35
 :e2 12 00 00               05 03 .if [terms=3]
  e4 12 00 00         bd 13 00 00 .else
  e8 12 00 00               03 00 .var1 FLAGS
  ea 12 00 00                  01 .literal
  eb 12 00 00         fd 03 00 00 1021
  ef 12 00 00                  ff .end (operand)
  f0 12 00 00                  ff .end (operand)
  f2 12 00 00                  04 .if-sign-nonzero
  f2 12 00 00                  01 .literal
  f3 12 00 00         00 00 00 00 0
  f7 12 00 00                  ff .end (operand)
  f8 12 00 00               03 02 .var1 CHAR
  fa 12 00 00                  01 .literal
  fb 12 00 00         01 00 00 00 1
  ff 12 00 00                  ff .end (operand)
  00 13 00 00                  ff .end (operand)
  02 13 00 00                  01 .if-sign-nonzero
  02 13 00 00               03 07 .var1 CURHP
  04 13 00 00                  01 .literal
  05 13 00 00         01 00 00 00 1
  09 13 00 00                  ff .end (operand)
  0a 13 00 00                  ff .end (operand)
  0c 13 00 00                  04 .if-sign-nonzero
  0c 13 00 00                  01 .literal
  0d 13 00 00         00 00 00 00 0
  11 13 00 00                  ff .end (operand)
  12 13 00 00               01 12 .exec Banner
  14 13 00 00                     "Poison!"

              50 6f 69 73 6f 6e 21 00 
  1c 13 00 00                  01 .literal
  1d 13 00 00         01 00 00 00 1
  21 13 00 00                  ff .end (operand)
  22 13 00 00               03 00 .var1 FLAGS
  24 13 00 00                  01 .literal
  25 13 00 00         70 02 00 00 624
  29 13 00 00                  ff .end (operand)
  2a 13 00 00                  01 .set
  2b 13 00 00                  01 .literal
  2c 13 00 00         01 00 00 00 1
  30 13 00 00                  ff .end (operand)
if36
 :31 13 00 00               05 01 .if [terms=1]
  33 13 00 00         7a 13 00 00 .else
  37 13 00 00               03 00 .var1 FLAGS
  39 13 00 00                  01 .literal
  3a 13 00 00         fd 03 00 00 1021
  3e 13 00 00                  ff .end (operand)
  3f 13 00 00                  ff .end (operand)
  41 13 00 00                  05 .if-sign-nonzero
  41 13 00 00               03 07 .var1 CURHP
  43 13 00 00                  01 .literal
  44 13 00 00         01 00 00 00 1
  48 13 00 00                  ff .end (operand)
  49 13 00 00                  ff .end (operand)
  4a 13 00 00               03 00 .var1 FLAGS
  4c 13 00 00                  01 .literal
  4d 13 00 00         fd 03 00 00 1021
  51 13 00 00                  ff .end (operand)
  52 13 00 00                  01 .set
  53 13 00 00                  01 .literal
  54 13 00 00         00 00 00 00 0
  58 13 00 00                  ff .end (operand)
  59 13 00 00               03 00 .var1 FLAGS
  5b 13 00 00                  01 .literal
  5c 13 00 00         69 02 00 00 617
  60 13 00 00                  ff .end (operand)
  61 13 00 00                  01 .set
  62 13 00 00               03 07 .var1 CURHP
  64 13 00 00                  01 .literal
  65 13 00 00         01 00 00 00 1
  69 13 00 00                  ff .end (operand)
  6a 13 00 00                  ff .end (operand)
  6b 13 00 00               03 07 .var1 CURHP
  6d 13 00 00                  01 .literal
  6e 13 00 00         01 00 00 00 1
  72 13 00 00                  ff .end (operand)
  73 13 00 00                  01 .set
  74 13 00 00                  01 .literal
  75 13 00 00         00 00 00 00 0
  79 13 00 00                  ff .end (operand)
if37
 :7a 13 00 00               05 01 .if [terms=1]
  7c 13 00 00         b4 13 00 00 .else
  80 13 00 00               03 07 .var1 CURHP
  82 13 00 00                  01 .literal
  83 13 00 00         01 00 00 00 1
  87 13 00 00                  ff .end (operand)
  88 13 00 00                  ff .end (operand)
  8a 13 00 00                  03 .if-sign-nonzero
  8a 13 00 00                  01 .literal
  8b 13 00 00         00 00 00 00 0
  8f 13 00 00                  ff .end (operand)
  90 13 00 00               03 07 .var1 CURHP
  92 13 00 00                  01 .literal
  93 13 00 00         01 00 00 00 1
  97 13 00 00                  ff .end (operand)
  98 13 00 00                  05 .decset
  99 13 00 00               03 00 .var1 FLAGS
  9b 13 00 00                  01 .literal
  9c 13 00 00         fd 03 00 00 1021
  a0 13 00 00                  ff .end (operand)
  a1 13 00 00                  ff .end (operand)
  a2 13 00 00               03 00 .var1 FLAGS
  a4 13 00 00                  01 .literal
  a5 13 00 00         69 02 00 00 617
  a9 13 00 00                  ff .end (operand)
  aa 13 00 00                  01 .set
  ab 13 00 00               03 00 .var1 FLAGS
  ad 13 00 00                  01 .literal
  ae 13 00 00         fd 03 00 00 1021
  b2 13 00 00                  ff .end (operand)
  b3 13 00 00                  ff .end (operand)
 :b4 13 00 00               01 18 .exec CallEvent
  b7 13 00 00                  01 .literal
  b8 13 00 00         10 00 00 00 16
  bc 13 00 00                  ff .end (operand)
if38
::bd 13 00 00               05 03 .if [terms=3]
  bf 13 00 00         98 14 00 00 .else
  c3 13 00 00               03 00 .var1 FLAGS
  c5 13 00 00                  01 .literal
  c6 13 00 00         fe 03 00 00 1022
  ca 13 00 00                  ff .end (operand)
  cb 13 00 00                  ff .end (operand)
  cd 13 00 00                  04 .if-sign-nonzero
  cd 13 00 00                  01 .literal
  ce 13 00 00         00 00 00 00 0
  d2 13 00 00                  ff .end (operand)
  d3 13 00 00               03 02 .var1 CHAR
  d5 13 00 00                  01 .literal
  d6 13 00 00         02 00 00 00 2
  da 13 00 00                  ff .end (operand)
  db 13 00 00                  ff .end (operand)
  dd 13 00 00                  01 .if-sign-nonzero
  dd 13 00 00               03 07 .var1 CURHP
  df 13 00 00                  01 .literal
  e0 13 00 00         02 00 00 00 2
  e4 13 00 00                  ff .end (operand)
  e5 13 00 00                  ff .end (operand)
  e7 13 00 00                  04 .if-sign-nonzero
  e7 13 00 00                  01 .literal
  e8 13 00 00         00 00 00 00 0
  ec 13 00 00                  ff .end (operand)
  ed 13 00 00               01 12 .exec Banner
  ef 13 00 00                     "Poison!"

              50 6f 69 73 6f 6e 21 00 
  f7 13 00 00                  01 .literal
  f8 13 00 00         01 00 00 00 1
  fc 13 00 00                  ff .end (operand)
  fd 13 00 00               03 00 .var1 FLAGS
  ff 13 00 00                  01 .literal
  00 14 00 00         70 02 00 00 624
  04 14 00 00                  ff .end (operand)
  05 14 00 00                  01 .set
  06 14 00 00                  01 .literal
  07 14 00 00         02 00 00 00 2
  0b 14 00 00                  ff .end (operand)
if39
 :0c 14 00 00               05 01 .if [terms=1]
  0e 14 00 00         55 14 00 00 .else
  12 14 00 00               03 00 .var1 FLAGS
  14 14 00 00                  01 .literal
  15 14 00 00         fe 03 00 00 1022
  19 14 00 00                  ff .end (operand)
  1a 14 00 00                  ff .end (operand)
  1c 14 00 00                  05 .if-sign-nonzero
  1c 14 00 00               03 07 .var1 CURHP
  1e 14 00 00                  01 .literal
  1f 14 00 00         02 00 00 00 2
  23 14 00 00                  ff .end (operand)
  24 14 00 00                  ff .end (operand)
  25 14 00 00               03 00 .var1 FLAGS
  27 14 00 00                  01 .literal
  28 14 00 00         fe 03 00 00 1022
  2c 14 00 00                  ff .end (operand)
  2d 14 00 00                  01 .set
  2e 14 00 00                  01 .literal
  2f 14 00 00         00 00 00 00 0
  33 14 00 00                  ff .end (operand)
  34 14 00 00               03 00 .var1 FLAGS
  36 14 00 00                  01 .literal
  37 14 00 00         69 02 00 00 617
  3b 14 00 00                  ff .end (operand)
  3c 14 00 00                  01 .set
  3d 14 00 00               03 07 .var1 CURHP
  3f 14 00 00                  01 .literal
  40 14 00 00         02 00 00 00 2
  44 14 00 00                  ff .end (operand)
  45 14 00 00                  ff .end (operand)
  46 14 00 00               03 07 .var1 CURHP
  48 14 00 00                  01 .literal
  49 14 00 00         02 00 00 00 2
  4d 14 00 00                  ff .end (operand)
  4e 14 00 00                  01 .set
  4f 14 00 00                  01 .literal
  50 14 00 00         00 00 00 00 0
  54 14 00 00                  ff .end (operand)
if40
 :55 14 00 00               05 01 .if [terms=1]
  57 14 00 00         8f 14 00 00 .else
  5b 14 00 00               03 07 .var1 CURHP
  5d 14 00 00                  01 .literal
  5e 14 00 00         02 00 00 00 2
  62 14 00 00                  ff .end (operand)
  63 14 00 00                  ff .end (operand)
  65 14 00 00                  03 .if-sign-nonzero
  65 14 00 00                  01 .literal
  66 14 00 00         00 00 00 00 0
  6a 14 00 00                  ff .end (operand)
  6b 14 00 00               03 07 .var1 CURHP
  6d 14 00 00                  01 .literal
  6e 14 00 00         02 00 00 00 2
  72 14 00 00                  ff .end (operand)
  73 14 00 00                  05 .decset
  74 14 00 00               03 00 .var1 FLAGS
  76 14 00 00                  01 .literal
  77 14 00 00         fe 03 00 00 1022
  7b 14 00 00                  ff .end (operand)
  7c 14 00 00                  ff .end (operand)
  7d 14 00 00               03 00 .var1 FLAGS
  7f 14 00 00                  01 .literal
  80 14 00 00         69 02 00 00 617
  84 14 00 00                  ff .end (operand)
  85 14 00 00                  01 .set
  86 14 00 00               03 00 .var1 FLAGS
  88 14 00 00                  01 .literal
  89 14 00 00         fe 03 00 00 1022
  8d 14 00 00                  ff .end (operand)
  8e 14 00 00                  ff .end (operand)
 :8f 14 00 00               01 18 .exec CallEvent
  92 14 00 00                  01 .literal
  93 14 00 00         10 00 00 00 16
  97 14 00 00                  ff .end (operand)
if41
::98 14 00 00               05 03 .if [terms=3]
  9a 14 00 00         73 15 00 00 .else
  9e 14 00 00               03 00 .var1 FLAGS
  a0 14 00 00                  01 .literal
  a1 14 00 00         ff 03 00 00 1023
  a5 14 00 00                  ff .end (operand)
  a6 14 00 00                  ff .end (operand)
  a8 14 00 00                  04 .if-sign-nonzero
  a8 14 00 00                  01 .literal
  a9 14 00 00         00 00 00 00 0
  ad 14 00 00                  ff .end (operand)
  ae 14 00 00               03 02 .var1 CHAR
  b0 14 00 00                  01 .literal
  b1 14 00 00         03 00 00 00 3
  b5 14 00 00                  ff .end (operand)
  b6 14 00 00                  ff .end (operand)
  b8 14 00 00                  01 .if-sign-nonzero
  b8 14 00 00               03 07 .var1 CURHP
  ba 14 00 00                  01 .literal
  bb 14 00 00         03 00 00 00 3
  bf 14 00 00                  ff .end (operand)
  c0 14 00 00                  ff .end (operand)
  c2 14 00 00                  04 .if-sign-nonzero
  c2 14 00 00                  01 .literal
  c3 14 00 00         00 00 00 00 0
  c7 14 00 00                  ff .end (operand)
  c8 14 00 00               01 12 .exec Banner
  ca 14 00 00                     "Poison!"

              50 6f 69 73 6f 6e 21 00 
  d2 14 00 00                  01 .literal
  d3 14 00 00         01 00 00 00 1
  d7 14 00 00                  ff .end (operand)
  d8 14 00 00               03 00 .var1 FLAGS
  da 14 00 00                  01 .literal
  db 14 00 00         70 02 00 00 624
  df 14 00 00                  ff .end (operand)
  e0 14 00 00                  01 .set
  e1 14 00 00                  01 .literal
  e2 14 00 00         03 00 00 00 3
  e6 14 00 00                  ff .end (operand)
if42
 :e7 14 00 00               05 01 .if [terms=1]
  e9 14 00 00         30 15 00 00 .else
  ed 14 00 00               03 00 .var1 FLAGS
  ef 14 00 00                  01 .literal
  f0 14 00 00         ff 03 00 00 1023
  f4 14 00 00                  ff .end (operand)
  f5 14 00 00                  ff .end (operand)
  f7 14 00 00                  05 .if-sign-nonzero
  f7 14 00 00               03 07 .var1 CURHP
  f9 14 00 00                  01 .literal
  fa 14 00 00         03 00 00 00 3
  fe 14 00 00                  ff .end (operand)
  ff 14 00 00                  ff .end (operand)
  00 15 00 00               03 00 .var1 FLAGS
  02 15 00 00                  01 .literal
  03 15 00 00         ff 03 00 00 1023
  07 15 00 00                  ff .end (operand)
  08 15 00 00                  01 .set
  09 15 00 00                  01 .literal
  0a 15 00 00         00 00 00 00 0
  0e 15 00 00                  ff .end (operand)
  0f 15 00 00               03 00 .var1 FLAGS
  11 15 00 00                  01 .literal
  12 15 00 00         69 02 00 00 617
  16 15 00 00                  ff .end (operand)
  17 15 00 00                  01 .set
  18 15 00 00               03 07 .var1 CURHP
  1a 15 00 00                  01 .literal
  1b 15 00 00         03 00 00 00 3
  1f 15 00 00                  ff .end (operand)
  20 15 00 00                  ff .end (operand)
  21 15 00 00               03 07 .var1 CURHP
  23 15 00 00                  01 .literal
  24 15 00 00         03 00 00 00 3
  28 15 00 00                  ff .end (operand)
  29 15 00 00                  01 .set
  2a 15 00 00                  01 .literal
  2b 15 00 00         00 00 00 00 0
  2f 15 00 00                  ff .end (operand)
if43
 :30 15 00 00               05 01 .if [terms=1]
  32 15 00 00         6a 15 00 00 .else
  36 15 00 00               03 07 .var1 CURHP
  38 15 00 00                  01 .literal
  39 15 00 00         03 00 00 00 3
  3d 15 00 00                  ff .end (operand)
  3e 15 00 00                  ff .end (operand)
  40 15 00 00                  03 .if-sign-nonzero
  40 15 00 00                  01 .literal
  41 15 00 00         00 00 00 00 0
  45 15 00 00                  ff .end (operand)
  46 15 00 00               03 07 .var1 CURHP
  48 15 00 00                  01 .literal
  49 15 00 00         03 00 00 00 3
  4d 15 00 00                  ff .end (operand)
  4e 15 00 00                  05 .decset
  4f 15 00 00               03 00 .var1 FLAGS
  51 15 00 00                  01 .literal
  52 15 00 00         ff 03 00 00 1023
  56 15 00 00                  ff .end (operand)
  57 15 00 00                  ff .end (operand)
  58 15 00 00               03 00 .var1 FLAGS
  5a 15 00 00                  01 .literal
  5b 15 00 00         69 02 00 00 617
  5f 15 00 00                  ff .end (operand)
  60 15 00 00                  01 .set
  61 15 00 00               03 00 .var1 FLAGS
  63 15 00 00                  01 .literal
  64 15 00 00         ff 03 00 00 1023
  68 15 00 00                  ff .end (operand)
  69 15 00 00                  ff .end (operand)
 :6a 15 00 00               01 18 .exec CallEvent
  6d 15 00 00                  01 .literal
  6e 15 00 00         10 00 00 00 16
  72 15 00 00                  ff .end (operand)
if44
::73 15 00 00               05 03 .if [terms=3]
  75 15 00 00         4e 16 00 00 .else
  79 15 00 00               03 00 .var1 FLAGS
  7b 15 00 00                  01 .literal
  7c 15 00 00         00 04 00 00 1024
  80 15 00 00                  ff .end (operand)
  81 15 00 00                  ff .end (operand)
  83 15 00 00                  04 .if-sign-nonzero
  83 15 00 00                  01 .literal
  84 15 00 00         00 00 00 00 0
  88 15 00 00                  ff .end (operand)
  89 15 00 00               03 02 .var1 CHAR
  8b 15 00 00                  01 .literal
  8c 15 00 00         04 00 00 00 4
  90 15 00 00                  ff .end (operand)
  91 15 00 00                  ff .end (operand)
  93 15 00 00                  01 .if-sign-nonzero
  93 15 00 00               03 07 .var1 CURHP
  95 15 00 00                  01 .literal
  96 15 00 00         04 00 00 00 4
  9a 15 00 00                  ff .end (operand)
  9b 15 00 00                  ff .end (operand)
  9d 15 00 00                  04 .if-sign-nonzero
  9d 15 00 00                  01 .literal
  9e 15 00 00         00 00 00 00 0
  a2 15 00 00                  ff .end (operand)
  a3 15 00 00               01 12 .exec Banner
  a5 15 00 00                     "Poison!"

              50 6f 69 73 6f 6e 21 00 
  ad 15 00 00                  01 .literal
  ae 15 00 00         01 00 00 00 1
  b2 15 00 00                  ff .end (operand)
  b3 15 00 00               03 00 .var1 FLAGS
  b5 15 00 00                  01 .literal
  b6 15 00 00         70 02 00 00 624
  ba 15 00 00                  ff .end (operand)
  bb 15 00 00                  01 .set
  bc 15 00 00                  01 .literal
  bd 15 00 00         04 00 00 00 4
  c1 15 00 00                  ff .end (operand)
if45
 :c2 15 00 00               05 01 .if [terms=1]
  c4 15 00 00         0b 16 00 00 .else
  c8 15 00 00               03 00 .var1 FLAGS
  ca 15 00 00                  01 .literal
  cb 15 00 00         00 04 00 00 1024
  cf 15 00 00                  ff .end (operand)
  d0 15 00 00                  ff .end (operand)
  d2 15 00 00                  05 .if-sign-nonzero
  d2 15 00 00               03 07 .var1 CURHP
  d4 15 00 00                  01 .literal
  d5 15 00 00         04 00 00 00 4
  d9 15 00 00                  ff .end (operand)
  da 15 00 00                  ff .end (operand)
  db 15 00 00               03 00 .var1 FLAGS
  dd 15 00 00                  01 .literal
  de 15 00 00         00 04 00 00 1024
  e2 15 00 00                  ff .end (operand)
  e3 15 00 00                  01 .set
  e4 15 00 00                  01 .literal
  e5 15 00 00         00 00 00 00 0
  e9 15 00 00                  ff .end (operand)
  ea 15 00 00               03 00 .var1 FLAGS
  ec 15 00 00                  01 .literal
  ed 15 00 00         69 02 00 00 617
  f1 15 00 00                  ff .end (operand)
  f2 15 00 00                  01 .set
  f3 15 00 00               03 07 .var1 CURHP
  f5 15 00 00                  01 .literal
  f6 15 00 00         04 00 00 00 4
  fa 15 00 00                  ff .end (operand)
  fb 15 00 00                  ff .end (operand)
  fc 15 00 00               03 07 .var1 CURHP
  fe 15 00 00                  01 .literal
  ff 15 00 00         04 00 00 00 4
  03 16 00 00                  ff .end (operand)
  04 16 00 00                  01 .set
  05 16 00 00                  01 .literal
  06 16 00 00         00 00 00 00 0
  0a 16 00 00                  ff .end (operand)
if46
 :0b 16 00 00               05 01 .if [terms=1]
  0d 16 00 00         45 16 00 00 .else
  11 16 00 00               03 07 .var1 CURHP
  13 16 00 00                  01 .literal
  14 16 00 00         04 00 00 00 4
  18 16 00 00                  ff .end (operand)
  19 16 00 00                  ff .end (operand)
  1b 16 00 00                  03 .if-sign-nonzero
  1b 16 00 00                  01 .literal
  1c 16 00 00         00 00 00 00 0
  20 16 00 00                  ff .end (operand)
  21 16 00 00               03 07 .var1 CURHP
  23 16 00 00                  01 .literal
  24 16 00 00         04 00 00 00 4
  28 16 00 00                  ff .end (operand)
  29 16 00 00                  05 .decset
  2a 16 00 00               03 00 .var1 FLAGS
  2c 16 00 00                  01 .literal
  2d 16 00 00         00 04 00 00 1024
  31 16 00 00                  ff .end (operand)
  32 16 00 00                  ff .end (operand)
  33 16 00 00               03 00 .var1 FLAGS
  35 16 00 00                  01 .literal
  36 16 00 00         69 02 00 00 617
  3a 16 00 00                  ff .end (operand)
  3b 16 00 00                  01 .set
  3c 16 00 00               03 00 .var1 FLAGS
  3e 16 00 00                  01 .literal
  3f 16 00 00         00 04 00 00 1024
  43 16 00 00                  ff .end (operand)
  44 16 00 00                  ff .end (operand)
 :45 16 00 00               01 18 .exec CallEvent
  48 16 00 00                  01 .literal
  49 16 00 00         10 00 00 00 16
  4d 16 00 00                  ff .end (operand)
if47
::4e 16 00 00               05 03 .if [terms=3]
  50 16 00 00         29 17 00 00 .else
  54 16 00 00               03 00 .var1 FLAGS
  56 16 00 00                  01 .literal
  57 16 00 00         01 04 00 00 1025
  5b 16 00 00                  ff .end (operand)
  5c 16 00 00                  ff .end (operand)
  5e 16 00 00                  04 .if-sign-nonzero
  5e 16 00 00                  01 .literal
  5f 16 00 00         00 00 00 00 0
  63 16 00 00                  ff .end (operand)
  64 16 00 00               03 02 .var1 CHAR
  66 16 00 00                  01 .literal
  67 16 00 00         05 00 00 00 5
  6b 16 00 00                  ff .end (operand)
  6c 16 00 00                  ff .end (operand)
  6e 16 00 00                  01 .if-sign-nonzero
  6e 16 00 00               03 07 .var1 CURHP
  70 16 00 00                  01 .literal
  71 16 00 00         05 00 00 00 5
  75 16 00 00                  ff .end (operand)
  76 16 00 00                  ff .end (operand)
  78 16 00 00                  04 .if-sign-nonzero
  78 16 00 00                  01 .literal
  79 16 00 00         00 00 00 00 0
  7d 16 00 00                  ff .end (operand)
  7e 16 00 00               01 12 .exec Banner
  80 16 00 00                     "Poison!"

              50 6f 69 73 6f 6e 21 00 
  88 16 00 00                  01 .literal
  89 16 00 00         01 00 00 00 1
  8d 16 00 00                  ff .end (operand)
  8e 16 00 00               03 00 .var1 FLAGS
  90 16 00 00                  01 .literal
  91 16 00 00         70 02 00 00 624
  95 16 00 00                  ff .end (operand)
  96 16 00 00                  01 .set
  97 16 00 00                  01 .literal
  98 16 00 00         05 00 00 00 5
  9c 16 00 00                  ff .end (operand)
if48
 :9d 16 00 00               05 01 .if [terms=1]
  9f 16 00 00         e6 16 00 00 .else
  a3 16 00 00               03 00 .var1 FLAGS
  a5 16 00 00                  01 .literal
  a6 16 00 00         01 04 00 00 1025
  aa 16 00 00                  ff .end (operand)
  ab 16 00 00                  ff .end (operand)
  ad 16 00 00                  05 .if-sign-nonzero
  ad 16 00 00               03 07 .var1 CURHP
  af 16 00 00                  01 .literal
  b0 16 00 00         05 00 00 00 5
  b4 16 00 00                  ff .end (operand)
  b5 16 00 00                  ff .end (operand)
  b6 16 00 00               03 00 .var1 FLAGS
  b8 16 00 00                  01 .literal
  b9 16 00 00         01 04 00 00 1025
  bd 16 00 00                  ff .end (operand)
  be 16 00 00                  01 .set
  bf 16 00 00                  01 .literal
  c0 16 00 00         00 00 00 00 0
  c4 16 00 00                  ff .end (operand)
  c5 16 00 00               03 00 .var1 FLAGS
  c7 16 00 00                  01 .literal
  c8 16 00 00         69 02 00 00 617
  cc 16 00 00                  ff .end (operand)
  cd 16 00 00                  01 .set
  ce 16 00 00               03 07 .var1 CURHP
  d0 16 00 00                  01 .literal
  d1 16 00 00         05 00 00 00 5
  d5 16 00 00                  ff .end (operand)
  d6 16 00 00                  ff .end (operand)
  d7 16 00 00               03 07 .var1 CURHP
  d9 16 00 00                  01 .literal
  da 16 00 00         05 00 00 00 5
  de 16 00 00                  ff .end (operand)
  df 16 00 00                  01 .set
  e0 16 00 00                  01 .literal
  e1 16 00 00         00 00 00 00 0
  e5 16 00 00                  ff .end (operand)
if49
 :e6 16 00 00               05 01 .if [terms=1]
  e8 16 00 00         20 17 00 00 .else
  ec 16 00 00               03 07 .var1 CURHP
  ee 16 00 00                  01 .literal
  ef 16 00 00         05 00 00 00 5
  f3 16 00 00                  ff .end (operand)
  f4 16 00 00                  ff .end (operand)
  f6 16 00 00                  03 .if-sign-nonzero
  f6 16 00 00                  01 .literal
  f7 16 00 00         00 00 00 00 0
  fb 16 00 00                  ff .end (operand)
  fc 16 00 00               03 07 .var1 CURHP
  fe 16 00 00                  01 .literal
  ff 16 00 00         05 00 00 00 5
  03 17 00 00                  ff .end (operand)
  04 17 00 00                  05 .decset
  05 17 00 00               03 00 .var1 FLAGS
  07 17 00 00                  01 .literal
  08 17 00 00         01 04 00 00 1025
  0c 17 00 00                  ff .end (operand)
  0d 17 00 00                  ff .end (operand)
  0e 17 00 00               03 00 .var1 FLAGS
  10 17 00 00                  01 .literal
  11 17 00 00         69 02 00 00 617
  15 17 00 00                  ff .end (operand)
  16 17 00 00                  01 .set
  17 17 00 00               03 00 .var1 FLAGS
  19 17 00 00                  01 .literal
  1a 17 00 00         01 04 00 00 1025
  1e 17 00 00                  ff .end (operand)
  1f 17 00 00                  ff .end (operand)
 :20 17 00 00               01 18 .exec CallEvent
  23 17 00 00                  01 .literal
  24 17 00 00         10 00 00 00 16
  28 17 00 00                  ff .end (operand)
if50
::29 17 00 00               05 03 .if [terms=3]
  2b 17 00 00         04 18 00 00 .else
  2f 17 00 00               03 00 .var1 FLAGS
  31 17 00 00                  01 .literal
  32 17 00 00         02 04 00 00 1026
  36 17 00 00                  ff .end (operand)
  37 17 00 00                  ff .end (operand)
  39 17 00 00                  04 .if-sign-nonzero
  39 17 00 00                  01 .literal
  3a 17 00 00         00 00 00 00 0
  3e 17 00 00                  ff .end (operand)
  3f 17 00 00               03 02 .var1 CHAR
  41 17 00 00                  01 .literal
  42 17 00 00         06 00 00 00 6
  46 17 00 00                  ff .end (operand)
  47 17 00 00                  ff .end (operand)
  49 17 00 00                  01 .if-sign-nonzero
  49 17 00 00               03 07 .var1 CURHP
  4b 17 00 00                  01 .literal
  4c 17 00 00         06 00 00 00 6
  50 17 00 00                  ff .end (operand)
  51 17 00 00                  ff .end (operand)
  53 17 00 00                  04 .if-sign-nonzero
  53 17 00 00                  01 .literal
  54 17 00 00         00 00 00 00 0
  58 17 00 00                  ff .end (operand)
  59 17 00 00               01 12 .exec Banner
  5b 17 00 00                     "Poison!"

              50 6f 69 73 6f 6e 21 00 
  63 17 00 00                  01 .literal
  64 17 00 00         01 00 00 00 1
  68 17 00 00                  ff .end (operand)
  69 17 00 00               03 00 .var1 FLAGS
  6b 17 00 00                  01 .literal
  6c 17 00 00         70 02 00 00 624
  70 17 00 00                  ff .end (operand)
  71 17 00 00                  01 .set
  72 17 00 00                  01 .literal
  73 17 00 00         06 00 00 00 6
  77 17 00 00                  ff .end (operand)
if51
 :78 17 00 00               05 01 .if [terms=1]
  7a 17 00 00         c1 17 00 00 .else
  7e 17 00 00               03 00 .var1 FLAGS
  80 17 00 00                  01 .literal
  81 17 00 00         02 04 00 00 1026
  85 17 00 00                  ff .end (operand)
  86 17 00 00                  ff .end (operand)
  88 17 00 00                  05 .if-sign-nonzero
  88 17 00 00               03 07 .var1 CURHP
  8a 17 00 00                  01 .literal
  8b 17 00 00         06 00 00 00 6
  8f 17 00 00                  ff .end (operand)
  90 17 00 00                  ff .end (operand)
  91 17 00 00               03 00 .var1 FLAGS
  93 17 00 00                  01 .literal
  94 17 00 00         02 04 00 00 1026
  98 17 00 00                  ff .end (operand)
  99 17 00 00                  01 .set
  9a 17 00 00                  01 .literal
  9b 17 00 00         00 00 00 00 0
  9f 17 00 00                  ff .end (operand)
  a0 17 00 00               03 00 .var1 FLAGS
  a2 17 00 00                  01 .literal
  a3 17 00 00         69 02 00 00 617
  a7 17 00 00                  ff .end (operand)
  a8 17 00 00                  01 .set
  a9 17 00 00               03 07 .var1 CURHP
  ab 17 00 00                  01 .literal
  ac 17 00 00         06 00 00 00 6
  b0 17 00 00                  ff .end (operand)
  b1 17 00 00                  ff .end (operand)
  b2 17 00 00               03 07 .var1 CURHP
  b4 17 00 00                  01 .literal
  b5 17 00 00         06 00 00 00 6
  b9 17 00 00                  ff .end (operand)
  ba 17 00 00                  01 .set
  bb 17 00 00                  01 .literal
  bc 17 00 00         00 00 00 00 0
  c0 17 00 00                  ff .end (operand)
if52
 :c1 17 00 00               05 01 .if [terms=1]
  c3 17 00 00         fb 17 00 00 .else
  c7 17 00 00               03 07 .var1 CURHP
  c9 17 00 00                  01 .literal
  ca 17 00 00         06 00 00 00 6
  ce 17 00 00                  ff .end (operand)
  cf 17 00 00                  ff .end (operand)
  d1 17 00 00                  03 .if-sign-nonzero
  d1 17 00 00                  01 .literal
  d2 17 00 00         00 00 00 00 0
  d6 17 00 00                  ff .end (operand)
  d7 17 00 00               03 07 .var1 CURHP
  d9 17 00 00                  01 .literal
  da 17 00 00         06 00 00 00 6
  de 17 00 00                  ff .end (operand)
  df 17 00 00                  05 .decset
  e0 17 00 00               03 00 .var1 FLAGS
  e2 17 00 00                  01 .literal
  e3 17 00 00         02 04 00 00 1026
  e7 17 00 00                  ff .end (operand)
  e8 17 00 00                  ff .end (operand)
  e9 17 00 00               03 00 .var1 FLAGS
  eb 17 00 00                  01 .literal
  ec 17 00 00         69 02 00 00 617
  f0 17 00 00                  ff .end (operand)
  f1 17 00 00                  01 .set
  f2 17 00 00               03 00 .var1 FLAGS
  f4 17 00 00                  01 .literal
  f5 17 00 00         02 04 00 00 1026
  f9 17 00 00                  ff .end (operand)
  fa 17 00 00                  ff .end (operand)
 :fb 17 00 00               01 18 .exec CallEvent
  fe 17 00 00                  01 .literal
  ff 17 00 00         10 00 00 00 16
  03 18 00 00                  ff .end (operand)
if53
::04 18 00 00               05 03 .if [terms=3]
  06 18 00 00         df 18 00 00 .else
  0a 18 00 00               03 00 .var1 FLAGS
  0c 18 00 00                  01 .literal
  0d 18 00 00         03 04 00 00 1027
  11 18 00 00                  ff .end (operand)
  12 18 00 00                  ff .end (operand)
  14 18 00 00                  04 .if-sign-nonzero
  14 18 00 00                  01 .literal
  15 18 00 00         00 00 00 00 0
  19 18 00 00                  ff .end (operand)
  1a 18 00 00               03 02 .var1 CHAR
  1c 18 00 00                  01 .literal
  1d 18 00 00         07 00 00 00 7
  21 18 00 00                  ff .end (operand)
  22 18 00 00                  ff .end (operand)
  24 18 00 00                  01 .if-sign-nonzero
  24 18 00 00               03 07 .var1 CURHP
  26 18 00 00                  01 .literal
  27 18 00 00         07 00 00 00 7
  2b 18 00 00                  ff .end (operand)
  2c 18 00 00                  ff .end (operand)
  2e 18 00 00                  04 .if-sign-nonzero
  2e 18 00 00                  01 .literal
  2f 18 00 00         00 00 00 00 0
  33 18 00 00                  ff .end (operand)
  34 18 00 00               01 12 .exec Banner
  36 18 00 00                     "Poison!"

              50 6f 69 73 6f 6e 21 00 
  3e 18 00 00                  01 .literal
  3f 18 00 00         01 00 00 00 1
  43 18 00 00                  ff .end (operand)
  44 18 00 00               03 00 .var1 FLAGS
  46 18 00 00                  01 .literal
  47 18 00 00         70 02 00 00 624
  4b 18 00 00                  ff .end (operand)
  4c 18 00 00                  01 .set
  4d 18 00 00                  01 .literal
  4e 18 00 00         07 00 00 00 7
  52 18 00 00                  ff .end (operand)
if54
 :53 18 00 00               05 01 .if [terms=1]
  55 18 00 00         9c 18 00 00 .else
  59 18 00 00               03 00 .var1 FLAGS
  5b 18 00 00                  01 .literal
  5c 18 00 00         03 04 00 00 1027
  60 18 00 00                  ff .end (operand)
  61 18 00 00                  ff .end (operand)
  63 18 00 00                  05 .if-sign-nonzero
  63 18 00 00               03 07 .var1 CURHP
  65 18 00 00                  01 .literal
  66 18 00 00         07 00 00 00 7
  6a 18 00 00                  ff .end (operand)
  6b 18 00 00                  ff .end (operand)
  6c 18 00 00               03 00 .var1 FLAGS
  6e 18 00 00                  01 .literal
  6f 18 00 00         03 04 00 00 1027
  73 18 00 00                  ff .end (operand)
  74 18 00 00                  01 .set
  75 18 00 00                  01 .literal
  76 18 00 00         00 00 00 00 0
  7a 18 00 00                  ff .end (operand)
  7b 18 00 00               03 00 .var1 FLAGS
  7d 18 00 00                  01 .literal
  7e 18 00 00         69 02 00 00 617
  82 18 00 00                  ff .end (operand)
  83 18 00 00                  01 .set
  84 18 00 00               03 07 .var1 CURHP
  86 18 00 00                  01 .literal
  87 18 00 00         07 00 00 00 7
  8b 18 00 00                  ff .end (operand)
  8c 18 00 00                  ff .end (operand)
  8d 18 00 00               03 07 .var1 CURHP
  8f 18 00 00                  01 .literal
  90 18 00 00         07 00 00 00 7
  94 18 00 00                  ff .end (operand)
  95 18 00 00                  01 .set
  96 18 00 00                  01 .literal
  97 18 00 00         00 00 00 00 0
  9b 18 00 00                  ff .end (operand)
if55
 :9c 18 00 00               05 01 .if [terms=1]
  9e 18 00 00         d6 18 00 00 .else
  a2 18 00 00               03 07 .var1 CURHP
  a4 18 00 00                  01 .literal
  a5 18 00 00         07 00 00 00 7
  a9 18 00 00                  ff .end (operand)
  aa 18 00 00                  ff .end (operand)
  ac 18 00 00                  03 .if-sign-nonzero
  ac 18 00 00                  01 .literal
  ad 18 00 00         00 00 00 00 0
  b1 18 00 00                  ff .end (operand)
  b2 18 00 00               03 07 .var1 CURHP
  b4 18 00 00                  01 .literal
  b5 18 00 00         07 00 00 00 7
  b9 18 00 00                  ff .end (operand)
  ba 18 00 00                  05 .decset
  bb 18 00 00               03 00 .var1 FLAGS
  bd 18 00 00                  01 .literal
  be 18 00 00         03 04 00 00 1027
  c2 18 00 00                  ff .end (operand)
  c3 18 00 00                  ff .end (operand)
  c4 18 00 00               03 00 .var1 FLAGS
  c6 18 00 00                  01 .literal
  c7 18 00 00         69 02 00 00 617
  cb 18 00 00                  ff .end (operand)
  cc 18 00 00                  01 .set
  cd 18 00 00               03 00 .var1 FLAGS
  cf 18 00 00                  01 .literal
  d0 18 00 00         03 04 00 00 1027
  d4 18 00 00                  ff .end (operand)
  d5 18 00 00                  ff .end (operand)
 :d6 18 00 00               01 18 .exec CallEvent
  d9 18 00 00                  01 .literal
  da 18 00 00         10 00 00 00 16
  de 18 00 00                  ff .end (operand)
if56
::df 18 00 00               05 03 .if [terms=3]
  e1 18 00 00         ba 19 00 00 .else
  e5 18 00 00               03 00 .var1 FLAGS
  e7 18 00 00                  01 .literal
  e8 18 00 00         04 04 00 00 1028
  ec 18 00 00                  ff .end (operand)
  ed 18 00 00                  ff .end (operand)
  ef 18 00 00                  04 .if-sign-nonzero
  ef 18 00 00                  01 .literal
  f0 18 00 00         00 00 00 00 0
  f4 18 00 00                  ff .end (operand)
  f5 18 00 00               03 02 .var1 CHAR
  f7 18 00 00                  01 .literal
  f8 18 00 00         08 00 00 00 8
  fc 18 00 00                  ff .end (operand)
  fd 18 00 00                  ff .end (operand)
  ff 18 00 00                  01 .if-sign-nonzero
  ff 18 00 00               03 07 .var1 CURHP
  01 19 00 00                  01 .literal
  02 19 00 00         08 00 00 00 8
  06 19 00 00                  ff .end (operand)
  07 19 00 00                  ff .end (operand)
  09 19 00 00                  04 .if-sign-nonzero
  09 19 00 00                  01 .literal
  0a 19 00 00         00 00 00 00 0
  0e 19 00 00                  ff .end (operand)
  0f 19 00 00               01 12 .exec Banner
  11 19 00 00                     "Poison!"

              50 6f 69 73 6f 6e 21 00 
  19 19 00 00                  01 .literal
  1a 19 00 00         01 00 00 00 1
  1e 19 00 00                  ff .end (operand)
  1f 19 00 00               03 00 .var1 FLAGS
  21 19 00 00                  01 .literal
  22 19 00 00         70 02 00 00 624
  26 19 00 00                  ff .end (operand)
  27 19 00 00                  01 .set
  28 19 00 00                  01 .literal
  29 19 00 00         08 00 00 00 8
  2d 19 00 00                  ff .end (operand)
if57
 :2e 19 00 00               05 01 .if [terms=1]
  30 19 00 00         77 19 00 00 .else
  34 19 00 00               03 00 .var1 FLAGS
  36 19 00 00                  01 .literal
  37 19 00 00         04 04 00 00 1028
  3b 19 00 00                  ff .end (operand)
  3c 19 00 00                  ff .end (operand)
  3e 19 00 00                  05 .if-sign-nonzero
  3e 19 00 00               03 07 .var1 CURHP
  40 19 00 00                  01 .literal
  41 19 00 00         08 00 00 00 8
  45 19 00 00                  ff .end (operand)
  46 19 00 00                  ff .end (operand)
  47 19 00 00               03 00 .var1 FLAGS
  49 19 00 00                  01 .literal
  4a 19 00 00         04 04 00 00 1028
  4e 19 00 00                  ff .end (operand)
  4f 19 00 00                  01 .set
  50 19 00 00                  01 .literal
  51 19 00 00         00 00 00 00 0
  55 19 00 00                  ff .end (operand)
  56 19 00 00               03 00 .var1 FLAGS
  58 19 00 00                  01 .literal
  59 19 00 00         69 02 00 00 617
  5d 19 00 00                  ff .end (operand)
  5e 19 00 00                  01 .set
  5f 19 00 00               03 07 .var1 CURHP
  61 19 00 00                  01 .literal
  62 19 00 00         08 00 00 00 8
  66 19 00 00                  ff .end (operand)
  67 19 00 00                  ff .end (operand)
  68 19 00 00               03 07 .var1 CURHP
  6a 19 00 00                  01 .literal
  6b 19 00 00         08 00 00 00 8
  6f 19 00 00                  ff .end (operand)
  70 19 00 00                  01 .set
  71 19 00 00                  01 .literal
  72 19 00 00         00 00 00 00 0
  76 19 00 00                  ff .end (operand)
if58
 :77 19 00 00               05 01 .if [terms=1]
  79 19 00 00         b1 19 00 00 .else
  7d 19 00 00               03 07 .var1 CURHP
  7f 19 00 00                  01 .literal
  80 19 00 00         08 00 00 00 8
  84 19 00 00                  ff .end (operand)
  85 19 00 00                  ff .end (operand)
  87 19 00 00                  03 .if-sign-nonzero
  87 19 00 00                  01 .literal
  88 19 00 00         00 00 00 00 0
  8c 19 00 00                  ff .end (operand)
  8d 19 00 00               03 07 .var1 CURHP
  8f 19 00 00                  01 .literal
  90 19 00 00         08 00 00 00 8
  94 19 00 00                  ff .end (operand)
  95 19 00 00                  05 .decset
  96 19 00 00               03 00 .var1 FLAGS
  98 19 00 00                  01 .literal
  99 19 00 00         04 04 00 00 1028
  9d 19 00 00                  ff .end (operand)
  9e 19 00 00                  ff .end (operand)
  9f 19 00 00               03 00 .var1 FLAGS
  a1 19 00 00                  01 .literal
  a2 19 00 00         69 02 00 00 617
  a6 19 00 00                  ff .end (operand)
  a7 19 00 00                  01 .set
  a8 19 00 00               03 00 .var1 FLAGS
  aa 19 00 00                  01 .literal
  ab 19 00 00         04 04 00 00 1028
  af 19 00 00                  ff .end (operand)
  b0 19 00 00                  ff .end (operand)
 :b1 19 00 00               01 18 .exec CallEvent
  b4 19 00 00                  01 .literal
  b5 19 00 00         10 00 00 00 16
  b9 19 00 00                  ff .end (operand)
if59
::ba 19 00 00               05 02 .if [terms=2]
  bc 19 00 00         e9 19 00 00 .else
  c0 19 00 00               03 07 .var1 CURHP
  c2 19 00 00                  01 .literal
  c3 19 00 00         01 00 00 00 1
  c7 19 00 00                  ff .end (operand)
  c8 19 00 00                  ff .end (operand)
  ca 19 00 00                  02 .if-sign-nonzero
  ca 19 00 00                  01 .literal
  cb 19 00 00         00 00 00 00 0
  cf 19 00 00                  ff .end (operand)
  d0 19 00 00               03 02 .var1 CHAR
  d2 19 00 00                  01 .literal
  d3 19 00 00         01 00 00 00 1
  d7 19 00 00                  ff .end (operand)
  d8 19 00 00                  ff .end (operand)
  da 19 00 00                  01 .if-sign-nonzero
  da 19 00 00               03 00 .var1 FLAGS
  dc 19 00 00                  01 .literal
  dd 19 00 00         be 02 00 00 702
  e1 19 00 00                  ff .end (operand)
  e2 19 00 00                  04 .incset
  e3 19 00 00                  01 .literal
  e4 19 00 00         01 00 00 00 1
  e8 19 00 00                  ff .end (operand)
if60
::e9 19 00 00               05 02 .if [terms=2]
  eb 19 00 00         18 1a 00 00 .else
  ef 19 00 00               03 07 .var1 CURHP
  f1 19 00 00                  01 .literal
  f2 19 00 00         02 00 00 00 2
  f6 19 00 00                  ff .end (operand)
  f7 19 00 00                  ff .end (operand)
  f9 19 00 00                  02 .if-sign-nonzero
  f9 19 00 00                  01 .literal
  fa 19 00 00         00 00 00 00 0
  fe 19 00 00                  ff .end (operand)
  ff 19 00 00               03 02 .var1 CHAR
  01 1a 00 00                  01 .literal
  02 1a 00 00         02 00 00 00 2
  06 1a 00 00                  ff .end (operand)
  07 1a 00 00                  ff .end (operand)
  09 1a 00 00                  01 .if-sign-nonzero
  09 1a 00 00               03 00 .var1 FLAGS
  0b 1a 00 00                  01 .literal
  0c 1a 00 00         be 02 00 00 702
  10 1a 00 00                  ff .end (operand)
  11 1a 00 00                  04 .incset
  12 1a 00 00                  01 .literal
  13 1a 00 00         01 00 00 00 1
  17 1a 00 00                  ff .end (operand)
if61
::18 1a 00 00               05 02 .if [terms=2]
  1a 1a 00 00         47 1a 00 00 .else
  1e 1a 00 00               03 07 .var1 CURHP
  20 1a 00 00                  01 .literal
  21 1a 00 00         03 00 00 00 3
  25 1a 00 00                  ff .end (operand)
  26 1a 00 00                  ff .end (operand)
  28 1a 00 00                  02 .if-sign-nonzero
  28 1a 00 00                  01 .literal
  29 1a 00 00         00 00 00 00 0
  2d 1a 00 00                  ff .end (operand)
  2e 1a 00 00               03 02 .var1 CHAR
  30 1a 00 00                  01 .literal
  31 1a 00 00         03 00 00 00 3
  35 1a 00 00                  ff .end (operand)
  36 1a 00 00                  ff .end (operand)
  38 1a 00 00                  01 .if-sign-nonzero
  38 1a 00 00               03 00 .var1 FLAGS
  3a 1a 00 00                  01 .literal
  3b 1a 00 00         be 02 00 00 702
  3f 1a 00 00                  ff .end (operand)
  40 1a 00 00                  04 .incset
  41 1a 00 00                  01 .literal
  42 1a 00 00         01 00 00 00 1
  46 1a 00 00                  ff .end (operand)
if62
::47 1a 00 00               05 02 .if [terms=2]
  49 1a 00 00         76 1a 00 00 .else
  4d 1a 00 00               03 07 .var1 CURHP
  4f 1a 00 00                  01 .literal
  50 1a 00 00         04 00 00 00 4
  54 1a 00 00                  ff .end (operand)
  55 1a 00 00                  ff .end (operand)
  57 1a 00 00                  02 .if-sign-nonzero
  57 1a 00 00                  01 .literal
  58 1a 00 00         00 00 00 00 0
  5c 1a 00 00                  ff .end (operand)
  5d 1a 00 00               03 02 .var1 CHAR
  5f 1a 00 00                  01 .literal
  60 1a 00 00         04 00 00 00 4
  64 1a 00 00                  ff .end (operand)
  65 1a 00 00                  ff .end (operand)
  67 1a 00 00                  01 .if-sign-nonzero
  67 1a 00 00               03 00 .var1 FLAGS
  69 1a 00 00                  01 .literal
  6a 1a 00 00         be 02 00 00 702
  6e 1a 00 00                  ff .end (operand)
  6f 1a 00 00                  04 .incset
  70 1a 00 00                  01 .literal
  71 1a 00 00         01 00 00 00 1
  75 1a 00 00                  ff .end (operand)
if63
::76 1a 00 00               05 02 .if [terms=2]
  78 1a 00 00         a5 1a 00 00 .else
  7c 1a 00 00               03 07 .var1 CURHP
  7e 1a 00 00                  01 .literal
  7f 1a 00 00         05 00 00 00 5
  83 1a 00 00                  ff .end (operand)
  84 1a 00 00                  ff .end (operand)
  86 1a 00 00                  02 .if-sign-nonzero
  86 1a 00 00                  01 .literal
  87 1a 00 00         00 00 00 00 0
  8b 1a 00 00                  ff .end (operand)
  8c 1a 00 00               03 02 .var1 CHAR
  8e 1a 00 00                  01 .literal
  8f 1a 00 00         05 00 00 00 5
  93 1a 00 00                  ff .end (operand)
  94 1a 00 00                  ff .end (operand)
  96 1a 00 00                  01 .if-sign-nonzero
  96 1a 00 00               03 00 .var1 FLAGS
  98 1a 00 00                  01 .literal
  99 1a 00 00         be 02 00 00 702
  9d 1a 00 00                  ff .end (operand)
  9e 1a 00 00                  04 .incset
  9f 1a 00 00                  01 .literal
  a0 1a 00 00         01 00 00 00 1
  a4 1a 00 00                  ff .end (operand)
if64
::a5 1a 00 00               05 02 .if [terms=2]
  a7 1a 00 00         d4 1a 00 00 .else
  ab 1a 00 00               03 07 .var1 CURHP
  ad 1a 00 00                  01 .literal
  ae 1a 00 00         06 00 00 00 6
  b2 1a 00 00                  ff .end (operand)
  b3 1a 00 00                  ff .end (operand)
  b5 1a 00 00                  02 .if-sign-nonzero
  b5 1a 00 00                  01 .literal
  b6 1a 00 00         00 00 00 00 0
  ba 1a 00 00                  ff .end (operand)
  bb 1a 00 00               03 02 .var1 CHAR
  bd 1a 00 00                  01 .literal
  be 1a 00 00         06 00 00 00 6
  c2 1a 00 00                  ff .end (operand)
  c3 1a 00 00                  ff .end (operand)
  c5 1a 00 00                  01 .if-sign-nonzero
  c5 1a 00 00               03 00 .var1 FLAGS
  c7 1a 00 00                  01 .literal
  c8 1a 00 00         be 02 00 00 702
  cc 1a 00 00                  ff .end (operand)
  cd 1a 00 00                  04 .incset
  ce 1a 00 00                  01 .literal
  cf 1a 00 00         01 00 00 00 1
  d3 1a 00 00                  ff .end (operand)
if65
::d4 1a 00 00               05 02 .if [terms=2]
  d6 1a 00 00         03 1b 00 00 .else
  da 1a 00 00               03 07 .var1 CURHP
  dc 1a 00 00                  01 .literal
  dd 1a 00 00         07 00 00 00 7
  e1 1a 00 00                  ff .end (operand)
  e2 1a 00 00                  ff .end (operand)
  e4 1a 00 00                  02 .if-sign-nonzero
  e4 1a 00 00                  01 .literal
  e5 1a 00 00         00 00 00 00 0
  e9 1a 00 00                  ff .end (operand)
  ea 1a 00 00               03 02 .var1 CHAR
  ec 1a 00 00                  01 .literal
  ed 1a 00 00         07 00 00 00 7
  f1 1a 00 00                  ff .end (operand)
  f2 1a 00 00                  ff .end (operand)
  f4 1a 00 00                  01 .if-sign-nonzero
  f4 1a 00 00               03 00 .var1 FLAGS
  f6 1a 00 00                  01 .literal
  f7 1a 00 00         be 02 00 00 702
  fb 1a 00 00                  ff .end (operand)
  fc 1a 00 00                  04 .incset
  fd 1a 00 00                  01 .literal
  fe 1a 00 00         01 00 00 00 1
  02 1b 00 00                  ff .end (operand)
if66
::03 1b 00 00               05 02 .if [terms=2]
  05 1b 00 00         32 1b 00 00 .else
  09 1b 00 00               03 07 .var1 CURHP
  0b 1b 00 00                  01 .literal
  0c 1b 00 00         08 00 00 00 8
  10 1b 00 00                  ff .end (operand)
  11 1b 00 00                  ff .end (operand)
  13 1b 00 00                  02 .if-sign-nonzero
  13 1b 00 00                  01 .literal
  14 1b 00 00         00 00 00 00 0
  18 1b 00 00                  ff .end (operand)
  19 1b 00 00               03 02 .var1 CHAR
  1b 1b 00 00                  01 .literal
  1c 1b 00 00         08 00 00 00 8
  20 1b 00 00                  ff .end (operand)
  21 1b 00 00                  ff .end (operand)
  23 1b 00 00                  01 .if-sign-nonzero
  23 1b 00 00               03 00 .var1 FLAGS
  25 1b 00 00                  01 .literal
  26 1b 00 00         be 02 00 00 702
  2a 1b 00 00                  ff .end (operand)
  2b 1b 00 00                  04 .incset
  2c 1b 00 00                  01 .literal
  2d 1b 00 00         01 00 00 00 1
  31 1b 00 00                  ff .end (operand)
if67
::32 1b 00 00               05 01 .if [terms=1]
  34 1b 00 00         5b 1b 00 00 .else
  38 1b 00 00               03 00 .var1 FLAGS
  3a 1b 00 00                  01 .literal
  3b 1b 00 00         be 02 00 00 702
  3f 1b 00 00                  ff .end (operand)
  40 1b 00 00                  ff .end (operand)
  42 1b 00 00                  02 .if-sign-nonzero
  42 1b 00 00               02 1a .var0 NUMCHARS
  44 1b 00 00                  ff .end (operand)
  45 1b 00 00               01 12 .exec Banner
  47 1b 00 00                     "You lose..."

              59 6f 75 20 6c 6f 73 65 
              2e 2e 2e 00 
  53 1b 00 00                  01 .literal
  54 1b 00 00         03 00 00 00 3
  58 1b 00 00                  ff .end (operand)
  59 1b 00 00               01 3d .exec Exit
::5b 1b 00 00               03 00 .var1 FLAGS
  5d 1b 00 00                  01 .literal
  5e 1b 00 00         be 02 00 00 702
  62 1b 00 00                  ff .end (operand)
  63 1b 00 00                  01 .set
  64 1b 00 00                  01 .literal
  65 1b 00 00         00 00 00 00 0
  69 1b 00 00                  ff .end (operand)
  6a 1b 00 00               03 00 .var1 FLAGS
  6c 1b 00 00                  01 .literal
  6d 1b 00 00         69 02 00 00 617
  71 1b 00 00                  ff .end (operand)
  72 1b 00 00                  01 .set
  73 1b 00 00               03 00 .var1 FLAGS
  75 1b 00 00                  01 .literal
  76 1b 00 00         f6 01 00 00 502
  7a 1b 00 00                  ff .end (operand)
  7b 1b 00 00                  ff .end (operand)
  7c 1b 00 00               03 00 .var1 FLAGS
  7e 1b 00 00                  01 .literal
  7f 1b 00 00         6f 02 00 00 623
  83 1b 00 00                  ff .end (operand)
  84 1b 00 00                  01 .set
  85 1b 00 00               04 00 .var2 RANDOM
  87 1b 00 00                  01 .literal
  88 1b 00 00         01 00 00 00 1
  8c 1b 00 00                  ff .end (operand)
  8d 1b 00 00                  01 .literal
  8e 1b 00 00         04 00 00 00 4
  92 1b 00 00                  ff .end (operand)
  93 1b 00 00                  ff .end (operand)
  94 1b 00 00               03 00 .var1 FLAGS
  96 1b 00 00                  01 .literal
  97 1b 00 00         c1 02 00 00 705
  9b 1b 00 00                  ff .end (operand)
  9c 1b 00 00                  01 .set
  9d 1b 00 00                  01 .literal
  9e 1b 00 00         09 00 00 00 9
  a2 1b 00 00                  ff .end (operand)
  a3 1b 00 00               03 00 .var1 FLAGS
  a5 1b 00 00                  01 .literal
  a6 1b 00 00         c2 02 00 00 706
  aa 1b 00 00                  ff .end (operand)
  ab 1b 00 00                  01 .set
  ac 1b 00 00                  01 .literal
  ad 1b 00 00         0a 00 00 00 10
  b1 1b 00 00                  ff .end (operand)
if68
 :b2 1b 00 00               05 01 .if [terms=1]
  b4 1b 00 00         40 1f 00 00 .else
  b8 1b 00 00               03 00 .var1 FLAGS
  ba 1b 00 00                  01 .literal
  bb 1b 00 00         c1 02 00 00 705
  bf 1b 00 00                  ff .end (operand)
  c0 1b 00 00                  ff .end (operand)
  c2 1b 00 00                  03 .if-sign-nonzero
  c2 1b 00 00               03 00 .var1 FLAGS
  c4 1b 00 00                  01 .literal
  c5 1b 00 00         c2 02 00 00 706
  c9 1b 00 00                  ff .end (operand)
  ca 1b 00 00                  ff .end (operand)
  cb 1b 00 00               03 00 .var1 FLAGS
  cd 1b 00 00                  01 .literal
  ce 1b 00 00         c1 02 00 00 705
  d2 1b 00 00                  ff .end (operand)
  d3 1b 00 00                  01 .set
  d4 1b 00 00               04 00 .var2 RANDOM
  d6 1b 00 00                  01 .literal
  d7 1b 00 00         01 00 00 00 1
  db 1b 00 00                  ff .end (operand)
  dc 1b 00 00                  01 .literal
  dd 1b 00 00         08 00 00 00 8
  e1 1b 00 00                  ff .end (operand)
  e2 1b 00 00                  ff .end (operand)
  e3 1b 00 00               03 00 .var1 FLAGS
  e5 1b 00 00                  01 .literal
  e6 1b 00 00         c2 02 00 00 706
  ea 1b 00 00                  ff .end (operand)
  eb 1b 00 00                  01 .set
  ec 1b 00 00               03 00 .var1 FLAGS
  ee 1b 00 00                  01 .literal
  ef 1b 00 00         c1 02 00 00 705
  f3 1b 00 00                  ff .end (operand)
  f4 1b 00 00                  ff .end (operand)
  f5 1b 00 00                  0a .switch
  f6 1b 00 00               03 00 .var1 FLAGS
  f8 1b 00 00                  01 .literal
  f9 1b 00 00         c1 02 00 00 705
  fd 1b 00 00                  ff .end (operand)
  fe 1b 00 00                  ff .end (operand)
  ff 1b 00 00                  0b .case
  00 1c 00 00                  05 .group
  01 1c 00 00                  01 .literal
  02 1c 00 00         01 00 00 00 1
  06 1c 00 00                  ff .end (operand)
  07 1c 00 00                  ff .end (operand)
  08 1c 00 00         2f 1c 00 00 .case-end-address
if69
 :0c 1c 00 00               05 01 .if [terms=1]
  0e 1c 00 00         2e 1c 00 00 .else
  12 1c 00 00               03 02 .var1 CHAR
  14 1c 00 00                  01 .literal
  15 1c 00 00         01 00 00 00 1
  19 1c 00 00                  ff .end (operand)
  1a 1c 00 00                  ff .end (operand)
  1c 1c 00 00                  00 .if-sign-zero
  1c 1c 00 00               03 00 .var1 FLAGS
  1e 1c 00 00                  01 .literal
  1f 1c 00 00         c1 02 00 00 705
  23 1c 00 00                  ff .end (operand)
  24 1c 00 00                  04 .incset
  25 1c 00 00               03 00 .var1 FLAGS
  27 1c 00 00                  01 .literal
  28 1c 00 00         c2 02 00 00 706
  2c 1c 00 00                  ff .end (operand)
  2d 1c 00 00                  ff .end (operand)
 :2e 1c 00 00                  ff .end (block)
 :2f 1c 00 00                  0b .case
  30 1c 00 00                  05 .group
  31 1c 00 00                  01 .literal
  32 1c 00 00         02 00 00 00 2
  36 1c 00 00                  ff .end (operand)
  37 1c 00 00                  ff .end (operand)
  38 1c 00 00         5f 1c 00 00 .case-end-address
if70
 :3c 1c 00 00               05 01 .if [terms=1]
  3e 1c 00 00         5e 1c 00 00 .else
  42 1c 00 00               03 02 .var1 CHAR
  44 1c 00 00                  01 .literal
  45 1c 00 00         02 00 00 00 2
  49 1c 00 00                  ff .end (operand)
  4a 1c 00 00                  ff .end (operand)
  4c 1c 00 00                  00 .if-sign-zero
  4c 1c 00 00               03 00 .var1 FLAGS
  4e 1c 00 00                  01 .literal
  4f 1c 00 00         c1 02 00 00 705
  53 1c 00 00                  ff .end (operand)
  54 1c 00 00                  04 .incset
  55 1c 00 00               03 00 .var1 FLAGS
  57 1c 00 00                  01 .literal
  58 1c 00 00         c2 02 00 00 706
  5c 1c 00 00                  ff .end (operand)
  5d 1c 00 00                  ff .end (operand)
 :5e 1c 00 00                  ff .end (block)
 :5f 1c 00 00                  0b .case
  60 1c 00 00                  05 .group
  61 1c 00 00                  01 .literal
  62 1c 00 00         03 00 00 00 3
  66 1c 00 00                  ff .end (operand)
  67 1c 00 00                  ff .end (operand)
  68 1c 00 00         8f 1c 00 00 .case-end-address
if71
 :6c 1c 00 00               05 01 .if [terms=1]
  6e 1c 00 00         8e 1c 00 00 .else
  72 1c 00 00               03 02 .var1 CHAR
  74 1c 00 00                  01 .literal
  75 1c 00 00         03 00 00 00 3
  79 1c 00 00                  ff .end (operand)
  7a 1c 00 00                  ff .end (operand)
  7c 1c 00 00                  00 .if-sign-zero
  7c 1c 00 00               03 00 .var1 FLAGS
  7e 1c 00 00                  01 .literal
  7f 1c 00 00         c1 02 00 00 705
  83 1c 00 00                  ff .end (operand)
  84 1c 00 00                  04 .incset
  85 1c 00 00               03 00 .var1 FLAGS
  87 1c 00 00                  01 .literal
  88 1c 00 00         c2 02 00 00 706
  8c 1c 00 00                  ff .end (operand)
  8d 1c 00 00                  ff .end (operand)
 :8e 1c 00 00                  ff .end (block)
 :8f 1c 00 00                  0b .case
  90 1c 00 00                  05 .group
  91 1c 00 00                  01 .literal
  92 1c 00 00         04 00 00 00 4
  96 1c 00 00                  ff .end (operand)
  97 1c 00 00                  ff .end (operand)
  98 1c 00 00         bf 1c 00 00 .case-end-address
if72
 :9c 1c 00 00               05 01 .if [terms=1]
  9e 1c 00 00         be 1c 00 00 .else
  a2 1c 00 00               03 02 .var1 CHAR
  a4 1c 00 00                  01 .literal
  a5 1c 00 00         04 00 00 00 4
  a9 1c 00 00                  ff .end (operand)
  aa 1c 00 00                  ff .end (operand)
  ac 1c 00 00                  00 .if-sign-zero
  ac 1c 00 00               03 00 .var1 FLAGS
  ae 1c 00 00                  01 .literal
  af 1c 00 00         c1 02 00 00 705
  b3 1c 00 00                  ff .end (operand)
  b4 1c 00 00                  04 .incset
  b5 1c 00 00               03 00 .var1 FLAGS
  b7 1c 00 00                  01 .literal
  b8 1c 00 00         c2 02 00 00 706
  bc 1c 00 00                  ff .end (operand)
  bd 1c 00 00                  ff .end (operand)
 :be 1c 00 00                  ff .end (block)
 :bf 1c 00 00                  0b .case
  c0 1c 00 00                  05 .group
  c1 1c 00 00                  01 .literal
  c2 1c 00 00         05 00 00 00 5
  c6 1c 00 00                  ff .end (operand)
  c7 1c 00 00                  ff .end (operand)
  c8 1c 00 00         ef 1c 00 00 .case-end-address
if73
 :cc 1c 00 00               05 01 .if [terms=1]
  ce 1c 00 00         ee 1c 00 00 .else
  d2 1c 00 00               03 02 .var1 CHAR
  d4 1c 00 00                  01 .literal
  d5 1c 00 00         05 00 00 00 5
  d9 1c 00 00                  ff .end (operand)
  da 1c 00 00                  ff .end (operand)
  dc 1c 00 00                  00 .if-sign-zero
  dc 1c 00 00               03 00 .var1 FLAGS
  de 1c 00 00                  01 .literal
  df 1c 00 00         c1 02 00 00 705
  e3 1c 00 00                  ff .end (operand)
  e4 1c 00 00                  04 .incset
  e5 1c 00 00               03 00 .var1 FLAGS
  e7 1c 00 00                  01 .literal
  e8 1c 00 00         c2 02 00 00 706
  ec 1c 00 00                  ff .end (operand)
  ed 1c 00 00                  ff .end (operand)
 :ee 1c 00 00                  ff .end (block)
 :ef 1c 00 00                  0b .case
  f0 1c 00 00                  05 .group
  f1 1c 00 00                  01 .literal
  f2 1c 00 00         06 00 00 00 6
  f6 1c 00 00                  ff .end (operand)
  f7 1c 00 00                  ff .end (operand)
  f8 1c 00 00         1f 1d 00 00 .case-end-address
if74
 :fc 1c 00 00               05 01 .if [terms=1]
  fe 1c 00 00         1e 1d 00 00 .else
  02 1d 00 00               03 02 .var1 CHAR
  04 1d 00 00                  01 .literal
  05 1d 00 00         06 00 00 00 6
  09 1d 00 00                  ff .end (operand)
  0a 1d 00 00                  ff .end (operand)
  0c 1d 00 00                  00 .if-sign-zero
  0c 1d 00 00               03 00 .var1 FLAGS
  0e 1d 00 00                  01 .literal
  0f 1d 00 00         c1 02 00 00 705
  13 1d 00 00                  ff .end (operand)
  14 1d 00 00                  04 .incset
  15 1d 00 00               03 00 .var1 FLAGS
  17 1d 00 00                  01 .literal
  18 1d 00 00         c2 02 00 00 706
  1c 1d 00 00                  ff .end (operand)
  1d 1d 00 00                  ff .end (operand)
 :1e 1d 00 00                  ff .end (block)
 :1f 1d 00 00                  0b .case
  20 1d 00 00                  05 .group
  21 1d 00 00                  01 .literal
  22 1d 00 00         07 00 00 00 7
  26 1d 00 00                  ff .end (operand)
  27 1d 00 00                  ff .end (operand)
  28 1d 00 00         4f 1d 00 00 .case-end-address
if75
 :2c 1d 00 00               05 01 .if [terms=1]
  2e 1d 00 00         4e 1d 00 00 .else
  32 1d 00 00               03 02 .var1 CHAR
  34 1d 00 00                  01 .literal
  35 1d 00 00         07 00 00 00 7
  39 1d 00 00                  ff .end (operand)
  3a 1d 00 00                  ff .end (operand)
  3c 1d 00 00                  00 .if-sign-zero
  3c 1d 00 00               03 00 .var1 FLAGS
  3e 1d 00 00                  01 .literal
  3f 1d 00 00         c1 02 00 00 705
  43 1d 00 00                  ff .end (operand)
  44 1d 00 00                  04 .incset
  45 1d 00 00               03 00 .var1 FLAGS
  47 1d 00 00                  01 .literal
  48 1d 00 00         c2 02 00 00 706
  4c 1d 00 00                  ff .end (operand)
  4d 1d 00 00                  ff .end (operand)
 :4e 1d 00 00                  ff .end (block)
 :4f 1d 00 00                  0b .case
  50 1d 00 00                  05 .group
  51 1d 00 00                  01 .literal
  52 1d 00 00         08 00 00 00 8
  56 1d 00 00                  ff .end (operand)
  57 1d 00 00                  ff .end (operand)
  58 1d 00 00         7f 1d 00 00 .case-end-address
if76
 :5c 1d 00 00               05 01 .if [terms=1]
  5e 1d 00 00         7e 1d 00 00 .else
  62 1d 00 00               03 02 .var1 CHAR
  64 1d 00 00                  01 .literal
  65 1d 00 00         08 00 00 00 8
  69 1d 00 00                  ff .end (operand)
  6a 1d 00 00                  ff .end (operand)
  6c 1d 00 00                  00 .if-sign-zero
  6c 1d 00 00               03 00 .var1 FLAGS
  6e 1d 00 00                  01 .literal
  6f 1d 00 00         c1 02 00 00 705
  73 1d 00 00                  ff .end (operand)
  74 1d 00 00                  04 .incset
  75 1d 00 00               03 00 .var1 FLAGS
  77 1d 00 00                  01 .literal
  78 1d 00 00         c2 02 00 00 706
  7c 1d 00 00                  ff .end (operand)
  7d 1d 00 00                  ff .end (operand)
 :7e 1d 00 00                  ff .end (block)
 :7f 1d 00 00                  ff .end (switch)
  80 1d 00 00                  0a .switch
  81 1d 00 00               03 00 .var1 FLAGS
  83 1d 00 00                  01 .literal
  84 1d 00 00         c2 02 00 00 706
  88 1d 00 00                  ff .end (operand)
  89 1d 00 00                  ff .end (operand)
  8a 1d 00 00                  0b .case
  8b 1d 00 00                  05 .group
  8c 1d 00 00                  01 .literal
  8d 1d 00 00         01 00 00 00 1
  91 1d 00 00                  ff .end (operand)
  92 1d 00 00                  ff .end (operand)
  93 1d 00 00         c0 1d 00 00 .case-end-address
if77
 :97 1d 00 00               05 01 .if [terms=1]
  99 1d 00 00         bf 1d 00 00 .else
  9d 1d 00 00               03 07 .var1 CURHP
  9f 1d 00 00                  01 .literal
  a0 1d 00 00         01 00 00 00 1
  a4 1d 00 00                  ff .end (operand)
  a5 1d 00 00                  ff .end (operand)
  a7 1d 00 00                  02 .if-sign-nonzero
  a7 1d 00 00                  01 .literal
  a8 1d 00 00         00 00 00 00 0
  ac 1d 00 00                  ff .end (operand)
  ad 1d 00 00               03 00 .var1 FLAGS
  af 1d 00 00                  01 .literal
  b0 1d 00 00         c2 02 00 00 706
  b4 1d 00 00                  ff .end (operand)
  b5 1d 00 00                  04 .incset
  b6 1d 00 00               03 00 .var1 FLAGS
  b8 1d 00 00                  01 .literal
  b9 1d 00 00         c1 02 00 00 705
  bd 1d 00 00                  ff .end (operand)
  be 1d 00 00                  ff .end (operand)
 :bf 1d 00 00                  ff .end (block)
 :c0 1d 00 00                  0b .case
  c1 1d 00 00                  05 .group
  c2 1d 00 00                  01 .literal
  c3 1d 00 00         02 00 00 00 2
  c7 1d 00 00                  ff .end (operand)
  c8 1d 00 00                  ff .end (operand)
  c9 1d 00 00         f6 1d 00 00 .case-end-address
if78
 :cd 1d 00 00               05 01 .if [terms=1]
  cf 1d 00 00         f5 1d 00 00 .else
  d3 1d 00 00               03 07 .var1 CURHP
  d5 1d 00 00                  01 .literal
  d6 1d 00 00         02 00 00 00 2
  da 1d 00 00                  ff .end (operand)
  db 1d 00 00                  ff .end (operand)
  dd 1d 00 00                  02 .if-sign-nonzero
  dd 1d 00 00                  01 .literal
  de 1d 00 00         00 00 00 00 0
  e2 1d 00 00                  ff .end (operand)
  e3 1d 00 00               03 00 .var1 FLAGS
  e5 1d 00 00                  01 .literal
  e6 1d 00 00         c2 02 00 00 706
  ea 1d 00 00                  ff .end (operand)
  eb 1d 00 00                  04 .incset
  ec 1d 00 00               03 00 .var1 FLAGS
  ee 1d 00 00                  01 .literal
  ef 1d 00 00         c1 02 00 00 705
  f3 1d 00 00                  ff .end (operand)
  f4 1d 00 00                  ff .end (operand)
 :f5 1d 00 00                  ff .end (block)
 :f6 1d 00 00                  0b .case
  f7 1d 00 00                  05 .group
  f8 1d 00 00                  01 .literal
  f9 1d 00 00         03 00 00 00 3
  fd 1d 00 00                  ff .end (operand)
  fe 1d 00 00                  ff .end (operand)
  ff 1d 00 00         2c 1e 00 00 .case-end-address
if79
 :03 1e 00 00               05 01 .if [terms=1]
  05 1e 00 00         2b 1e 00 00 .else
  09 1e 00 00               03 07 .var1 CURHP
  0b 1e 00 00                  01 .literal
  0c 1e 00 00         03 00 00 00 3
  10 1e 00 00                  ff .end (operand)
  11 1e 00 00                  ff .end (operand)
  13 1e 00 00                  02 .if-sign-nonzero
  13 1e 00 00                  01 .literal
  14 1e 00 00         00 00 00 00 0
  18 1e 00 00                  ff .end (operand)
  19 1e 00 00               03 00 .var1 FLAGS
  1b 1e 00 00                  01 .literal
  1c 1e 00 00         c2 02 00 00 706
  20 1e 00 00                  ff .end (operand)
  21 1e 00 00                  04 .incset
  22 1e 00 00               03 00 .var1 FLAGS
  24 1e 00 00                  01 .literal
  25 1e 00 00         c1 02 00 00 705
  29 1e 00 00                  ff .end (operand)
  2a 1e 00 00                  ff .end (operand)
 :2b 1e 00 00                  ff .end (block)
 :2c 1e 00 00                  0b .case
  2d 1e 00 00                  05 .group
  2e 1e 00 00                  01 .literal
  2f 1e 00 00         04 00 00 00 4
  33 1e 00 00                  ff .end (operand)
  34 1e 00 00                  ff .end (operand)
  35 1e 00 00         62 1e 00 00 .case-end-address
if80
 :39 1e 00 00               05 01 .if [terms=1]
  3b 1e 00 00         61 1e 00 00 .else
  3f 1e 00 00               03 07 .var1 CURHP
  41 1e 00 00                  01 .literal
  42 1e 00 00         04 00 00 00 4
  46 1e 00 00                  ff .end (operand)
  47 1e 00 00                  ff .end (operand)
  49 1e 00 00                  02 .if-sign-nonzero
  49 1e 00 00                  01 .literal
  4a 1e 00 00         00 00 00 00 0
  4e 1e 00 00                  ff .end (operand)
  4f 1e 00 00               03 00 .var1 FLAGS
  51 1e 00 00                  01 .literal
  52 1e 00 00         c2 02 00 00 706
  56 1e 00 00                  ff .end (operand)
  57 1e 00 00                  04 .incset
  58 1e 00 00               03 00 .var1 FLAGS
  5a 1e 00 00                  01 .literal
  5b 1e 00 00         c1 02 00 00 705
  5f 1e 00 00                  ff .end (operand)
  60 1e 00 00                  ff .end (operand)
 :61 1e 00 00                  ff .end (block)
 :62 1e 00 00                  0b .case
  63 1e 00 00                  05 .group
  64 1e 00 00                  01 .literal
  65 1e 00 00         05 00 00 00 5
  69 1e 00 00                  ff .end (operand)
  6a 1e 00 00                  ff .end (operand)
  6b 1e 00 00         98 1e 00 00 .case-end-address
if81
 :6f 1e 00 00               05 01 .if [terms=1]
  71 1e 00 00         97 1e 00 00 .else
  75 1e 00 00               03 07 .var1 CURHP
  77 1e 00 00                  01 .literal
  78 1e 00 00         05 00 00 00 5
  7c 1e 00 00                  ff .end (operand)
  7d 1e 00 00                  ff .end (operand)
  7f 1e 00 00                  02 .if-sign-nonzero
  7f 1e 00 00                  01 .literal
  80 1e 00 00         00 00 00 00 0
  84 1e 00 00                  ff .end (operand)
  85 1e 00 00               03 00 .var1 FLAGS
  87 1e 00 00                  01 .literal
  88 1e 00 00         c2 02 00 00 706
  8c 1e 00 00                  ff .end (operand)
  8d 1e 00 00                  04 .incset
  8e 1e 00 00               03 00 .var1 FLAGS
  90 1e 00 00                  01 .literal
  91 1e 00 00         c1 02 00 00 705
  95 1e 00 00                  ff .end (operand)
  96 1e 00 00                  ff .end (operand)
 :97 1e 00 00                  ff .end (block)
 :98 1e 00 00                  0b .case
  99 1e 00 00                  05 .group
  9a 1e 00 00                  01 .literal
  9b 1e 00 00         06 00 00 00 6
  9f 1e 00 00                  ff .end (operand)
  a0 1e 00 00                  ff .end (operand)
  a1 1e 00 00         ce 1e 00 00 .case-end-address
if82
 :a5 1e 00 00               05 01 .if [terms=1]
  a7 1e 00 00         cd 1e 00 00 .else
  ab 1e 00 00               03 07 .var1 CURHP
  ad 1e 00 00                  01 .literal
  ae 1e 00 00         06 00 00 00 6
  b2 1e 00 00                  ff .end (operand)
  b3 1e 00 00                  ff .end (operand)
  b5 1e 00 00                  02 .if-sign-nonzero
  b5 1e 00 00                  01 .literal
  b6 1e 00 00         00 00 00 00 0
  ba 1e 00 00                  ff .end (operand)
  bb 1e 00 00               03 00 .var1 FLAGS
  bd 1e 00 00                  01 .literal
  be 1e 00 00         c2 02 00 00 706
  c2 1e 00 00                  ff .end (operand)
  c3 1e 00 00                  04 .incset
  c4 1e 00 00               03 00 .var1 FLAGS
  c6 1e 00 00                  01 .literal
  c7 1e 00 00         c1 02 00 00 705
  cb 1e 00 00                  ff .end (operand)
  cc 1e 00 00                  ff .end (operand)
 :cd 1e 00 00                  ff .end (block)
 :ce 1e 00 00                  0b .case
  cf 1e 00 00                  05 .group
  d0 1e 00 00                  01 .literal
  d1 1e 00 00         07 00 00 00 7
  d5 1e 00 00                  ff .end (operand)
  d6 1e 00 00                  ff .end (operand)
  d7 1e 00 00         04 1f 00 00 .case-end-address
if83
 :db 1e 00 00               05 01 .if [terms=1]
  dd 1e 00 00         03 1f 00 00 .else
  e1 1e 00 00               03 07 .var1 CURHP
  e3 1e 00 00                  01 .literal
  e4 1e 00 00         07 00 00 00 7
  e8 1e 00 00                  ff .end (operand)
  e9 1e 00 00                  ff .end (operand)
  eb 1e 00 00                  02 .if-sign-nonzero
  eb 1e 00 00                  01 .literal
  ec 1e 00 00         00 00 00 00 0
  f0 1e 00 00                  ff .end (operand)
  f1 1e 00 00               03 00 .var1 FLAGS
  f3 1e 00 00                  01 .literal
  f4 1e 00 00         c2 02 00 00 706
  f8 1e 00 00                  ff .end (operand)
  f9 1e 00 00                  04 .incset
  fa 1e 00 00               03 00 .var1 FLAGS
  fc 1e 00 00                  01 .literal
  fd 1e 00 00         c1 02 00 00 705
  01 1f 00 00                  ff .end (operand)
  02 1f 00 00                  ff .end (operand)
 :03 1f 00 00                  ff .end (block)
 :04 1f 00 00                  0b .case
  05 1f 00 00                  05 .group
  06 1f 00 00                  01 .literal
  07 1f 00 00         08 00 00 00 8
  0b 1f 00 00                  ff .end (operand)
  0c 1f 00 00                  ff .end (operand)
  0d 1f 00 00         3a 1f 00 00 .case-end-address
if84
 :11 1f 00 00               05 01 .if [terms=1]
  13 1f 00 00         39 1f 00 00 .else
  17 1f 00 00               03 07 .var1 CURHP
  19 1f 00 00                  01 .literal
  1a 1f 00 00         08 00 00 00 8
  1e 1f 00 00                  ff .end (operand)
  1f 1f 00 00                  ff .end (operand)
  21 1f 00 00                  02 .if-sign-nonzero
  21 1f 00 00                  01 .literal
  22 1f 00 00         00 00 00 00 0
  26 1f 00 00                  ff .end (operand)
  27 1f 00 00               03 00 .var1 FLAGS
  29 1f 00 00                  01 .literal
  2a 1f 00 00         c2 02 00 00 706
  2e 1f 00 00                  ff .end (operand)
  2f 1f 00 00                  04 .incset
  30 1f 00 00               03 00 .var1 FLAGS
  32 1f 00 00                  01 .literal
  33 1f 00 00         c1 02 00 00 705
  37 1f 00 00                  ff .end (operand)
  38 1f 00 00                  ff .end (operand)
 :39 1f 00 00                  ff .end (block)
 :3a 1f 00 00                  ff .end (switch)
  3b 1f 00 00                  07 .goto
  3c 1f 00 00         b2 1b 00 00 .if68
::40 1f 00 00               03 00 .var1 FLAGS
  42 1f 00 00                  01 .literal
  43 1f 00 00         70 02 00 00 624
  47 1f 00 00                  ff .end (operand)
  48 1f 00 00                  01 .set
  49 1f 00 00               03 00 .var1 FLAGS
  4b 1f 00 00                  01 .literal
  4c 1f 00 00         c1 02 00 00 705
  50 1f 00 00                  ff .end (operand)
  51 1f 00 00                  ff .end (operand)
  52 1f 00 00               03 00 .var1 FLAGS
  54 1f 00 00                  01 .literal
  55 1f 00 00         c1 02 00 00 705
  59 1f 00 00                  ff .end (operand)
  5a 1f 00 00                  01 .set
  5b 1f 00 00                  01 .literal
  5c 1f 00 00         09 00 00 00 9
  60 1f 00 00                  ff .end (operand)
  61 1f 00 00               03 00 .var1 FLAGS
  63 1f 00 00                  01 .literal
  64 1f 00 00         c2 02 00 00 706
  68 1f 00 00                  ff .end (operand)
  69 1f 00 00                  01 .set
  6a 1f 00 00                  01 .literal
  6b 1f 00 00         0a 00 00 00 10
  6f 1f 00 00                  ff .end (operand)
  70 1f 00 00               03 00 .var1 FLAGS
  72 1f 00 00                  01 .literal
  73 1f 00 00         71 02 00 00 625
  77 1f 00 00                  ff .end (operand)
  78 1f 00 00                  01 .set
  79 1f 00 00               04 00 .var2 RANDOM
  7b 1f 00 00                  01 .literal
  7c 1f 00 00         01 00 00 00 1
  80 1f 00 00                  ff .end (operand)
  81 1f 00 00                  01 .literal
  82 1f 00 00         04 00 00 00 4
  86 1f 00 00                  ff .end (operand)
  87 1f 00 00                  ff .end (operand)
if85
 :88 1f 00 00               05 01 .if [terms=1]
  8a 1f 00 00         16 23 00 00 .else
  8e 1f 00 00               03 00 .var1 FLAGS
  90 1f 00 00                  01 .literal
  91 1f 00 00         c1 02 00 00 705
  95 1f 00 00                  ff .end (operand)
  96 1f 00 00                  ff .end (operand)
  98 1f 00 00                  03 .if-sign-nonzero
  98 1f 00 00               03 00 .var1 FLAGS
  9a 1f 00 00                  01 .literal
  9b 1f 00 00         c2 02 00 00 706
  9f 1f 00 00                  ff .end (operand)
  a0 1f 00 00                  ff .end (operand)
  a1 1f 00 00               03 00 .var1 FLAGS
  a3 1f 00 00                  01 .literal
  a4 1f 00 00         c1 02 00 00 705
  a8 1f 00 00                  ff .end (operand)
  a9 1f 00 00                  01 .set
  aa 1f 00 00               04 00 .var2 RANDOM
  ac 1f 00 00                  01 .literal
  ad 1f 00 00         01 00 00 00 1
  b1 1f 00 00                  ff .end (operand)
  b2 1f 00 00                  01 .literal
  b3 1f 00 00         08 00 00 00 8
  b7 1f 00 00                  ff .end (operand)
  b8 1f 00 00                  ff .end (operand)
  b9 1f 00 00               03 00 .var1 FLAGS
  bb 1f 00 00                  01 .literal
  bc 1f 00 00         c2 02 00 00 706
  c0 1f 00 00                  ff .end (operand)
  c1 1f 00 00                  01 .set
  c2 1f 00 00               03 00 .var1 FLAGS
  c4 1f 00 00                  01 .literal
  c5 1f 00 00         c1 02 00 00 705
  c9 1f 00 00                  ff .end (operand)
  ca 1f 00 00                  ff .end (operand)
  cb 1f 00 00                  0a .switch
  cc 1f 00 00               03 00 .var1 FLAGS
  ce 1f 00 00                  01 .literal
  cf 1f 00 00         c1 02 00 00 705
  d3 1f 00 00                  ff .end (operand)
  d4 1f 00 00                  ff .end (operand)
  d5 1f 00 00                  0b .case
  d6 1f 00 00                  05 .group
  d7 1f 00 00                  01 .literal
  d8 1f 00 00         01 00 00 00 1
  dc 1f 00 00                  ff .end (operand)
  dd 1f 00 00                  ff .end (operand)
  de 1f 00 00         05 20 00 00 .case-end-address
if86
 :e2 1f 00 00               05 01 .if [terms=1]
  e4 1f 00 00         04 20 00 00 .else
  e8 1f 00 00               03 02 .var1 CHAR
  ea 1f 00 00                  01 .literal
  eb 1f 00 00         01 00 00 00 1
  ef 1f 00 00                  ff .end (operand)
  f0 1f 00 00                  ff .end (operand)
  f2 1f 00 00                  00 .if-sign-zero
  f2 1f 00 00               03 00 .var1 FLAGS
  f4 1f 00 00                  01 .literal
  f5 1f 00 00         c1 02 00 00 705
  f9 1f 00 00                  ff .end (operand)
  fa 1f 00 00                  04 .incset
  fb 1f 00 00               03 00 .var1 FLAGS
  fd 1f 00 00                  01 .literal
  fe 1f 00 00         c2 02 00 00 706
  02 20 00 00                  ff .end (operand)
  03 20 00 00                  ff .end (operand)
 :04 20 00 00                  ff .end (block)
 :05 20 00 00                  0b .case
  06 20 00 00                  05 .group
  07 20 00 00                  01 .literal
  08 20 00 00         02 00 00 00 2
  0c 20 00 00                  ff .end (operand)
  0d 20 00 00                  ff .end (operand)
  0e 20 00 00         35 20 00 00 .case-end-address
if87
 :12 20 00 00               05 01 .if [terms=1]
  14 20 00 00         34 20 00 00 .else
  18 20 00 00               03 02 .var1 CHAR
  1a 20 00 00                  01 .literal
  1b 20 00 00         02 00 00 00 2
  1f 20 00 00                  ff .end (operand)
  20 20 00 00                  ff .end (operand)
  22 20 00 00                  00 .if-sign-zero
  22 20 00 00               03 00 .var1 FLAGS
  24 20 00 00                  01 .literal
  25 20 00 00         c1 02 00 00 705
  29 20 00 00                  ff .end (operand)
  2a 20 00 00                  04 .incset
  2b 20 00 00               03 00 .var1 FLAGS
  2d 20 00 00                  01 .literal
  2e 20 00 00         c2 02 00 00 706
  32 20 00 00                  ff .end (operand)
  33 20 00 00                  ff .end (operand)
 :34 20 00 00                  ff .end (block)
 :35 20 00 00                  0b .case
  36 20 00 00                  05 .group
  37 20 00 00                  01 .literal
  38 20 00 00         03 00 00 00 3
  3c 20 00 00                  ff .end (operand)
  3d 20 00 00                  ff .end (operand)
  3e 20 00 00         65 20 00 00 .case-end-address
if88
 :42 20 00 00               05 01 .if [terms=1]
  44 20 00 00         64 20 00 00 .else
  48 20 00 00               03 02 .var1 CHAR
  4a 20 00 00                  01 .literal
  4b 20 00 00         03 00 00 00 3
  4f 20 00 00                  ff .end (operand)
  50 20 00 00                  ff .end (operand)
  52 20 00 00                  00 .if-sign-zero
  52 20 00 00               03 00 .var1 FLAGS
  54 20 00 00                  01 .literal
  55 20 00 00         c1 02 00 00 705
  59 20 00 00                  ff .end (operand)
  5a 20 00 00                  04 .incset
  5b 20 00 00               03 00 .var1 FLAGS
  5d 20 00 00                  01 .literal
  5e 20 00 00         c2 02 00 00 706
  62 20 00 00                  ff .end (operand)
  63 20 00 00                  ff .end (operand)
 :64 20 00 00                  ff .end (block)
 :65 20 00 00                  0b .case
  66 20 00 00                  05 .group
  67 20 00 00                  01 .literal
  68 20 00 00         04 00 00 00 4
  6c 20 00 00                  ff .end (operand)
  6d 20 00 00                  ff .end (operand)
  6e 20 00 00         95 20 00 00 .case-end-address
if89
 :72 20 00 00               05 01 .if [terms=1]
  74 20 00 00         94 20 00 00 .else
  78 20 00 00               03 02 .var1 CHAR
  7a 20 00 00                  01 .literal
  7b 20 00 00         04 00 00 00 4
  7f 20 00 00                  ff .end (operand)
  80 20 00 00                  ff .end (operand)
  82 20 00 00                  00 .if-sign-zero
  82 20 00 00               03 00 .var1 FLAGS
  84 20 00 00                  01 .literal
  85 20 00 00         c1 02 00 00 705
  89 20 00 00                  ff .end (operand)
  8a 20 00 00                  04 .incset
  8b 20 00 00               03 00 .var1 FLAGS
  8d 20 00 00                  01 .literal
  8e 20 00 00         c2 02 00 00 706
  92 20 00 00                  ff .end (operand)
  93 20 00 00                  ff .end (operand)
 :94 20 00 00                  ff .end (block)
 :95 20 00 00                  0b .case
  96 20 00 00                  05 .group
  97 20 00 00                  01 .literal
  98 20 00 00         05 00 00 00 5
  9c 20 00 00                  ff .end (operand)
  9d 20 00 00                  ff .end (operand)
  9e 20 00 00         c5 20 00 00 .case-end-address
if90
 :a2 20 00 00               05 01 .if [terms=1]
  a4 20 00 00         c4 20 00 00 .else
  a8 20 00 00               03 02 .var1 CHAR
  aa 20 00 00                  01 .literal
  ab 20 00 00         05 00 00 00 5
  af 20 00 00                  ff .end (operand)
  b0 20 00 00                  ff .end (operand)
  b2 20 00 00                  00 .if-sign-zero
  b2 20 00 00               03 00 .var1 FLAGS
  b4 20 00 00                  01 .literal
  b5 20 00 00         c1 02 00 00 705
  b9 20 00 00                  ff .end (operand)
  ba 20 00 00                  04 .incset
  bb 20 00 00               03 00 .var1 FLAGS
  bd 20 00 00                  01 .literal
  be 20 00 00         c2 02 00 00 706
  c2 20 00 00                  ff .end (operand)
  c3 20 00 00                  ff .end (operand)
 :c4 20 00 00                  ff .end (block)
 :c5 20 00 00                  0b .case
  c6 20 00 00                  05 .group
  c7 20 00 00                  01 .literal
  c8 20 00 00         06 00 00 00 6
  cc 20 00 00                  ff .end (operand)
  cd 20 00 00                  ff .end (operand)
  ce 20 00 00         f5 20 00 00 .case-end-address
if91
 :d2 20 00 00               05 01 .if [terms=1]
  d4 20 00 00         f4 20 00 00 .else
  d8 20 00 00               03 02 .var1 CHAR
  da 20 00 00                  01 .literal
  db 20 00 00         06 00 00 00 6
  df 20 00 00                  ff .end (operand)
  e0 20 00 00                  ff .end (operand)
  e2 20 00 00                  00 .if-sign-zero
  e2 20 00 00               03 00 .var1 FLAGS
  e4 20 00 00                  01 .literal
  e5 20 00 00         c1 02 00 00 705
  e9 20 00 00                  ff .end (operand)
  ea 20 00 00                  04 .incset
  eb 20 00 00               03 00 .var1 FLAGS
  ed 20 00 00                  01 .literal
  ee 20 00 00         c2 02 00 00 706
  f2 20 00 00                  ff .end (operand)
  f3 20 00 00                  ff .end (operand)
 :f4 20 00 00                  ff .end (block)
 :f5 20 00 00                  0b .case
  f6 20 00 00                  05 .group
  f7 20 00 00                  01 .literal
  f8 20 00 00         07 00 00 00 7
  fc 20 00 00                  ff .end (operand)
  fd 20 00 00                  ff .end (operand)
  fe 20 00 00         25 21 00 00 .case-end-address
if92
 :02 21 00 00               05 01 .if [terms=1]
  04 21 00 00         24 21 00 00 .else
  08 21 00 00               03 02 .var1 CHAR
  0a 21 00 00                  01 .literal
  0b 21 00 00         07 00 00 00 7
  0f 21 00 00                  ff .end (operand)
  10 21 00 00                  ff .end (operand)
  12 21 00 00                  00 .if-sign-zero
  12 21 00 00               03 00 .var1 FLAGS
  14 21 00 00                  01 .literal
  15 21 00 00         c1 02 00 00 705
  19 21 00 00                  ff .end (operand)
  1a 21 00 00                  04 .incset
  1b 21 00 00               03 00 .var1 FLAGS
  1d 21 00 00                  01 .literal
  1e 21 00 00         c2 02 00 00 706
  22 21 00 00                  ff .end (operand)
  23 21 00 00                  ff .end (operand)
 :24 21 00 00                  ff .end (block)
 :25 21 00 00                  0b .case
  26 21 00 00                  05 .group
  27 21 00 00                  01 .literal
  28 21 00 00         08 00 00 00 8
  2c 21 00 00                  ff .end (operand)
  2d 21 00 00                  ff .end (operand)
  2e 21 00 00         55 21 00 00 .case-end-address
if93
 :32 21 00 00               05 01 .if [terms=1]
  34 21 00 00         54 21 00 00 .else
  38 21 00 00               03 02 .var1 CHAR
  3a 21 00 00                  01 .literal
  3b 21 00 00         08 00 00 00 8
  3f 21 00 00                  ff .end (operand)
  40 21 00 00                  ff .end (operand)
  42 21 00 00                  00 .if-sign-zero
  42 21 00 00               03 00 .var1 FLAGS
  44 21 00 00                  01 .literal
  45 21 00 00         c1 02 00 00 705
  49 21 00 00                  ff .end (operand)
  4a 21 00 00                  04 .incset
  4b 21 00 00               03 00 .var1 FLAGS
  4d 21 00 00                  01 .literal
  4e 21 00 00         c2 02 00 00 706
  52 21 00 00                  ff .end (operand)
  53 21 00 00                  ff .end (operand)
 :54 21 00 00                  ff .end (block)
 :55 21 00 00                  ff .end (switch)
  56 21 00 00                  0a .switch
  57 21 00 00               03 00 .var1 FLAGS
  59 21 00 00                  01 .literal
  5a 21 00 00         c2 02 00 00 706
  5e 21 00 00                  ff .end (operand)
  5f 21 00 00                  ff .end (operand)
  60 21 00 00                  0b .case
  61 21 00 00                  05 .group
  62 21 00 00                  01 .literal
  63 21 00 00         01 00 00 00 1
  67 21 00 00                  ff .end (operand)
  68 21 00 00                  ff .end (operand)
  69 21 00 00         96 21 00 00 .case-end-address
if94
 :6d 21 00 00               05 01 .if [terms=1]
  6f 21 00 00         95 21 00 00 .else
  73 21 00 00               03 07 .var1 CURHP
  75 21 00 00                  01 .literal
  76 21 00 00         01 00 00 00 1
  7a 21 00 00                  ff .end (operand)
  7b 21 00 00                  ff .end (operand)
  7d 21 00 00                  02 .if-sign-nonzero
  7d 21 00 00                  01 .literal
  7e 21 00 00         00 00 00 00 0
  82 21 00 00                  ff .end (operand)
  83 21 00 00               03 00 .var1 FLAGS
  85 21 00 00                  01 .literal
  86 21 00 00         c2 02 00 00 706
  8a 21 00 00                  ff .end (operand)
  8b 21 00 00                  04 .incset
  8c 21 00 00               03 00 .var1 FLAGS
  8e 21 00 00                  01 .literal
  8f 21 00 00         c1 02 00 00 705
  93 21 00 00                  ff .end (operand)
  94 21 00 00                  ff .end (operand)
 :95 21 00 00                  ff .end (block)
 :96 21 00 00                  0b .case
  97 21 00 00                  05 .group
  98 21 00 00                  01 .literal
  99 21 00 00         02 00 00 00 2
  9d 21 00 00                  ff .end (operand)
  9e 21 00 00                  ff .end (operand)
  9f 21 00 00         cc 21 00 00 .case-end-address
if95
 :a3 21 00 00               05 01 .if [terms=1]
  a5 21 00 00         cb 21 00 00 .else
  a9 21 00 00               03 07 .var1 CURHP
  ab 21 00 00                  01 .literal
  ac 21 00 00         02 00 00 00 2
  b0 21 00 00                  ff .end (operand)
  b1 21 00 00                  ff .end (operand)
  b3 21 00 00                  02 .if-sign-nonzero
  b3 21 00 00                  01 .literal
  b4 21 00 00         00 00 00 00 0
  b8 21 00 00                  ff .end (operand)
  b9 21 00 00               03 00 .var1 FLAGS
  bb 21 00 00                  01 .literal
  bc 21 00 00         c2 02 00 00 706
  c0 21 00 00                  ff .end (operand)
  c1 21 00 00                  04 .incset
  c2 21 00 00               03 00 .var1 FLAGS
  c4 21 00 00                  01 .literal
  c5 21 00 00         c1 02 00 00 705
  c9 21 00 00                  ff .end (operand)
  ca 21 00 00                  ff .end (operand)
 :cb 21 00 00                  ff .end (block)
 :cc 21 00 00                  0b .case
  cd 21 00 00                  05 .group
  ce 21 00 00                  01 .literal
  cf 21 00 00         03 00 00 00 3
  d3 21 00 00                  ff .end (operand)
  d4 21 00 00                  ff .end (operand)
  d5 21 00 00         02 22 00 00 .case-end-address
if96
 :d9 21 00 00               05 01 .if [terms=1]
  db 21 00 00         01 22 00 00 .else
  df 21 00 00               03 07 .var1 CURHP
  e1 21 00 00                  01 .literal
  e2 21 00 00         03 00 00 00 3
  e6 21 00 00                  ff .end (operand)
  e7 21 00 00                  ff .end (operand)
  e9 21 00 00                  02 .if-sign-nonzero
  e9 21 00 00                  01 .literal
  ea 21 00 00         00 00 00 00 0
  ee 21 00 00                  ff .end (operand)
  ef 21 00 00               03 00 .var1 FLAGS
  f1 21 00 00                  01 .literal
  f2 21 00 00         c2 02 00 00 706
  f6 21 00 00                  ff .end (operand)
  f7 21 00 00                  04 .incset
  f8 21 00 00               03 00 .var1 FLAGS
  fa 21 00 00                  01 .literal
  fb 21 00 00         c1 02 00 00 705
  ff 21 00 00                  ff .end (operand)
  00 22 00 00                  ff .end (operand)
 :01 22 00 00                  ff .end (block)
 :02 22 00 00                  0b .case
  03 22 00 00                  05 .group
  04 22 00 00                  01 .literal
  05 22 00 00         04 00 00 00 4
  09 22 00 00                  ff .end (operand)
  0a 22 00 00                  ff .end (operand)
  0b 22 00 00         38 22 00 00 .case-end-address
if97
 :0f 22 00 00               05 01 .if [terms=1]
  11 22 00 00         37 22 00 00 .else
  15 22 00 00               03 07 .var1 CURHP
  17 22 00 00                  01 .literal
  18 22 00 00         04 00 00 00 4
  1c 22 00 00                  ff .end (operand)
  1d 22 00 00                  ff .end (operand)
  1f 22 00 00                  02 .if-sign-nonzero
  1f 22 00 00                  01 .literal
  20 22 00 00         00 00 00 00 0
  24 22 00 00                  ff .end (operand)
  25 22 00 00               03 00 .var1 FLAGS
  27 22 00 00                  01 .literal
  28 22 00 00         c2 02 00 00 706
  2c 22 00 00                  ff .end (operand)
  2d 22 00 00                  04 .incset
  2e 22 00 00               03 00 .var1 FLAGS
  30 22 00 00                  01 .literal
  31 22 00 00         c1 02 00 00 705
  35 22 00 00                  ff .end (operand)
  36 22 00 00                  ff .end (operand)
 :37 22 00 00                  ff .end (block)
 :38 22 00 00                  0b .case
  39 22 00 00                  05 .group
  3a 22 00 00                  01 .literal
  3b 22 00 00         05 00 00 00 5
  3f 22 00 00                  ff .end (operand)
  40 22 00 00                  ff .end (operand)
  41 22 00 00         6e 22 00 00 .case-end-address
if98
 :45 22 00 00               05 01 .if [terms=1]
  47 22 00 00         6d 22 00 00 .else
  4b 22 00 00               03 07 .var1 CURHP
  4d 22 00 00                  01 .literal
  4e 22 00 00         05 00 00 00 5
  52 22 00 00                  ff .end (operand)
  53 22 00 00                  ff .end (operand)
  55 22 00 00                  02 .if-sign-nonzero
  55 22 00 00                  01 .literal
  56 22 00 00         00 00 00 00 0
  5a 22 00 00                  ff .end (operand)
  5b 22 00 00               03 00 .var1 FLAGS
  5d 22 00 00                  01 .literal
  5e 22 00 00         c2 02 00 00 706
  62 22 00 00                  ff .end (operand)
  63 22 00 00                  04 .incset
  64 22 00 00               03 00 .var1 FLAGS
  66 22 00 00                  01 .literal
  67 22 00 00         c1 02 00 00 705
  6b 22 00 00                  ff .end (operand)
  6c 22 00 00                  ff .end (operand)
 :6d 22 00 00                  ff .end (block)
 :6e 22 00 00                  0b .case
  6f 22 00 00                  05 .group
  70 22 00 00                  01 .literal
  71 22 00 00         06 00 00 00 6
  75 22 00 00                  ff .end (operand)
  76 22 00 00                  ff .end (operand)
  77 22 00 00         a4 22 00 00 .case-end-address
if99
 :7b 22 00 00               05 01 .if [terms=1]
  7d 22 00 00         a3 22 00 00 .else
  81 22 00 00               03 07 .var1 CURHP
  83 22 00 00                  01 .literal
  84 22 00 00         06 00 00 00 6
  88 22 00 00                  ff .end (operand)
  89 22 00 00                  ff .end (operand)
  8b 22 00 00                  02 .if-sign-nonzero
  8b 22 00 00                  01 .literal
  8c 22 00 00         00 00 00 00 0
  90 22 00 00                  ff .end (operand)
  91 22 00 00               03 00 .var1 FLAGS
  93 22 00 00                  01 .literal
  94 22 00 00         c2 02 00 00 706
  98 22 00 00                  ff .end (operand)
  99 22 00 00                  04 .incset
  9a 22 00 00               03 00 .var1 FLAGS
  9c 22 00 00                  01 .literal
  9d 22 00 00         c1 02 00 00 705
  a1 22 00 00                  ff .end (operand)
  a2 22 00 00                  ff .end (operand)
 :a3 22 00 00                  ff .end (block)
 :a4 22 00 00                  0b .case
  a5 22 00 00                  05 .group
  a6 22 00 00                  01 .literal
  a7 22 00 00         07 00 00 00 7
  ab 22 00 00                  ff .end (operand)
  ac 22 00 00                  ff .end (operand)
  ad 22 00 00         da 22 00 00 .case-end-address
if100
 :b1 22 00 00               05 01 .if [terms=1]
  b3 22 00 00         d9 22 00 00 .else
  b7 22 00 00               03 07 .var1 CURHP
  b9 22 00 00                  01 .literal
  ba 22 00 00         07 00 00 00 7
  be 22 00 00                  ff .end (operand)
  bf 22 00 00                  ff .end (operand)
  c1 22 00 00                  02 .if-sign-nonzero
  c1 22 00 00                  01 .literal
  c2 22 00 00         00 00 00 00 0
  c6 22 00 00                  ff .end (operand)
  c7 22 00 00               03 00 .var1 FLAGS
  c9 22 00 00                  01 .literal
  ca 22 00 00         c2 02 00 00 706
  ce 22 00 00                  ff .end (operand)
  cf 22 00 00                  04 .incset
  d0 22 00 00               03 00 .var1 FLAGS
  d2 22 00 00                  01 .literal
  d3 22 00 00         c1 02 00 00 705
  d7 22 00 00                  ff .end (operand)
  d8 22 00 00                  ff .end (operand)
 :d9 22 00 00                  ff .end (block)
 :da 22 00 00                  0b .case
  db 22 00 00                  05 .group
  dc 22 00 00                  01 .literal
  dd 22 00 00         08 00 00 00 8
  e1 22 00 00                  ff .end (operand)
  e2 22 00 00                  ff .end (operand)
  e3 22 00 00         10 23 00 00 .case-end-address
if101
 :e7 22 00 00               05 01 .if [terms=1]
  e9 22 00 00         0f 23 00 00 .else
  ed 22 00 00               03 07 .var1 CURHP
  ef 22 00 00                  01 .literal
  f0 22 00 00         08 00 00 00 8
  f4 22 00 00                  ff .end (operand)
  f5 22 00 00                  ff .end (operand)
  f7 22 00 00                  02 .if-sign-nonzero
  f7 22 00 00                  01 .literal
  f8 22 00 00         00 00 00 00 0
  fc 22 00 00                  ff .end (operand)
  fd 22 00 00               03 00 .var1 FLAGS
  ff 22 00 00                  01 .literal
  00 23 00 00         c2 02 00 00 706
  04 23 00 00                  ff .end (operand)
  05 23 00 00                  04 .incset
  06 23 00 00               03 00 .var1 FLAGS
  08 23 00 00                  01 .literal
  09 23 00 00         c1 02 00 00 705
  0d 23 00 00                  ff .end (operand)
  0e 23 00 00                  ff .end (operand)
 :0f 23 00 00                  ff .end (block)
 :10 23 00 00                  ff .end (switch)
  11 23 00 00                  07 .goto
  12 23 00 00         88 1f 00 00 .if85
::16 23 00 00               03 00 .var1 FLAGS
  18 23 00 00                  01 .literal
  19 23 00 00         72 02 00 00 626
  1d 23 00 00                  ff .end (operand)
  1e 23 00 00                  01 .set
  1f 23 00 00               03 00 .var1 FLAGS
  21 23 00 00                  01 .literal
  22 23 00 00         c1 02 00 00 705
  26 23 00 00                  ff .end (operand)
  27 23 00 00                  ff .end (operand)
  28 23 00 00               03 00 .var1 FLAGS
  2a 23 00 00                  01 .literal
  2b 23 00 00         c1 02 00 00 705
  2f 23 00 00                  ff .end (operand)
  30 23 00 00                  01 .set
  31 23 00 00                  01 .literal
  32 23 00 00         09 00 00 00 9
  36 23 00 00                  ff .end (operand)
  37 23 00 00               03 00 .var1 FLAGS
  39 23 00 00                  01 .literal
  3a 23 00 00         c2 02 00 00 706
  3e 23 00 00                  ff .end (operand)
  3f 23 00 00                  01 .set
  40 23 00 00                  01 .literal
  41 23 00 00         0a 00 00 00 10
  45 23 00 00                  ff .end (operand)
  46 23 00 00               03 00 .var1 FLAGS
  48 23 00 00                  01 .literal
  49 23 00 00         73 02 00 00 627
  4d 23 00 00                  ff .end (operand)
  4e 23 00 00                  01 .set
  4f 23 00 00               04 00 .var2 RANDOM
  51 23 00 00                  01 .literal
  52 23 00 00         01 00 00 00 1
  56 23 00 00                  ff .end (operand)
  57 23 00 00                  01 .literal
  58 23 00 00         04 00 00 00 4
  5c 23 00 00                  ff .end (operand)
  5d 23 00 00                  ff .end (operand)
if102
 :5e 23 00 00               05 01 .if [terms=1]
  60 23 00 00         ec 26 00 00 .else
  64 23 00 00               03 00 .var1 FLAGS
  66 23 00 00                  01 .literal
  67 23 00 00         c1 02 00 00 705
  6b 23 00 00                  ff .end (operand)
  6c 23 00 00                  ff .end (operand)
  6e 23 00 00                  03 .if-sign-nonzero
  6e 23 00 00               03 00 .var1 FLAGS
  70 23 00 00                  01 .literal
  71 23 00 00         c2 02 00 00 706
  75 23 00 00                  ff .end (operand)
  76 23 00 00                  ff .end (operand)
  77 23 00 00               03 00 .var1 FLAGS
  79 23 00 00                  01 .literal
  7a 23 00 00         c1 02 00 00 705
  7e 23 00 00                  ff .end (operand)
  7f 23 00 00                  01 .set
  80 23 00 00               04 00 .var2 RANDOM
  82 23 00 00                  01 .literal
  83 23 00 00         01 00 00 00 1
  87 23 00 00                  ff .end (operand)
  88 23 00 00                  01 .literal
  89 23 00 00         08 00 00 00 8
  8d 23 00 00                  ff .end (operand)
  8e 23 00 00                  ff .end (operand)
  8f 23 00 00               03 00 .var1 FLAGS
  91 23 00 00                  01 .literal
  92 23 00 00         c2 02 00 00 706
  96 23 00 00                  ff .end (operand)
  97 23 00 00                  01 .set
  98 23 00 00               03 00 .var1 FLAGS
  9a 23 00 00                  01 .literal
  9b 23 00 00         c1 02 00 00 705
  9f 23 00 00                  ff .end (operand)
  a0 23 00 00                  ff .end (operand)
  a1 23 00 00                  0a .switch
  a2 23 00 00               03 00 .var1 FLAGS
  a4 23 00 00                  01 .literal
  a5 23 00 00         c1 02 00 00 705
  a9 23 00 00                  ff .end (operand)
  aa 23 00 00                  ff .end (operand)
  ab 23 00 00                  0b .case
  ac 23 00 00                  05 .group
  ad 23 00 00                  01 .literal
  ae 23 00 00         01 00 00 00 1
  b2 23 00 00                  ff .end (operand)
  b3 23 00 00                  ff .end (operand)
  b4 23 00 00         db 23 00 00 .case-end-address
if103
 :b8 23 00 00               05 01 .if [terms=1]
  ba 23 00 00         da 23 00 00 .else
  be 23 00 00               03 02 .var1 CHAR
  c0 23 00 00                  01 .literal
  c1 23 00 00         01 00 00 00 1
  c5 23 00 00                  ff .end (operand)
  c6 23 00 00                  ff .end (operand)
  c8 23 00 00                  00 .if-sign-zero
  c8 23 00 00               03 00 .var1 FLAGS
  ca 23 00 00                  01 .literal
  cb 23 00 00         c1 02 00 00 705
  cf 23 00 00                  ff .end (operand)
  d0 23 00 00                  04 .incset
  d1 23 00 00               03 00 .var1 FLAGS
  d3 23 00 00                  01 .literal
  d4 23 00 00         c2 02 00 00 706
  d8 23 00 00                  ff .end (operand)
  d9 23 00 00                  ff .end (operand)
 :da 23 00 00                  ff .end (block)
 :db 23 00 00                  0b .case
  dc 23 00 00                  05 .group
  dd 23 00 00                  01 .literal
  de 23 00 00         02 00 00 00 2
  e2 23 00 00                  ff .end (operand)
  e3 23 00 00                  ff .end (operand)
  e4 23 00 00         0b 24 00 00 .case-end-address
if104
 :e8 23 00 00               05 01 .if [terms=1]
  ea 23 00 00         0a 24 00 00 .else
  ee 23 00 00               03 02 .var1 CHAR
  f0 23 00 00                  01 .literal
  f1 23 00 00         02 00 00 00 2
  f5 23 00 00                  ff .end (operand)
  f6 23 00 00                  ff .end (operand)
  f8 23 00 00                  00 .if-sign-zero
  f8 23 00 00               03 00 .var1 FLAGS
  fa 23 00 00                  01 .literal
  fb 23 00 00         c1 02 00 00 705
  ff 23 00 00                  ff .end (operand)
  00 24 00 00                  04 .incset
  01 24 00 00               03 00 .var1 FLAGS
  03 24 00 00                  01 .literal
  04 24 00 00         c2 02 00 00 706
  08 24 00 00                  ff .end (operand)
  09 24 00 00                  ff .end (operand)
 :0a 24 00 00                  ff .end (block)
 :0b 24 00 00                  0b .case
  0c 24 00 00                  05 .group
  0d 24 00 00                  01 .literal
  0e 24 00 00         03 00 00 00 3
  12 24 00 00                  ff .end (operand)
  13 24 00 00                  ff .end (operand)
  14 24 00 00         3b 24 00 00 .case-end-address
if105
 :18 24 00 00               05 01 .if [terms=1]
  1a 24 00 00         3a 24 00 00 .else
  1e 24 00 00               03 02 .var1 CHAR
  20 24 00 00                  01 .literal
  21 24 00 00         03 00 00 00 3
  25 24 00 00                  ff .end (operand)
  26 24 00 00                  ff .end (operand)
  28 24 00 00                  00 .if-sign-zero
  28 24 00 00               03 00 .var1 FLAGS
  2a 24 00 00                  01 .literal
  2b 24 00 00         c1 02 00 00 705
  2f 24 00 00                  ff .end (operand)
  30 24 00 00                  04 .incset
  31 24 00 00               03 00 .var1 FLAGS
  33 24 00 00                  01 .literal
  34 24 00 00         c2 02 00 00 706
  38 24 00 00                  ff .end (operand)
  39 24 00 00                  ff .end (operand)
 :3a 24 00 00                  ff .end (block)
 :3b 24 00 00                  0b .case
  3c 24 00 00                  05 .group
  3d 24 00 00                  01 .literal
  3e 24 00 00         04 00 00 00 4
  42 24 00 00                  ff .end (operand)
  43 24 00 00                  ff .end (operand)
  44 24 00 00         6b 24 00 00 .case-end-address
if106
 :48 24 00 00               05 01 .if [terms=1]
  4a 24 00 00         6a 24 00 00 .else
  4e 24 00 00               03 02 .var1 CHAR
  50 24 00 00                  01 .literal
  51 24 00 00         04 00 00 00 4
  55 24 00 00                  ff .end (operand)
  56 24 00 00                  ff .end (operand)
  58 24 00 00                  00 .if-sign-zero
  58 24 00 00               03 00 .var1 FLAGS
  5a 24 00 00                  01 .literal
  5b 24 00 00         c1 02 00 00 705
  5f 24 00 00                  ff .end (operand)
  60 24 00 00                  04 .incset
  61 24 00 00               03 00 .var1 FLAGS
  63 24 00 00                  01 .literal
  64 24 00 00         c2 02 00 00 706
  68 24 00 00                  ff .end (operand)
  69 24 00 00                  ff .end (operand)
 :6a 24 00 00                  ff .end (block)
 :6b 24 00 00                  0b .case
  6c 24 00 00                  05 .group
  6d 24 00 00                  01 .literal
  6e 24 00 00         05 00 00 00 5
  72 24 00 00                  ff .end (operand)
  73 24 00 00                  ff .end (operand)
  74 24 00 00         9b 24 00 00 .case-end-address
if107
 :78 24 00 00               05 01 .if [terms=1]
  7a 24 00 00         9a 24 00 00 .else
  7e 24 00 00               03 02 .var1 CHAR
  80 24 00 00                  01 .literal
  81 24 00 00         05 00 00 00 5
  85 24 00 00                  ff .end (operand)
  86 24 00 00                  ff .end (operand)
  88 24 00 00                  00 .if-sign-zero
  88 24 00 00               03 00 .var1 FLAGS
  8a 24 00 00                  01 .literal
  8b 24 00 00         c1 02 00 00 705
  8f 24 00 00                  ff .end (operand)
  90 24 00 00                  04 .incset
  91 24 00 00               03 00 .var1 FLAGS
  93 24 00 00                  01 .literal
  94 24 00 00         c2 02 00 00 706
  98 24 00 00                  ff .end (operand)
  99 24 00 00                  ff .end (operand)
 :9a 24 00 00                  ff .end (block)
 :9b 24 00 00                  0b .case
  9c 24 00 00                  05 .group
  9d 24 00 00                  01 .literal
  9e 24 00 00         06 00 00 00 6
  a2 24 00 00                  ff .end (operand)
  a3 24 00 00                  ff .end (operand)
  a4 24 00 00         cb 24 00 00 .case-end-address
if108
 :a8 24 00 00               05 01 .if [terms=1]
  aa 24 00 00         ca 24 00 00 .else
  ae 24 00 00               03 02 .var1 CHAR
  b0 24 00 00                  01 .literal
  b1 24 00 00         06 00 00 00 6
  b5 24 00 00                  ff .end (operand)
  b6 24 00 00                  ff .end (operand)
  b8 24 00 00                  00 .if-sign-zero
  b8 24 00 00               03 00 .var1 FLAGS
  ba 24 00 00                  01 .literal
  bb 24 00 00         c1 02 00 00 705
  bf 24 00 00                  ff .end (operand)
  c0 24 00 00                  04 .incset
  c1 24 00 00               03 00 .var1 FLAGS
  c3 24 00 00                  01 .literal
  c4 24 00 00         c2 02 00 00 706
  c8 24 00 00                  ff .end (operand)
  c9 24 00 00                  ff .end (operand)
 :ca 24 00 00                  ff .end (block)
 :cb 24 00 00                  0b .case
  cc 24 00 00                  05 .group
  cd 24 00 00                  01 .literal
  ce 24 00 00         07 00 00 00 7
  d2 24 00 00                  ff .end (operand)
  d3 24 00 00                  ff .end (operand)
  d4 24 00 00         fb 24 00 00 .case-end-address
if109
 :d8 24 00 00               05 01 .if [terms=1]
  da 24 00 00         fa 24 00 00 .else
  de 24 00 00               03 02 .var1 CHAR
  e0 24 00 00                  01 .literal
  e1 24 00 00         07 00 00 00 7
  e5 24 00 00                  ff .end (operand)
  e6 24 00 00                  ff .end (operand)
  e8 24 00 00                  00 .if-sign-zero
  e8 24 00 00               03 00 .var1 FLAGS
  ea 24 00 00                  01 .literal
  eb 24 00 00         c1 02 00 00 705
  ef 24 00 00                  ff .end (operand)
  f0 24 00 00                  04 .incset
  f1 24 00 00               03 00 .var1 FLAGS
  f3 24 00 00                  01 .literal
  f4 24 00 00         c2 02 00 00 706
  f8 24 00 00                  ff .end (operand)
  f9 24 00 00                  ff .end (operand)
 :fa 24 00 00                  ff .end (block)
 :fb 24 00 00                  0b .case
  fc 24 00 00                  05 .group
  fd 24 00 00                  01 .literal
  fe 24 00 00         08 00 00 00 8
  02 25 00 00                  ff .end (operand)
  03 25 00 00                  ff .end (operand)
  04 25 00 00         2b 25 00 00 .case-end-address
if110
 :08 25 00 00               05 01 .if [terms=1]
  0a 25 00 00         2a 25 00 00 .else
  0e 25 00 00               03 02 .var1 CHAR
  10 25 00 00                  01 .literal
  11 25 00 00         08 00 00 00 8
  15 25 00 00                  ff .end (operand)
  16 25 00 00                  ff .end (operand)
  18 25 00 00                  00 .if-sign-zero
  18 25 00 00               03 00 .var1 FLAGS
  1a 25 00 00                  01 .literal
  1b 25 00 00         c1 02 00 00 705
  1f 25 00 00                  ff .end (operand)
  20 25 00 00                  04 .incset
  21 25 00 00               03 00 .var1 FLAGS
  23 25 00 00                  01 .literal
  24 25 00 00         c2 02 00 00 706
  28 25 00 00                  ff .end (operand)
  29 25 00 00                  ff .end (operand)
 :2a 25 00 00                  ff .end (block)
 :2b 25 00 00                  ff .end (switch)
  2c 25 00 00                  0a .switch
  2d 25 00 00               03 00 .var1 FLAGS
  2f 25 00 00                  01 .literal
  30 25 00 00         c2 02 00 00 706
  34 25 00 00                  ff .end (operand)
  35 25 00 00                  ff .end (operand)
  36 25 00 00                  0b .case
  37 25 00 00                  05 .group
  38 25 00 00                  01 .literal
  39 25 00 00         01 00 00 00 1
  3d 25 00 00                  ff .end (operand)
  3e 25 00 00                  ff .end (operand)
  3f 25 00 00         6c 25 00 00 .case-end-address
if111
 :43 25 00 00               05 01 .if [terms=1]
  45 25 00 00         6b 25 00 00 .else
  49 25 00 00               03 07 .var1 CURHP
  4b 25 00 00                  01 .literal
  4c 25 00 00         01 00 00 00 1
  50 25 00 00                  ff .end (operand)
  51 25 00 00                  ff .end (operand)
  53 25 00 00                  02 .if-sign-nonzero
  53 25 00 00                  01 .literal
  54 25 00 00         00 00 00 00 0
  58 25 00 00                  ff .end (operand)
  59 25 00 00               03 00 .var1 FLAGS
  5b 25 00 00                  01 .literal
  5c 25 00 00         c2 02 00 00 706
  60 25 00 00                  ff .end (operand)
  61 25 00 00                  04 .incset
  62 25 00 00               03 00 .var1 FLAGS
  64 25 00 00                  01 .literal
  65 25 00 00         c1 02 00 00 705
  69 25 00 00                  ff .end (operand)
  6a 25 00 00                  ff .end (operand)
 :6b 25 00 00                  ff .end (block)
 :6c 25 00 00                  0b .case
  6d 25 00 00                  05 .group
  6e 25 00 00                  01 .literal
  6f 25 00 00         02 00 00 00 2
  73 25 00 00                  ff .end (operand)
  74 25 00 00                  ff .end (operand)
  75 25 00 00         a2 25 00 00 .case-end-address
if112
 :79 25 00 00               05 01 .if [terms=1]
  7b 25 00 00         a1 25 00 00 .else
  7f 25 00 00               03 07 .var1 CURHP
  81 25 00 00                  01 .literal
  82 25 00 00         02 00 00 00 2
  86 25 00 00                  ff .end (operand)
  87 25 00 00                  ff .end (operand)
  89 25 00 00                  02 .if-sign-nonzero
  89 25 00 00                  01 .literal
  8a 25 00 00         00 00 00 00 0
  8e 25 00 00                  ff .end (operand)
  8f 25 00 00               03 00 .var1 FLAGS
  91 25 00 00                  01 .literal
  92 25 00 00         c2 02 00 00 706
  96 25 00 00                  ff .end (operand)
  97 25 00 00                  04 .incset
  98 25 00 00               03 00 .var1 FLAGS
  9a 25 00 00                  01 .literal
  9b 25 00 00         c1 02 00 00 705
  9f 25 00 00                  ff .end (operand)
  a0 25 00 00                  ff .end (operand)
 :a1 25 00 00                  ff .end (block)
 :a2 25 00 00                  0b .case
  a3 25 00 00                  05 .group
  a4 25 00 00                  01 .literal
  a5 25 00 00         03 00 00 00 3
  a9 25 00 00                  ff .end (operand)
  aa 25 00 00                  ff .end (operand)
  ab 25 00 00         d8 25 00 00 .case-end-address
if113
 :af 25 00 00               05 01 .if [terms=1]
  b1 25 00 00         d7 25 00 00 .else
  b5 25 00 00               03 07 .var1 CURHP
  b7 25 00 00                  01 .literal
  b8 25 00 00         03 00 00 00 3
  bc 25 00 00                  ff .end (operand)
  bd 25 00 00                  ff .end (operand)
  bf 25 00 00                  02 .if-sign-nonzero
  bf 25 00 00                  01 .literal
  c0 25 00 00         00 00 00 00 0
  c4 25 00 00                  ff .end (operand)
  c5 25 00 00               03 00 .var1 FLAGS
  c7 25 00 00                  01 .literal
  c8 25 00 00         c2 02 00 00 706
  cc 25 00 00                  ff .end (operand)
  cd 25 00 00                  04 .incset
  ce 25 00 00               03 00 .var1 FLAGS
  d0 25 00 00                  01 .literal
  d1 25 00 00         c1 02 00 00 705
  d5 25 00 00                  ff .end (operand)
  d6 25 00 00                  ff .end (operand)
 :d7 25 00 00                  ff .end (block)
 :d8 25 00 00                  0b .case
  d9 25 00 00                  05 .group
  da 25 00 00                  01 .literal
  db 25 00 00         04 00 00 00 4
  df 25 00 00                  ff .end (operand)
  e0 25 00 00                  ff .end (operand)
  e1 25 00 00         0e 26 00 00 .case-end-address
if114
 :e5 25 00 00               05 01 .if [terms=1]
  e7 25 00 00         0d 26 00 00 .else
  eb 25 00 00               03 07 .var1 CURHP
  ed 25 00 00                  01 .literal
  ee 25 00 00         04 00 00 00 4
  f2 25 00 00                  ff .end (operand)
  f3 25 00 00                  ff .end (operand)
  f5 25 00 00                  02 .if-sign-nonzero
  f5 25 00 00                  01 .literal
  f6 25 00 00         00 00 00 00 0
  fa 25 00 00                  ff .end (operand)
  fb 25 00 00               03 00 .var1 FLAGS
  fd 25 00 00                  01 .literal
  fe 25 00 00         c2 02 00 00 706
  02 26 00 00                  ff .end (operand)
  03 26 00 00                  04 .incset
  04 26 00 00               03 00 .var1 FLAGS
  06 26 00 00                  01 .literal
  07 26 00 00         c1 02 00 00 705
  0b 26 00 00                  ff .end (operand)
  0c 26 00 00                  ff .end (operand)
 :0d 26 00 00                  ff .end (block)
 :0e 26 00 00                  0b .case
  0f 26 00 00                  05 .group
  10 26 00 00                  01 .literal
  11 26 00 00         05 00 00 00 5
  15 26 00 00                  ff .end (operand)
  16 26 00 00                  ff .end (operand)
  17 26 00 00         44 26 00 00 .case-end-address
if115
 :1b 26 00 00               05 01 .if [terms=1]
  1d 26 00 00         43 26 00 00 .else
  21 26 00 00               03 07 .var1 CURHP
  23 26 00 00                  01 .literal
  24 26 00 00         05 00 00 00 5
  28 26 00 00                  ff .end (operand)
  29 26 00 00                  ff .end (operand)
  2b 26 00 00                  02 .if-sign-nonzero
  2b 26 00 00                  01 .literal
  2c 26 00 00         00 00 00 00 0
  30 26 00 00                  ff .end (operand)
  31 26 00 00               03 00 .var1 FLAGS
  33 26 00 00                  01 .literal
  34 26 00 00         c2 02 00 00 706
  38 26 00 00                  ff .end (operand)
  39 26 00 00                  04 .incset
  3a 26 00 00               03 00 .var1 FLAGS
  3c 26 00 00                  01 .literal
  3d 26 00 00         c1 02 00 00 705
  41 26 00 00                  ff .end (operand)
  42 26 00 00                  ff .end (operand)
 :43 26 00 00                  ff .end (block)
 :44 26 00 00                  0b .case
  45 26 00 00                  05 .group
  46 26 00 00                  01 .literal
  47 26 00 00         06 00 00 00 6
  4b 26 00 00                  ff .end (operand)
  4c 26 00 00                  ff .end (operand)
  4d 26 00 00         7a 26 00 00 .case-end-address
if116
 :51 26 00 00               05 01 .if [terms=1]
  53 26 00 00         79 26 00 00 .else
  57 26 00 00               03 07 .var1 CURHP
  59 26 00 00                  01 .literal
  5a 26 00 00         06 00 00 00 6
  5e 26 00 00                  ff .end (operand)
  5f 26 00 00                  ff .end (operand)
  61 26 00 00                  02 .if-sign-nonzero
  61 26 00 00                  01 .literal
  62 26 00 00         00 00 00 00 0
  66 26 00 00                  ff .end (operand)
  67 26 00 00               03 00 .var1 FLAGS
  69 26 00 00                  01 .literal
  6a 26 00 00         c2 02 00 00 706
  6e 26 00 00                  ff .end (operand)
  6f 26 00 00                  04 .incset
  70 26 00 00               03 00 .var1 FLAGS
  72 26 00 00                  01 .literal
  73 26 00 00         c1 02 00 00 705
  77 26 00 00                  ff .end (operand)
  78 26 00 00                  ff .end (operand)
 :79 26 00 00                  ff .end (block)
 :7a 26 00 00                  0b .case
  7b 26 00 00                  05 .group
  7c 26 00 00                  01 .literal
  7d 26 00 00         07 00 00 00 7
  81 26 00 00                  ff .end (operand)
  82 26 00 00                  ff .end (operand)
  83 26 00 00         b0 26 00 00 .case-end-address
if117
 :87 26 00 00               05 01 .if [terms=1]
  89 26 00 00         af 26 00 00 .else
  8d 26 00 00               03 07 .var1 CURHP
  8f 26 00 00                  01 .literal
  90 26 00 00         07 00 00 00 7
  94 26 00 00                  ff .end (operand)
  95 26 00 00                  ff .end (operand)
  97 26 00 00                  02 .if-sign-nonzero
  97 26 00 00                  01 .literal
  98 26 00 00         00 00 00 00 0
  9c 26 00 00                  ff .end (operand)
  9d 26 00 00               03 00 .var1 FLAGS
  9f 26 00 00                  01 .literal
  a0 26 00 00         c2 02 00 00 706
  a4 26 00 00                  ff .end (operand)
  a5 26 00 00                  04 .incset
  a6 26 00 00               03 00 .var1 FLAGS
  a8 26 00 00                  01 .literal
  a9 26 00 00         c1 02 00 00 705
  ad 26 00 00                  ff .end (operand)
  ae 26 00 00                  ff .end (operand)
 :af 26 00 00                  ff .end (block)
 :b0 26 00 00                  0b .case
  b1 26 00 00                  05 .group
  b2 26 00 00                  01 .literal
  b3 26 00 00         08 00 00 00 8
  b7 26 00 00                  ff .end (operand)
  b8 26 00 00                  ff .end (operand)
  b9 26 00 00         e6 26 00 00 .case-end-address
if118
 :bd 26 00 00               05 01 .if [terms=1]
  bf 26 00 00         e5 26 00 00 .else
  c3 26 00 00               03 07 .var1 CURHP
  c5 26 00 00                  01 .literal
  c6 26 00 00         08 00 00 00 8
  ca 26 00 00                  ff .end (operand)
  cb 26 00 00                  ff .end (operand)
  cd 26 00 00                  02 .if-sign-nonzero
  cd 26 00 00                  01 .literal
  ce 26 00 00         00 00 00 00 0
  d2 26 00 00                  ff .end (operand)
  d3 26 00 00               03 00 .var1 FLAGS
  d5 26 00 00                  01 .literal
  d6 26 00 00         c2 02 00 00 706
  da 26 00 00                  ff .end (operand)
  db 26 00 00                  04 .incset
  dc 26 00 00               03 00 .var1 FLAGS
  de 26 00 00                  01 .literal
  df 26 00 00         c1 02 00 00 705
  e3 26 00 00                  ff .end (operand)
  e4 26 00 00                  ff .end (operand)
 :e5 26 00 00                  ff .end (block)
 :e6 26 00 00                  ff .end (switch)
  e7 26 00 00                  07 .goto
  e8 26 00 00         5e 23 00 00 .if102
::ec 26 00 00               03 00 .var1 FLAGS
  ee 26 00 00                  01 .literal
  ef 26 00 00         74 02 00 00 628
  f3 26 00 00                  ff .end (operand)
  f4 26 00 00                  01 .set
  f5 26 00 00               03 00 .var1 FLAGS
  f7 26 00 00                  01 .literal
  f8 26 00 00         c1 02 00 00 705
  fc 26 00 00                  ff .end (operand)
  fd 26 00 00                  ff .end (operand)
  fe 26 00 00                  ff .end (block)

.event 3
* ff 26 00 00               01 5c .exec TextMenu
  01 27 00 00                  01 .literal
  02 27 00 00         04 00 00 00 4
  06 27 00 00                  ff .end (operand)
  07 27 00 00                  01 .literal
  08 27 00 00         04 00 00 00 4
  0c 27 00 00                  ff .end (operand)
  0d 27 00 00                  01 .literal
  0e 27 00 00         70 00 00 00 112
  12 27 00 00                  ff .end (operand)
  13 27 00 00                  01 .literal
  14 27 00 00         01 00 00 00 1
  18 27 00 00                  ff .end (operand)
  1a 27 00 00                     "Fight"

              46 69 67 68 74 00 
  20 27 00 00                     "Run"

              52 75 6e 00 
if119
 :24 27 00 00               05 02 .if [terms=2]
  26 27 00 00         72 27 00 00 .else
  2a 27 00 00               03 00 .var1 FLAGS
  2c 27 00 00                  01 .literal
  2d 27 00 00         fb 00 00 00 251
  31 27 00 00                  ff .end (operand)
  32 27 00 00                  ff .end (operand)
  34 27 00 00                  02 .if-sign-nonzero
  34 27 00 00                  01 .literal
  35 27 00 00         01 00 00 00 1
  39 27 00 00                  ff .end (operand)
  3a 27 00 00               03 00 .var1 FLAGS
  3c 27 00 00                  01 .literal
  3d 27 00 00         70 00 00 00 112
  41 27 00 00                  ff .end (operand)
  42 27 00 00                  ff .end (operand)
  44 27 00 00                  02 .if-sign-nonzero
  44 27 00 00                  01 .literal
  45 27 00 00         02 00 00 00 2
  49 27 00 00                  ff .end (operand)
  4a 27 00 00               01 21 .exec SText
  4c 27 00 00                  01 .literal
  4d 27 00 00         00 00 00 00 0
  51 27 00 00                  ff .end (operand)
  52 27 00 00                     "Can't run from Boss Battles!"

              43 61 6e 27 74 20 72 75 
              6e 20 66 72 6f 6d 20 42 
              6f 73 73 20 42 61 74 74 
              6c 65 73 21 00 
  6f 27 00 00                     ""

              00 
  70 27 00 00                     ""

              00 
  71 27 00 00                  ff .end (return)
if120
::72 27 00 00               05 02 .if [terms=2]
  74 27 00 00         5e 2a 00 00 .else
  78 27 00 00               03 00 .var1 FLAGS
  7a 27 00 00                  01 .literal
  7b 27 00 00         fb 00 00 00 251
  7f 27 00 00                  ff .end (operand)
  80 27 00 00                  ff .end (operand)
  82 27 00 00                  03 .if-sign-nonzero
  82 27 00 00                  01 .literal
  83 27 00 00         01 00 00 00 1
  87 27 00 00                  ff .end (operand)
  88 27 00 00               03 00 .var1 FLAGS
  8a 27 00 00                  01 .literal
  8b 27 00 00         70 00 00 00 112
  8f 27 00 00                  ff .end (operand)
  90 27 00 00                  ff .end (operand)
  92 27 00 00                  02 .if-sign-nonzero
  92 27 00 00                  01 .literal
  93 27 00 00         02 00 00 00 2
  97 27 00 00                  ff .end (operand)
  98 27 00 00               01 12 .exec Banner
  9a 27 00 00                     "You ran!"

              59 6f 75 20 72 61 6e 21 
              00 
  a3 27 00 00                  01 .literal
  a4 27 00 00         01 00 00 00 1
  a8 27 00 00                  ff .end (operand)
  a9 27 00 00               01 39 .exec VcClear
  ab 27 00 00               02 2f .var0 LAYERVC
  ad 27 00 00                  01 .set
  ae 27 00 00                  01 .literal
  af 27 00 00         00 00 00 00 0
  b3 27 00 00                  ff .end (operand)
  b4 27 00 00               03 00 .var1 FLAGS
  b6 27 00 00                  01 .literal
  b7 27 00 00         20 03 00 00 800
  bb 27 00 00                  ff .end (operand)
  bc 27 00 00                  01 .set
  bd 27 00 00                  01 .literal
  be 27 00 00         00 00 00 00 0
  c2 27 00 00                  ff .end (operand)
  c3 27 00 00               03 00 .var1 FLAGS
  c5 27 00 00                  01 .literal
  c6 27 00 00         53 03 00 00 851
  ca 27 00 00                  ff .end (operand)
  cb 27 00 00                  01 .set
  cc 27 00 00                  01 .literal
  cd 27 00 00         00 00 00 00 0
  d1 27 00 00                  ff .end (operand)
  d2 27 00 00               03 00 .var1 FLAGS
  d4 27 00 00                  01 .literal
  d5 27 00 00         54 03 00 00 852
  d9 27 00 00                  ff .end (operand)
  da 27 00 00                  01 .set
  db 27 00 00                  01 .literal
  dc 27 00 00         00 00 00 00 0
  e0 27 00 00                  ff .end (operand)
  e1 27 00 00               03 00 .var1 FLAGS
  e3 27 00 00                  01 .literal
  e4 27 00 00         55 03 00 00 853
  e8 27 00 00                  ff .end (operand)
  e9 27 00 00                  01 .set
  ea 27 00 00                  01 .literal
  eb 27 00 00         00 00 00 00 0
  ef 27 00 00                  ff .end (operand)
  f0 27 00 00               03 00 .var1 FLAGS
  f2 27 00 00                  01 .literal
  f3 27 00 00         56 03 00 00 854
  f7 27 00 00                  ff .end (operand)
  f8 27 00 00                  01 .set
  f9 27 00 00                  01 .literal
  fa 27 00 00         00 00 00 00 0
  fe 27 00 00                  ff .end (operand)
  ff 27 00 00               03 00 .var1 FLAGS
  01 28 00 00                  01 .literal
  02 28 00 00         57 03 00 00 855
  06 28 00 00                  ff .end (operand)
  07 28 00 00                  01 .set
  08 28 00 00                  01 .literal
  09 28 00 00         00 00 00 00 0
  0d 28 00 00                  ff .end (operand)
  0e 28 00 00               03 00 .var1 FLAGS
  10 28 00 00                  01 .literal
  11 28 00 00         58 03 00 00 856
  15 28 00 00                  ff .end (operand)
  16 28 00 00                  01 .set
  17 28 00 00                  01 .literal
  18 28 00 00         00 00 00 00 0
  1c 28 00 00                  ff .end (operand)
  1d 28 00 00               03 00 .var1 FLAGS
  1f 28 00 00                  01 .literal
  20 28 00 00         59 03 00 00 857
  24 28 00 00                  ff .end (operand)
  25 28 00 00                  01 .set
  26 28 00 00                  01 .literal
  27 28 00 00         00 00 00 00 0
  2b 28 00 00                  ff .end (operand)
  2c 28 00 00               03 00 .var1 FLAGS
  2e 28 00 00                  01 .literal
  2f 28 00 00         5a 03 00 00 858
  33 28 00 00                  ff .end (operand)
  34 28 00 00                  01 .set
  35 28 00 00                  01 .literal
  36 28 00 00         00 00 00 00 0
  3a 28 00 00                  ff .end (operand)
  3b 28 00 00               03 00 .var1 FLAGS
  3d 28 00 00                  01 .literal
  3e 28 00 00         5b 03 00 00 859
  42 28 00 00                  ff .end (operand)
  43 28 00 00                  01 .set
  44 28 00 00                  01 .literal
  45 28 00 00         00 00 00 00 0
  49 28 00 00                  ff .end (operand)
  4a 28 00 00               03 00 .var1 FLAGS
  4c 28 00 00                  01 .literal
  4d 28 00 00         5c 03 00 00 860
  51 28 00 00                  ff .end (operand)
  52 28 00 00                  01 .set
  53 28 00 00                  01 .literal
  54 28 00 00         00 00 00 00 0
  58 28 00 00                  ff .end (operand)
  59 28 00 00               01 24 .exec Wait
  5b 28 00 00                  01 .literal
  5c 28 00 00         64 00 00 00 100
  60 28 00 00                  ff .end (operand)
  61 28 00 00               01 23 .exec EnableMenu
  63 28 00 00               02 1f .var0 DRAWPARTY
  65 28 00 00                  01 .set
  66 28 00 00                  01 .literal
  67 28 00 00         01 00 00 00 1
  6b 28 00 00                  ff .end (operand)
  6c 28 00 00               03 00 .var1 FLAGS
  6e 28 00 00                  01 .literal
  6f 28 00 00         be 00 00 00 190
  73 28 00 00                  ff .end (operand)
  74 28 00 00                  01 .set
  75 28 00 00                  01 .literal
  76 28 00 00         01 00 00 00 1
  7a 28 00 00                  ff .end (operand)
if121
 :7b 28 00 00               05 01 .if [terms=1]
  7d 28 00 00         b6 28 00 00 .else
  81 28 00 00               03 00 .var1 FLAGS
  83 28 00 00                  01 .literal
  84 28 00 00         21 03 00 00 801
  88 28 00 00                  ff .end (operand)
  89 28 00 00                  ff .end (operand)
  8b 28 00 00                  02 .if-sign-nonzero
  8b 28 00 00                  01 .literal
  8c 28 00 00         01 00 00 00 1
  90 28 00 00                  ff .end (operand)
  91 28 00 00               01 01 .exec MapSwitch
  93 28 00 00                     "damfor.map"

              64 61 6d 66 6f 72 2e 6d 
              61 70 00 
  9e 28 00 00               03 00 .var1 FLAGS
  a0 28 00 00                  01 .literal
  a1 28 00 00         6d 00 00 00 109
  a5 28 00 00                  ff .end (operand)
  a6 28 00 00                  ff .end (operand)
  a7 28 00 00               03 00 .var1 FLAGS
  a9 28 00 00                  01 .literal
  aa 28 00 00         6e 00 00 00 110
  ae 28 00 00                  ff .end (operand)
  af 28 00 00                  ff .end (operand)
  b0 28 00 00                  01 .literal
  b1 28 00 00         00 00 00 00 0
  b5 28 00 00                  ff .end (operand)
if122
 :b6 28 00 00               05 01 .if [terms=1]
  b8 28 00 00         f3 28 00 00 .else
  bc 28 00 00               03 00 .var1 FLAGS
  be 28 00 00                  01 .literal
  bf 28 00 00         21 03 00 00 801
  c3 28 00 00                  ff .end (operand)
  c4 28 00 00                  ff .end (operand)
  c6 28 00 00                  02 .if-sign-nonzero
  c6 28 00 00                  01 .literal
  c7 28 00 00         02 00 00 00 2
  cb 28 00 00                  ff .end (operand)
  cc 28 00 00               01 01 .exec MapSwitch
  ce 28 00 00                     "packwood.map"

              70 61 63 6b 77 6f 6f 64 
              2e 6d 61 70 00 
  db 28 00 00               03 00 .var1 FLAGS
  dd 28 00 00                  01 .literal
  de 28 00 00         6d 00 00 00 109
  e2 28 00 00                  ff .end (operand)
  e3 28 00 00                  ff .end (operand)
  e4 28 00 00               03 00 .var1 FLAGS
  e6 28 00 00                  01 .literal
  e7 28 00 00         6e 00 00 00 110
  eb 28 00 00                  ff .end (operand)
  ec 28 00 00                  ff .end (operand)
  ed 28 00 00                  01 .literal
  ee 28 00 00         00 00 00 00 0
  f2 28 00 00                  ff .end (operand)
if123
 :f3 28 00 00               05 01 .if [terms=1]
  f5 28 00 00         2f 29 00 00 .else
  f9 28 00 00               03 00 .var1 FLAGS
  fb 28 00 00                  01 .literal
  fc 28 00 00         21 03 00 00 801
  00 29 00 00                  ff .end (operand)
  01 29 00 00                  ff .end (operand)
  03 29 00 00                  02 .if-sign-nonzero
  03 29 00 00                  01 .literal
  04 29 00 00         03 00 00 00 3
  08 29 00 00                  ff .end (operand)
  09 29 00 00               01 01 .exec MapSwitch
  0b 29 00 00                     "orchard.map"

              6f 72 63 68 61 72 64 2e 
              6d 61 70 00 
  17 29 00 00               03 00 .var1 FLAGS
  19 29 00 00                  01 .literal
  1a 29 00 00         6d 00 00 00 109
  1e 29 00 00                  ff .end (operand)
  1f 29 00 00                  ff .end (operand)
  20 29 00 00               03 00 .var1 FLAGS
  22 29 00 00                  01 .literal
  23 29 00 00         6e 00 00 00 110
  27 29 00 00                  ff .end (operand)
  28 29 00 00                  ff .end (operand)
  29 29 00 00                  01 .literal
  2a 29 00 00         00 00 00 00 0
  2e 29 00 00                  ff .end (operand)
if124
 :2f 29 00 00               05 01 .if [terms=1]
  31 29 00 00         6c 29 00 00 .else
  35 29 00 00               03 00 .var1 FLAGS
  37 29 00 00                  01 .literal
  38 29 00 00         21 03 00 00 801
  3c 29 00 00                  ff .end (operand)
  3d 29 00 00                  ff .end (operand)
  3f 29 00 00                  02 .if-sign-nonzero
  3f 29 00 00                  01 .literal
  40 29 00 00         04 00 00 00 4
  44 29 00 00                  ff .end (operand)
  45 29 00 00               01 01 .exec MapSwitch
  47 29 00 00                     "greatfor.map"

              67 72 65 61 74 66 6f 72 
              2e 6d 61 70 00 
  54 29 00 00               03 00 .var1 FLAGS
  56 29 00 00                  01 .literal
  57 29 00 00         6d 00 00 00 109
  5b 29 00 00                  ff .end (operand)
  5c 29 00 00                  ff .end (operand)
  5d 29 00 00               03 00 .var1 FLAGS
  5f 29 00 00                  01 .literal
  60 29 00 00         6e 00 00 00 110
  64 29 00 00                  ff .end (operand)
  65 29 00 00                  ff .end (operand)
  66 29 00 00                  01 .literal
  67 29 00 00         00 00 00 00 0
  6b 29 00 00                  ff .end (operand)
if125
 :6c 29 00 00               05 01 .if [terms=1]
  6e 29 00 00         a8 29 00 00 .else
  72 29 00 00               03 00 .var1 FLAGS
  74 29 00 00                  01 .literal
  75 29 00 00         21 03 00 00 801
  79 29 00 00                  ff .end (operand)
  7a 29 00 00                  ff .end (operand)
  7c 29 00 00                  02 .if-sign-nonzero
  7c 29 00 00                  01 .literal
  7d 29 00 00         05 00 00 00 5
  81 29 00 00                  ff .end (operand)
  82 29 00 00               01 01 .exec MapSwitch
  84 29 00 00                     "morefor.map"

              6d 6f 72 65 66 6f 72 2e 
              6d 61 70 00 
  90 29 00 00               03 00 .var1 FLAGS
  92 29 00 00                  01 .literal
  93 29 00 00         6d 00 00 00 109
  97 29 00 00                  ff .end (operand)
  98 29 00 00                  ff .end (operand)
  99 29 00 00               03 00 .var1 FLAGS
  9b 29 00 00                  01 .literal
  9c 29 00 00         6e 00 00 00 110
  a0 29 00 00                  ff .end (operand)
  a1 29 00 00                  ff .end (operand)
  a2 29 00 00                  01 .literal
  a3 29 00 00         00 00 00 00 0
  a7 29 00 00                  ff .end (operand)
if126
 :a8 29 00 00               05 01 .if [terms=1]
  aa 29 00 00         e5 29 00 00 .else
  ae 29 00 00               03 00 .var1 FLAGS
  b0 29 00 00                  01 .literal
  b1 29 00 00         21 03 00 00 801
  b5 29 00 00                  ff .end (operand)
  b6 29 00 00                  ff .end (operand)
  b8 29 00 00                  02 .if-sign-nonzero
  b8 29 00 00                  01 .literal
  b9 29 00 00         06 00 00 00 6
  bd 29 00 00                  ff .end (operand)
  be 29 00 00               01 01 .exec MapSwitch
  c0 29 00 00                     "overland.map"

              6f 76 65 72 6c 61 6e 64 
              2e 6d 61 70 00 
  cd 29 00 00               03 00 .var1 FLAGS
  cf 29 00 00                  01 .literal
  d0 29 00 00         6d 00 00 00 109
  d4 29 00 00                  ff .end (operand)
  d5 29 00 00                  ff .end (operand)
  d6 29 00 00               03 00 .var1 FLAGS
  d8 29 00 00                  01 .literal
  d9 29 00 00         6e 00 00 00 110
  dd 29 00 00                  ff .end (operand)
  de 29 00 00                  ff .end (operand)
  df 29 00 00                  01 .literal
  e0 29 00 00         00 00 00 00 0
  e4 29 00 00                  ff .end (operand)
if127
 :e5 29 00 00               05 01 .if [terms=1]
  e7 29 00 00         22 2a 00 00 .else
  eb 29 00 00               03 00 .var1 FLAGS
  ed 29 00 00                  01 .literal
  ee 29 00 00         21 03 00 00 801
  f2 29 00 00                  ff .end (operand)
  f3 29 00 00                  ff .end (operand)
  f5 29 00 00                  02 .if-sign-nonzero
  f5 29 00 00                  01 .literal
  f6 29 00 00         07 00 00 00 7
  fa 29 00 00                  ff .end (operand)
  fb 29 00 00               01 01 .exec MapSwitch
  fd 29 00 00                     "packtown.map"

              70 61 63 6b 74 6f 77 6e 
              2e 6d 61 70 00 
  0a 2a 00 00               03 00 .var1 FLAGS
  0c 2a 00 00                  01 .literal
  0d 2a 00 00         6d 00 00 00 109
  11 2a 00 00                  ff .end (operand)
  12 2a 00 00                  ff .end (operand)
  13 2a 00 00               03 00 .var1 FLAGS
  15 2a 00 00                  01 .literal
  16 2a 00 00         6e 00 00 00 110
  1a 2a 00 00                  ff .end (operand)
  1b 2a 00 00                  ff .end (operand)
  1c 2a 00 00                  01 .literal
  1d 2a 00 00         00 00 00 00 0
  21 2a 00 00                  ff .end (operand)
if128
 :22 2a 00 00               05 01 .if [terms=1]
  24 2a 00 00         5e 2a 00 00 .else
  28 2a 00 00               03 00 .var1 FLAGS
  2a 2a 00 00                  01 .literal
  2b 2a 00 00         21 03 00 00 801
  2f 2a 00 00                  ff .end (operand)
  30 2a 00 00                  ff .end (operand)
  32 2a 00 00                  02 .if-sign-nonzero
  32 2a 00 00                  01 .literal
  33 2a 00 00         08 00 00 00 8
  37 2a 00 00                  ff .end (operand)
  38 2a 00 00               01 01 .exec MapSwitch
  3a 2a 00 00                     "kreegah.map"

              6b 72 65 65 67 61 68 2e 
              6d 61 70 00 
  46 2a 00 00               03 00 .var1 FLAGS
  48 2a 00 00                  01 .literal
  49 2a 00 00         6d 00 00 00 109
  4d 2a 00 00                  ff .end (operand)
  4e 2a 00 00                  ff .end (operand)
  4f 2a 00 00               03 00 .var1 FLAGS
  51 2a 00 00                  01 .literal
  52 2a 00 00         6e 00 00 00 110
  56 2a 00 00                  ff .end (operand)
  57 2a 00 00                  ff .end (operand)
  58 2a 00 00                  01 .literal
  59 2a 00 00         00 00 00 00 0
  5d 2a 00 00                  ff .end (operand)
::5e 2a 00 00               01 18 .exec CallEvent
  61 2a 00 00                  01 .literal
  62 2a 00 00         04 00 00 00 4
  66 2a 00 00                  ff .end (operand)
  67 2a 00 00               01 18 .exec CallEvent
  6a 2a 00 00                  01 .literal
  6b 2a 00 00         05 00 00 00 5
  6f 2a 00 00                  ff .end (operand)
  70 2a 00 00               01 18 .exec CallEvent
  73 2a 00 00                  01 .literal
  74 2a 00 00         06 00 00 00 6
  78 2a 00 00                  ff .end (operand)
  79 2a 00 00               01 18 .exec CallEvent
  7c 2a 00 00                  01 .literal
  7d 2a 00 00         07 00 00 00 7
  81 2a 00 00                  ff .end (operand)
  82 2a 00 00               01 18 .exec CallEvent
  85 2a 00 00                  01 .literal
  86 2a 00 00         08 00 00 00 8
  8a 2a 00 00                  ff .end (operand)
  8b 2a 00 00               01 18 .exec CallEvent
  8e 2a 00 00                  01 .literal
  8f 2a 00 00         09 00 00 00 9
  93 2a 00 00                  ff .end (operand)
  94 2a 00 00               01 18 .exec CallEvent
  97 2a 00 00                  01 .literal
  98 2a 00 00         0a 00 00 00 10
  9c 2a 00 00                  ff .end (operand)
  9d 2a 00 00               01 18 .exec CallEvent
  a0 2a 00 00                  01 .literal
  a1 2a 00 00         0b 00 00 00 11
  a5 2a 00 00                  ff .end (operand)
  a6 2a 00 00               01 18 .exec CallEvent
  a9 2a 00 00                  01 .literal
  aa 2a 00 00         0c 00 00 00 12
  ae 2a 00 00                  ff .end (operand)
  af 2a 00 00               01 17 .exec ChainEvent
  b2 2a 00 00                  01 .literal
  b3 2a 00 00         0d 00 00 00 13
  b7 2a 00 00                  ff .end (operand)
  b8 2a 00 00                  ff .end (block)

.event 4
* b9 2a 00 00               01 20 .exec Redraw
if129
 :bb 2a 00 00               05 01 .if [terms=1]
  bd 2a 00 00         8d 2d 00 00 .else
  c1 2a 00 00               03 00 .var1 FLAGS
  c3 2a 00 00                  01 .literal
  c4 2a 00 00         76 02 00 00 630
  c8 2a 00 00                  ff .end (operand)
  c9 2a 00 00                  ff .end (operand)
  cb 2a 00 00                  02 .if-sign-nonzero
  cb 2a 00 00                  01 .literal
  cc 2a 00 00         00 00 00 00 0
  d0 2a 00 00                  ff .end (operand)
if130
 :d1 2a 00 00               05 02 .if [terms=2]
  d3 2a 00 00         8d 2d 00 00 .else
  d7 2a 00 00               03 02 .var1 CHAR
  d9 2a 00 00                  01 .literal
  da 2a 00 00         01 00 00 00 1
  de 2a 00 00                  ff .end (operand)
  df 2a 00 00                  ff .end (operand)
  e1 2a 00 00                  01 .if-sign-nonzero
  e1 2a 00 00               03 07 .var1 CURHP
  e3 2a 00 00                  01 .literal
  e4 2a 00 00         01 00 00 00 1
  e8 2a 00 00                  ff .end (operand)
  e9 2a 00 00                  ff .end (operand)
  eb 2a 00 00                  04 .if-sign-nonzero
  eb 2a 00 00                  01 .literal
  ec 2a 00 00         00 00 00 00 0
  f0 2a 00 00                  ff .end (operand)
  f1 2a 00 00               03 00 .var1 FLAGS
  f3 2a 00 00                  01 .literal
  f4 2a 00 00         7e 02 00 00 638
  f8 2a 00 00                  ff .end (operand)
  f9 2a 00 00                  01 .set
  fa 2a 00 00                  01 .literal
  fb 2a 00 00         01 00 00 00 1
  ff 2a 00 00                  ff .end (operand)
if131
 :00 2b 00 00               05 01 .if [terms=1]
  02 2b 00 00         5d 2b 00 00 .else
  06 2b 00 00               03 00 .var1 FLAGS
  08 2b 00 00                  01 .literal
  09 2b 00 00         e9 03 00 00 1001
  0d 2b 00 00                  ff .end (operand)
  0e 2b 00 00                  ff .end (operand)
  10 2b 00 00                  06 .if-sign-nonzero
  10 2b 00 00               03 08 .var1 MAXHP
  12 2b 00 00                  01 .literal
  13 2b 00 00         01 00 00 00 1
  17 2b 00 00                  ff .end (operand)
  18 2b 00 00                  01 .add +
  19 2b 00 00               03 08 .var1 MAXHP
  1b 2b 00 00                  01 .literal
  1c 2b 00 00         01 00 00 00 1
  20 2b 00 00                  ff .end (operand)
  21 2b 00 00                  02 .sub -
  22 2b 00 00               03 2a .var1 FER
  24 2b 00 00                  01 .literal
  25 2b 00 00         01 00 00 00 1
  29 2b 00 00                  ff .end (operand)
  2a 2b 00 00                  ff .end (operand)
  2b 2b 00 00               01 5c .exec TextMenu
  2d 2b 00 00                  01 .literal
  2e 2b 00 00         04 00 00 00 4
  32 2b 00 00                  ff .end (operand)
  33 2b 00 00                  01 .literal
  34 2b 00 00         04 00 00 00 4
  38 2b 00 00                  ff .end (operand)
  39 2b 00 00                  01 .literal
  3a 2b 00 00         76 02 00 00 630
  3e 2b 00 00                  ff .end (operand)
  3f 2b 00 00                  01 .literal
  40 2b 00 00         01 00 00 00 1
  44 2b 00 00                  ff .end (operand)
  46 2b 00 00                     "Attack"

              41 74 74 61 63 6b 00 
  4d 2b 00 00                     "Jump"

              4a 75 6d 70 00 
  52 2b 00 00                     "Magic"

              4d 61 67 69 63 00 
  58 2b 00 00                     "Item"

              49 74 65 6d 00 
if132
 :5d 2b 00 00               05 01 .if [terms=1]
  5f 2b 00 00         c5 2b 00 00 .else
  63 2b 00 00               03 00 .var1 FLAGS
  65 2b 00 00                  01 .literal
  66 2b 00 00         e9 03 00 00 1001
  6a 2b 00 00                  ff .end (operand)
  6b 2b 00 00                  ff .end (operand)
  6d 2b 00 00                  05 .if-sign-nonzero
  6d 2b 00 00               03 08 .var1 MAXHP
  6f 2b 00 00                  01 .literal
  70 2b 00 00         01 00 00 00 1
  74 2b 00 00                  ff .end (operand)
  75 2b 00 00                  01 .add +
  76 2b 00 00               03 08 .var1 MAXHP
  78 2b 00 00                  01 .literal
  79 2b 00 00         01 00 00 00 1
  7d 2b 00 00                  ff .end (operand)
  7e 2b 00 00                  02 .sub -
  7f 2b 00 00               03 2a .var1 FER
  81 2b 00 00                  01 .literal
  82 2b 00 00         01 00 00 00 1
  86 2b 00 00                  ff .end (operand)
  87 2b 00 00                  ff .end (operand)
  88 2b 00 00               01 5c .exec TextMenu
  8a 2b 00 00                  01 .literal
  8b 2b 00 00         04 00 00 00 4
  8f 2b 00 00                  ff .end (operand)
  90 2b 00 00                  01 .literal
  91 2b 00 00         04 00 00 00 4
  95 2b 00 00                  ff .end (operand)
  96 2b 00 00                  01 .literal
  97 2b 00 00         76 02 00 00 630
  9b 2b 00 00                  ff .end (operand)
  9c 2b 00 00                  01 .literal
  9d 2b 00 00         01 00 00 00 1
  a1 2b 00 00                  ff .end (operand)
  a3 2b 00 00                     "Attack"

              41 74 74 61 63 6b 00 
  aa 2b 00 00                     "Jump"

              4a 75 6d 70 00 
  af 2b 00 00                     "Magic"

              4d 61 67 69 63 00 
  b5 2b 00 00                     "Item"

              49 74 65 6d 00 
  ba 2b 00 00                     "Anger Move"

              41 6e 67 65 72 20 4d 6f 
              76 65 00 
 :c5 2b 00 00                  0a .switch
  c6 2b 00 00               03 00 .var1 FLAGS
  c8 2b 00 00                  01 .literal
  c9 2b 00 00         76 02 00 00 630
  cd 2b 00 00                  ff .end (operand)
  ce 2b 00 00                  ff .end (operand)
  cf 2b 00 00                  0b .case
  d0 2b 00 00                  05 .group
  d1 2b 00 00                  01 .literal
  d2 2b 00 00         01 00 00 00 1
  d6 2b 00 00                  ff .end (operand)
  d7 2b 00 00                  ff .end (operand)
  d8 2b 00 00         fe 2b 00 00 .case-end-address
  dc 2b 00 00               03 00 .var1 FLAGS
  de 2b 00 00                  01 .literal
  df 2b 00 00         59 02 00 00 601
  e3 2b 00 00                  ff .end (operand)
  e4 2b 00 00                  04 .incset
  e5 2b 00 00               04 00 .var2 RANDOM
  e7 2b 00 00                  01 .literal
  e8 2b 00 00         01 00 00 00 1
  ec 2b 00 00                  ff .end (operand)
  ed 2b 00 00                  01 .literal
  ee 2b 00 00         03 00 00 00 3
  f2 2b 00 00                  ff .end (operand)
  f3 2b 00 00                  ff .end (operand)
  f4 2b 00 00               01 18 .exec CallEvent
  f7 2b 00 00                  01 .literal
  f8 2b 00 00         0e 00 00 00 14
  fc 2b 00 00                  ff .end (operand)
  fd 2b 00 00                  ff .end (block)
 :fe 2b 00 00                  0b .case
  ff 2b 00 00                  05 .group
  00 2c 00 00                  01 .literal
  01 2c 00 00         02 00 00 00 2
  05 2c 00 00                  ff .end (operand)
  06 2c 00 00                  ff .end (operand)
  07 2c 00 00         23 2d 00 00 .case-end-address
  0b 2c 00 00               03 00 .var1 FLAGS
  0d 2c 00 00                  01 .literal
  0e 2c 00 00         59 02 00 00 601
  12 2c 00 00                  ff .end (operand)
  13 2c 00 00                  04 .incset
  14 2c 00 00               03 22 .var1 ATK
  16 2c 00 00                  01 .literal
  17 2c 00 00         01 00 00 00 1
  1b 2c 00 00                  ff .end (operand)
  1c 2c 00 00                  ff .end (operand)
  1d 2c 00 00               03 00 .var1 FLAGS
  1f 2c 00 00                  01 .literal
  20 2c 00 00         59 02 00 00 601
  24 2c 00 00                  ff .end (operand)
  25 2c 00 00                  04 .incset
  26 2c 00 00               04 00 .var2 RANDOM
  28 2c 00 00                  01 .literal
  29 2c 00 00         01 00 00 00 1
  2d 2c 00 00                  ff .end (operand)
  2e 2c 00 00                  01 .literal
  2f 2c 00 00         03 00 00 00 3
  33 2c 00 00                  ff .end (operand)
  34 2c 00 00                  ff .end (operand)
  35 2c 00 00               03 00 .var1 FLAGS
  37 2c 00 00                  01 .literal
  38 2c 00 00         5a 02 00 00 602
  3c 2c 00 00                  ff .end (operand)
  3d 2c 00 00                  01 .set
  3e 2c 00 00                  01 .literal
  3f 2c 00 00         00 00 00 00 0
  43 2c 00 00                  ff .end (operand)
if133
 :44 2c 00 00               05 01 .if [terms=1]
  46 2c 00 00         6f 2c 00 00 .else
  4a 2c 00 00               04 02 .var2 ITEMS
  4c 2c 00 00                  01 .literal
  4d 2c 00 00         01 00 00 00 1
  51 2c 00 00                  ff .end (operand)
  52 2c 00 00                  01 .literal
  53 2c 00 00         04 00 00 00 4
  57 2c 00 00                  ff .end (operand)
  58 2c 00 00                  ff .end (operand)
  5a 2c 00 00                  02 .if-sign-nonzero
  5a 2c 00 00                  01 .literal
  5b 2c 00 00         03 00 00 00 3
  5f 2c 00 00                  ff .end (operand)
  60 2c 00 00               03 00 .var1 FLAGS
  62 2c 00 00                  01 .literal
  63 2c 00 00         59 02 00 00 601
  67 2c 00 00                  ff .end (operand)
  68 2c 00 00                  04 .incset
  69 2c 00 00                  01 .literal
  6a 2c 00 00         19 00 00 00 25
  6e 2c 00 00                  ff .end (operand)
if134
::6f 2c 00 00               05 01 .if [terms=1]
  71 2c 00 00         bb 2c 00 00 .else
  75 2c 00 00               04 02 .var2 ITEMS
  77 2c 00 00                  01 .literal
  78 2c 00 00         01 00 00 00 1
  7c 2c 00 00                  ff .end (operand)
  7d 2c 00 00                  01 .literal
  7e 2c 00 00         04 00 00 00 4
  82 2c 00 00                  ff .end (operand)
  83 2c 00 00                  ff .end (operand)
  85 2c 00 00                  02 .if-sign-nonzero
  85 2c 00 00                  01 .literal
  86 2c 00 00         4e 00 00 00 78
  8a 2c 00 00                  ff .end (operand)
  8b 2c 00 00               03 00 .var1 FLAGS
  8d 2c 00 00                  01 .literal
  8e 2c 00 00         59 02 00 00 601
  92 2c 00 00                  ff .end (operand)
  93 2c 00 00                  04 .incset
  94 2c 00 00               03 22 .var1 ATK
  96 2c 00 00                  01 .literal
  97 2c 00 00         01 00 00 00 1
  9b 2c 00 00                  ff .end (operand)
  9c 2c 00 00                  ff .end (operand)
  9d 2c 00 00               03 00 .var1 FLAGS
  9f 2c 00 00                  01 .literal
  a0 2c 00 00         59 02 00 00 601
  a4 2c 00 00                  ff .end (operand)
  a5 2c 00 00                  04 .incset
  a6 2c 00 00                  01 .literal
  a7 2c 00 00         4b 00 00 00 75
  ab 2c 00 00                  ff .end (operand)
  ac 2c 00 00               03 00 .var1 FLAGS
  ae 2c 00 00                  01 .literal
  af 2c 00 00         5a 02 00 00 602
  b3 2c 00 00                  ff .end (operand)
  b4 2c 00 00                  04 .incset
  b5 2c 00 00                  01 .literal
  b6 2c 00 00         2d 00 00 00 45
  ba 2c 00 00                  ff .end (operand)
if135
::bb 2c 00 00               05 01 .if [terms=1]
  bd 2c 00 00         19 2d 00 00 .else
  c1 2c 00 00               04 02 .var2 ITEMS
  c3 2c 00 00                  01 .literal
  c4 2c 00 00         01 00 00 00 1
  c8 2c 00 00                  ff .end (operand)
  c9 2c 00 00                  01 .literal
  ca 2c 00 00         04 00 00 00 4
  ce 2c 00 00                  ff .end (operand)
  cf 2c 00 00                  ff .end (operand)
  d1 2c 00 00                  02 .if-sign-nonzero
  d1 2c 00 00                  01 .literal
  d2 2c 00 00         4f 00 00 00 79
  d6 2c 00 00                  ff .end (operand)
  d7 2c 00 00               03 00 .var1 FLAGS
  d9 2c 00 00                  01 .literal
  da 2c 00 00         59 02 00 00 601
  de 2c 00 00                  ff .end (operand)
  df 2c 00 00                  04 .incset
  e0 2c 00 00               03 22 .var1 ATK
  e2 2c 00 00                  01 .literal
  e3 2c 00 00         01 00 00 00 1
  e7 2c 00 00                  ff .end (operand)
  e8 2c 00 00                  ff .end (operand)
  e9 2c 00 00               03 00 .var1 FLAGS
  eb 2c 00 00                  01 .literal
  ec 2c 00 00         59 02 00 00 601
  f0 2c 00 00                  ff .end (operand)
  f1 2c 00 00                  04 .incset
  f2 2c 00 00               03 22 .var1 ATK
  f4 2c 00 00                  01 .literal
  f5 2c 00 00         01 00 00 00 1
  f9 2c 00 00                  ff .end (operand)
  fa 2c 00 00                  ff .end (operand)
  fb 2c 00 00               03 00 .var1 FLAGS
  fd 2c 00 00                  01 .literal
  fe 2c 00 00         59 02 00 00 601
  02 2d 00 00                  ff .end (operand)
  03 2d 00 00                  04 .incset
  04 2d 00 00                  01 .literal
  05 2d 00 00         4b 00 00 00 75
  09 2d 00 00                  ff .end (operand)
  0a 2d 00 00               03 00 .var1 FLAGS
  0c 2d 00 00                  01 .literal
  0d 2d 00 00         5a 02 00 00 602
  11 2d 00 00                  ff .end (operand)
  12 2d 00 00                  04 .incset
  13 2d 00 00                  01 .literal
  14 2d 00 00         2f 00 00 00 47
  18 2d 00 00                  ff .end (operand)
::19 2d 00 00               01 18 .exec CallEvent
  1c 2d 00 00                  01 .literal
  1d 2d 00 00         0e 00 00 00 14
  21 2d 00 00                  ff .end (operand)
  22 2d 00 00                  ff .end (block)
 :23 2d 00 00                  0b .case
  24 2d 00 00                  05 .group
  25 2d 00 00                  01 .literal
  26 2d 00 00         03 00 00 00 3
  2a 2d 00 00                  ff .end (operand)
  2b 2d 00 00                  ff .end (operand)
  2c 2d 00 00         4b 2d 00 00 .case-end-address
  30 2d 00 00               03 00 .var1 FLAGS
  32 2d 00 00                  01 .literal
  33 2d 00 00         76 02 00 00 630
  37 2d 00 00                  ff .end (operand)
  38 2d 00 00                  01 .set
  39 2d 00 00                  01 .literal
  3a 2d 00 00         00 00 00 00 0
  3e 2d 00 00                  ff .end (operand)
  3f 2d 00 00               01 5f .exec MagicMenu
  41 2d 00 00               03 02 .var1 CHAR
  43 2d 00 00                  01 .literal
  44 2d 00 00         01 00 00 00 1
  48 2d 00 00                  ff .end (operand)
  49 2d 00 00                  ff .end (operand)
  4a 2d 00 00                  ff .end (block)
 :4b 2d 00 00                  0b .case
  4c 2d 00 00                  05 .group
  4d 2d 00 00                  01 .literal
  4e 2d 00 00         04 00 00 00 4
  52 2d 00 00                  ff .end (operand)
  53 2d 00 00                  ff .end (operand)
  54 2d 00 00         73 2d 00 00 .case-end-address
  58 2d 00 00               03 00 .var1 FLAGS
  5a 2d 00 00                  01 .literal
  5b 2d 00 00         76 02 00 00 630
  5f 2d 00 00                  ff .end (operand)
  60 2d 00 00                  01 .set
  61 2d 00 00                  01 .literal
  62 2d 00 00         00 00 00 00 0
  66 2d 00 00                  ff .end (operand)
  67 2d 00 00               01 5d .exec ItemMenu
  69 2d 00 00               03 02 .var1 CHAR
  6b 2d 00 00                  01 .literal
  6c 2d 00 00         01 00 00 00 1
  70 2d 00 00                  ff .end (operand)
  71 2d 00 00                  ff .end (operand)
  72 2d 00 00                  ff .end (block)
 :73 2d 00 00                  0b .case
  74 2d 00 00                  05 .group
  75 2d 00 00                  01 .literal
  76 2d 00 00         05 00 00 00 5
  7a 2d 00 00                  ff .end (operand)
  7b 2d 00 00                  ff .end (operand)
  7c 2d 00 00         8c 2d 00 00 .case-end-address
  80 2d 00 00               01 5f .exec MagicMenu
  82 2d 00 00               03 02 .var1 CHAR
  84 2d 00 00                  01 .literal
  85 2d 00 00         01 00 00 00 1
  89 2d 00 00                  ff .end (operand)
  8a 2d 00 00                  ff .end (operand)
  8b 2d 00 00                  ff .end (block)
 :8c 2d 00 00                  ff .end (switch)
 :8d 2d 00 00                  ff .end (block)

.event 5
* 8e 2d 00 00               01 20 .exec Redraw
if136
 :90 2d 00 00               05 01 .if [terms=1]
  92 2d 00 00         3b 2f 00 00 .else
  96 2d 00 00               03 00 .var1 FLAGS
  98 2d 00 00                  01 .literal
  99 2d 00 00         77 02 00 00 631
  9d 2d 00 00                  ff .end (operand)
  9e 2d 00 00                  ff .end (operand)
  a0 2d 00 00                  02 .if-sign-nonzero
  a0 2d 00 00                  01 .literal
  a1 2d 00 00         00 00 00 00 0
  a5 2d 00 00                  ff .end (operand)
if137
 :a6 2d 00 00               05 02 .if [terms=2]
  a8 2d 00 00         3b 2f 00 00 .else
  ac 2d 00 00               03 02 .var1 CHAR
  ae 2d 00 00                  01 .literal
  af 2d 00 00         02 00 00 00 2
  b3 2d 00 00                  ff .end (operand)
  b4 2d 00 00                  ff .end (operand)
  b6 2d 00 00                  01 .if-sign-nonzero
  b6 2d 00 00               03 07 .var1 CURHP
  b8 2d 00 00                  01 .literal
  b9 2d 00 00         02 00 00 00 2
  bd 2d 00 00                  ff .end (operand)
  be 2d 00 00                  ff .end (operand)
  c0 2d 00 00                  04 .if-sign-nonzero
  c0 2d 00 00                  01 .literal
  c1 2d 00 00         00 00 00 00 0
  c5 2d 00 00                  ff .end (operand)
  c6 2d 00 00               03 00 .var1 FLAGS
  c8 2d 00 00                  01 .literal
  c9 2d 00 00         7e 02 00 00 638
  cd 2d 00 00                  ff .end (operand)
  ce 2d 00 00                  01 .set
  cf 2d 00 00                  01 .literal
  d0 2d 00 00         02 00 00 00 2
  d4 2d 00 00                  ff .end (operand)
if138
 :d5 2d 00 00               05 01 .if [terms=1]
  d7 2d 00 00         31 2e 00 00 .else
  db 2d 00 00               03 00 .var1 FLAGS
  dd 2d 00 00                  01 .literal
  de 2d 00 00         ea 03 00 00 1002
  e2 2d 00 00                  ff .end (operand)
  e3 2d 00 00                  ff .end (operand)
  e5 2d 00 00                  06 .if-sign-nonzero
  e5 2d 00 00               03 08 .var1 MAXHP
  e7 2d 00 00                  01 .literal
  e8 2d 00 00         02 00 00 00 2
  ec 2d 00 00                  ff .end (operand)
  ed 2d 00 00                  01 .add +
  ee 2d 00 00               03 08 .var1 MAXHP
  f0 2d 00 00                  01 .literal
  f1 2d 00 00         02 00 00 00 2
  f5 2d 00 00                  ff .end (operand)
  f6 2d 00 00                  02 .sub -
  f7 2d 00 00               03 2a .var1 FER
  f9 2d 00 00                  01 .literal
  fa 2d 00 00         02 00 00 00 2
  fe 2d 00 00                  ff .end (operand)
  ff 2d 00 00                  ff .end (operand)
  00 2e 00 00               01 5c .exec TextMenu
  02 2e 00 00                  01 .literal
  03 2e 00 00         04 00 00 00 4
  07 2e 00 00                  ff .end (operand)
  08 2e 00 00                  01 .literal
  09 2e 00 00         04 00 00 00 4
  0d 2e 00 00                  ff .end (operand)
  0e 2e 00 00                  01 .literal
  0f 2e 00 00         77 02 00 00 631
  13 2e 00 00                  ff .end (operand)
  14 2e 00 00                  01 .literal
  15 2e 00 00         01 00 00 00 1
  19 2e 00 00                  ff .end (operand)
  1b 2e 00 00                     "Attack"

              41 74 74 61 63 6b 00 
  22 2e 00 00                     "Technique"

              54 65 63 68 6e 69 71 75 
              65 00 
  2c 2e 00 00                     "Item"

              49 74 65 6d 00 
if139
 :31 2e 00 00               05 01 .if [terms=1]
  33 2e 00 00         98 2e 00 00 .else
  37 2e 00 00               03 00 .var1 FLAGS
  39 2e 00 00                  01 .literal
  3a 2e 00 00         ea 03 00 00 1002
  3e 2e 00 00                  ff .end (operand)
  3f 2e 00 00                  ff .end (operand)
  41 2e 00 00                  05 .if-sign-nonzero
  41 2e 00 00               03 08 .var1 MAXHP
  43 2e 00 00                  01 .literal
  44 2e 00 00         02 00 00 00 2
  48 2e 00 00                  ff .end (operand)
  49 2e 00 00                  01 .add +
  4a 2e 00 00               03 08 .var1 MAXHP
  4c 2e 00 00                  01 .literal
  4d 2e 00 00         02 00 00 00 2
  51 2e 00 00                  ff .end (operand)
  52 2e 00 00                  02 .sub -
  53 2e 00 00               03 2a .var1 FER
  55 2e 00 00                  01 .literal
  56 2e 00 00         02 00 00 00 2
  5a 2e 00 00                  ff .end (operand)
  5b 2e 00 00                  ff .end (operand)
  5c 2e 00 00               01 5c .exec TextMenu
  5e 2e 00 00                  01 .literal
  5f 2e 00 00         04 00 00 00 4
  63 2e 00 00                  ff .end (operand)
  64 2e 00 00                  01 .literal
  65 2e 00 00         04 00 00 00 4
  69 2e 00 00                  ff .end (operand)
  6a 2e 00 00                  01 .literal
  6b 2e 00 00         77 02 00 00 631
  6f 2e 00 00                  ff .end (operand)
  70 2e 00 00                  01 .literal
  71 2e 00 00         01 00 00 00 1
  75 2e 00 00                  ff .end (operand)
  77 2e 00 00                     "Attack"

              41 74 74 61 63 6b 00 
  7e 2e 00 00                     "Technique"

              54 65 63 68 6e 69 71 75 
              65 00 
  88 2e 00 00                     "Item"

              49 74 65 6d 00 
  8d 2e 00 00                     "Anger Move"

              41 6e 67 65 72 20 4d 6f 
              76 65 00 
 :98 2e 00 00                  0a .switch
  99 2e 00 00               03 00 .var1 FLAGS
  9b 2e 00 00                  01 .literal
  9c 2e 00 00         77 02 00 00 631
  a0 2e 00 00                  ff .end (operand)
  a1 2e 00 00                  ff .end (operand)
  a2 2e 00 00                  0b .case
  a3 2e 00 00                  05 .group
  a4 2e 00 00                  01 .literal
  a5 2e 00 00         01 00 00 00 1
  a9 2e 00 00                  ff .end (operand)
  aa 2e 00 00                  ff .end (operand)
  ab 2e 00 00         d1 2e 00 00 .case-end-address
  af 2e 00 00               03 00 .var1 FLAGS
  b1 2e 00 00                  01 .literal
  b2 2e 00 00         5b 02 00 00 603
  b6 2e 00 00                  ff .end (operand)
  b7 2e 00 00                  04 .incset
  b8 2e 00 00               04 00 .var2 RANDOM
  ba 2e 00 00                  01 .literal
  bb 2e 00 00         01 00 00 00 1
  bf 2e 00 00                  ff .end (operand)
  c0 2e 00 00                  01 .literal
  c1 2e 00 00         03 00 00 00 3
  c5 2e 00 00                  ff .end (operand)
  c6 2e 00 00                  ff .end (operand)
  c7 2e 00 00               01 18 .exec CallEvent
  ca 2e 00 00                  01 .literal
  cb 2e 00 00         0e 00 00 00 14
  cf 2e 00 00                  ff .end (operand)
  d0 2e 00 00                  ff .end (block)
 :d1 2e 00 00                  0b .case
  d2 2e 00 00                  05 .group
  d3 2e 00 00                  01 .literal
  d4 2e 00 00         02 00 00 00 2
  d8 2e 00 00                  ff .end (operand)
  d9 2e 00 00                  ff .end (operand)
  da 2e 00 00         f9 2e 00 00 .case-end-address
  de 2e 00 00               03 00 .var1 FLAGS
  e0 2e 00 00                  01 .literal
  e1 2e 00 00         77 02 00 00 631
  e5 2e 00 00                  ff .end (operand)
  e6 2e 00 00                  01 .set
  e7 2e 00 00                  01 .literal
  e8 2e 00 00         00 00 00 00 0
  ec 2e 00 00                  ff .end (operand)
  ed 2e 00 00               01 5f .exec MagicMenu
  ef 2e 00 00               03 02 .var1 CHAR
  f1 2e 00 00                  01 .literal
  f2 2e 00 00         02 00 00 00 2
  f6 2e 00 00                  ff .end (operand)
  f7 2e 00 00                  ff .end (operand)
  f8 2e 00 00                  ff .end (block)
 :f9 2e 00 00                  0b .case
  fa 2e 00 00                  05 .group
  fb 2e 00 00                  01 .literal
  fc 2e 00 00         03 00 00 00 3
  00 2f 00 00                  ff .end (operand)
  01 2f 00 00                  ff .end (operand)
  02 2f 00 00         21 2f 00 00 .case-end-address
  06 2f 00 00               03 00 .var1 FLAGS
  08 2f 00 00                  01 .literal
  09 2f 00 00         77 02 00 00 631
  0d 2f 00 00                  ff .end (operand)
  0e 2f 00 00                  01 .set
  0f 2f 00 00                  01 .literal
  10 2f 00 00         00 00 00 00 0
  14 2f 00 00                  ff .end (operand)
  15 2f 00 00               01 5d .exec ItemMenu
  17 2f 00 00               03 02 .var1 CHAR
  19 2f 00 00                  01 .literal
  1a 2f 00 00         02 00 00 00 2
  1e 2f 00 00                  ff .end (operand)
  1f 2f 00 00                  ff .end (operand)
  20 2f 00 00                  ff .end (block)
 :21 2f 00 00                  0b .case
  22 2f 00 00                  05 .group
  23 2f 00 00                  01 .literal
  24 2f 00 00         04 00 00 00 4
  28 2f 00 00                  ff .end (operand)
  29 2f 00 00                  ff .end (operand)
  2a 2f 00 00         3a 2f 00 00 .case-end-address
  2e 2f 00 00               01 5f .exec MagicMenu
  30 2f 00 00               03 02 .var1 CHAR
  32 2f 00 00                  01 .literal
  33 2f 00 00         02 00 00 00 2
  37 2f 00 00                  ff .end (operand)
  38 2f 00 00                  ff .end (operand)
  39 2f 00 00                  ff .end (block)
 :3a 2f 00 00                  ff .end (switch)
 :3b 2f 00 00                  ff .end (block)

.event 6
* 3c 2f 00 00               01 20 .exec Redraw
if140
 :3e 2f 00 00               05 01 .if [terms=1]
  40 2f 00 00         f0 30 00 00 .else
  44 2f 00 00               03 00 .var1 FLAGS
  46 2f 00 00                  01 .literal
  47 2f 00 00         78 02 00 00 632
  4b 2f 00 00                  ff .end (operand)
  4c 2f 00 00                  ff .end (operand)
  4e 2f 00 00                  02 .if-sign-nonzero
  4e 2f 00 00                  01 .literal
  4f 2f 00 00         00 00 00 00 0
  53 2f 00 00                  ff .end (operand)
if141
 :54 2f 00 00               05 02 .if [terms=2]
  56 2f 00 00         f0 30 00 00 .else
  5a 2f 00 00               03 02 .var1 CHAR
  5c 2f 00 00                  01 .literal
  5d 2f 00 00         03 00 00 00 3
  61 2f 00 00                  ff .end (operand)
  62 2f 00 00                  ff .end (operand)
  64 2f 00 00                  01 .if-sign-nonzero
  64 2f 00 00               03 07 .var1 CURHP
  66 2f 00 00                  01 .literal
  67 2f 00 00         03 00 00 00 3
  6b 2f 00 00                  ff .end (operand)
  6c 2f 00 00                  ff .end (operand)
  6e 2f 00 00                  04 .if-sign-nonzero
  6e 2f 00 00                  01 .literal
  6f 2f 00 00         00 00 00 00 0
  73 2f 00 00                  ff .end (operand)
  74 2f 00 00               03 00 .var1 FLAGS
  76 2f 00 00                  01 .literal
  77 2f 00 00         7e 02 00 00 638
  7b 2f 00 00                  ff .end (operand)
  7c 2f 00 00                  01 .set
  7d 2f 00 00                  01 .literal
  7e 2f 00 00         03 00 00 00 3
  82 2f 00 00                  ff .end (operand)
if142
 :83 2f 00 00               05 01 .if [terms=1]
  85 2f 00 00         db 2f 00 00 .else
  89 2f 00 00               03 00 .var1 FLAGS
  8b 2f 00 00                  01 .literal
  8c 2f 00 00         eb 03 00 00 1003
  90 2f 00 00                  ff .end (operand)
  91 2f 00 00                  ff .end (operand)
  93 2f 00 00                  06 .if-sign-nonzero
  93 2f 00 00               03 08 .var1 MAXHP
  95 2f 00 00                  01 .literal
  96 2f 00 00         03 00 00 00 3
  9a 2f 00 00                  ff .end (operand)
  9b 2f 00 00                  01 .add +
  9c 2f 00 00               03 08 .var1 MAXHP
  9e 2f 00 00                  01 .literal
  9f 2f 00 00         03 00 00 00 3
  a3 2f 00 00                  ff .end (operand)
  a4 2f 00 00                  02 .sub -
  a5 2f 00 00               03 2a .var1 FER
  a7 2f 00 00                  01 .literal
  a8 2f 00 00         03 00 00 00 3
  ac 2f 00 00                  ff .end (operand)
  ad 2f 00 00                  ff .end (operand)
  ae 2f 00 00               01 5c .exec TextMenu
  b0 2f 00 00                  01 .literal
  b1 2f 00 00         04 00 00 00 4
  b5 2f 00 00                  ff .end (operand)
  b6 2f 00 00                  01 .literal
  b7 2f 00 00         04 00 00 00 4
  bb 2f 00 00                  ff .end (operand)
  bc 2f 00 00                  01 .literal
  bd 2f 00 00         78 02 00 00 632
  c1 2f 00 00                  ff .end (operand)
  c2 2f 00 00                  01 .literal
  c3 2f 00 00         01 00 00 00 1
  c7 2f 00 00                  ff .end (operand)
  c9 2f 00 00                     "Attack"

              41 74 74 61 63 6b 00 
  d0 2f 00 00                     "Magic"

              4d 61 67 69 63 00 
  d6 2f 00 00                     "Item"

              49 74 65 6d 00 
if143
 :db 2f 00 00               05 01 .if [terms=1]
  dd 2f 00 00         3e 30 00 00 .else
  e1 2f 00 00               03 00 .var1 FLAGS
  e3 2f 00 00                  01 .literal
  e4 2f 00 00         eb 03 00 00 1003
  e8 2f 00 00                  ff .end (operand)
  e9 2f 00 00                  ff .end (operand)
  eb 2f 00 00                  05 .if-sign-nonzero
  eb 2f 00 00               03 08 .var1 MAXHP
  ed 2f 00 00                  01 .literal
  ee 2f 00 00         03 00 00 00 3
  f2 2f 00 00                  ff .end (operand)
  f3 2f 00 00                  01 .add +
  f4 2f 00 00               03 08 .var1 MAXHP
  f6 2f 00 00                  01 .literal
  f7 2f 00 00         03 00 00 00 3
  fb 2f 00 00                  ff .end (operand)
  fc 2f 00 00                  02 .sub -
  fd 2f 00 00               03 2a .var1 FER
  ff 2f 00 00                  01 .literal
  00 30 00 00         03 00 00 00 3
  04 30 00 00                  ff .end (operand)
  05 30 00 00                  ff .end (operand)
  06 30 00 00               01 5c .exec TextMenu
  08 30 00 00                  01 .literal
  09 30 00 00         04 00 00 00 4
  0d 30 00 00                  ff .end (operand)
  0e 30 00 00                  01 .literal
  0f 30 00 00         04 00 00 00 4
  13 30 00 00                  ff .end (operand)
  14 30 00 00                  01 .literal
  15 30 00 00         78 02 00 00 632
  19 30 00 00                  ff .end (operand)
  1a 30 00 00                  01 .literal
  1b 30 00 00         01 00 00 00 1
  1f 30 00 00                  ff .end (operand)
  21 30 00 00                     "Attack"

              41 74 74 61 63 6b 00 
  28 30 00 00                     "Magic"

              4d 61 67 69 63 00 
  2e 30 00 00                     "Item"

              49 74 65 6d 00 
  33 30 00 00                     "Anger Move"

              41 6e 67 65 72 20 4d 6f 
              76 65 00 
 :3e 30 00 00                  0a .switch
  3f 30 00 00               03 00 .var1 FLAGS
  41 30 00 00                  01 .literal
  42 30 00 00         78 02 00 00 632
  46 30 00 00                  ff .end (operand)
  47 30 00 00                  ff .end (operand)
  48 30 00 00                  0b .case
  49 30 00 00                  05 .group
  4a 30 00 00                  01 .literal
  4b 30 00 00         01 00 00 00 1
  4f 30 00 00                  ff .end (operand)
  50 30 00 00                  ff .end (operand)
  51 30 00 00         77 30 00 00 .case-end-address
  55 30 00 00               03 00 .var1 FLAGS
  57 30 00 00                  01 .literal
  58 30 00 00         5d 02 00 00 605
  5c 30 00 00                  ff .end (operand)
  5d 30 00 00                  04 .incset
  5e 30 00 00               04 00 .var2 RANDOM
  60 30 00 00                  01 .literal
  61 30 00 00         01 00 00 00 1
  65 30 00 00                  ff .end (operand)
  66 30 00 00                  01 .literal
  67 30 00 00         03 00 00 00 3
  6b 30 00 00                  ff .end (operand)
  6c 30 00 00                  ff .end (operand)
  6d 30 00 00               01 18 .exec CallEvent
  70 30 00 00                  01 .literal
  71 30 00 00         0e 00 00 00 14
  75 30 00 00                  ff .end (operand)
  76 30 00 00                  ff .end (block)
 :77 30 00 00                  0b .case
  78 30 00 00                  05 .group
  79 30 00 00                  01 .literal
  7a 30 00 00         02 00 00 00 2
  7e 30 00 00                  ff .end (operand)
  7f 30 00 00                  ff .end (operand)
  80 30 00 00         9f 30 00 00 .case-end-address
  84 30 00 00               03 00 .var1 FLAGS
  86 30 00 00                  01 .literal
  87 30 00 00         78 02 00 00 632
  8b 30 00 00                  ff .end (operand)
  8c 30 00 00                  01 .set
  8d 30 00 00                  01 .literal
  8e 30 00 00         00 00 00 00 0
  92 30 00 00                  ff .end (operand)
  93 30 00 00               01 5f .exec MagicMenu
  95 30 00 00               03 02 .var1 CHAR
  97 30 00 00                  01 .literal
  98 30 00 00         03 00 00 00 3
  9c 30 00 00                  ff .end (operand)
  9d 30 00 00                  ff .end (operand)
  9e 30 00 00                  ff .end (block)
 :9f 30 00 00                  0b .case
  a0 30 00 00                  05 .group
  a1 30 00 00                  01 .literal
  a2 30 00 00         03 00 00 00 3
  a6 30 00 00                  ff .end (operand)
  a7 30 00 00                  ff .end (operand)
  a8 30 00 00         c7 30 00 00 .case-end-address
  ac 30 00 00               03 00 .var1 FLAGS
  ae 30 00 00                  01 .literal
  af 30 00 00         78 02 00 00 632
  b3 30 00 00                  ff .end (operand)
  b4 30 00 00                  01 .set
  b5 30 00 00                  01 .literal
  b6 30 00 00         00 00 00 00 0
  ba 30 00 00                  ff .end (operand)
  bb 30 00 00               01 5d .exec ItemMenu
  bd 30 00 00               03 02 .var1 CHAR
  bf 30 00 00                  01 .literal
  c0 30 00 00         03 00 00 00 3
  c4 30 00 00                  ff .end (operand)
  c5 30 00 00                  ff .end (operand)
  c6 30 00 00                  ff .end (block)
 :c7 30 00 00                  0b .case
  c8 30 00 00                  05 .group
  c9 30 00 00                  01 .literal
  ca 30 00 00         04 00 00 00 4
  ce 30 00 00                  ff .end (operand)
  cf 30 00 00                  ff .end (operand)
  d0 30 00 00         ef 30 00 00 .case-end-address
  d4 30 00 00               03 00 .var1 FLAGS
  d6 30 00 00                  01 .literal
  d7 30 00 00         5e 02 00 00 606
  db 30 00 00                  ff .end (operand)
  dc 30 00 00                  04 .incset
  dd 30 00 00                  01 .literal
  de 30 00 00         e8 03 00 00 1000
  e2 30 00 00                  ff .end (operand)
  e3 30 00 00               01 5f .exec MagicMenu
  e5 30 00 00               03 02 .var1 CHAR
  e7 30 00 00                  01 .literal
  e8 30 00 00         03 00 00 00 3
  ec 30 00 00                  ff .end (operand)
  ed 30 00 00                  ff .end (operand)
  ee 30 00 00                  ff .end (block)
 :ef 30 00 00                  ff .end (switch)
 :f0 30 00 00                  ff .end (block)

.event 7
* f1 30 00 00               01 20 .exec Redraw
if144
 :f3 30 00 00               05 01 .if [terms=1]
  f5 30 00 00         94 32 00 00 .else
  f9 30 00 00               03 00 .var1 FLAGS
  fb 30 00 00                  01 .literal
  fc 30 00 00         79 02 00 00 633
  00 31 00 00                  ff .end (operand)
  01 31 00 00                  ff .end (operand)
  03 31 00 00                  02 .if-sign-nonzero
  03 31 00 00                  01 .literal
  04 31 00 00         00 00 00 00 0
  08 31 00 00                  ff .end (operand)
if145
 :09 31 00 00               05 02 .if [terms=2]
  0b 31 00 00         94 32 00 00 .else
  0f 31 00 00               03 02 .var1 CHAR
  11 31 00 00                  01 .literal
  12 31 00 00         04 00 00 00 4
  16 31 00 00                  ff .end (operand)
  17 31 00 00                  ff .end (operand)
  19 31 00 00                  01 .if-sign-nonzero
  19 31 00 00               03 07 .var1 CURHP
  1b 31 00 00                  01 .literal
  1c 31 00 00         04 00 00 00 4
  20 31 00 00                  ff .end (operand)
  21 31 00 00                  ff .end (operand)
  23 31 00 00                  04 .if-sign-nonzero
  23 31 00 00                  01 .literal
  24 31 00 00         00 00 00 00 0
  28 31 00 00                  ff .end (operand)
  29 31 00 00               03 00 .var1 FLAGS
  2b 31 00 00                  01 .literal
  2c 31 00 00         7e 02 00 00 638
  30 31 00 00                  ff .end (operand)
  31 31 00 00                  01 .set
  32 31 00 00                  01 .literal
  33 31 00 00         04 00 00 00 4
  37 31 00 00                  ff .end (operand)
if146
 :38 31 00 00               05 01 .if [terms=1]
  3a 31 00 00         8f 31 00 00 .else
  3e 31 00 00               03 00 .var1 FLAGS
  40 31 00 00                  01 .literal
  41 31 00 00         ec 03 00 00 1004
  45 31 00 00                  ff .end (operand)
  46 31 00 00                  ff .end (operand)
  48 31 00 00                  06 .if-sign-nonzero
  48 31 00 00               03 08 .var1 MAXHP
  4a 31 00 00                  01 .literal
  4b 31 00 00         04 00 00 00 4
  4f 31 00 00                  ff .end (operand)
  50 31 00 00                  01 .add +
  51 31 00 00               03 08 .var1 MAXHP
  53 31 00 00                  01 .literal
  54 31 00 00         04 00 00 00 4
  58 31 00 00                  ff .end (operand)
  59 31 00 00                  02 .sub -
  5a 31 00 00               03 2a .var1 FER
  5c 31 00 00                  01 .literal
  5d 31 00 00         04 00 00 00 4
  61 31 00 00                  ff .end (operand)
  62 31 00 00                  ff .end (operand)
  63 31 00 00               01 5c .exec TextMenu
  65 31 00 00                  01 .literal
  66 31 00 00         04 00 00 00 4
  6a 31 00 00                  ff .end (operand)
  6b 31 00 00                  01 .literal
  6c 31 00 00         04 00 00 00 4
  70 31 00 00                  ff .end (operand)
  71 31 00 00                  01 .literal
  72 31 00 00         79 02 00 00 633
  76 31 00 00                  ff .end (operand)
  77 31 00 00                  01 .literal
  78 31 00 00         01 00 00 00 1
  7c 31 00 00                  ff .end (operand)
  7e 31 00 00                     "Attack"

              41 74 74 61 63 6b 00 
  85 31 00 00                     "Drop"

              44 72 6f 70 00 
  8a 31 00 00                     "Item"

              49 74 65 6d 00 
if147
 :8f 31 00 00               05 01 .if [terms=1]
  91 31 00 00         f1 31 00 00 .else
  95 31 00 00               03 00 .var1 FLAGS
  97 31 00 00                  01 .literal
  98 31 00 00         ec 03 00 00 1004
  9c 31 00 00                  ff .end (operand)
  9d 31 00 00                  ff .end (operand)
  9f 31 00 00                  05 .if-sign-nonzero
  9f 31 00 00               03 08 .var1 MAXHP
  a1 31 00 00                  01 .literal
  a2 31 00 00         04 00 00 00 4
  a6 31 00 00                  ff .end (operand)
  a7 31 00 00                  01 .add +
  a8 31 00 00               03 08 .var1 MAXHP
  aa 31 00 00                  01 .literal
  ab 31 00 00         04 00 00 00 4
  af 31 00 00                  ff .end (operand)
  b0 31 00 00                  02 .sub -
  b1 31 00 00               03 2a .var1 FER
  b3 31 00 00                  01 .literal
  b4 31 00 00         04 00 00 00 4
  b8 31 00 00                  ff .end (operand)
  b9 31 00 00                  ff .end (operand)
  ba 31 00 00               01 5c .exec TextMenu
  bc 31 00 00                  01 .literal
  bd 31 00 00         04 00 00 00 4
  c1 31 00 00                  ff .end (operand)
  c2 31 00 00                  01 .literal
  c3 31 00 00         04 00 00 00 4
  c7 31 00 00                  ff .end (operand)
  c8 31 00 00                  01 .literal
  c9 31 00 00         79 02 00 00 633
  cd 31 00 00                  ff .end (operand)
  ce 31 00 00                  01 .literal
  cf 31 00 00         01 00 00 00 1
  d3 31 00 00                  ff .end (operand)
  d5 31 00 00                     "Attack"

              41 74 74 61 63 6b 00 
  dc 31 00 00                     "Drop"

              44 72 6f 70 00 
  e1 31 00 00                     "Item"

              49 74 65 6d 00 
  e6 31 00 00                     "Anger Move"

              41 6e 67 65 72 20 4d 6f 
              76 65 00 
 :f1 31 00 00                  0a .switch
  f2 31 00 00               03 00 .var1 FLAGS
  f4 31 00 00                  01 .literal
  f5 31 00 00         79 02 00 00 633
  f9 31 00 00                  ff .end (operand)
  fa 31 00 00                  ff .end (operand)
  fb 31 00 00                  0b .case
  fc 31 00 00                  05 .group
  fd 31 00 00                  01 .literal
  fe 31 00 00         01 00 00 00 1
  02 32 00 00                  ff .end (operand)
  03 32 00 00                  ff .end (operand)
  04 32 00 00         2a 32 00 00 .case-end-address
  08 32 00 00               03 00 .var1 FLAGS
  0a 32 00 00                  01 .literal
  0b 32 00 00         5f 02 00 00 607
  0f 32 00 00                  ff .end (operand)
  10 32 00 00                  04 .incset
  11 32 00 00               04 00 .var2 RANDOM
  13 32 00 00                  01 .literal
  14 32 00 00         01 00 00 00 1
  18 32 00 00                  ff .end (operand)
  19 32 00 00                  01 .literal
  1a 32 00 00         03 00 00 00 3
  1e 32 00 00                  ff .end (operand)
  1f 32 00 00                  ff .end (operand)
  20 32 00 00               01 18 .exec CallEvent
  23 32 00 00                  01 .literal
  24 32 00 00         0e 00 00 00 14
  28 32 00 00                  ff .end (operand)
  29 32 00 00                  ff .end (block)
 :2a 32 00 00                  0b .case
  2b 32 00 00                  05 .group
  2c 32 00 00                  01 .literal
  2d 32 00 00         02 00 00 00 2
  31 32 00 00                  ff .end (operand)
  32 32 00 00                  ff .end (operand)
  33 32 00 00         52 32 00 00 .case-end-address
  37 32 00 00               03 00 .var1 FLAGS
  39 32 00 00                  01 .literal
  3a 32 00 00         79 02 00 00 633
  3e 32 00 00                  ff .end (operand)
  3f 32 00 00                  01 .set
  40 32 00 00                  01 .literal
  41 32 00 00         00 00 00 00 0
  45 32 00 00                  ff .end (operand)
  46 32 00 00               01 5f .exec MagicMenu
  48 32 00 00               03 02 .var1 CHAR
  4a 32 00 00                  01 .literal
  4b 32 00 00         04 00 00 00 4
  4f 32 00 00                  ff .end (operand)
  50 32 00 00                  ff .end (operand)
  51 32 00 00                  ff .end (block)
 :52 32 00 00                  0b .case
  53 32 00 00                  05 .group
  54 32 00 00                  01 .literal
  55 32 00 00         03 00 00 00 3
  59 32 00 00                  ff .end (operand)
  5a 32 00 00                  ff .end (operand)
  5b 32 00 00         7a 32 00 00 .case-end-address
  5f 32 00 00               03 00 .var1 FLAGS
  61 32 00 00                  01 .literal
  62 32 00 00         79 02 00 00 633
  66 32 00 00                  ff .end (operand)
  67 32 00 00                  01 .set
  68 32 00 00                  01 .literal
  69 32 00 00         00 00 00 00 0
  6d 32 00 00                  ff .end (operand)
  6e 32 00 00               01 5d .exec ItemMenu
  70 32 00 00               03 02 .var1 CHAR
  72 32 00 00                  01 .literal
  73 32 00 00         04 00 00 00 4
  77 32 00 00                  ff .end (operand)
  78 32 00 00                  ff .end (operand)
  79 32 00 00                  ff .end (block)
 :7a 32 00 00                  0b .case
  7b 32 00 00                  05 .group
  7c 32 00 00                  01 .literal
  7d 32 00 00         04 00 00 00 4
  81 32 00 00                  ff .end (operand)
  82 32 00 00                  ff .end (operand)
  83 32 00 00         93 32 00 00 .case-end-address
  87 32 00 00               01 5f .exec MagicMenu
  89 32 00 00               03 02 .var1 CHAR
  8b 32 00 00                  01 .literal
  8c 32 00 00         04 00 00 00 4
  90 32 00 00                  ff .end (operand)
  91 32 00 00                  ff .end (operand)
  92 32 00 00                  ff .end (block)
 :93 32 00 00                  ff .end (switch)
 :94 32 00 00                  ff .end (block)

.event 8
* 95 32 00 00               01 20 .exec Redraw
if148
 :97 32 00 00               05 01 .if [terms=1]
  99 32 00 00         87 34 00 00 .else
  9d 32 00 00               03 00 .var1 FLAGS
  9f 32 00 00                  01 .literal
  a0 32 00 00         7a 02 00 00 634
  a4 32 00 00                  ff .end (operand)
  a5 32 00 00                  ff .end (operand)
  a7 32 00 00                  02 .if-sign-nonzero
  a7 32 00 00                  01 .literal
  a8 32 00 00         00 00 00 00 0
  ac 32 00 00                  ff .end (operand)
if149
 :ad 32 00 00               05 02 .if [terms=2]
  af 32 00 00         87 34 00 00 .else
  b3 32 00 00               03 02 .var1 CHAR
  b5 32 00 00                  01 .literal
  b6 32 00 00         05 00 00 00 5
  ba 32 00 00                  ff .end (operand)
  bb 32 00 00                  ff .end (operand)
  bd 32 00 00                  01 .if-sign-nonzero
  bd 32 00 00               03 07 .var1 CURHP
  bf 32 00 00                  01 .literal
  c0 32 00 00         05 00 00 00 5
  c4 32 00 00                  ff .end (operand)
  c5 32 00 00                  ff .end (operand)
  c7 32 00 00                  04 .if-sign-nonzero
  c7 32 00 00                  01 .literal
  c8 32 00 00         00 00 00 00 0
  cc 32 00 00                  ff .end (operand)
  cd 32 00 00               03 00 .var1 FLAGS
  cf 32 00 00                  01 .literal
  d0 32 00 00         7e 02 00 00 638
  d4 32 00 00                  ff .end (operand)
  d5 32 00 00                  01 .set
  d6 32 00 00                  01 .literal
  d7 32 00 00         05 00 00 00 5
  db 32 00 00                  ff .end (operand)
if150
 :dc 32 00 00               05 01 .if [terms=1]
  de 32 00 00         3a 33 00 00 .else
  e2 32 00 00               03 00 .var1 FLAGS
  e4 32 00 00                  01 .literal
  e5 32 00 00         ed 03 00 00 1005
  e9 32 00 00                  ff .end (operand)
  ea 32 00 00                  ff .end (operand)
  ec 32 00 00                  06 .if-sign-nonzero
  ec 32 00 00               03 08 .var1 MAXHP
  ee 32 00 00                  01 .literal
  ef 32 00 00         05 00 00 00 5
  f3 32 00 00                  ff .end (operand)
  f4 32 00 00                  01 .add +
  f5 32 00 00               03 08 .var1 MAXHP
  f7 32 00 00                  01 .literal
  f8 32 00 00         05 00 00 00 5
  fc 32 00 00                  ff .end (operand)
  fd 32 00 00                  02 .sub -
  fe 32 00 00               03 2a .var1 FER
  00 33 00 00                  01 .literal
  01 33 00 00         05 00 00 00 5
  05 33 00 00                  ff .end (operand)
  06 33 00 00                  ff .end (operand)
  07 33 00 00               01 5c .exec TextMenu
  09 33 00 00                  01 .literal
  0a 33 00 00         04 00 00 00 4
  0e 33 00 00                  ff .end (operand)
  0f 33 00 00                  01 .literal
  10 33 00 00         04 00 00 00 4
  14 33 00 00                  ff .end (operand)
  15 33 00 00                  01 .literal
  16 33 00 00         7a 02 00 00 634
  1a 33 00 00                  ff .end (operand)
  1b 33 00 00                  01 .literal
  1c 33 00 00         01 00 00 00 1
  20 33 00 00                  ff .end (operand)
  22 33 00 00                     "Attack"

              41 74 74 61 63 6b 00 
  29 33 00 00                     "Steal"

              53 74 65 61 6c 00 
  2f 33 00 00                     "Magic"

              4d 61 67 69 63 00 
  35 33 00 00                     "Item"

              49 74 65 6d 00 
if151
 :3a 33 00 00               05 01 .if [terms=1]
  3c 33 00 00         a3 33 00 00 .else
  40 33 00 00               03 00 .var1 FLAGS
  42 33 00 00                  01 .literal
  43 33 00 00         ed 03 00 00 1005
  47 33 00 00                  ff .end (operand)
  48 33 00 00                  ff .end (operand)
  4a 33 00 00                  05 .if-sign-nonzero
  4a 33 00 00               03 08 .var1 MAXHP
  4c 33 00 00                  01 .literal
  4d 33 00 00         05 00 00 00 5
  51 33 00 00                  ff .end (operand)
  52 33 00 00                  01 .add +
  53 33 00 00               03 08 .var1 MAXHP
  55 33 00 00                  01 .literal
  56 33 00 00         05 00 00 00 5
  5a 33 00 00                  ff .end (operand)
  5b 33 00 00                  02 .sub -
  5c 33 00 00               03 2a .var1 FER
  5e 33 00 00                  01 .literal
  5f 33 00 00         05 00 00 00 5
  63 33 00 00                  ff .end (operand)
  64 33 00 00                  ff .end (operand)
  65 33 00 00               01 5c .exec TextMenu
  67 33 00 00                  01 .literal
  68 33 00 00         04 00 00 00 4
  6c 33 00 00                  ff .end (operand)
  6d 33 00 00                  01 .literal
  6e 33 00 00         04 00 00 00 4
  72 33 00 00                  ff .end (operand)
  73 33 00 00                  01 .literal
  74 33 00 00         7a 02 00 00 634
  78 33 00 00                  ff .end (operand)
  79 33 00 00                  01 .literal
  7a 33 00 00         01 00 00 00 1
  7e 33 00 00                  ff .end (operand)
  80 33 00 00                     "Attack"

              41 74 74 61 63 6b 00 
  87 33 00 00                     "Steal"

              53 74 65 61 6c 00 
  8d 33 00 00                     "Magic"

              4d 61 67 69 63 00 
  93 33 00 00                     "Item"

              49 74 65 6d 00 
  98 33 00 00                     "Anger Move"

              41 6e 67 65 72 20 4d 6f 
              76 65 00 
 :a3 33 00 00                  0a .switch
  a4 33 00 00               03 00 .var1 FLAGS
  a6 33 00 00                  01 .literal
  a7 33 00 00         7a 02 00 00 634
  ab 33 00 00                  ff .end (operand)
  ac 33 00 00                  ff .end (operand)
  ad 33 00 00                  0b .case
  ae 33 00 00                  05 .group
  af 33 00 00                  01 .literal
  b0 33 00 00         01 00 00 00 1
  b4 33 00 00                  ff .end (operand)
  b5 33 00 00                  ff .end (operand)
  b6 33 00 00         dc 33 00 00 .case-end-address
  ba 33 00 00               03 00 .var1 FLAGS
  bc 33 00 00                  01 .literal
  bd 33 00 00         61 02 00 00 609
  c1 33 00 00                  ff .end (operand)
  c2 33 00 00                  04 .incset
  c3 33 00 00               04 00 .var2 RANDOM
  c5 33 00 00                  01 .literal
  c6 33 00 00         01 00 00 00 1
  ca 33 00 00                  ff .end (operand)
  cb 33 00 00                  01 .literal
  cc 33 00 00         03 00 00 00 3
  d0 33 00 00                  ff .end (operand)
  d1 33 00 00                  ff .end (operand)
  d2 33 00 00               01 18 .exec CallEvent
  d5 33 00 00                  01 .literal
  d6 33 00 00         0e 00 00 00 14
  da 33 00 00                  ff .end (operand)
  db 33 00 00                  ff .end (block)
 :dc 33 00 00                  0b .case
  dd 33 00 00                  05 .group
  de 33 00 00                  01 .literal
  df 33 00 00         02 00 00 00 2
  e3 33 00 00                  ff .end (operand)
  e4 33 00 00                  ff .end (operand)
  e5 33 00 00         1d 34 00 00 .case-end-address
  e9 33 00 00               03 00 .var1 FLAGS
  eb 33 00 00                  01 .literal
  ec 33 00 00         62 02 00 00 610
  f0 33 00 00                  ff .end (operand)
  f1 33 00 00                  04 .incset
  f2 33 00 00               03 23 .var1 DEF
  f4 33 00 00                  01 .literal
  f5 33 00 00         05 00 00 00 5
  f9 33 00 00                  ff .end (operand)
  fa 33 00 00                  ff .end (operand)
  fb 33 00 00               03 00 .var1 FLAGS
  fd 33 00 00                  01 .literal
  fe 33 00 00         61 02 00 00 609
  02 34 00 00                  ff .end (operand)
  03 34 00 00                  04 .incset
  04 34 00 00               04 00 .var2 RANDOM
  06 34 00 00                  01 .literal
  07 34 00 00         01 00 00 00 1
  0b 34 00 00                  ff .end (operand)
  0c 34 00 00                  01 .literal
  0d 34 00 00         03 00 00 00 3
  11 34 00 00                  ff .end (operand)
  12 34 00 00                  ff .end (operand)
  13 34 00 00               01 18 .exec CallEvent
  16 34 00 00                  01 .literal
  17 34 00 00         0e 00 00 00 14
  1b 34 00 00                  ff .end (operand)
  1c 34 00 00                  ff .end (block)
 :1d 34 00 00                  0b .case
  1e 34 00 00                  05 .group
  1f 34 00 00                  01 .literal
  20 34 00 00         03 00 00 00 3
  24 34 00 00                  ff .end (operand)
  25 34 00 00                  ff .end (operand)
  26 34 00 00         45 34 00 00 .case-end-address
  2a 34 00 00               03 00 .var1 FLAGS
  2c 34 00 00                  01 .literal
  2d 34 00 00         7a 02 00 00 634
  31 34 00 00                  ff .end (operand)
  32 34 00 00                  01 .set
  33 34 00 00                  01 .literal
  34 34 00 00         00 00 00 00 0
  38 34 00 00                  ff .end (operand)
  39 34 00 00               01 5f .exec MagicMenu
  3b 34 00 00               03 02 .var1 CHAR
  3d 34 00 00                  01 .literal
  3e 34 00 00         05 00 00 00 5
  42 34 00 00                  ff .end (operand)
  43 34 00 00                  ff .end (operand)
  44 34 00 00                  ff .end (block)
 :45 34 00 00                  0b .case
  46 34 00 00                  05 .group
  47 34 00 00                  01 .literal
  48 34 00 00         04 00 00 00 4
  4c 34 00 00                  ff .end (operand)
  4d 34 00 00                  ff .end (operand)
  4e 34 00 00         6d 34 00 00 .case-end-address
  52 34 00 00               03 00 .var1 FLAGS
  54 34 00 00                  01 .literal
  55 34 00 00         7a 02 00 00 634
  59 34 00 00                  ff .end (operand)
  5a 34 00 00                  01 .set
  5b 34 00 00                  01 .literal
  5c 34 00 00         00 00 00 00 0
  60 34 00 00                  ff .end (operand)
  61 34 00 00               01 5d .exec ItemMenu
  63 34 00 00               03 02 .var1 CHAR
  65 34 00 00                  01 .literal
  66 34 00 00         05 00 00 00 5
  6a 34 00 00                  ff .end (operand)
  6b 34 00 00                  ff .end (operand)
  6c 34 00 00                  ff .end (block)
 :6d 34 00 00                  0b .case
  6e 34 00 00                  05 .group
  6f 34 00 00                  01 .literal
  70 34 00 00         05 00 00 00 5
  74 34 00 00                  ff .end (operand)
  75 34 00 00                  ff .end (operand)
  76 34 00 00         86 34 00 00 .case-end-address
  7a 34 00 00               01 5f .exec MagicMenu
  7c 34 00 00               03 02 .var1 CHAR
  7e 34 00 00                  01 .literal
  7f 34 00 00         05 00 00 00 5
  83 34 00 00                  ff .end (operand)
  84 34 00 00                  ff .end (operand)
  85 34 00 00                  ff .end (block)
 :86 34 00 00                  ff .end (switch)
 :87 34 00 00                  ff .end (block)

.event 9
* 88 34 00 00               01 20 .exec Redraw
if152
 :8a 34 00 00               05 01 .if [terms=1]
  8c 34 00 00         85 36 00 00 .else
  90 34 00 00               03 00 .var1 FLAGS
  92 34 00 00                  01 .literal
  93 34 00 00         7b 02 00 00 635
  97 34 00 00                  ff .end (operand)
  98 34 00 00                  ff .end (operand)
  9a 34 00 00                  02 .if-sign-nonzero
  9a 34 00 00                  01 .literal
  9b 34 00 00         00 00 00 00 0
  9f 34 00 00                  ff .end (operand)
if153
 :a0 34 00 00               05 02 .if [terms=2]
  a2 34 00 00         85 36 00 00 .else
  a6 34 00 00               03 02 .var1 CHAR
  a8 34 00 00                  01 .literal
  a9 34 00 00         06 00 00 00 6
  ad 34 00 00                  ff .end (operand)
  ae 34 00 00                  ff .end (operand)
  b0 34 00 00                  01 .if-sign-nonzero
  b0 34 00 00               03 07 .var1 CURHP
  b2 34 00 00                  01 .literal
  b3 34 00 00         06 00 00 00 6
  b7 34 00 00                  ff .end (operand)
  b8 34 00 00                  ff .end (operand)
  ba 34 00 00                  04 .if-sign-nonzero
  ba 34 00 00                  01 .literal
  bb 34 00 00         00 00 00 00 0
  bf 34 00 00                  ff .end (operand)
  c0 34 00 00               03 00 .var1 FLAGS
  c2 34 00 00                  01 .literal
  c3 34 00 00         7e 02 00 00 638
  c7 34 00 00                  ff .end (operand)
  c8 34 00 00                  01 .set
  c9 34 00 00                  01 .literal
  ca 34 00 00         06 00 00 00 6
  ce 34 00 00                  ff .end (operand)
if154
 :cf 34 00 00               05 01 .if [terms=1]
  d1 34 00 00         26 35 00 00 .else
  d5 34 00 00               03 00 .var1 FLAGS
  d7 34 00 00                  01 .literal
  d8 34 00 00         ee 03 00 00 1006
  dc 34 00 00                  ff .end (operand)
  dd 34 00 00                  ff .end (operand)
  df 34 00 00                  06 .if-sign-nonzero
  df 34 00 00               03 08 .var1 MAXHP
  e1 34 00 00                  01 .literal
  e2 34 00 00         06 00 00 00 6
  e6 34 00 00                  ff .end (operand)
  e7 34 00 00                  01 .add +
  e8 34 00 00               03 08 .var1 MAXHP
  ea 34 00 00                  01 .literal
  eb 34 00 00         06 00 00 00 6
  ef 34 00 00                  ff .end (operand)
  f0 34 00 00                  02 .sub -
  f1 34 00 00               03 2a .var1 FER
  f3 34 00 00                  01 .literal
  f4 34 00 00         06 00 00 00 6
  f8 34 00 00                  ff .end (operand)
  f9 34 00 00                  ff .end (operand)
  fa 34 00 00               01 5c .exec TextMenu
  fc 34 00 00                  01 .literal
  fd 34 00 00         04 00 00 00 4
  01 35 00 00                  ff .end (operand)
  02 35 00 00                  01 .literal
  03 35 00 00         04 00 00 00 4
  07 35 00 00                  ff .end (operand)
  08 35 00 00                  01 .literal
  09 35 00 00         7b 02 00 00 635
  0d 35 00 00                  ff .end (operand)
  0e 35 00 00                  01 .literal
  0f 35 00 00         01 00 00 00 1
  13 35 00 00                  ff .end (operand)
  15 35 00 00                     "G.E.P"

              47 2e 45 2e 50 00 
  1b 35 00 00                     "Magic"

              4d 61 67 69 63 00 
  21 35 00 00                     "Item"

              49 74 65 6d 00 
if155
 :26 35 00 00               05 01 .if [terms=1]
  28 35 00 00         88 35 00 00 .else
  2c 35 00 00               03 00 .var1 FLAGS
  2e 35 00 00                  01 .literal
  2f 35 00 00         ee 03 00 00 1006
  33 35 00 00                  ff .end (operand)
  34 35 00 00                  ff .end (operand)
  36 35 00 00                  05 .if-sign-nonzero
  36 35 00 00               03 08 .var1 MAXHP
  38 35 00 00                  01 .literal
  39 35 00 00         06 00 00 00 6
  3d 35 00 00                  ff .end (operand)
  3e 35 00 00                  01 .add +
  3f 35 00 00               03 08 .var1 MAXHP
  41 35 00 00                  01 .literal
  42 35 00 00         06 00 00 00 6
  46 35 00 00                  ff .end (operand)
  47 35 00 00                  02 .sub -
  48 35 00 00               03 2a .var1 FER
  4a 35 00 00                  01 .literal
  4b 35 00 00         06 00 00 00 6
  4f 35 00 00                  ff .end (operand)
  50 35 00 00                  ff .end (operand)
  51 35 00 00               01 5c .exec TextMenu
  53 35 00 00                  01 .literal
  54 35 00 00         04 00 00 00 4
  58 35 00 00                  ff .end (operand)
  59 35 00 00                  01 .literal
  5a 35 00 00         04 00 00 00 4
  5e 35 00 00                  ff .end (operand)
  5f 35 00 00                  01 .literal
  60 35 00 00         7b 02 00 00 635
  64 35 00 00                  ff .end (operand)
  65 35 00 00                  01 .literal
  66 35 00 00         01 00 00 00 1
  6a 35 00 00                  ff .end (operand)
  6c 35 00 00                     "G.E.P"

              47 2e 45 2e 50 00 
  72 35 00 00                     "Magic"

              4d 61 67 69 63 00 
  78 35 00 00                     "Item"

              49 74 65 6d 00 
  7d 35 00 00                     "Anger Move"

              41 6e 67 65 72 20 4d 6f 
              76 65 00 
 :88 35 00 00                  0a .switch
  89 35 00 00               03 00 .var1 FLAGS
  8b 35 00 00                  01 .literal
  8c 35 00 00         7b 02 00 00 635
  90 35 00 00                  ff .end (operand)
  91 35 00 00                  ff .end (operand)
  92 35 00 00                  0b .case
  93 35 00 00                  05 .group
  94 35 00 00                  01 .literal
  95 35 00 00         01 00 00 00 1
  99 35 00 00                  ff .end (operand)
  9a 35 00 00                  ff .end (operand)
  9b 35 00 00         1b 36 00 00 .case-end-address
  9f 35 00 00               03 00 .var1 FLAGS
  a1 35 00 00                  01 .literal
  a2 35 00 00         63 02 00 00 611
  a6 35 00 00                  ff .end (operand)
  a7 35 00 00                  04 .incset
  a8 35 00 00               03 22 .var1 ATK
  aa 35 00 00                  01 .literal
  ab 35 00 00         06 00 00 00 6
  af 35 00 00                  ff .end (operand)
  b0 35 00 00                  ff .end (operand)
  b1 35 00 00               03 00 .var1 FLAGS
  b3 35 00 00                  01 .literal
  b4 35 00 00         63 02 00 00 611
  b8 35 00 00                  ff .end (operand)
  b9 35 00 00                  04 .incset
  ba 35 00 00               03 22 .var1 ATK
  bc 35 00 00                  01 .literal
  bd 35 00 00         06 00 00 00 6
  c1 35 00 00                  ff .end (operand)
  c2 35 00 00                  ff .end (operand)
  c3 35 00 00               03 00 .var1 FLAGS
  c5 35 00 00                  01 .literal
  c6 35 00 00         63 02 00 00 611
  ca 35 00 00                  ff .end (operand)
  cb 35 00 00                  04 .incset
  cc 35 00 00               03 22 .var1 ATK
  ce 35 00 00                  01 .literal
  cf 35 00 00         06 00 00 00 6
  d3 35 00 00                  ff .end (operand)
  d4 35 00 00                  ff .end (operand)
  d5 35 00 00               03 00 .var1 FLAGS
  d7 35 00 00                  01 .literal
  d8 35 00 00         63 02 00 00 611
  dc 35 00 00                  ff .end (operand)
  dd 35 00 00                  04 .incset
  de 35 00 00               04 00 .var2 RANDOM
  e0 35 00 00                  01 .literal
  e1 35 00 00         01 00 00 00 1
  e5 35 00 00                  ff .end (operand)
  e6 35 00 00                  01 .literal
  e7 35 00 00         03 00 00 00 3
  eb 35 00 00                  ff .end (operand)
  ec 35 00 00                  ff .end (operand)
  ed 35 00 00               03 00 .var1 FLAGS
  ef 35 00 00                  01 .literal
  f0 35 00 00         64 02 00 00 612
  f4 35 00 00                  ff .end (operand)
  f5 35 00 00                  04 .incset
  f6 35 00 00               03 23 .var1 DEF
  f8 35 00 00                  01 .literal
  f9 35 00 00         06 00 00 00 6
  fd 35 00 00                  ff .end (operand)
  fe 35 00 00                  ff .end (operand)
  ff 35 00 00               03 00 .var1 FLAGS
  01 36 00 00                  01 .literal
  02 36 00 00         64 02 00 00 612
  06 36 00 00                  ff .end (operand)
  07 36 00 00                  04 .incset
  08 36 00 00               03 23 .var1 DEF
  0a 36 00 00                  01 .literal
  0b 36 00 00         06 00 00 00 6
  0f 36 00 00                  ff .end (operand)
  10 36 00 00                  ff .end (operand)
  11 36 00 00               01 18 .exec CallEvent
  14 36 00 00                  01 .literal
  15 36 00 00         0e 00 00 00 14
  19 36 00 00                  ff .end (operand)
  1a 36 00 00                  ff .end (block)
 :1b 36 00 00                  0b .case
  1c 36 00 00                  05 .group
  1d 36 00 00                  01 .literal
  1e 36 00 00         02 00 00 00 2
  22 36 00 00                  ff .end (operand)
  23 36 00 00                  ff .end (operand)
  24 36 00 00         43 36 00 00 .case-end-address
  28 36 00 00               03 00 .var1 FLAGS
  2a 36 00 00                  01 .literal
  2b 36 00 00         7b 02 00 00 635
  2f 36 00 00                  ff .end (operand)
  30 36 00 00                  01 .set
  31 36 00 00                  01 .literal
  32 36 00 00         00 00 00 00 0
  36 36 00 00                  ff .end (operand)
  37 36 00 00               01 5f .exec MagicMenu
  39 36 00 00               03 02 .var1 CHAR
  3b 36 00 00                  01 .literal
  3c 36 00 00         06 00 00 00 6
  40 36 00 00                  ff .end (operand)
  41 36 00 00                  ff .end (operand)
  42 36 00 00                  ff .end (block)
 :43 36 00 00                  0b .case
  44 36 00 00                  05 .group
  45 36 00 00                  01 .literal
  46 36 00 00         03 00 00 00 3
  4a 36 00 00                  ff .end (operand)
  4b 36 00 00                  ff .end (operand)
  4c 36 00 00         6b 36 00 00 .case-end-address
  50 36 00 00               03 00 .var1 FLAGS
  52 36 00 00                  01 .literal
  53 36 00 00         7b 02 00 00 635
  57 36 00 00                  ff .end (operand)
  58 36 00 00                  01 .set
  59 36 00 00                  01 .literal
  5a 36 00 00         00 00 00 00 0
  5e 36 00 00                  ff .end (operand)
  5f 36 00 00               01 5d .exec ItemMenu
  61 36 00 00               03 02 .var1 CHAR
  63 36 00 00                  01 .literal
  64 36 00 00         06 00 00 00 6
  68 36 00 00                  ff .end (operand)
  69 36 00 00                  ff .end (operand)
  6a 36 00 00                  ff .end (block)
 :6b 36 00 00                  0b .case
  6c 36 00 00                  05 .group
  6d 36 00 00                  01 .literal
  6e 36 00 00         04 00 00 00 4
  72 36 00 00                  ff .end (operand)
  73 36 00 00                  ff .end (operand)
  74 36 00 00         84 36 00 00 .case-end-address
  78 36 00 00               01 5f .exec MagicMenu
  7a 36 00 00               03 02 .var1 CHAR
  7c 36 00 00                  01 .literal
  7d 36 00 00         06 00 00 00 6
  81 36 00 00                  ff .end (operand)
  82 36 00 00                  ff .end (operand)
  83 36 00 00                  ff .end (block)
 :84 36 00 00                  ff .end (switch)
 :85 36 00 00                  ff .end (block)

.event 10
* 86 36 00 00               01 20 .exec Redraw
if156
 :88 36 00 00               05 01 .if [terms=1]
  8a 36 00 00         4a 38 00 00 .else
  8e 36 00 00               03 00 .var1 FLAGS
  90 36 00 00                  01 .literal
  91 36 00 00         7c 02 00 00 636
  95 36 00 00                  ff .end (operand)
  96 36 00 00                  ff .end (operand)
  98 36 00 00                  02 .if-sign-nonzero
  98 36 00 00                  01 .literal
  99 36 00 00         00 00 00 00 0
  9d 36 00 00                  ff .end (operand)
if157
 :9e 36 00 00               05 02 .if [terms=2]
  a0 36 00 00         4a 38 00 00 .else
  a4 36 00 00               03 02 .var1 CHAR
  a6 36 00 00                  01 .literal
  a7 36 00 00         07 00 00 00 7
  ab 36 00 00                  ff .end (operand)
  ac 36 00 00                  ff .end (operand)
  ae 36 00 00                  01 .if-sign-nonzero
  ae 36 00 00               03 07 .var1 CURHP
  b0 36 00 00                  01 .literal
  b1 36 00 00         07 00 00 00 7
  b5 36 00 00                  ff .end (operand)
  b6 36 00 00                  ff .end (operand)
  b8 36 00 00                  04 .if-sign-nonzero
  b8 36 00 00                  01 .literal
  b9 36 00 00         00 00 00 00 0
  bd 36 00 00                  ff .end (operand)
  be 36 00 00               03 00 .var1 FLAGS
  c0 36 00 00                  01 .literal
  c1 36 00 00         7e 02 00 00 638
  c5 36 00 00                  ff .end (operand)
  c6 36 00 00                  01 .set
  c7 36 00 00                  01 .literal
  c8 36 00 00         07 00 00 00 7
  cc 36 00 00                  ff .end (operand)
if158
 :cd 36 00 00               05 01 .if [terms=1]
  cf 36 00 00         25 37 00 00 .else
  d3 36 00 00               03 00 .var1 FLAGS
  d5 36 00 00                  01 .literal
  d6 36 00 00         ef 03 00 00 1007
  da 36 00 00                  ff .end (operand)
  db 36 00 00                  ff .end (operand)
  dd 36 00 00                  06 .if-sign-nonzero
  dd 36 00 00               03 08 .var1 MAXHP
  df 36 00 00                  01 .literal
  e0 36 00 00         07 00 00 00 7
  e4 36 00 00                  ff .end (operand)
  e5 36 00 00                  01 .add +
  e6 36 00 00               03 08 .var1 MAXHP
  e8 36 00 00                  01 .literal
  e9 36 00 00         07 00 00 00 7
  ed 36 00 00                  ff .end (operand)
  ee 36 00 00                  02 .sub -
  ef 36 00 00               03 2a .var1 FER
  f1 36 00 00                  01 .literal
  f2 36 00 00         07 00 00 00 7
  f6 36 00 00                  ff .end (operand)
  f7 36 00 00                  ff .end (operand)
  f8 36 00 00               01 5c .exec TextMenu
  fa 36 00 00                  01 .literal
  fb 36 00 00         04 00 00 00 4
  ff 36 00 00                  ff .end (operand)
  00 37 00 00                  01 .literal
  01 37 00 00         04 00 00 00 4
  05 37 00 00                  ff .end (operand)
  06 37 00 00                  01 .literal
  07 37 00 00         7c 02 00 00 636
  0b 37 00 00                  ff .end (operand)
  0c 37 00 00                  01 .literal
  0d 37 00 00         01 00 00 00 1
  11 37 00 00                  ff .end (operand)
  13 37 00 00                     "Attack"

              41 74 74 61 63 6b 00 
  1a 37 00 00                     "Croak"

              43 72 6f 61 6b 00 
  20 37 00 00                     "Item"

              49 74 65 6d 00 
if159
 :25 37 00 00               05 01 .if [terms=1]
  27 37 00 00         88 37 00 00 .else
  2b 37 00 00               03 00 .var1 FLAGS
  2d 37 00 00                  01 .literal
  2e 37 00 00         ef 03 00 00 1007
  32 37 00 00                  ff .end (operand)
  33 37 00 00                  ff .end (operand)
  35 37 00 00                  05 .if-sign-nonzero
  35 37 00 00               03 08 .var1 MAXHP
  37 37 00 00                  01 .literal
  38 37 00 00         07 00 00 00 7
  3c 37 00 00                  ff .end (operand)
  3d 37 00 00                  01 .add +
  3e 37 00 00               03 08 .var1 MAXHP
  40 37 00 00                  01 .literal
  41 37 00 00         07 00 00 00 7
  45 37 00 00                  ff .end (operand)
  46 37 00 00                  02 .sub -
  47 37 00 00               03 2a .var1 FER
  49 37 00 00                  01 .literal
  4a 37 00 00         07 00 00 00 7
  4e 37 00 00                  ff .end (operand)
  4f 37 00 00                  ff .end (operand)
  50 37 00 00               01 5c .exec TextMenu
  52 37 00 00                  01 .literal
  53 37 00 00         04 00 00 00 4
  57 37 00 00                  ff .end (operand)
  58 37 00 00                  01 .literal
  59 37 00 00         04 00 00 00 4
  5d 37 00 00                  ff .end (operand)
  5e 37 00 00                  01 .literal
  5f 37 00 00         7c 02 00 00 636
  63 37 00 00                  ff .end (operand)
  64 37 00 00                  01 .literal
  65 37 00 00         01 00 00 00 1
  69 37 00 00                  ff .end (operand)
  6b 37 00 00                     "Attack"

              41 74 74 61 63 6b 00 
  72 37 00 00                     "Croak"

              43 72 6f 61 6b 00 
  78 37 00 00                     "Item"

              49 74 65 6d 00 
  7d 37 00 00                     "Anger Move"

              41 6e 67 65 72 20 4d 6f 
              76 65 00 
 :88 37 00 00                  0a .switch
  89 37 00 00               03 00 .var1 FLAGS
  8b 37 00 00                  01 .literal
  8c 37 00 00         7c 02 00 00 636
  90 37 00 00                  ff .end (operand)
  91 37 00 00                  ff .end (operand)
  92 37 00 00                  0b .case
  93 37 00 00                  05 .group
  94 37 00 00                  01 .literal
  95 37 00 00         01 00 00 00 1
  99 37 00 00                  ff .end (operand)
  9a 37 00 00                  ff .end (operand)
  9b 37 00 00         c1 37 00 00 .case-end-address
  9f 37 00 00               03 00 .var1 FLAGS
  a1 37 00 00                  01 .literal
  a2 37 00 00         65 02 00 00 613
  a6 37 00 00                  ff .end (operand)
  a7 37 00 00                  04 .incset
  a8 37 00 00               04 00 .var2 RANDOM
  aa 37 00 00                  01 .literal
  ab 37 00 00         01 00 00 00 1
  af 37 00 00                  ff .end (operand)
  b0 37 00 00                  01 .literal
  b1 37 00 00         03 00 00 00 3
  b5 37 00 00                  ff .end (operand)
  b6 37 00 00                  ff .end (operand)
  b7 37 00 00               01 18 .exec CallEvent
  ba 37 00 00                  01 .literal
  bb 37 00 00         0e 00 00 00 14
  bf 37 00 00                  ff .end (operand)
  c0 37 00 00                  ff .end (block)
 :c1 37 00 00                  0b .case
  c2 37 00 00                  05 .group
  c3 37 00 00                  01 .literal
  c4 37 00 00         02 00 00 00 2
  c8 37 00 00                  ff .end (operand)
  c9 37 00 00                  ff .end (operand)
  ca 37 00 00         08 38 00 00 .case-end-address
  ce 37 00 00               03 00 .var1 FLAGS
  d0 37 00 00                  01 .literal
  d1 37 00 00         65 02 00 00 613
  d5 37 00 00                  ff .end (operand)
  d6 37 00 00                  04 .incset
  d7 37 00 00               03 22 .var1 ATK
  d9 37 00 00                  01 .literal
  da 37 00 00         07 00 00 00 7
  de 37 00 00                  ff .end (operand)
  df 37 00 00                  ff .end (operand)
  e0 37 00 00               03 00 .var1 FLAGS
  e2 37 00 00                  01 .literal
  e3 37 00 00         65 02 00 00 613
  e7 37 00 00                  ff .end (operand)
  e8 37 00 00                  04 .incset
  e9 37 00 00               04 00 .var2 RANDOM
  eb 37 00 00                  01 .literal
  ec 37 00 00         01 00 00 00 1
  f0 37 00 00                  ff .end (operand)
  f1 37 00 00                  01 .literal
  f2 37 00 00         03 00 00 00 3
  f6 37 00 00                  ff .end (operand)
  f7 37 00 00                  ff .end (operand)
  f8 37 00 00               03 00 .var1 FLAGS
  fa 37 00 00                  01 .literal
  fb 37 00 00         66 02 00 00 614
  ff 37 00 00                  ff .end (operand)
  00 38 00 00                  01 .set
  01 38 00 00                  01 .literal
  02 38 00 00         00 00 00 00 0
  06 38 00 00                  ff .end (operand)
  07 38 00 00                  ff .end (block)
 :08 38 00 00                  0b .case
  09 38 00 00                  05 .group
  0a 38 00 00                  01 .literal
  0b 38 00 00         03 00 00 00 3
  0f 38 00 00                  ff .end (operand)
  10 38 00 00                  ff .end (operand)
  11 38 00 00         30 38 00 00 .case-end-address
  15 38 00 00               03 00 .var1 FLAGS
  17 38 00 00                  01 .literal
  18 38 00 00         7c 02 00 00 636
  1c 38 00 00                  ff .end (operand)
  1d 38 00 00                  01 .set
  1e 38 00 00                  01 .literal
  1f 38 00 00         00 00 00 00 0
  23 38 00 00                  ff .end (operand)
  24 38 00 00               01 5d .exec ItemMenu
  26 38 00 00               03 02 .var1 CHAR
  28 38 00 00                  01 .literal
  29 38 00 00         07 00 00 00 7
  2d 38 00 00                  ff .end (operand)
  2e 38 00 00                  ff .end (operand)
  2f 38 00 00                  ff .end (block)
 :30 38 00 00                  0b .case
  31 38 00 00                  05 .group
  32 38 00 00                  01 .literal
  33 38 00 00         04 00 00 00 4
  37 38 00 00                  ff .end (operand)
  38 38 00 00                  ff .end (operand)
  39 38 00 00         49 38 00 00 .case-end-address
  3d 38 00 00               01 5f .exec MagicMenu
  3f 38 00 00               03 02 .var1 CHAR
  41 38 00 00                  01 .literal
  42 38 00 00         07 00 00 00 7
  46 38 00 00                  ff .end (operand)
  47 38 00 00                  ff .end (operand)
  48 38 00 00                  ff .end (block)
 :49 38 00 00                  ff .end (switch)
 :4a 38 00 00                  ff .end (block)

.event 11
* 4b 38 00 00               01 20 .exec Redraw
if160
 :4d 38 00 00               05 01 .if [terms=1]
  4f 38 00 00         f0 39 00 00 .else
  53 38 00 00               03 00 .var1 FLAGS
  55 38 00 00                  01 .literal
  56 38 00 00         7d 02 00 00 637
  5a 38 00 00                  ff .end (operand)
  5b 38 00 00                  ff .end (operand)
  5d 38 00 00                  02 .if-sign-nonzero
  5d 38 00 00                  01 .literal
  5e 38 00 00         00 00 00 00 0
  62 38 00 00                  ff .end (operand)
if161
 :63 38 00 00               05 02 .if [terms=2]
  65 38 00 00         f0 39 00 00 .else
  69 38 00 00               03 02 .var1 CHAR
  6b 38 00 00                  01 .literal
  6c 38 00 00         08 00 00 00 8
  70 38 00 00                  ff .end (operand)
  71 38 00 00                  ff .end (operand)
  73 38 00 00                  01 .if-sign-nonzero
  73 38 00 00               03 07 .var1 CURHP
  75 38 00 00                  01 .literal
  76 38 00 00         08 00 00 00 8
  7a 38 00 00                  ff .end (operand)
  7b 38 00 00                  ff .end (operand)
  7d 38 00 00                  04 .if-sign-nonzero
  7d 38 00 00                  01 .literal
  7e 38 00 00         00 00 00 00 0
  82 38 00 00                  ff .end (operand)
  83 38 00 00               03 00 .var1 FLAGS
  85 38 00 00                  01 .literal
  86 38 00 00         7e 02 00 00 638
  8a 38 00 00                  ff .end (operand)
  8b 38 00 00                  01 .set
  8c 38 00 00                  01 .literal
  8d 38 00 00         08 00 00 00 8
  91 38 00 00                  ff .end (operand)
if162
 :92 38 00 00               05 01 .if [terms=1]
  94 38 00 00         ea 38 00 00 .else
  98 38 00 00               03 00 .var1 FLAGS
  9a 38 00 00                  01 .literal
  9b 38 00 00         f0 03 00 00 1008
  9f 38 00 00                  ff .end (operand)
  a0 38 00 00                  ff .end (operand)
  a2 38 00 00                  06 .if-sign-nonzero
  a2 38 00 00               03 08 .var1 MAXHP
  a4 38 00 00                  01 .literal
  a5 38 00 00         08 00 00 00 8
  a9 38 00 00                  ff .end (operand)
  aa 38 00 00                  01 .add +
  ab 38 00 00               03 08 .var1 MAXHP
  ad 38 00 00                  01 .literal
  ae 38 00 00         08 00 00 00 8
  b2 38 00 00                  ff .end (operand)
  b3 38 00 00                  02 .sub -
  b4 38 00 00               03 2a .var1 FER
  b6 38 00 00                  01 .literal
  b7 38 00 00         08 00 00 00 8
  bb 38 00 00                  ff .end (operand)
  bc 38 00 00                  ff .end (operand)
  bd 38 00 00               01 5c .exec TextMenu
  bf 38 00 00                  01 .literal
  c0 38 00 00         04 00 00 00 4
  c4 38 00 00                  ff .end (operand)
  c5 38 00 00                  01 .literal
  c6 38 00 00         04 00 00 00 4
  ca 38 00 00                  ff .end (operand)
  cb 38 00 00                  01 .literal
  cc 38 00 00         7d 02 00 00 637
  d0 38 00 00                  ff .end (operand)
  d1 38 00 00                  01 .literal
  d2 38 00 00         01 00 00 00 1
  d6 38 00 00                  ff .end (operand)
  d8 38 00 00                     "Attack"

              41 74 74 61 63 6b 00 
  df 38 00 00                     "Magic"

              4d 61 67 69 63 00 
  e5 38 00 00                     "Item"

              49 74 65 6d 00 
if163
 :ea 38 00 00               05 01 .if [terms=1]
  ec 38 00 00         4d 39 00 00 .else
  f0 38 00 00               03 00 .var1 FLAGS
  f2 38 00 00                  01 .literal
  f3 38 00 00         f0 03 00 00 1008
  f7 38 00 00                  ff .end (operand)
  f8 38 00 00                  ff .end (operand)
  fa 38 00 00                  05 .if-sign-nonzero
  fa 38 00 00               03 08 .var1 MAXHP
  fc 38 00 00                  01 .literal
  fd 38 00 00         08 00 00 00 8
  01 39 00 00                  ff .end (operand)
  02 39 00 00                  01 .add +
  03 39 00 00               03 08 .var1 MAXHP
  05 39 00 00                  01 .literal
  06 39 00 00         08 00 00 00 8
  0a 39 00 00                  ff .end (operand)
  0b 39 00 00                  02 .sub -
  0c 39 00 00               03 2a .var1 FER
  0e 39 00 00                  01 .literal
  0f 39 00 00         08 00 00 00 8
  13 39 00 00                  ff .end (operand)
  14 39 00 00                  ff .end (operand)
  15 39 00 00               01 5c .exec TextMenu
  17 39 00 00                  01 .literal
  18 39 00 00         04 00 00 00 4
  1c 39 00 00                  ff .end (operand)
  1d 39 00 00                  01 .literal
  1e 39 00 00         04 00 00 00 4
  22 39 00 00                  ff .end (operand)
  23 39 00 00                  01 .literal
  24 39 00 00         7d 02 00 00 637
  28 39 00 00                  ff .end (operand)
  29 39 00 00                  01 .literal
  2a 39 00 00         01 00 00 00 1
  2e 39 00 00                  ff .end (operand)
  30 39 00 00                     "Attack"

              41 74 74 61 63 6b 00 
  37 39 00 00                     "Magic"

              4d 61 67 69 63 00 
  3d 39 00 00                     "Item"

              49 74 65 6d 00 
  42 39 00 00                     "Anger Move"

              41 6e 67 65 72 20 4d 6f 
              76 65 00 
 :4d 39 00 00                  0a .switch
  4e 39 00 00               03 00 .var1 FLAGS
  50 39 00 00                  01 .literal
  51 39 00 00         7d 02 00 00 637
  55 39 00 00                  ff .end (operand)
  56 39 00 00                  ff .end (operand)
  57 39 00 00                  0b .case
  58 39 00 00                  05 .group
  59 39 00 00                  01 .literal
  5a 39 00 00         01 00 00 00 1
  5e 39 00 00                  ff .end (operand)
  5f 39 00 00                  ff .end (operand)
  60 39 00 00         86 39 00 00 .case-end-address
  64 39 00 00               03 00 .var1 FLAGS
  66 39 00 00                  01 .literal
  67 39 00 00         67 02 00 00 615
  6b 39 00 00                  ff .end (operand)
  6c 39 00 00                  04 .incset
  6d 39 00 00               04 00 .var2 RANDOM
  6f 39 00 00                  01 .literal
  70 39 00 00         01 00 00 00 1
  74 39 00 00                  ff .end (operand)
  75 39 00 00                  01 .literal
  76 39 00 00         03 00 00 00 3
  7a 39 00 00                  ff .end (operand)
  7b 39 00 00                  ff .end (operand)
  7c 39 00 00               01 18 .exec CallEvent
  7f 39 00 00                  01 .literal
  80 39 00 00         0e 00 00 00 14
  84 39 00 00                  ff .end (operand)
  85 39 00 00                  ff .end (block)
 :86 39 00 00                  0b .case
  87 39 00 00                  05 .group
  88 39 00 00                  01 .literal
  89 39 00 00         02 00 00 00 2
  8d 39 00 00                  ff .end (operand)
  8e 39 00 00                  ff .end (operand)
  8f 39 00 00         ae 39 00 00 .case-end-address
  93 39 00 00               03 00 .var1 FLAGS
  95 39 00 00                  01 .literal
  96 39 00 00         7d 02 00 00 637
  9a 39 00 00                  ff .end (operand)
  9b 39 00 00                  01 .set
  9c 39 00 00                  01 .literal
  9d 39 00 00         00 00 00 00 0
  a1 39 00 00                  ff .end (operand)
  a2 39 00 00               01 5f .exec MagicMenu
  a4 39 00 00               03 02 .var1 CHAR
  a6 39 00 00                  01 .literal
  a7 39 00 00         08 00 00 00 8
  ab 39 00 00                  ff .end (operand)
  ac 39 00 00                  ff .end (operand)
  ad 39 00 00                  ff .end (block)
 :ae 39 00 00                  0b .case
  af 39 00 00                  05 .group
  b0 39 00 00                  01 .literal
  b1 39 00 00         03 00 00 00 3
  b5 39 00 00                  ff .end (operand)
  b6 39 00 00                  ff .end (operand)
  b7 39 00 00         d6 39 00 00 .case-end-address
  bb 39 00 00               03 00 .var1 FLAGS
  bd 39 00 00                  01 .literal
  be 39 00 00         7d 02 00 00 637
  c2 39 00 00                  ff .end (operand)
  c3 39 00 00                  01 .set
  c4 39 00 00                  01 .literal
  c5 39 00 00         00 00 00 00 0
  c9 39 00 00                  ff .end (operand)
  ca 39 00 00               01 5d .exec ItemMenu
  cc 39 00 00               03 02 .var1 CHAR
  ce 39 00 00                  01 .literal
  cf 39 00 00         08 00 00 00 8
  d3 39 00 00                  ff .end (operand)
  d4 39 00 00                  ff .end (operand)
  d5 39 00 00                  ff .end (block)
 :d6 39 00 00                  0b .case
  d7 39 00 00                  05 .group
  d8 39 00 00                  01 .literal
  d9 39 00 00         04 00 00 00 4
  dd 39 00 00                  ff .end (operand)
  de 39 00 00                  ff .end (operand)
  df 39 00 00         ef 39 00 00 .case-end-address
  e3 39 00 00               01 5f .exec MagicMenu
  e5 39 00 00               03 02 .var1 CHAR
  e7 39 00 00                  01 .literal
  e8 39 00 00         08 00 00 00 8
  ec 39 00 00                  ff .end (operand)
  ed 39 00 00                  ff .end (operand)
  ee 39 00 00                  ff .end (block)
 :ef 39 00 00                  ff .end (switch)
 :f0 39 00 00                  ff .end (block)

.event 12
if164
*:f1 39 00 00               05 01 .if [terms=1]
  f3 39 00 00         89 3a 00 00 .else
  f7 39 00 00               03 00 .var1 FLAGS
  f9 39 00 00                  01 .literal
  fa 39 00 00         56 02 00 00 598
  fe 39 00 00                  ff .end (operand)
  ff 39 00 00                  ff .end (operand)
  01 3a 00 00                  04 .if-sign-nonzero
  01 3a 00 00                  01 .literal
  02 3a 00 00         00 00 00 00 0
  06 3a 00 00                  ff .end (operand)
  07 3a 00 00               03 00 .var1 FLAGS
  09 3a 00 00                  01 .literal
  0a 3a 00 00         75 02 00 00 629
  0e 3a 00 00                  ff .end (operand)
  0f 3a 00 00                  01 .set
  10 3a 00 00                  01 .literal
  11 3a 00 00         01 00 00 00 1
  15 3a 00 00                  ff .end (operand)
  16 3a 00 00                  0a .switch
  17 3a 00 00               03 00 .var1 FLAGS
  19 3a 00 00                  01 .literal
  1a 3a 00 00         6f 02 00 00 623
  1e 3a 00 00                  ff .end (operand)
  1f 3a 00 00                  ff .end (operand)
  20 3a 00 00                  0b .case
  21 3a 00 00                  05 .group
  22 3a 00 00                  01 .literal
  23 3a 00 00         01 00 00 00 1
  27 3a 00 00                  ff .end (operand)
  28 3a 00 00                  ff .end (operand)
  29 3a 00 00         3a 3a 00 00 .case-end-address
  2d 3a 00 00               01 57 .exec CallEffect
  30 3a 00 00               03 00 .var1 FLAGS
  32 3a 00 00                  01 .literal
  33 3a 00 00         f9 01 00 00 505
  37 3a 00 00                  ff .end (operand)
  38 3a 00 00                  ff .end (operand)
  39 3a 00 00                  ff .end (block)
 :3a 3a 00 00                  0b .case
  3b 3a 00 00                  05 .group
  3c 3a 00 00                  01 .literal
  3d 3a 00 00         02 00 00 00 2
  41 3a 00 00                  ff .end (operand)
  42 3a 00 00                  ff .end (operand)
  43 3a 00 00         54 3a 00 00 .case-end-address
  47 3a 00 00               01 57 .exec CallEffect
  4a 3a 00 00               03 00 .var1 FLAGS
  4c 3a 00 00                  01 .literal
  4d 3a 00 00         fa 01 00 00 506
  51 3a 00 00                  ff .end (operand)
  52 3a 00 00                  ff .end (operand)
  53 3a 00 00                  ff .end (block)
 :54 3a 00 00                  0b .case
  55 3a 00 00                  05 .group
  56 3a 00 00                  01 .literal
  57 3a 00 00         03 00 00 00 3
  5b 3a 00 00                  ff .end (operand)
  5c 3a 00 00                  ff .end (operand)
  5d 3a 00 00         6e 3a 00 00 .case-end-address
  61 3a 00 00               01 57 .exec CallEffect
  64 3a 00 00               03 00 .var1 FLAGS
  66 3a 00 00                  01 .literal
  67 3a 00 00         fb 01 00 00 507
  6b 3a 00 00                  ff .end (operand)
  6c 3a 00 00                  ff .end (operand)
  6d 3a 00 00                  ff .end (block)
 :6e 3a 00 00                  0b .case
  6f 3a 00 00                  05 .group
  70 3a 00 00                  01 .literal
  71 3a 00 00         04 00 00 00 4
  75 3a 00 00                  ff .end (operand)
  76 3a 00 00                  ff .end (operand)
  77 3a 00 00         88 3a 00 00 .case-end-address
  7b 3a 00 00               01 57 .exec CallEffect
  7e 3a 00 00               03 00 .var1 FLAGS
  80 3a 00 00                  01 .literal
  81 3a 00 00         fc 01 00 00 508
  85 3a 00 00                  ff .end (operand)
  86 3a 00 00                  ff .end (operand)
  87 3a 00 00                  ff .end (block)
 :88 3a 00 00                  ff .end (switch)
if165
::89 3a 00 00               05 01 .if [terms=1]
  8b 3a 00 00         21 3b 00 00 .else
  8f 3a 00 00               03 00 .var1 FLAGS
  91 3a 00 00                  01 .literal
  92 3a 00 00         57 02 00 00 599
  96 3a 00 00                  ff .end (operand)
  97 3a 00 00                  ff .end (operand)
  99 3a 00 00                  04 .if-sign-nonzero
  99 3a 00 00                  01 .literal
  9a 3a 00 00         00 00 00 00 0
  9e 3a 00 00                  ff .end (operand)
  9f 3a 00 00               03 00 .var1 FLAGS
  a1 3a 00 00                  01 .literal
  a2 3a 00 00         75 02 00 00 629
  a6 3a 00 00                  ff .end (operand)
  a7 3a 00 00                  01 .set
  a8 3a 00 00                  01 .literal
  a9 3a 00 00         02 00 00 00 2
  ad 3a 00 00                  ff .end (operand)
  ae 3a 00 00                  0a .switch
  af 3a 00 00               03 00 .var1 FLAGS
  b1 3a 00 00                  01 .literal
  b2 3a 00 00         71 02 00 00 625
  b6 3a 00 00                  ff .end (operand)
  b7 3a 00 00                  ff .end (operand)
  b8 3a 00 00                  0b .case
  b9 3a 00 00                  05 .group
  ba 3a 00 00                  01 .literal
  bb 3a 00 00         01 00 00 00 1
  bf 3a 00 00                  ff .end (operand)
  c0 3a 00 00                  ff .end (operand)
  c1 3a 00 00         d2 3a 00 00 .case-end-address
  c5 3a 00 00               01 57 .exec CallEffect
  c8 3a 00 00               03 00 .var1 FLAGS
  ca 3a 00 00                  01 .literal
  cb 3a 00 00         06 02 00 00 518
  cf 3a 00 00                  ff .end (operand)
  d0 3a 00 00                  ff .end (operand)
  d1 3a 00 00                  ff .end (block)
 :d2 3a 00 00                  0b .case
  d3 3a 00 00                  05 .group
  d4 3a 00 00                  01 .literal
  d5 3a 00 00         02 00 00 00 2
  d9 3a 00 00                  ff .end (operand)
  da 3a 00 00                  ff .end (operand)
  db 3a 00 00         ec 3a 00 00 .case-end-address
  df 3a 00 00               01 57 .exec CallEffect
  e2 3a 00 00               03 00 .var1 FLAGS
  e4 3a 00 00                  01 .literal
  e5 3a 00 00         07 02 00 00 519
  e9 3a 00 00                  ff .end (operand)
  ea 3a 00 00                  ff .end (operand)
  eb 3a 00 00                  ff .end (block)
 :ec 3a 00 00                  0b .case
  ed 3a 00 00                  05 .group
  ee 3a 00 00                  01 .literal
  ef 3a 00 00         03 00 00 00 3
  f3 3a 00 00                  ff .end (operand)
  f4 3a 00 00                  ff .end (operand)
  f5 3a 00 00         06 3b 00 00 .case-end-address
  f9 3a 00 00               01 57 .exec CallEffect
  fc 3a 00 00               03 00 .var1 FLAGS
  fe 3a 00 00                  01 .literal
  ff 3a 00 00         08 02 00 00 520
  03 3b 00 00                  ff .end (operand)
  04 3b 00 00                  ff .end (operand)
  05 3b 00 00                  ff .end (block)
 :06 3b 00 00                  0b .case
  07 3b 00 00                  05 .group
  08 3b 00 00                  01 .literal
  09 3b 00 00         04 00 00 00 4
  0d 3b 00 00                  ff .end (operand)
  0e 3b 00 00                  ff .end (operand)
  0f 3b 00 00         20 3b 00 00 .case-end-address
  13 3b 00 00               01 57 .exec CallEffect
  16 3b 00 00               03 00 .var1 FLAGS
  18 3b 00 00                  01 .literal
  19 3b 00 00         09 02 00 00 521
  1d 3b 00 00                  ff .end (operand)
  1e 3b 00 00                  ff .end (operand)
  1f 3b 00 00                  ff .end (block)
 :20 3b 00 00                  ff .end (switch)
if166
::21 3b 00 00               05 01 .if [terms=1]
  23 3b 00 00         b9 3b 00 00 .else
  27 3b 00 00               03 00 .var1 FLAGS
  29 3b 00 00                  01 .literal
  2a 3b 00 00         58 02 00 00 600
  2e 3b 00 00                  ff .end (operand)
  2f 3b 00 00                  ff .end (operand)
  31 3b 00 00                  04 .if-sign-nonzero
  31 3b 00 00                  01 .literal
  32 3b 00 00         00 00 00 00 0
  36 3b 00 00                  ff .end (operand)
  37 3b 00 00               03 00 .var1 FLAGS
  39 3b 00 00                  01 .literal
  3a 3b 00 00         75 02 00 00 629
  3e 3b 00 00                  ff .end (operand)
  3f 3b 00 00                  01 .set
  40 3b 00 00                  01 .literal
  41 3b 00 00         03 00 00 00 3
  45 3b 00 00                  ff .end (operand)
  46 3b 00 00                  0a .switch
  47 3b 00 00               03 00 .var1 FLAGS
  49 3b 00 00                  01 .literal
  4a 3b 00 00         73 02 00 00 627
  4e 3b 00 00                  ff .end (operand)
  4f 3b 00 00                  ff .end (operand)
  50 3b 00 00                  0b .case
  51 3b 00 00                  05 .group
  52 3b 00 00                  01 .literal
  53 3b 00 00         01 00 00 00 1
  57 3b 00 00                  ff .end (operand)
  58 3b 00 00                  ff .end (operand)
  59 3b 00 00         6a 3b 00 00 .case-end-address
  5d 3b 00 00               01 57 .exec CallEffect
  60 3b 00 00               03 00 .var1 FLAGS
  62 3b 00 00                  01 .literal
  63 3b 00 00         13 02 00 00 531
  67 3b 00 00                  ff .end (operand)
  68 3b 00 00                  ff .end (operand)
  69 3b 00 00                  ff .end (block)
 :6a 3b 00 00                  0b .case
  6b 3b 00 00                  05 .group
  6c 3b 00 00                  01 .literal
  6d 3b 00 00         02 00 00 00 2
  71 3b 00 00                  ff .end (operand)
  72 3b 00 00                  ff .end (operand)
  73 3b 00 00         84 3b 00 00 .case-end-address
  77 3b 00 00               01 57 .exec CallEffect
  7a 3b 00 00               03 00 .var1 FLAGS
  7c 3b 00 00                  01 .literal
  7d 3b 00 00         14 02 00 00 532
  81 3b 00 00                  ff .end (operand)
  82 3b 00 00                  ff .end (operand)
  83 3b 00 00                  ff .end (block)
 :84 3b 00 00                  0b .case
  85 3b 00 00                  05 .group
  86 3b 00 00                  01 .literal
  87 3b 00 00         03 00 00 00 3
  8b 3b 00 00                  ff .end (operand)
  8c 3b 00 00                  ff .end (operand)
  8d 3b 00 00         9e 3b 00 00 .case-end-address
  91 3b 00 00               01 57 .exec CallEffect
  94 3b 00 00               03 00 .var1 FLAGS
  96 3b 00 00                  01 .literal
  97 3b 00 00         15 02 00 00 533
  9b 3b 00 00                  ff .end (operand)
  9c 3b 00 00                  ff .end (operand)
  9d 3b 00 00                  ff .end (block)
 :9e 3b 00 00                  0b .case
  9f 3b 00 00                  05 .group
  a0 3b 00 00                  01 .literal
  a1 3b 00 00         04 00 00 00 4
  a5 3b 00 00                  ff .end (operand)
  a6 3b 00 00                  ff .end (operand)
  a7 3b 00 00         b8 3b 00 00 .case-end-address
  ab 3b 00 00               01 57 .exec CallEffect
  ae 3b 00 00               03 00 .var1 FLAGS
  b0 3b 00 00                  01 .literal
  b1 3b 00 00         16 02 00 00 534
  b5 3b 00 00                  ff .end (operand)
  b6 3b 00 00                  ff .end (operand)
  b7 3b 00 00                  ff .end (block)
 :b8 3b 00 00                  ff .end (switch)
if167
::b9 3b 00 00               05 02 .if [terms=2]
  bb 3b 00 00         09 42 00 00 .else
  bf 3b 00 00               03 02 .var1 CHAR
  c1 3b 00 00                  01 .literal
  c2 3b 00 00         01 00 00 00 1
  c6 3b 00 00                  ff .end (operand)
  c7 3b 00 00                  ff .end (operand)
  c9 3b 00 00                  01 .if-sign-nonzero
  c9 3b 00 00               03 07 .var1 CURHP
  cb 3b 00 00                  01 .literal
  cc 3b 00 00         01 00 00 00 1
  d0 3b 00 00                  ff .end (operand)
  d1 3b 00 00                  ff .end (operand)
  d3 3b 00 00                  04 .if-sign-nonzero
  d3 3b 00 00                  01 .literal
  d4 3b 00 00         00 00 00 00 0
  d8 3b 00 00                  ff .end (operand)
  d9 3b 00 00               03 00 .var1 FLAGS
  db 3b 00 00                  01 .literal
  dc 3b 00 00         7e 02 00 00 638
  e0 3b 00 00                  ff .end (operand)
  e1 3b 00 00                  01 .set
  e2 3b 00 00                  01 .literal
  e3 3b 00 00         01 00 00 00 1
  e7 3b 00 00                  ff .end (operand)
  e8 3b 00 00                  0a .switch
  e9 3b 00 00               03 00 .var1 FLAGS
  eb 3b 00 00                  01 .literal
  ec 3b 00 00         76 02 00 00 630
  f0 3b 00 00                  ff .end (operand)
  f1 3b 00 00                  ff .end (operand)
  f2 3b 00 00                  0b .case
  f3 3b 00 00                  05 .group
  f4 3b 00 00                  01 .literal
  f5 3b 00 00         01 00 00 00 1
  f9 3b 00 00                  ff .end (operand)
  fa 3b 00 00                  ff .end (operand)
  fb 3b 00 00         00 3e 00 00 .case-end-address
  ff 3b 00 00               03 0d .var1 SPECIALFRAME
  01 3c 00 00                  01 .literal
  02 3c 00 00         08 00 00 00 8
  06 3c 00 00                  ff .end (operand)
  07 3c 00 00                  01 .set
  08 3c 00 00                  01 .literal
  09 3c 00 00         03 00 00 00 3
  0d 3c 00 00                  ff .end (operand)
  0e 3c 00 00               01 24 .exec Wait
  10 3c 00 00                  01 .literal
  11 3c 00 00         0f 00 00 00 15
  15 3c 00 00                  ff .end (operand)
  16 3c 00 00               03 0d .var1 SPECIALFRAME
  18 3c 00 00                  01 .literal
  19 3c 00 00         08 00 00 00 8
  1d 3c 00 00                  ff .end (operand)
  1e 3c 00 00                  01 .set
  1f 3c 00 00                  01 .literal
  20 3c 00 00         04 00 00 00 4
  24 3c 00 00                  ff .end (operand)
  25 3c 00 00               01 24 .exec Wait
  27 3c 00 00                  01 .literal
  28 3c 00 00         19 00 00 00 25
  2c 3c 00 00                  ff .end (operand)
  2d 3c 00 00               03 0d .var1 SPECIALFRAME
  2f 3c 00 00                  01 .literal
  30 3c 00 00         08 00 00 00 8
  34 3c 00 00                  ff .end (operand)
  35 3c 00 00                  01 .set
  36 3c 00 00                  01 .literal
  37 3c 00 00         03 00 00 00 3
  3b 3c 00 00                  ff .end (operand)
  3c 3c 00 00               01 24 .exec Wait
  3e 3c 00 00                  01 .literal
  3f 3c 00 00         0f 00 00 00 15
  43 3c 00 00                  ff .end (operand)
  44 3c 00 00               03 0d .var1 SPECIALFRAME
  46 3c 00 00                  01 .literal
  47 3c 00 00         08 00 00 00 8
  4b 3c 00 00                  ff .end (operand)
  4c 3c 00 00                  01 .set
  4d 3c 00 00                  01 .literal
  4e 3c 00 00         00 00 00 00 0
  52 3c 00 00                  ff .end (operand)
  53 3c 00 00                  0a .switch
  54 3c 00 00               03 00 .var1 FLAGS
  56 3c 00 00                  01 .literal
  57 3c 00 00         80 02 00 00 640
  5b 3c 00 00                  ff .end (operand)
  5c 3c 00 00                  ff .end (operand)
  5d 3c 00 00                  0b .case
  5e 3c 00 00                  05 .group
  5f 3c 00 00                  01 .literal
  60 3c 00 00         01 00 00 00 1
  64 3c 00 00                  ff .end (operand)
  65 3c 00 00                  ff .end (operand)
  66 3c 00 00         e5 3c 00 00 .case-end-address
if168
 :6a 3c 00 00               05 01 .if [terms=1]
  6c 3c 00 00         95 3c 00 00 .else
  70 3c 00 00               03 00 .var1 FLAGS
  72 3c 00 00                  01 .literal
  73 3c 00 00         59 02 00 00 601
  77 3c 00 00                  ff .end (operand)
  78 3c 00 00                  ff .end (operand)
  7a 3c 00 00                  06 .if-sign-nonzero
  7a 3c 00 00               03 00 .var1 FLAGS
  7c 3c 00 00                  01 .literal
  7d 3c 00 00         6a 02 00 00 618
  81 3c 00 00                  ff .end (operand)
  82 3c 00 00                  ff .end (operand)
  83 3c 00 00               03 00 .var1 FLAGS
  85 3c 00 00                  01 .literal
  86 3c 00 00         6a 02 00 00 618
  8a 3c 00 00                  ff .end (operand)
  8b 3c 00 00                  01 .set
  8c 3c 00 00               03 00 .var1 FLAGS
  8e 3c 00 00                  01 .literal
  8f 3c 00 00         59 02 00 00 601
  93 3c 00 00                  ff .end (operand)
  94 3c 00 00                  ff .end (operand)
::95 3c 00 00               03 00 .var1 FLAGS
  97 3c 00 00                  01 .literal
  98 3c 00 00         59 02 00 00 601
  9c 3c 00 00                  ff .end (operand)
  9d 3c 00 00                  05 .decset
  9e 3c 00 00               03 00 .var1 FLAGS
  a0 3c 00 00                  01 .literal
  a1 3c 00 00         6a 02 00 00 618
  a5 3c 00 00                  ff .end (operand)
  a6 3c 00 00                  ff .end (operand)
if169
 :a7 3c 00 00               05 01 .if [terms=1]
  a9 3c 00 00         d2 3c 00 00 .else
  ad 3c 00 00               03 00 .var1 FLAGS
  af 3c 00 00                  01 .literal
  b0 3c 00 00         56 02 00 00 598
  b4 3c 00 00                  ff .end (operand)
  b5 3c 00 00                  ff .end (operand)
  b7 3c 00 00                  06 .if-sign-nonzero
  b7 3c 00 00               03 00 .var1 FLAGS
  b9 3c 00 00                  01 .literal
  ba 3c 00 00         59 02 00 00 601
  be 3c 00 00                  ff .end (operand)
  bf 3c 00 00                  ff .end (operand)
  c0 3c 00 00               03 00 .var1 FLAGS
  c2 3c 00 00                  01 .literal
  c3 3c 00 00         59 02 00 00 601
  c7 3c 00 00                  ff .end (operand)
  c8 3c 00 00                  01 .set
  c9 3c 00 00               03 00 .var1 FLAGS
  cb 3c 00 00                  01 .literal
  cc 3c 00 00         56 02 00 00 598
  d0 3c 00 00                  ff .end (operand)
  d1 3c 00 00                  ff .end (operand)
::d2 3c 00 00               03 00 .var1 FLAGS
  d4 3c 00 00                  01 .literal
  d5 3c 00 00         56 02 00 00 598
  d9 3c 00 00                  ff .end (operand)
  da 3c 00 00                  05 .decset
  db 3c 00 00               03 00 .var1 FLAGS
  dd 3c 00 00                  01 .literal
  de 3c 00 00         59 02 00 00 601
  e2 3c 00 00                  ff .end (operand)
  e3 3c 00 00                  ff .end (operand)
  e4 3c 00 00                  ff .end (block)
 :e5 3c 00 00                  0b .case
  e6 3c 00 00                  05 .group
  e7 3c 00 00                  01 .literal
  e8 3c 00 00         02 00 00 00 2
  ec 3c 00 00                  ff .end (operand)
  ed 3c 00 00                  ff .end (operand)
  ee 3c 00 00         6d 3d 00 00 .case-end-address
if170
 :f2 3c 00 00               05 01 .if [terms=1]
  f4 3c 00 00         1d 3d 00 00 .else
  f8 3c 00 00               03 00 .var1 FLAGS
  fa 3c 00 00                  01 .literal
  fb 3c 00 00         59 02 00 00 601
  ff 3c 00 00                  ff .end (operand)
  00 3d 00 00                  ff .end (operand)
  02 3d 00 00                  06 .if-sign-nonzero
  02 3d 00 00               03 00 .var1 FLAGS
  04 3d 00 00                  01 .literal
  05 3d 00 00         6c 02 00 00 620
  09 3d 00 00                  ff .end (operand)
  0a 3d 00 00                  ff .end (operand)
  0b 3d 00 00               03 00 .var1 FLAGS
  0d 3d 00 00                  01 .literal
  0e 3d 00 00         6c 02 00 00 620
  12 3d 00 00                  ff .end (operand)
  13 3d 00 00                  01 .set
  14 3d 00 00               03 00 .var1 FLAGS
  16 3d 00 00                  01 .literal
  17 3d 00 00         59 02 00 00 601
  1b 3d 00 00                  ff .end (operand)
  1c 3d 00 00                  ff .end (operand)
::1d 3d 00 00               03 00 .var1 FLAGS
  1f 3d 00 00                  01 .literal
  20 3d 00 00         59 02 00 00 601
  24 3d 00 00                  ff .end (operand)
  25 3d 00 00                  05 .decset
  26 3d 00 00               03 00 .var1 FLAGS
  28 3d 00 00                  01 .literal
  29 3d 00 00         6c 02 00 00 620
  2d 3d 00 00                  ff .end (operand)
  2e 3d 00 00                  ff .end (operand)
if171
 :2f 3d 00 00               05 01 .if [terms=1]
  31 3d 00 00         5a 3d 00 00 .else
  35 3d 00 00               03 00 .var1 FLAGS
  37 3d 00 00                  01 .literal
  38 3d 00 00         57 02 00 00 599
  3c 3d 00 00                  ff .end (operand)
  3d 3d 00 00                  ff .end (operand)
  3f 3d 00 00                  06 .if-sign-nonzero
  3f 3d 00 00               03 00 .var1 FLAGS
  41 3d 00 00                  01 .literal
  42 3d 00 00         59 02 00 00 601
  46 3d 00 00                  ff .end (operand)
  47 3d 00 00                  ff .end (operand)
  48 3d 00 00               03 00 .var1 FLAGS
  4a 3d 00 00                  01 .literal
  4b 3d 00 00         59 02 00 00 601
  4f 3d 00 00                  ff .end (operand)
  50 3d 00 00                  01 .set
  51 3d 00 00               03 00 .var1 FLAGS
  53 3d 00 00                  01 .literal
  54 3d 00 00         57 02 00 00 599
  58 3d 00 00                  ff .end (operand)
  59 3d 00 00                  ff .end (operand)
::5a 3d 00 00               03 00 .var1 FLAGS
  5c 3d 00 00                  01 .literal
  5d 3d 00 00         57 02 00 00 599
  61 3d 00 00                  ff .end (operand)
  62 3d 00 00                  05 .decset
  63 3d 00 00               03 00 .var1 FLAGS
  65 3d 00 00                  01 .literal
  66 3d 00 00         59 02 00 00 601
  6a 3d 00 00                  ff .end (operand)
  6b 3d 00 00                  ff .end (operand)
  6c 3d 00 00                  ff .end (block)
 :6d 3d 00 00                  0b .case
  6e 3d 00 00                  05 .group
  6f 3d 00 00                  01 .literal
  70 3d 00 00         03 00 00 00 3
  74 3d 00 00                  ff .end (operand)
  75 3d 00 00                  ff .end (operand)
  76 3d 00 00         f5 3d 00 00 .case-end-address
if172
 :7a 3d 00 00               05 01 .if [terms=1]
  7c 3d 00 00         a5 3d 00 00 .else
  80 3d 00 00               03 00 .var1 FLAGS
  82 3d 00 00                  01 .literal
  83 3d 00 00         59 02 00 00 601
  87 3d 00 00                  ff .end (operand)
  88 3d 00 00                  ff .end (operand)
  8a 3d 00 00                  06 .if-sign-nonzero
  8a 3d 00 00               03 00 .var1 FLAGS
  8c 3d 00 00                  01 .literal
  8d 3d 00 00         6e 02 00 00 622
  91 3d 00 00                  ff .end (operand)
  92 3d 00 00                  ff .end (operand)
  93 3d 00 00               03 00 .var1 FLAGS
  95 3d 00 00                  01 .literal
  96 3d 00 00         6e 02 00 00 622
  9a 3d 00 00                  ff .end (operand)
  9b 3d 00 00                  01 .set
  9c 3d 00 00               03 00 .var1 FLAGS
  9e 3d 00 00                  01 .literal
  9f 3d 00 00         59 02 00 00 601
  a3 3d 00 00                  ff .end (operand)
  a4 3d 00 00                  ff .end (operand)
::a5 3d 00 00               03 00 .var1 FLAGS
  a7 3d 00 00                  01 .literal
  a8 3d 00 00         59 02 00 00 601
  ac 3d 00 00                  ff .end (operand)
  ad 3d 00 00                  05 .decset
  ae 3d 00 00               03 00 .var1 FLAGS
  b0 3d 00 00                  01 .literal
  b1 3d 00 00         6e 02 00 00 622
  b5 3d 00 00                  ff .end (operand)
  b6 3d 00 00                  ff .end (operand)
if173
 :b7 3d 00 00               05 01 .if [terms=1]
  b9 3d 00 00         e2 3d 00 00 .else
  bd 3d 00 00               03 00 .var1 FLAGS
  bf 3d 00 00                  01 .literal
  c0 3d 00 00         58 02 00 00 600
  c4 3d 00 00                  ff .end (operand)
  c5 3d 00 00                  ff .end (operand)
  c7 3d 00 00                  06 .if-sign-nonzero
  c7 3d 00 00               03 00 .var1 FLAGS
  c9 3d 00 00                  01 .literal
  ca 3d 00 00         59 02 00 00 601
  ce 3d 00 00                  ff .end (operand)
  cf 3d 00 00                  ff .end (operand)
  d0 3d 00 00               03 00 .var1 FLAGS
  d2 3d 00 00                  01 .literal
  d3 3d 00 00         59 02 00 00 601
  d7 3d 00 00                  ff .end (operand)
  d8 3d 00 00                  01 .set
  d9 3d 00 00               03 00 .var1 FLAGS
  db 3d 00 00                  01 .literal
  dc 3d 00 00         58 02 00 00 600
  e0 3d 00 00                  ff .end (operand)
  e1 3d 00 00                  ff .end (operand)
::e2 3d 00 00               03 00 .var1 FLAGS
  e4 3d 00 00                  01 .literal
  e5 3d 00 00         58 02 00 00 600
  e9 3d 00 00                  ff .end (operand)
  ea 3d 00 00                  05 .decset
  eb 3d 00 00               03 00 .var1 FLAGS
  ed 3d 00 00                  01 .literal
  ee 3d 00 00         59 02 00 00 601
  f2 3d 00 00                  ff .end (operand)
  f3 3d 00 00                  ff .end (operand)
  f4 3d 00 00                  ff .end (block)
 :f5 3d 00 00                  ff .end (switch)
  f6 3d 00 00               01 18 .exec CallEvent
  f9 3d 00 00                  01 .literal
  fa 3d 00 00         0f 00 00 00 15
  fe 3d 00 00                  ff .end (operand)
  ff 3d 00 00                  ff .end (block)
 :00 3e 00 00                  0b .case
  01 3e 00 00                  05 .group
  02 3e 00 00                  01 .literal
  03 3e 00 00         02 00 00 00 2
  07 3e 00 00                  ff .end (operand)
  08 3e 00 00                  ff .end (operand)
  09 3e 00 00         fa 41 00 00 .case-end-address
  0d 3e 00 00               01 12 .exec Banner
  0f 3e 00 00                     "Jump"

              4a 75 6d 70 00 
  14 3e 00 00                  01 .literal
  15 3e 00 00         01 00 00 00 1
  19 3e 00 00                  ff .end (operand)
  1a 3e 00 00               01 4a .exec EntityMove
  1c 3e 00 00                  01 .literal
  1d 3e 00 00         08 00 00 00 8
  21 3e 00 00                  ff .end (operand)
  22 3e 00 00                     "L1"

              4c 31 00 
  25 3e 00 00               01 24 .exec Wait
  27 3e 00 00                  01 .literal
  28 3e 00 00         14 00 00 00 20
  2c 3e 00 00                  ff .end (operand)
  2d 3e 00 00               03 0d .var1 SPECIALFRAME
  2f 3e 00 00                  01 .literal
  30 3e 00 00         08 00 00 00 8
  34 3e 00 00                  ff .end (operand)
  35 3e 00 00                  01 .set
  36 3e 00 00                  01 .literal
  37 3e 00 00         01 00 00 00 1
  3b 3e 00 00                  ff .end (operand)
  3c 3e 00 00               01 4a .exec EntityMove
  3e 3e 00 00                  01 .literal
  3f 3e 00 00         08 00 00 00 8
  43 3e 00 00                  ff .end (operand)
  44 3e 00 00                     "U7"

              55 37 00 
  47 3e 00 00               01 24 .exec Wait
  49 3e 00 00                  01 .literal
  4a 3e 00 00         32 00 00 00 50
  4e 3e 00 00                  ff .end (operand)
  4f 3e 00 00               03 17 .var1 ENTITY.LOCX
  51 3e 00 00                  01 .literal
  52 3e 00 00         08 00 00 00 8
  56 3e 00 00                  ff .end (operand)
  57 3e 00 00                  04 .incset
  58 3e 00 00                  01 .literal
  59 3e 00 00         0b 00 00 00 11
  5d 3e 00 00                  ff .end (operand)
  5e 3e 00 00               01 24 .exec Wait
  60 3e 00 00                  01 .literal
  61 3e 00 00         32 00 00 00 50
  65 3e 00 00                  ff .end (operand)
  66 3e 00 00               01 36 .exec VcLoadPcx
  68 3e 00 00                     "samjump.pcx"

              73 61 6d 6a 75 6d 70 2e 
              70 63 78 00 
  74 3e 00 00                  01 .literal
  75 3e 00 00         00 00 00 00 0
  79 3e 00 00                  ff .end (operand)
  7a 3e 00 00                  0a .switch
  7b 3e 00 00               03 00 .var1 FLAGS
  7d 3e 00 00                  01 .literal
  7e 3e 00 00         80 02 00 00 640
  82 3e 00 00                  ff .end (operand)
  83 3e 00 00                  ff .end (operand)
  84 3e 00 00                  0b .case
  85 3e 00 00                  05 .group
  86 3e 00 00                  01 .literal
  87 3e 00 00         01 00 00 00 1
  8b 3e 00 00                  ff .end (operand)
  8c 3e 00 00                  ff .end (operand)
  8d 3e 00 00         8c 3f 00 00 .case-end-address
  91 3e 00 00               08 19 .for0 Z
  93 3e 00 00                  01 .literal
  94 3e 00 00         01 00 00 00 1
  98 3e 00 00                  ff .end (operand)
  99 3e 00 00                  01 .literal
  9a 3e 00 00         41 00 00 00 65
  9e 3e 00 00                  ff .end (operand)
  9f 3e 00 00                  01 .for0-sign-nonzero
  a0 3e 00 00                  01 .literal
  a1 3e 00 00         04 00 00 00 4
  a5 3e 00 00                  ff .end (operand)
  a6 3e 00 00               01 3c .exec VcTBlitImage
  a8 3e 00 00                  01 .literal
  a9 3e 00 00         31 00 00 00 49
  ad 3e 00 00                  ff .end (operand)
  ae 3e 00 00               02 19 .var0 Z
  b0 3e 00 00                  ff .end (operand)
  b1 3e 00 00                  01 .literal
  b2 3e 00 00         10 00 00 00 16
  b6 3e 00 00                  ff .end (operand)
  b7 3e 00 00                  01 .literal
  b8 3e 00 00         20 00 00 00 32
  bc 3e 00 00                  ff .end (operand)
  bd 3e 00 00                  01 .literal
  be 3e 00 00         00 00 00 00 0
  c2 3e 00 00                  ff .end (operand)
  c3 3e 00 00               01 24 .exec Wait
  c5 3e 00 00                  01 .literal
  c6 3e 00 00         01 00 00 00 1
  ca 3e 00 00                  ff .end (operand)
  cb 3e 00 00               01 39 .exec VcClear
  cd 3e 00 00                  ff .end (block) for0
  ce 3e 00 00               08 19 .for0 Z
  d0 3e 00 00                  01 .literal
  d1 3e 00 00         01 00 00 00 1
  d5 3e 00 00                  ff .end (operand)
  d6 3e 00 00                  01 .literal
  d7 3e 00 00         41 00 00 00 65
  db 3e 00 00                  ff .end (operand)
  dc 3e 00 00                  01 .for0-sign-nonzero
  dd 3e 00 00                  01 .literal
  de 3e 00 00         04 00 00 00 4
  e2 3e 00 00                  ff .end (operand)
  e3 3e 00 00               01 3c .exec VcTBlitImage
  e5 3e 00 00                  01 .literal
  e6 3e 00 00         31 00 00 00 49
  ea 3e 00 00                  ff .end (operand)
  eb 3e 00 00                  01 .literal
  ec 3e 00 00         42 00 00 00 66
  f0 3e 00 00                  02 .sub -
  f1 3e 00 00               02 19 .var0 Z
  f3 3e 00 00                  ff .end (operand)
  f4 3e 00 00                  01 .literal
  f5 3e 00 00         10 00 00 00 16
  f9 3e 00 00                  ff .end (operand)
  fa 3e 00 00                  01 .literal
  fb 3e 00 00         20 00 00 00 32
  ff 3e 00 00                  ff .end (operand)
  00 3f 00 00                  01 .literal
  01 3f 00 00         00 00 00 00 0
  05 3f 00 00                  ff .end (operand)
  06 3f 00 00               01 24 .exec Wait
  08 3f 00 00                  01 .literal
  09 3f 00 00         01 00 00 00 1
  0d 3f 00 00                  ff .end (operand)
  0e 3f 00 00               01 39 .exec VcClear
  10 3f 00 00                  ff .end (block) for0
if174
 :11 3f 00 00               05 01 .if [terms=1]
  13 3f 00 00         3c 3f 00 00 .else
  17 3f 00 00               03 00 .var1 FLAGS
  19 3f 00 00                  01 .literal
  1a 3f 00 00         59 02 00 00 601
  1e 3f 00 00                  ff .end (operand)
  1f 3f 00 00                  ff .end (operand)
  21 3f 00 00                  06 .if-sign-nonzero
  21 3f 00 00               03 00 .var1 FLAGS
  23 3f 00 00                  01 .literal
  24 3f 00 00         6a 02 00 00 618
  28 3f 00 00                  ff .end (operand)
  29 3f 00 00                  ff .end (operand)
  2a 3f 00 00               03 00 .var1 FLAGS
  2c 3f 00 00                  01 .literal
  2d 3f 00 00         6a 02 00 00 618
  31 3f 00 00                  ff .end (operand)
  32 3f 00 00                  01 .set
  33 3f 00 00               03 00 .var1 FLAGS
  35 3f 00 00                  01 .literal
  36 3f 00 00         59 02 00 00 601
  3a 3f 00 00                  ff .end (operand)
  3b 3f 00 00                  ff .end (operand)
::3c 3f 00 00               03 00 .var1 FLAGS
  3e 3f 00 00                  01 .literal
  3f 3f 00 00         59 02 00 00 601
  43 3f 00 00                  ff .end (operand)
  44 3f 00 00                  05 .decset
  45 3f 00 00               03 00 .var1 FLAGS
  47 3f 00 00                  01 .literal
  48 3f 00 00         6a 02 00 00 618
  4c 3f 00 00                  ff .end (operand)
  4d 3f 00 00                  ff .end (operand)
if175
 :4e 3f 00 00               05 01 .if [terms=1]
  50 3f 00 00         79 3f 00 00 .else
  54 3f 00 00               03 00 .var1 FLAGS
  56 3f 00 00                  01 .literal
  57 3f 00 00         56 02 00 00 598
  5b 3f 00 00                  ff .end (operand)
  5c 3f 00 00                  ff .end (operand)
  5e 3f 00 00                  06 .if-sign-nonzero
  5e 3f 00 00               03 00 .var1 FLAGS
  60 3f 00 00                  01 .literal
  61 3f 00 00         59 02 00 00 601
  65 3f 00 00                  ff .end (operand)
  66 3f 00 00                  ff .end (operand)
  67 3f 00 00               03 00 .var1 FLAGS
  69 3f 00 00                  01 .literal
  6a 3f 00 00         59 02 00 00 601
  6e 3f 00 00                  ff .end (operand)
  6f 3f 00 00                  01 .set
  70 3f 00 00               03 00 .var1 FLAGS
  72 3f 00 00                  01 .literal
  73 3f 00 00         56 02 00 00 598
  77 3f 00 00                  ff .end (operand)
  78 3f 00 00                  ff .end (operand)
::79 3f 00 00               03 00 .var1 FLAGS
  7b 3f 00 00                  01 .literal
  7c 3f 00 00         56 02 00 00 598
  80 3f 00 00                  ff .end (operand)
  81 3f 00 00                  05 .decset
  82 3f 00 00               03 00 .var1 FLAGS
  84 3f 00 00                  01 .literal
  85 3f 00 00         59 02 00 00 601
  89 3f 00 00                  ff .end (operand)
  8a 3f 00 00                  ff .end (operand)
  8b 3f 00 00                  ff .end (block)
 :8c 3f 00 00                  0b .case
  8d 3f 00 00                  05 .group
  8e 3f 00 00                  01 .literal
  8f 3f 00 00         02 00 00 00 2
  93 3f 00 00                  ff .end (operand)
  94 3f 00 00                  ff .end (operand)
  95 3f 00 00         94 40 00 00 .case-end-address
  99 3f 00 00               08 19 .for0 Z
  9b 3f 00 00                  01 .literal
  9c 3f 00 00         01 00 00 00 1
  a0 3f 00 00                  ff .end (operand)
  a1 3f 00 00                  01 .literal
  a2 3f 00 00         61 00 00 00 97
  a6 3f 00 00                  ff .end (operand)
  a7 3f 00 00                  01 .for0-sign-nonzero
  a8 3f 00 00                  01 .literal
  a9 3f 00 00         04 00 00 00 4
  ad 3f 00 00                  ff .end (operand)
  ae 3f 00 00               01 3c .exec VcTBlitImage
  b0 3f 00 00                  01 .literal
  b1 3f 00 00         31 00 00 00 49
  b5 3f 00 00                  ff .end (operand)
  b6 3f 00 00               02 19 .var0 Z
  b8 3f 00 00                  ff .end (operand)
  b9 3f 00 00                  01 .literal
  ba 3f 00 00         10 00 00 00 16
  be 3f 00 00                  ff .end (operand)
  bf 3f 00 00                  01 .literal
  c0 3f 00 00         20 00 00 00 32
  c4 3f 00 00                  ff .end (operand)
  c5 3f 00 00                  01 .literal
  c6 3f 00 00         00 00 00 00 0
  ca 3f 00 00                  ff .end (operand)
  cb 3f 00 00               01 24 .exec Wait
  cd 3f 00 00                  01 .literal
  ce 3f 00 00         01 00 00 00 1
  d2 3f 00 00                  ff .end (operand)
  d3 3f 00 00               01 39 .exec VcClear
  d5 3f 00 00                  ff .end (block) for0
  d6 3f 00 00               08 19 .for0 Z
  d8 3f 00 00                  01 .literal
  d9 3f 00 00         01 00 00 00 1
  dd 3f 00 00                  ff .end (operand)
  de 3f 00 00                  01 .literal
  df 3f 00 00         61 00 00 00 97
  e3 3f 00 00                  ff .end (operand)
  e4 3f 00 00                  01 .for0-sign-nonzero
  e5 3f 00 00                  01 .literal
  e6 3f 00 00         04 00 00 00 4
  ea 3f 00 00                  ff .end (operand)
  eb 3f 00 00               01 3c .exec VcTBlitImage
  ed 3f 00 00                  01 .literal
  ee 3f 00 00         31 00 00 00 49
  f2 3f 00 00                  ff .end (operand)
  f3 3f 00 00                  01 .literal
  f4 3f 00 00         62 00 00 00 98
  f8 3f 00 00                  02 .sub -
  f9 3f 00 00               02 19 .var0 Z
  fb 3f 00 00                  ff .end (operand)
  fc 3f 00 00                  01 .literal
  fd 3f 00 00         10 00 00 00 16
  01 40 00 00                  ff .end (operand)
  02 40 00 00                  01 .literal
  03 40 00 00         20 00 00 00 32
  07 40 00 00                  ff .end (operand)
  08 40 00 00                  01 .literal
  09 40 00 00         00 00 00 00 0
  0d 40 00 00                  ff .end (operand)
  0e 40 00 00               01 24 .exec Wait
  10 40 00 00                  01 .literal
  11 40 00 00         01 00 00 00 1
  15 40 00 00                  ff .end (operand)
  16 40 00 00               01 39 .exec VcClear
  18 40 00 00                  ff .end (block) for0
if176
 :19 40 00 00               05 01 .if [terms=1]
  1b 40 00 00         44 40 00 00 .else
  1f 40 00 00               03 00 .var1 FLAGS
  21 40 00 00                  01 .literal
  22 40 00 00         59 02 00 00 601
  26 40 00 00                  ff .end (operand)
  27 40 00 00                  ff .end (operand)
  29 40 00 00                  06 .if-sign-nonzero
  29 40 00 00               03 00 .var1 FLAGS
  2b 40 00 00                  01 .literal
  2c 40 00 00         6c 02 00 00 620
  30 40 00 00                  ff .end (operand)
  31 40 00 00                  ff .end (operand)
  32 40 00 00               03 00 .var1 FLAGS
  34 40 00 00                  01 .literal
  35 40 00 00         6c 02 00 00 620
  39 40 00 00                  ff .end (operand)
  3a 40 00 00                  01 .set
  3b 40 00 00               03 00 .var1 FLAGS
  3d 40 00 00                  01 .literal
  3e 40 00 00         59 02 00 00 601
  42 40 00 00                  ff .end (operand)
  43 40 00 00                  ff .end (operand)
::44 40 00 00               03 00 .var1 FLAGS
  46 40 00 00                  01 .literal
  47 40 00 00         59 02 00 00 601
  4b 40 00 00                  ff .end (operand)
  4c 40 00 00                  05 .decset
  4d 40 00 00               03 00 .var1 FLAGS
  4f 40 00 00                  01 .literal
  50 40 00 00         6c 02 00 00 620
  54 40 00 00                  ff .end (operand)
  55 40 00 00                  ff .end (operand)
if177
 :56 40 00 00               05 01 .if [terms=1]
  58 40 00 00         81 40 00 00 .else
  5c 40 00 00               03 00 .var1 FLAGS
  5e 40 00 00                  01 .literal
  5f 40 00 00         57 02 00 00 599
  63 40 00 00                  ff .end (operand)
  64 40 00 00                  ff .end (operand)
  66 40 00 00                  06 .if-sign-nonzero
  66 40 00 00               03 00 .var1 FLAGS
  68 40 00 00                  01 .literal
  69 40 00 00         59 02 00 00 601
  6d 40 00 00                  ff .end (operand)
  6e 40 00 00                  ff .end (operand)
  6f 40 00 00               03 00 .var1 FLAGS
  71 40 00 00                  01 .literal
  72 40 00 00         59 02 00 00 601
  76 40 00 00                  ff .end (operand)
  77 40 00 00                  01 .set
  78 40 00 00               03 00 .var1 FLAGS
  7a 40 00 00                  01 .literal
  7b 40 00 00         57 02 00 00 599
  7f 40 00 00                  ff .end (operand)
  80 40 00 00                  ff .end (operand)
::81 40 00 00               03 00 .var1 FLAGS
  83 40 00 00                  01 .literal
  84 40 00 00         57 02 00 00 599
  88 40 00 00                  ff .end (operand)
  89 40 00 00                  05 .decset
  8a 40 00 00               03 00 .var1 FLAGS
  8c 40 00 00                  01 .literal
  8d 40 00 00         59 02 00 00 601
  91 40 00 00                  ff .end (operand)
  92 40 00 00                  ff .end (operand)
  93 40 00 00                  ff .end (block)
 :94 40 00 00                  0b .case
  95 40 00 00                  05 .group
  96 40 00 00                  01 .literal
  97 40 00 00         03 00 00 00 3
  9b 40 00 00                  ff .end (operand)
  9c 40 00 00                  ff .end (operand)
  9d 40 00 00         9c 41 00 00 .case-end-address
  a1 40 00 00               08 19 .for0 Z
  a3 40 00 00                  01 .literal
  a4 40 00 00         01 00 00 00 1
  a8 40 00 00                  ff .end (operand)
  a9 40 00 00                  01 .literal
  aa 40 00 00         81 00 00 00 129
  ae 40 00 00                  ff .end (operand)
  af 40 00 00                  01 .for0-sign-nonzero
  b0 40 00 00                  01 .literal
  b1 40 00 00         04 00 00 00 4
  b5 40 00 00                  ff .end (operand)
  b6 40 00 00               01 3c .exec VcTBlitImage
  b8 40 00 00                  01 .literal
  b9 40 00 00         31 00 00 00 49
  bd 40 00 00                  ff .end (operand)
  be 40 00 00               02 19 .var0 Z
  c0 40 00 00                  ff .end (operand)
  c1 40 00 00                  01 .literal
  c2 40 00 00         10 00 00 00 16
  c6 40 00 00                  ff .end (operand)
  c7 40 00 00                  01 .literal
  c8 40 00 00         20 00 00 00 32
  cc 40 00 00                  ff .end (operand)
  cd 40 00 00                  01 .literal
  ce 40 00 00         00 00 00 00 0
  d2 40 00 00                  ff .end (operand)
  d3 40 00 00               01 24 .exec Wait
  d5 40 00 00                  01 .literal
  d6 40 00 00         01 00 00 00 1
  da 40 00 00                  ff .end (operand)
  db 40 00 00               01 39 .exec VcClear
  dd 40 00 00                  ff .end (block) for0
  de 40 00 00               08 19 .for0 Z
  e0 40 00 00                  01 .literal
  e1 40 00 00         01 00 00 00 1
  e5 40 00 00                  ff .end (operand)
  e6 40 00 00                  01 .literal
  e7 40 00 00         81 00 00 00 129
  eb 40 00 00                  ff .end (operand)
  ec 40 00 00                  01 .for0-sign-nonzero
  ed 40 00 00                  01 .literal
  ee 40 00 00         04 00 00 00 4
  f2 40 00 00                  ff .end (operand)
  f3 40 00 00               01 3c .exec VcTBlitImage
  f5 40 00 00                  01 .literal
  f6 40 00 00         31 00 00 00 49
  fa 40 00 00                  ff .end (operand)
  fb 40 00 00                  01 .literal
  fc 40 00 00         82 00 00 00 130
  00 41 00 00                  02 .sub -
  01 41 00 00               02 19 .var0 Z
  03 41 00 00                  ff .end (operand)
  04 41 00 00                  01 .literal
  05 41 00 00         10 00 00 00 16
  09 41 00 00                  ff .end (operand)
  0a 41 00 00                  01 .literal
  0b 41 00 00         20 00 00 00 32
  0f 41 00 00                  ff .end (operand)
  10 41 00 00                  01 .literal
  11 41 00 00         00 00 00 00 0
  15 41 00 00                  ff .end (operand)
  16 41 00 00               01 24 .exec Wait
  18 41 00 00                  01 .literal
  19 41 00 00         01 00 00 00 1
  1d 41 00 00                  ff .end (operand)
  1e 41 00 00               01 39 .exec VcClear
  20 41 00 00                  ff .end (block) for0
if178
 :21 41 00 00               05 01 .if [terms=1]
  23 41 00 00         4c 41 00 00 .else
  27 41 00 00               03 00 .var1 FLAGS
  29 41 00 00                  01 .literal
  2a 41 00 00         59 02 00 00 601
  2e 41 00 00                  ff .end (operand)
  2f 41 00 00                  ff .end (operand)
  31 41 00 00                  06 .if-sign-nonzero
  31 41 00 00               03 00 .var1 FLAGS
  33 41 00 00                  01 .literal
  34 41 00 00         6e 02 00 00 622
  38 41 00 00                  ff .end (operand)
  39 41 00 00                  ff .end (operand)
  3a 41 00 00               03 00 .var1 FLAGS
  3c 41 00 00                  01 .literal
  3d 41 00 00         6e 02 00 00 622
  41 41 00 00                  ff .end (operand)
  42 41 00 00                  01 .set
  43 41 00 00               03 00 .var1 FLAGS
  45 41 00 00                  01 .literal
  46 41 00 00         59 02 00 00 601
  4a 41 00 00                  ff .end (operand)
  4b 41 00 00                  ff .end (operand)
::4c 41 00 00               03 00 .var1 FLAGS
  4e 41 00 00                  01 .literal
  4f 41 00 00         59 02 00 00 601
  53 41 00 00                  ff .end (operand)
  54 41 00 00                  05 .decset
  55 41 00 00               03 00 .var1 FLAGS
  57 41 00 00                  01 .literal
  58 41 00 00         6e 02 00 00 622
  5c 41 00 00                  ff .end (operand)
  5d 41 00 00                  ff .end (operand)
if179
 :5e 41 00 00               05 01 .if [terms=1]
  60 41 00 00         89 41 00 00 .else
  64 41 00 00               03 00 .var1 FLAGS
  66 41 00 00                  01 .literal
  67 41 00 00         58 02 00 00 600
  6b 41 00 00                  ff .end (operand)
  6c 41 00 00                  ff .end (operand)
  6e 41 00 00                  06 .if-sign-nonzero
  6e 41 00 00               03 00 .var1 FLAGS
  70 41 00 00                  01 .literal
  71 41 00 00         59 02 00 00 601
  75 41 00 00                  ff .end (operand)
  76 41 00 00                  ff .end (operand)
  77 41 00 00               03 00 .var1 FLAGS
  79 41 00 00                  01 .literal
  7a 41 00 00         59 02 00 00 601
  7e 41 00 00                  ff .end (operand)
  7f 41 00 00                  01 .set
  80 41 00 00               03 00 .var1 FLAGS
  82 41 00 00                  01 .literal
  83 41 00 00         58 02 00 00 600
  87 41 00 00                  ff .end (operand)
  88 41 00 00                  ff .end (operand)
::89 41 00 00               03 00 .var1 FLAGS
  8b 41 00 00                  01 .literal
  8c 41 00 00         58 02 00 00 600
  90 41 00 00                  ff .end (operand)
  91 41 00 00                  05 .decset
  92 41 00 00               03 00 .var1 FLAGS
  94 41 00 00                  01 .literal
  95 41 00 00         59 02 00 00 601
  99 41 00 00                  ff .end (operand)
  9a 41 00 00                  ff .end (operand)
  9b 41 00 00                  ff .end (block)
 :9c 41 00 00                  ff .end (switch)
  9d 41 00 00               03 17 .var1 ENTITY.LOCX
  9f 41 00 00                  01 .literal
  a0 41 00 00         08 00 00 00 8
  a4 41 00 00                  ff .end (operand)
  a5 41 00 00                  05 .decset
  a6 41 00 00                  01 .literal
  a7 41 00 00         0b 00 00 00 11
  ab 41 00 00                  ff .end (operand)
  ac 41 00 00               01 4a .exec EntityMove
  ae 41 00 00                  01 .literal
  af 41 00 00         08 00 00 00 8
  b3 41 00 00                  ff .end (operand)
  b4 41 00 00                     "D7"

              44 37 00 
  b7 41 00 00               01 24 .exec Wait
  b9 41 00 00                  01 .literal
  ba 41 00 00         32 00 00 00 50
  be 41 00 00                  ff .end (operand)
  bf 41 00 00               03 0d .var1 SPECIALFRAME
  c1 41 00 00                  01 .literal
  c2 41 00 00         08 00 00 00 8
  c6 41 00 00                  ff .end (operand)
  c7 41 00 00                  01 .set
  c8 41 00 00                  01 .literal
  c9 41 00 00         00 00 00 00 0
  cd 41 00 00                  ff .end (operand)
  ce 41 00 00               01 4a .exec EntityMove
  d0 41 00 00                  01 .literal
  d1 41 00 00         08 00 00 00 8
  d5 41 00 00                  ff .end (operand)
  d6 41 00 00                     "R1"

              52 31 00 
  d9 41 00 00               01 24 .exec Wait
  db 41 00 00                  01 .literal
  dc 41 00 00         14 00 00 00 20
  e0 41 00 00                  ff .end (operand)
  e1 41 00 00               03 0e .var1 FACE
  e3 41 00 00                  01 .literal
  e4 41 00 00         08 00 00 00 8
  e8 41 00 00                  ff .end (operand)
  e9 41 00 00                  01 .set
  ea 41 00 00                  01 .literal
  eb 41 00 00         00 00 00 00 0
  ef 41 00 00                  ff .end (operand)
  f0 41 00 00               01 18 .exec CallEvent
  f3 41 00 00                  01 .literal
  f4 41 00 00         0f 00 00 00 15
  f8 41 00 00                  ff .end (operand)
  f9 41 00 00                  ff .end (block)
 :fa 41 00 00                  0b .case
  fb 41 00 00                  05 .group
  fc 41 00 00                  01 .literal
  fd 41 00 00         05 00 00 00 5
  01 42 00 00                  ff .end (operand)
  02 42 00 00                  ff .end (operand)
  03 42 00 00         08 42 00 00 .case-end-address
  07 42 00 00                  ff .end (block)
 :08 42 00 00                  ff .end (switch)
if180
::09 42 00 00               05 02 .if [terms=2]
  0b 42 00 00         5f 44 00 00 .else
  0f 42 00 00               03 02 .var1 CHAR
  11 42 00 00                  01 .literal
  12 42 00 00         02 00 00 00 2
  16 42 00 00                  ff .end (operand)
  17 42 00 00                  ff .end (operand)
  19 42 00 00                  01 .if-sign-nonzero
  19 42 00 00               03 07 .var1 CURHP
  1b 42 00 00                  01 .literal
  1c 42 00 00         02 00 00 00 2
  20 42 00 00                  ff .end (operand)
  21 42 00 00                  ff .end (operand)
  23 42 00 00                  04 .if-sign-nonzero
  23 42 00 00                  01 .literal
  24 42 00 00         00 00 00 00 0
  28 42 00 00                  ff .end (operand)
  29 42 00 00               03 00 .var1 FLAGS
  2b 42 00 00                  01 .literal
  2c 42 00 00         7e 02 00 00 638
  30 42 00 00                  ff .end (operand)
  31 42 00 00                  01 .set
  32 42 00 00                  01 .literal
  33 42 00 00         02 00 00 00 2
  37 42 00 00                  ff .end (operand)
  38 42 00 00                  0a .switch
  39 42 00 00               03 00 .var1 FLAGS
  3b 42 00 00                  01 .literal
  3c 42 00 00         77 02 00 00 631
  40 42 00 00                  ff .end (operand)
  41 42 00 00                  ff .end (operand)
  42 42 00 00                  0b .case
  43 42 00 00                  05 .group
  44 42 00 00                  01 .literal
  45 42 00 00         01 00 00 00 1
  49 42 00 00                  ff .end (operand)
  4a 42 00 00                  ff .end (operand)
  4b 42 00 00         50 44 00 00 .case-end-address
  4f 42 00 00               03 0d .var1 SPECIALFRAME
  51 42 00 00                  01 .literal
  52 42 00 00         0d 00 00 00 13
  56 42 00 00                  ff .end (operand)
  57 42 00 00                  01 .set
  58 42 00 00                  01 .literal
  59 42 00 00         03 00 00 00 3
  5d 42 00 00                  ff .end (operand)
  5e 42 00 00               01 24 .exec Wait
  60 42 00 00                  01 .literal
  61 42 00 00         0f 00 00 00 15
  65 42 00 00                  ff .end (operand)
  66 42 00 00               03 0d .var1 SPECIALFRAME
  68 42 00 00                  01 .literal
  69 42 00 00         0d 00 00 00 13
  6d 42 00 00                  ff .end (operand)
  6e 42 00 00                  01 .set
  6f 42 00 00                  01 .literal
  70 42 00 00         04 00 00 00 4
  74 42 00 00                  ff .end (operand)
  75 42 00 00               01 24 .exec Wait
  77 42 00 00                  01 .literal
  78 42 00 00         19 00 00 00 25
  7c 42 00 00                  ff .end (operand)
  7d 42 00 00               03 0d .var1 SPECIALFRAME
  7f 42 00 00                  01 .literal
  80 42 00 00         0d 00 00 00 13
  84 42 00 00                  ff .end (operand)
  85 42 00 00                  01 .set
  86 42 00 00                  01 .literal
  87 42 00 00         03 00 00 00 3
  8b 42 00 00                  ff .end (operand)
  8c 42 00 00               01 24 .exec Wait
  8e 42 00 00                  01 .literal
  8f 42 00 00         0f 00 00 00 15
  93 42 00 00                  ff .end (operand)
  94 42 00 00               03 0d .var1 SPECIALFRAME
  96 42 00 00                  01 .literal
  97 42 00 00         0d 00 00 00 13
  9b 42 00 00                  ff .end (operand)
  9c 42 00 00                  01 .set
  9d 42 00 00                  01 .literal
  9e 42 00 00         00 00 00 00 0
  a2 42 00 00                  ff .end (operand)
  a3 42 00 00                  0a .switch
  a4 42 00 00               03 00 .var1 FLAGS
  a6 42 00 00                  01 .literal
  a7 42 00 00         81 02 00 00 641
  ab 42 00 00                  ff .end (operand)
  ac 42 00 00                  ff .end (operand)
  ad 42 00 00                  0b .case
  ae 42 00 00                  05 .group
  af 42 00 00                  01 .literal
  b0 42 00 00         01 00 00 00 1
  b4 42 00 00                  ff .end (operand)
  b5 42 00 00                  ff .end (operand)
  b6 42 00 00         35 43 00 00 .case-end-address
if181
 :ba 42 00 00               05 01 .if [terms=1]
  bc 42 00 00         e5 42 00 00 .else
  c0 42 00 00               03 00 .var1 FLAGS
  c2 42 00 00                  01 .literal
  c3 42 00 00         5b 02 00 00 603
  c7 42 00 00                  ff .end (operand)
  c8 42 00 00                  ff .end (operand)
  ca 42 00 00                  06 .if-sign-nonzero
  ca 42 00 00               03 00 .var1 FLAGS
  cc 42 00 00                  01 .literal
  cd 42 00 00         6a 02 00 00 618
  d1 42 00 00                  ff .end (operand)
  d2 42 00 00                  ff .end (operand)
  d3 42 00 00               03 00 .var1 FLAGS
  d5 42 00 00                  01 .literal
  d6 42 00 00         6a 02 00 00 618
  da 42 00 00                  ff .end (operand)
  db 42 00 00                  01 .set
  dc 42 00 00               03 00 .var1 FLAGS
  de 42 00 00                  01 .literal
  df 42 00 00         5b 02 00 00 603
  e3 42 00 00                  ff .end (operand)
  e4 42 00 00                  ff .end (operand)
::e5 42 00 00               03 00 .var1 FLAGS
  e7 42 00 00                  01 .literal
  e8 42 00 00         5b 02 00 00 603
  ec 42 00 00                  ff .end (operand)
  ed 42 00 00                  05 .decset
  ee 42 00 00               03 00 .var1 FLAGS
  f0 42 00 00                  01 .literal
  f1 42 00 00         6a 02 00 00 618
  f5 42 00 00                  ff .end (operand)
  f6 42 00 00                  ff .end (operand)
if182
 :f7 42 00 00               05 01 .if [terms=1]
  f9 42 00 00         22 43 00 00 .else
  fd 42 00 00               03 00 .var1 FLAGS
  ff 42 00 00                  01 .literal
  00 43 00 00         56 02 00 00 598
  04 43 00 00                  ff .end (operand)
  05 43 00 00                  ff .end (operand)
  07 43 00 00                  06 .if-sign-nonzero
  07 43 00 00               03 00 .var1 FLAGS
  09 43 00 00                  01 .literal
  0a 43 00 00         5b 02 00 00 603
  0e 43 00 00                  ff .end (operand)
  0f 43 00 00                  ff .end (operand)
  10 43 00 00               03 00 .var1 FLAGS
  12 43 00 00                  01 .literal
  13 43 00 00         5b 02 00 00 603
  17 43 00 00                  ff .end (operand)
  18 43 00 00                  01 .set
  19 43 00 00               03 00 .var1 FLAGS
  1b 43 00 00                  01 .literal
  1c 43 00 00         56 02 00 00 598
  20 43 00 00                  ff .end (operand)
  21 43 00 00                  ff .end (operand)
::22 43 00 00               03 00 .var1 FLAGS
  24 43 00 00                  01 .literal
  25 43 00 00         56 02 00 00 598
  29 43 00 00                  ff .end (operand)
  2a 43 00 00                  05 .decset
  2b 43 00 00               03 00 .var1 FLAGS
  2d 43 00 00                  01 .literal
  2e 43 00 00         5b 02 00 00 603
  32 43 00 00                  ff .end (operand)
  33 43 00 00                  ff .end (operand)
  34 43 00 00                  ff .end (block)
 :35 43 00 00                  0b .case
  36 43 00 00                  05 .group
  37 43 00 00                  01 .literal
  38 43 00 00         02 00 00 00 2
  3c 43 00 00                  ff .end (operand)
  3d 43 00 00                  ff .end (operand)
  3e 43 00 00         bd 43 00 00 .case-end-address
if183
 :42 43 00 00               05 01 .if [terms=1]
  44 43 00 00         6d 43 00 00 .else
  48 43 00 00               03 00 .var1 FLAGS
  4a 43 00 00                  01 .literal
  4b 43 00 00         5b 02 00 00 603
  4f 43 00 00                  ff .end (operand)
  50 43 00 00                  ff .end (operand)
  52 43 00 00                  06 .if-sign-nonzero
  52 43 00 00               03 00 .var1 FLAGS
  54 43 00 00                  01 .literal
  55 43 00 00         6c 02 00 00 620
  59 43 00 00                  ff .end (operand)
  5a 43 00 00                  ff .end (operand)
  5b 43 00 00               03 00 .var1 FLAGS
  5d 43 00 00                  01 .literal
  5e 43 00 00         6c 02 00 00 620
  62 43 00 00                  ff .end (operand)
  63 43 00 00                  01 .set
  64 43 00 00               03 00 .var1 FLAGS
  66 43 00 00                  01 .literal
  67 43 00 00         5b 02 00 00 603
  6b 43 00 00                  ff .end (operand)
  6c 43 00 00                  ff .end (operand)
::6d 43 00 00               03 00 .var1 FLAGS
  6f 43 00 00                  01 .literal
  70 43 00 00         5b 02 00 00 603
  74 43 00 00                  ff .end (operand)
  75 43 00 00                  05 .decset
  76 43 00 00               03 00 .var1 FLAGS
  78 43 00 00                  01 .literal
  79 43 00 00         6c 02 00 00 620
  7d 43 00 00                  ff .end (operand)
  7e 43 00 00                  ff .end (operand)
if184
 :7f 43 00 00               05 01 .if [terms=1]
  81 43 00 00         aa 43 00 00 .else
  85 43 00 00               03 00 .var1 FLAGS
  87 43 00 00                  01 .literal
  88 43 00 00         57 02 00 00 599
  8c 43 00 00                  ff .end (operand)
  8d 43 00 00                  ff .end (operand)
  8f 43 00 00                  06 .if-sign-nonzero
  8f 43 00 00               03 00 .var1 FLAGS
  91 43 00 00                  01 .literal
  92 43 00 00         5b 02 00 00 603
  96 43 00 00                  ff .end (operand)
  97 43 00 00                  ff .end (operand)
  98 43 00 00               03 00 .var1 FLAGS
  9a 43 00 00                  01 .literal
  9b 43 00 00         5b 02 00 00 603
  9f 43 00 00                  ff .end (operand)
  a0 43 00 00                  01 .set
  a1 43 00 00               03 00 .var1 FLAGS
  a3 43 00 00                  01 .literal
  a4 43 00 00         57 02 00 00 599
  a8 43 00 00                  ff .end (operand)
  a9 43 00 00                  ff .end (operand)
::aa 43 00 00               03 00 .var1 FLAGS
  ac 43 00 00                  01 .literal
  ad 43 00 00         57 02 00 00 599
  b1 43 00 00                  ff .end (operand)
  b2 43 00 00                  05 .decset
  b3 43 00 00               03 00 .var1 FLAGS
  b5 43 00 00                  01 .literal
  b6 43 00 00         5b 02 00 00 603
  ba 43 00 00                  ff .end (operand)
  bb 43 00 00                  ff .end (operand)
  bc 43 00 00                  ff .end (block)
 :bd 43 00 00                  0b .case
  be 43 00 00                  05 .group
  bf 43 00 00                  01 .literal
  c0 43 00 00         03 00 00 00 3
  c4 43 00 00                  ff .end (operand)
  c5 43 00 00                  ff .end (operand)
  c6 43 00 00         45 44 00 00 .case-end-address
if185
 :ca 43 00 00               05 01 .if [terms=1]
  cc 43 00 00         f5 43 00 00 .else
  d0 43 00 00               03 00 .var1 FLAGS
  d2 43 00 00                  01 .literal
  d3 43 00 00         5b 02 00 00 603
  d7 43 00 00                  ff .end (operand)
  d8 43 00 00                  ff .end (operand)
  da 43 00 00                  06 .if-sign-nonzero
  da 43 00 00               03 00 .var1 FLAGS
  dc 43 00 00                  01 .literal
  dd 43 00 00         6e 02 00 00 622
  e1 43 00 00                  ff .end (operand)
  e2 43 00 00                  ff .end (operand)
  e3 43 00 00               03 00 .var1 FLAGS
  e5 43 00 00                  01 .literal
  e6 43 00 00         6e 02 00 00 622
  ea 43 00 00                  ff .end (operand)
  eb 43 00 00                  01 .set
  ec 43 00 00               03 00 .var1 FLAGS
  ee 43 00 00                  01 .literal
  ef 43 00 00         5b 02 00 00 603
  f3 43 00 00                  ff .end (operand)
  f4 43 00 00                  ff .end (operand)
::f5 43 00 00               03 00 .var1 FLAGS
  f7 43 00 00                  01 .literal
  f8 43 00 00         5b 02 00 00 603
  fc 43 00 00                  ff .end (operand)
  fd 43 00 00                  05 .decset
  fe 43 00 00               03 00 .var1 FLAGS
  00 44 00 00                  01 .literal
  01 44 00 00         6e 02 00 00 622
  05 44 00 00                  ff .end (operand)
  06 44 00 00                  ff .end (operand)
if186
 :07 44 00 00               05 01 .if [terms=1]
  09 44 00 00         32 44 00 00 .else
  0d 44 00 00               03 00 .var1 FLAGS
  0f 44 00 00                  01 .literal
  10 44 00 00         58 02 00 00 600
  14 44 00 00                  ff .end (operand)
  15 44 00 00                  ff .end (operand)
  17 44 00 00                  06 .if-sign-nonzero
  17 44 00 00               03 00 .var1 FLAGS
  19 44 00 00                  01 .literal
  1a 44 00 00         5b 02 00 00 603
  1e 44 00 00                  ff .end (operand)
  1f 44 00 00                  ff .end (operand)
  20 44 00 00               03 00 .var1 FLAGS
  22 44 00 00                  01 .literal
  23 44 00 00         5b 02 00 00 603
  27 44 00 00                  ff .end (operand)
  28 44 00 00                  01 .set
  29 44 00 00               03 00 .var1 FLAGS
  2b 44 00 00                  01 .literal
  2c 44 00 00         58 02 00 00 600
  30 44 00 00                  ff .end (operand)
  31 44 00 00                  ff .end (operand)
::32 44 00 00               03 00 .var1 FLAGS
  34 44 00 00                  01 .literal
  35 44 00 00         58 02 00 00 600
  39 44 00 00                  ff .end (operand)
  3a 44 00 00                  05 .decset
  3b 44 00 00               03 00 .var1 FLAGS
  3d 44 00 00                  01 .literal
  3e 44 00 00         5b 02 00 00 603
  42 44 00 00                  ff .end (operand)
  43 44 00 00                  ff .end (operand)
  44 44 00 00                  ff .end (block)
 :45 44 00 00                  ff .end (switch)
  46 44 00 00               01 18 .exec CallEvent
  49 44 00 00                  01 .literal
  4a 44 00 00         0f 00 00 00 15
  4e 44 00 00                  ff .end (operand)
  4f 44 00 00                  ff .end (block)
 :50 44 00 00                  0b .case
  51 44 00 00                  05 .group
  52 44 00 00                  01 .literal
  53 44 00 00         04 00 00 00 4
  57 44 00 00                  ff .end (operand)
  58 44 00 00                  ff .end (operand)
  59 44 00 00         5e 44 00 00 .case-end-address
  5d 44 00 00                  ff .end (block)
 :5e 44 00 00                  ff .end (switch)
if187
::5f 44 00 00               05 02 .if [terms=2]
  61 44 00 00         b5 46 00 00 .else
  65 44 00 00               03 02 .var1 CHAR
  67 44 00 00                  01 .literal
  68 44 00 00         03 00 00 00 3
  6c 44 00 00                  ff .end (operand)
  6d 44 00 00                  ff .end (operand)
  6f 44 00 00                  01 .if-sign-nonzero
  6f 44 00 00               03 07 .var1 CURHP
  71 44 00 00                  01 .literal
  72 44 00 00         03 00 00 00 3
  76 44 00 00                  ff .end (operand)
  77 44 00 00                  ff .end (operand)
  79 44 00 00                  04 .if-sign-nonzero
  79 44 00 00                  01 .literal
  7a 44 00 00         00 00 00 00 0
  7e 44 00 00                  ff .end (operand)
  7f 44 00 00               03 00 .var1 FLAGS
  81 44 00 00                  01 .literal
  82 44 00 00         7e 02 00 00 638
  86 44 00 00                  ff .end (operand)
  87 44 00 00                  01 .set
  88 44 00 00                  01 .literal
  89 44 00 00         03 00 00 00 3
  8d 44 00 00                  ff .end (operand)
  8e 44 00 00                  0a .switch
  8f 44 00 00               03 00 .var1 FLAGS
  91 44 00 00                  01 .literal
  92 44 00 00         78 02 00 00 632
  96 44 00 00                  ff .end (operand)
  97 44 00 00                  ff .end (operand)
  98 44 00 00                  0b .case
  99 44 00 00                  05 .group
  9a 44 00 00                  01 .literal
  9b 44 00 00         01 00 00 00 1
  9f 44 00 00                  ff .end (operand)
  a0 44 00 00                  ff .end (operand)
  a1 44 00 00         a6 46 00 00 .case-end-address
  a5 44 00 00               03 0d .var1 SPECIALFRAME
  a7 44 00 00                  01 .literal
  a8 44 00 00         0a 00 00 00 10
  ac 44 00 00                  ff .end (operand)
  ad 44 00 00                  01 .set
  ae 44 00 00                  01 .literal
  af 44 00 00         03 00 00 00 3
  b3 44 00 00                  ff .end (operand)
  b4 44 00 00               01 24 .exec Wait
  b6 44 00 00                  01 .literal
  b7 44 00 00         0f 00 00 00 15
  bb 44 00 00                  ff .end (operand)
  bc 44 00 00               03 0d .var1 SPECIALFRAME
  be 44 00 00                  01 .literal
  bf 44 00 00         0a 00 00 00 10
  c3 44 00 00                  ff .end (operand)
  c4 44 00 00                  01 .set
  c5 44 00 00                  01 .literal
  c6 44 00 00         04 00 00 00 4
  ca 44 00 00                  ff .end (operand)
  cb 44 00 00               01 24 .exec Wait
  cd 44 00 00                  01 .literal
  ce 44 00 00         19 00 00 00 25
  d2 44 00 00                  ff .end (operand)
  d3 44 00 00               03 0d .var1 SPECIALFRAME
  d5 44 00 00                  01 .literal
  d6 44 00 00         0a 00 00 00 10
  da 44 00 00                  ff .end (operand)
  db 44 00 00                  01 .set
  dc 44 00 00                  01 .literal
  dd 44 00 00         03 00 00 00 3
  e1 44 00 00                  ff .end (operand)
  e2 44 00 00               01 24 .exec Wait
  e4 44 00 00                  01 .literal
  e5 44 00 00         0f 00 00 00 15
  e9 44 00 00                  ff .end (operand)
  ea 44 00 00               03 0d .var1 SPECIALFRAME
  ec 44 00 00                  01 .literal
  ed 44 00 00         0a 00 00 00 10
  f1 44 00 00                  ff .end (operand)
  f2 44 00 00                  01 .set
  f3 44 00 00                  01 .literal
  f4 44 00 00         00 00 00 00 0
  f8 44 00 00                  ff .end (operand)
  f9 44 00 00                  0a .switch
  fa 44 00 00               03 00 .var1 FLAGS
  fc 44 00 00                  01 .literal
  fd 44 00 00         82 02 00 00 642
  01 45 00 00                  ff .end (operand)
  02 45 00 00                  ff .end (operand)
  03 45 00 00                  0b .case
  04 45 00 00                  05 .group
  05 45 00 00                  01 .literal
  06 45 00 00         01 00 00 00 1
  0a 45 00 00                  ff .end (operand)
  0b 45 00 00                  ff .end (operand)
  0c 45 00 00         8b 45 00 00 .case-end-address
if188
 :10 45 00 00               05 01 .if [terms=1]
  12 45 00 00         3b 45 00 00 .else
  16 45 00 00               03 00 .var1 FLAGS
  18 45 00 00                  01 .literal
  19 45 00 00         5d 02 00 00 605
  1d 45 00 00                  ff .end (operand)
  1e 45 00 00                  ff .end (operand)
  20 45 00 00                  06 .if-sign-nonzero
  20 45 00 00               03 00 .var1 FLAGS
  22 45 00 00                  01 .literal
  23 45 00 00         6a 02 00 00 618
  27 45 00 00                  ff .end (operand)
  28 45 00 00                  ff .end (operand)
  29 45 00 00               03 00 .var1 FLAGS
  2b 45 00 00                  01 .literal
  2c 45 00 00         6a 02 00 00 618
  30 45 00 00                  ff .end (operand)
  31 45 00 00                  01 .set
  32 45 00 00               03 00 .var1 FLAGS
  34 45 00 00                  01 .literal
  35 45 00 00         5d 02 00 00 605
  39 45 00 00                  ff .end (operand)
  3a 45 00 00                  ff .end (operand)
::3b 45 00 00               03 00 .var1 FLAGS
  3d 45 00 00                  01 .literal
  3e 45 00 00         5d 02 00 00 605
  42 45 00 00                  ff .end (operand)
  43 45 00 00                  05 .decset
  44 45 00 00               03 00 .var1 FLAGS
  46 45 00 00                  01 .literal
  47 45 00 00         6a 02 00 00 618
  4b 45 00 00                  ff .end (operand)
  4c 45 00 00                  ff .end (operand)
if189
 :4d 45 00 00               05 01 .if [terms=1]
  4f 45 00 00         78 45 00 00 .else
  53 45 00 00               03 00 .var1 FLAGS
  55 45 00 00                  01 .literal
  56 45 00 00         56 02 00 00 598
  5a 45 00 00                  ff .end (operand)
  5b 45 00 00                  ff .end (operand)
  5d 45 00 00                  06 .if-sign-nonzero
  5d 45 00 00               03 00 .var1 FLAGS
  5f 45 00 00                  01 .literal
  60 45 00 00         5d 02 00 00 605
  64 45 00 00                  ff .end (operand)
  65 45 00 00                  ff .end (operand)
  66 45 00 00               03 00 .var1 FLAGS
  68 45 00 00                  01 .literal
  69 45 00 00         5d 02 00 00 605
  6d 45 00 00                  ff .end (operand)
  6e 45 00 00                  01 .set
  6f 45 00 00               03 00 .var1 FLAGS
  71 45 00 00                  01 .literal
  72 45 00 00         56 02 00 00 598
  76 45 00 00                  ff .end (operand)
  77 45 00 00                  ff .end (operand)
::78 45 00 00               03 00 .var1 FLAGS
  7a 45 00 00                  01 .literal
  7b 45 00 00         56 02 00 00 598
  7f 45 00 00                  ff .end (operand)
  80 45 00 00                  05 .decset
  81 45 00 00               03 00 .var1 FLAGS
  83 45 00 00                  01 .literal
  84 45 00 00         5d 02 00 00 605
  88 45 00 00                  ff .end (operand)
  89 45 00 00                  ff .end (operand)
  8a 45 00 00                  ff .end (block)
 :8b 45 00 00                  0b .case
  8c 45 00 00                  05 .group
  8d 45 00 00                  01 .literal
  8e 45 00 00         02 00 00 00 2
  92 45 00 00                  ff .end (operand)
  93 45 00 00                  ff .end (operand)
  94 45 00 00         13 46 00 00 .case-end-address
if190
 :98 45 00 00               05 01 .if [terms=1]
  9a 45 00 00         c3 45 00 00 .else
  9e 45 00 00               03 00 .var1 FLAGS
  a0 45 00 00                  01 .literal
  a1 45 00 00         5d 02 00 00 605
  a5 45 00 00                  ff .end (operand)
  a6 45 00 00                  ff .end (operand)
  a8 45 00 00                  06 .if-sign-nonzero
  a8 45 00 00               03 00 .var1 FLAGS
  aa 45 00 00                  01 .literal
  ab 45 00 00         6c 02 00 00 620
  af 45 00 00                  ff .end (operand)
  b0 45 00 00                  ff .end (operand)
  b1 45 00 00               03 00 .var1 FLAGS
  b3 45 00 00                  01 .literal
  b4 45 00 00         6c 02 00 00 620
  b8 45 00 00                  ff .end (operand)
  b9 45 00 00                  01 .set
  ba 45 00 00               03 00 .var1 FLAGS
  bc 45 00 00                  01 .literal
  bd 45 00 00         5d 02 00 00 605
  c1 45 00 00                  ff .end (operand)
  c2 45 00 00                  ff .end (operand)
::c3 45 00 00               03 00 .var1 FLAGS
  c5 45 00 00                  01 .literal
  c6 45 00 00         5d 02 00 00 605
  ca 45 00 00                  ff .end (operand)
  cb 45 00 00                  05 .decset
  cc 45 00 00               03 00 .var1 FLAGS
  ce 45 00 00                  01 .literal
  cf 45 00 00         6c 02 00 00 620
  d3 45 00 00                  ff .end (operand)
  d4 45 00 00                  ff .end (operand)
if191
 :d5 45 00 00               05 01 .if [terms=1]
  d7 45 00 00         00 46 00 00 .else
  db 45 00 00               03 00 .var1 FLAGS
  dd 45 00 00                  01 .literal
  de 45 00 00         57 02 00 00 599
  e2 45 00 00                  ff .end (operand)
  e3 45 00 00                  ff .end (operand)
  e5 45 00 00                  06 .if-sign-nonzero
  e5 45 00 00               03 00 .var1 FLAGS
  e7 45 00 00                  01 .literal
  e8 45 00 00         5d 02 00 00 605
  ec 45 00 00                  ff .end (operand)
  ed 45 00 00                  ff .end (operand)
  ee 45 00 00               03 00 .var1 FLAGS
  f0 45 00 00                  01 .literal
  f1 45 00 00         5d 02 00 00 605
  f5 45 00 00                  ff .end (operand)
  f6 45 00 00                  01 .set
  f7 45 00 00               03 00 .var1 FLAGS
  f9 45 00 00                  01 .literal
  fa 45 00 00         57 02 00 00 599
  fe 45 00 00                  ff .end (operand)
  ff 45 00 00                  ff .end (operand)
::00 46 00 00               03 00 .var1 FLAGS
  02 46 00 00                  01 .literal
  03 46 00 00         57 02 00 00 599
  07 46 00 00                  ff .end (operand)
  08 46 00 00                  05 .decset
  09 46 00 00               03 00 .var1 FLAGS
  0b 46 00 00                  01 .literal
  0c 46 00 00         5d 02 00 00 605
  10 46 00 00                  ff .end (operand)
  11 46 00 00                  ff .end (operand)
  12 46 00 00                  ff .end (block)
 :13 46 00 00                  0b .case
  14 46 00 00                  05 .group
  15 46 00 00                  01 .literal
  16 46 00 00         03 00 00 00 3
  1a 46 00 00                  ff .end (operand)
  1b 46 00 00                  ff .end (operand)
  1c 46 00 00         9b 46 00 00 .case-end-address
if192
 :20 46 00 00               05 01 .if [terms=1]
  22 46 00 00         4b 46 00 00 .else
  26 46 00 00               03 00 .var1 FLAGS
  28 46 00 00                  01 .literal
  29 46 00 00         5d 02 00 00 605
  2d 46 00 00                  ff .end (operand)
  2e 46 00 00                  ff .end (operand)
  30 46 00 00                  06 .if-sign-nonzero
  30 46 00 00               03 00 .var1 FLAGS
  32 46 00 00                  01 .literal
  33 46 00 00         6e 02 00 00 622
  37 46 00 00                  ff .end (operand)
  38 46 00 00                  ff .end (operand)
  39 46 00 00               03 00 .var1 FLAGS
  3b 46 00 00                  01 .literal
  3c 46 00 00         6e 02 00 00 622
  40 46 00 00                  ff .end (operand)
  41 46 00 00                  01 .set
  42 46 00 00               03 00 .var1 FLAGS
  44 46 00 00                  01 .literal
  45 46 00 00         5d 02 00 00 605
  49 46 00 00                  ff .end (operand)
  4a 46 00 00                  ff .end (operand)
::4b 46 00 00               03 00 .var1 FLAGS
  4d 46 00 00                  01 .literal
  4e 46 00 00         5d 02 00 00 605
  52 46 00 00                  ff .end (operand)
  53 46 00 00                  05 .decset
  54 46 00 00               03 00 .var1 FLAGS
  56 46 00 00                  01 .literal
  57 46 00 00         6e 02 00 00 622
  5b 46 00 00                  ff .end (operand)
  5c 46 00 00                  ff .end (operand)
if193
 :5d 46 00 00               05 01 .if [terms=1]
  5f 46 00 00         88 46 00 00 .else
  63 46 00 00               03 00 .var1 FLAGS
  65 46 00 00                  01 .literal
  66 46 00 00         58 02 00 00 600
  6a 46 00 00                  ff .end (operand)
  6b 46 00 00                  ff .end (operand)
  6d 46 00 00                  06 .if-sign-nonzero
  6d 46 00 00               03 00 .var1 FLAGS
  6f 46 00 00                  01 .literal
  70 46 00 00         5d 02 00 00 605
  74 46 00 00                  ff .end (operand)
  75 46 00 00                  ff .end (operand)
  76 46 00 00               03 00 .var1 FLAGS
  78 46 00 00                  01 .literal
  79 46 00 00         5d 02 00 00 605
  7d 46 00 00                  ff .end (operand)
  7e 46 00 00                  01 .set
  7f 46 00 00               03 00 .var1 FLAGS
  81 46 00 00                  01 .literal
  82 46 00 00         58 02 00 00 600
  86 46 00 00                  ff .end (operand)
  87 46 00 00                  ff .end (operand)
::88 46 00 00               03 00 .var1 FLAGS
  8a 46 00 00                  01 .literal
  8b 46 00 00         58 02 00 00 600
  8f 46 00 00                  ff .end (operand)
  90 46 00 00                  05 .decset
  91 46 00 00               03 00 .var1 FLAGS
  93 46 00 00                  01 .literal
  94 46 00 00         5d 02 00 00 605
  98 46 00 00                  ff .end (operand)
  99 46 00 00                  ff .end (operand)
  9a 46 00 00                  ff .end (block)
 :9b 46 00 00                  ff .end (switch)
  9c 46 00 00               01 18 .exec CallEvent
  9f 46 00 00                  01 .literal
  a0 46 00 00         0f 00 00 00 15
  a4 46 00 00                  ff .end (operand)
  a5 46 00 00                  ff .end (block)
 :a6 46 00 00                  0b .case
  a7 46 00 00                  05 .group
  a8 46 00 00                  01 .literal
  a9 46 00 00         04 00 00 00 4
  ad 46 00 00                  ff .end (operand)
  ae 46 00 00                  ff .end (operand)
  af 46 00 00         b4 46 00 00 .case-end-address
  b3 46 00 00                  ff .end (block)
 :b4 46 00 00                  ff .end (switch)
if194
::b5 46 00 00               05 02 .if [terms=2]
  b7 46 00 00         0b 49 00 00 .else
  bb 46 00 00               03 02 .var1 CHAR
  bd 46 00 00                  01 .literal
  be 46 00 00         04 00 00 00 4
  c2 46 00 00                  ff .end (operand)
  c3 46 00 00                  ff .end (operand)
  c5 46 00 00                  01 .if-sign-nonzero
  c5 46 00 00               03 07 .var1 CURHP
  c7 46 00 00                  01 .literal
  c8 46 00 00         04 00 00 00 4
  cc 46 00 00                  ff .end (operand)
  cd 46 00 00                  ff .end (operand)
  cf 46 00 00                  04 .if-sign-nonzero
  cf 46 00 00                  01 .literal
  d0 46 00 00         00 00 00 00 0
  d4 46 00 00                  ff .end (operand)
  d5 46 00 00               03 00 .var1 FLAGS
  d7 46 00 00                  01 .literal
  d8 46 00 00         7e 02 00 00 638
  dc 46 00 00                  ff .end (operand)
  dd 46 00 00                  01 .set
  de 46 00 00                  01 .literal
  df 46 00 00         04 00 00 00 4
  e3 46 00 00                  ff .end (operand)
  e4 46 00 00                  0a .switch
  e5 46 00 00               03 00 .var1 FLAGS
  e7 46 00 00                  01 .literal
  e8 46 00 00         79 02 00 00 633
  ec 46 00 00                  ff .end (operand)
  ed 46 00 00                  ff .end (operand)
  ee 46 00 00                  0b .case
  ef 46 00 00                  05 .group
  f0 46 00 00                  01 .literal
  f1 46 00 00         01 00 00 00 1
  f5 46 00 00                  ff .end (operand)
  f6 46 00 00                  ff .end (operand)
  f7 46 00 00         fc 48 00 00 .case-end-address
  fb 46 00 00               03 0d .var1 SPECIALFRAME
  fd 46 00 00                  01 .literal
  fe 46 00 00         09 00 00 00 9
  02 47 00 00                  ff .end (operand)
  03 47 00 00                  01 .set
  04 47 00 00                  01 .literal
  05 47 00 00         03 00 00 00 3
  09 47 00 00                  ff .end (operand)
  0a 47 00 00               01 24 .exec Wait
  0c 47 00 00                  01 .literal
  0d 47 00 00         0f 00 00 00 15
  11 47 00 00                  ff .end (operand)
  12 47 00 00               03 0d .var1 SPECIALFRAME
  14 47 00 00                  01 .literal
  15 47 00 00         09 00 00 00 9
  19 47 00 00                  ff .end (operand)
  1a 47 00 00                  01 .set
  1b 47 00 00                  01 .literal
  1c 47 00 00         04 00 00 00 4
  20 47 00 00                  ff .end (operand)
  21 47 00 00               01 24 .exec Wait
  23 47 00 00                  01 .literal
  24 47 00 00         19 00 00 00 25
  28 47 00 00                  ff .end (operand)
  29 47 00 00               03 0d .var1 SPECIALFRAME
  2b 47 00 00                  01 .literal
  2c 47 00 00         09 00 00 00 9
  30 47 00 00                  ff .end (operand)
  31 47 00 00                  01 .set
  32 47 00 00                  01 .literal
  33 47 00 00         03 00 00 00 3
  37 47 00 00                  ff .end (operand)
  38 47 00 00               01 24 .exec Wait
  3a 47 00 00                  01 .literal
  3b 47 00 00         0f 00 00 00 15
  3f 47 00 00                  ff .end (operand)
  40 47 00 00               03 0d .var1 SPECIALFRAME
  42 47 00 00                  01 .literal
  43 47 00 00         09 00 00 00 9
  47 47 00 00                  ff .end (operand)
  48 47 00 00                  01 .set
  49 47 00 00                  01 .literal
  4a 47 00 00         00 00 00 00 0
  4e 47 00 00                  ff .end (operand)
  4f 47 00 00                  0a .switch
  50 47 00 00               03 00 .var1 FLAGS
  52 47 00 00                  01 .literal
  53 47 00 00         83 02 00 00 643
  57 47 00 00                  ff .end (operand)
  58 47 00 00                  ff .end (operand)
  59 47 00 00                  0b .case
  5a 47 00 00                  05 .group
  5b 47 00 00                  01 .literal
  5c 47 00 00         01 00 00 00 1
  60 47 00 00                  ff .end (operand)
  61 47 00 00                  ff .end (operand)
  62 47 00 00         e1 47 00 00 .case-end-address
if195
 :66 47 00 00               05 01 .if [terms=1]
  68 47 00 00         91 47 00 00 .else
  6c 47 00 00               03 00 .var1 FLAGS
  6e 47 00 00                  01 .literal
  6f 47 00 00         5f 02 00 00 607
  73 47 00 00                  ff .end (operand)
  74 47 00 00                  ff .end (operand)
  76 47 00 00                  06 .if-sign-nonzero
  76 47 00 00               03 00 .var1 FLAGS
  78 47 00 00                  01 .literal
  79 47 00 00         6a 02 00 00 618
  7d 47 00 00                  ff .end (operand)
  7e 47 00 00                  ff .end (operand)
  7f 47 00 00               03 00 .var1 FLAGS
  81 47 00 00                  01 .literal
  82 47 00 00         6a 02 00 00 618
  86 47 00 00                  ff .end (operand)
  87 47 00 00                  01 .set
  88 47 00 00               03 00 .var1 FLAGS
  8a 47 00 00                  01 .literal
  8b 47 00 00         5f 02 00 00 607
  8f 47 00 00                  ff .end (operand)
  90 47 00 00                  ff .end (operand)
::91 47 00 00               03 00 .var1 FLAGS
  93 47 00 00                  01 .literal
  94 47 00 00         5f 02 00 00 607
  98 47 00 00                  ff .end (operand)
  99 47 00 00                  05 .decset
  9a 47 00 00               03 00 .var1 FLAGS
  9c 47 00 00                  01 .literal
  9d 47 00 00         6a 02 00 00 618
  a1 47 00 00                  ff .end (operand)
  a2 47 00 00                  ff .end (operand)
if196
 :a3 47 00 00               05 01 .if [terms=1]
  a5 47 00 00         ce 47 00 00 .else
  a9 47 00 00               03 00 .var1 FLAGS
  ab 47 00 00                  01 .literal
  ac 47 00 00         56 02 00 00 598
  b0 47 00 00                  ff .end (operand)
  b1 47 00 00                  ff .end (operand)
  b3 47 00 00                  06 .if-sign-nonzero
  b3 47 00 00               03 00 .var1 FLAGS
  b5 47 00 00                  01 .literal
  b6 47 00 00         5f 02 00 00 607
  ba 47 00 00                  ff .end (operand)
  bb 47 00 00                  ff .end (operand)
  bc 47 00 00               03 00 .var1 FLAGS
  be 47 00 00                  01 .literal
  bf 47 00 00         5f 02 00 00 607
  c3 47 00 00                  ff .end (operand)
  c4 47 00 00                  01 .set
  c5 47 00 00               03 00 .var1 FLAGS
  c7 47 00 00                  01 .literal
  c8 47 00 00         56 02 00 00 598
  cc 47 00 00                  ff .end (operand)
  cd 47 00 00                  ff .end (operand)
::ce 47 00 00               03 00 .var1 FLAGS
  d0 47 00 00                  01 .literal
  d1 47 00 00         56 02 00 00 598
  d5 47 00 00                  ff .end (operand)
  d6 47 00 00                  05 .decset
  d7 47 00 00               03 00 .var1 FLAGS
  d9 47 00 00                  01 .literal
  da 47 00 00         5f 02 00 00 607
  de 47 00 00                  ff .end (operand)
  df 47 00 00                  ff .end (operand)
  e0 47 00 00                  ff .end (block)
 :e1 47 00 00                  0b .case
  e2 47 00 00                  05 .group
  e3 47 00 00                  01 .literal
  e4 47 00 00         02 00 00 00 2
  e8 47 00 00                  ff .end (operand)
  e9 47 00 00                  ff .end (operand)
  ea 47 00 00         69 48 00 00 .case-end-address
if197
 :ee 47 00 00               05 01 .if [terms=1]
  f0 47 00 00         19 48 00 00 .else
  f4 47 00 00               03 00 .var1 FLAGS
  f6 47 00 00                  01 .literal
  f7 47 00 00         5f 02 00 00 607
  fb 47 00 00                  ff .end (operand)
  fc 47 00 00                  ff .end (operand)
  fe 47 00 00                  06 .if-sign-nonzero
  fe 47 00 00               03 00 .var1 FLAGS
  00 48 00 00                  01 .literal
  01 48 00 00         6c 02 00 00 620
  05 48 00 00                  ff .end (operand)
  06 48 00 00                  ff .end (operand)
  07 48 00 00               03 00 .var1 FLAGS
  09 48 00 00                  01 .literal
  0a 48 00 00         6c 02 00 00 620
  0e 48 00 00                  ff .end (operand)
  0f 48 00 00                  01 .set
  10 48 00 00               03 00 .var1 FLAGS
  12 48 00 00                  01 .literal
  13 48 00 00         5f 02 00 00 607
  17 48 00 00                  ff .end (operand)
  18 48 00 00                  ff .end (operand)
::19 48 00 00               03 00 .var1 FLAGS
  1b 48 00 00                  01 .literal
  1c 48 00 00         5f 02 00 00 607
  20 48 00 00                  ff .end (operand)
  21 48 00 00                  05 .decset
  22 48 00 00               03 00 .var1 FLAGS
  24 48 00 00                  01 .literal
  25 48 00 00         6c 02 00 00 620
  29 48 00 00                  ff .end (operand)
  2a 48 00 00                  ff .end (operand)
if198
 :2b 48 00 00               05 01 .if [terms=1]
  2d 48 00 00         56 48 00 00 .else
  31 48 00 00               03 00 .var1 FLAGS
  33 48 00 00                  01 .literal
  34 48 00 00         57 02 00 00 599
  38 48 00 00                  ff .end (operand)
  39 48 00 00                  ff .end (operand)
  3b 48 00 00                  06 .if-sign-nonzero
  3b 48 00 00               03 00 .var1 FLAGS
  3d 48 00 00                  01 .literal
  3e 48 00 00         5f 02 00 00 607
  42 48 00 00                  ff .end (operand)
  43 48 00 00                  ff .end (operand)
  44 48 00 00               03 00 .var1 FLAGS
  46 48 00 00                  01 .literal
  47 48 00 00         5f 02 00 00 607
  4b 48 00 00                  ff .end (operand)
  4c 48 00 00                  01 .set
  4d 48 00 00               03 00 .var1 FLAGS
  4f 48 00 00                  01 .literal
  50 48 00 00         57 02 00 00 599
  54 48 00 00                  ff .end (operand)
  55 48 00 00                  ff .end (operand)
::56 48 00 00               03 00 .var1 FLAGS
  58 48 00 00                  01 .literal
  59 48 00 00         57 02 00 00 599
  5d 48 00 00                  ff .end (operand)
  5e 48 00 00                  05 .decset
  5f 48 00 00               03 00 .var1 FLAGS
  61 48 00 00                  01 .literal
  62 48 00 00         5f 02 00 00 607
  66 48 00 00                  ff .end (operand)
  67 48 00 00                  ff .end (operand)
  68 48 00 00                  ff .end (block)
 :69 48 00 00                  0b .case
  6a 48 00 00                  05 .group
  6b 48 00 00                  01 .literal
  6c 48 00 00         03 00 00 00 3
  70 48 00 00                  ff .end (operand)
  71 48 00 00                  ff .end (operand)
  72 48 00 00         f1 48 00 00 .case-end-address
if199
 :76 48 00 00               05 01 .if [terms=1]
  78 48 00 00         a1 48 00 00 .else
  7c 48 00 00               03 00 .var1 FLAGS
  7e 48 00 00                  01 .literal
  7f 48 00 00         5f 02 00 00 607
  83 48 00 00                  ff .end (operand)
  84 48 00 00                  ff .end (operand)
  86 48 00 00                  06 .if-sign-nonzero
  86 48 00 00               03 00 .var1 FLAGS
  88 48 00 00                  01 .literal
  89 48 00 00         6e 02 00 00 622
  8d 48 00 00                  ff .end (operand)
  8e 48 00 00                  ff .end (operand)
  8f 48 00 00               03 00 .var1 FLAGS
  91 48 00 00                  01 .literal
  92 48 00 00         6e 02 00 00 622
  96 48 00 00                  ff .end (operand)
  97 48 00 00                  01 .set
  98 48 00 00               03 00 .var1 FLAGS
  9a 48 00 00                  01 .literal
  9b 48 00 00         5f 02 00 00 607
  9f 48 00 00                  ff .end (operand)
  a0 48 00 00                  ff .end (operand)
::a1 48 00 00               03 00 .var1 FLAGS
  a3 48 00 00                  01 .literal
  a4 48 00 00         5f 02 00 00 607
  a8 48 00 00                  ff .end (operand)
  a9 48 00 00                  05 .decset
  aa 48 00 00               03 00 .var1 FLAGS
  ac 48 00 00                  01 .literal
  ad 48 00 00         6e 02 00 00 622
  b1 48 00 00                  ff .end (operand)
  b2 48 00 00                  ff .end (operand)
if200
 :b3 48 00 00               05 01 .if [terms=1]
  b5 48 00 00         de 48 00 00 .else
  b9 48 00 00               03 00 .var1 FLAGS
  bb 48 00 00                  01 .literal
  bc 48 00 00         58 02 00 00 600
  c0 48 00 00                  ff .end (operand)
  c1 48 00 00                  ff .end (operand)
  c3 48 00 00                  06 .if-sign-nonzero
  c3 48 00 00               03 00 .var1 FLAGS
  c5 48 00 00                  01 .literal
  c6 48 00 00         5f 02 00 00 607
  ca 48 00 00                  ff .end (operand)
  cb 48 00 00                  ff .end (operand)
  cc 48 00 00               03 00 .var1 FLAGS
  ce 48 00 00                  01 .literal
  cf 48 00 00         5f 02 00 00 607
  d3 48 00 00                  ff .end (operand)
  d4 48 00 00                  01 .set
  d5 48 00 00               03 00 .var1 FLAGS
  d7 48 00 00                  01 .literal
  d8 48 00 00         58 02 00 00 600
  dc 48 00 00                  ff .end (operand)
  dd 48 00 00                  ff .end (operand)
::de 48 00 00               03 00 .var1 FLAGS
  e0 48 00 00                  01 .literal
  e1 48 00 00         58 02 00 00 600
  e5 48 00 00                  ff .end (operand)
  e6 48 00 00                  05 .decset
  e7 48 00 00               03 00 .var1 FLAGS
  e9 48 00 00                  01 .literal
  ea 48 00 00         5f 02 00 00 607
  ee 48 00 00                  ff .end (operand)
  ef 48 00 00                  ff .end (operand)
  f0 48 00 00                  ff .end (block)
 :f1 48 00 00                  ff .end (switch)
  f2 48 00 00               01 18 .exec CallEvent
  f5 48 00 00                  01 .literal
  f6 48 00 00         0f 00 00 00 15
  fa 48 00 00                  ff .end (operand)
  fb 48 00 00                  ff .end (block)
 :fc 48 00 00                  0b .case
  fd 48 00 00                  05 .group
  fe 48 00 00                  01 .literal
  ff 48 00 00         04 00 00 00 4
  03 49 00 00                  ff .end (operand)
  04 49 00 00                  ff .end (operand)
  05 49 00 00         0a 49 00 00 .case-end-address
  09 49 00 00                  ff .end (block)
 :0a 49 00 00                  ff .end (switch)
if201
::0b 49 00 00               05 02 .if [terms=2]
  0d 49 00 00         a1 4d 00 00 .else
  11 49 00 00               03 02 .var1 CHAR
  13 49 00 00                  01 .literal
  14 49 00 00         05 00 00 00 5
  18 49 00 00                  ff .end (operand)
  19 49 00 00                  ff .end (operand)
  1b 49 00 00                  01 .if-sign-nonzero
  1b 49 00 00               03 07 .var1 CURHP
  1d 49 00 00                  01 .literal
  1e 49 00 00         05 00 00 00 5
  22 49 00 00                  ff .end (operand)
  23 49 00 00                  ff .end (operand)
  25 49 00 00                  04 .if-sign-nonzero
  25 49 00 00                  01 .literal
  26 49 00 00         00 00 00 00 0
  2a 49 00 00                  ff .end (operand)
  2b 49 00 00               03 00 .var1 FLAGS
  2d 49 00 00                  01 .literal
  2e 49 00 00         7e 02 00 00 638
  32 49 00 00                  ff .end (operand)
  33 49 00 00                  01 .set
  34 49 00 00                  01 .literal
  35 49 00 00         05 00 00 00 5
  39 49 00 00                  ff .end (operand)
  3a 49 00 00                  0a .switch
  3b 49 00 00               03 00 .var1 FLAGS
  3d 49 00 00                  01 .literal
  3e 49 00 00         7a 02 00 00 634
  42 49 00 00                  ff .end (operand)
  43 49 00 00                  ff .end (operand)
  44 49 00 00                  0b .case
  45 49 00 00                  05 .group
  46 49 00 00                  01 .literal
  47 49 00 00         01 00 00 00 1
  4b 49 00 00                  ff .end (operand)
  4c 49 00 00                  ff .end (operand)
  4d 49 00 00         52 4b 00 00 .case-end-address
  51 49 00 00               03 0d .var1 SPECIALFRAME
  53 49 00 00                  01 .literal
  54 49 00 00         0e 00 00 00 14
  58 49 00 00                  ff .end (operand)
  59 49 00 00                  01 .set
  5a 49 00 00                  01 .literal
  5b 49 00 00         03 00 00 00 3
  5f 49 00 00                  ff .end (operand)
  60 49 00 00               01 24 .exec Wait
  62 49 00 00                  01 .literal
  63 49 00 00         0f 00 00 00 15
  67 49 00 00                  ff .end (operand)
  68 49 00 00               03 0d .var1 SPECIALFRAME
  6a 49 00 00                  01 .literal
  6b 49 00 00         0e 00 00 00 14
  6f 49 00 00                  ff .end (operand)
  70 49 00 00                  01 .set
  71 49 00 00                  01 .literal
  72 49 00 00         04 00 00 00 4
  76 49 00 00                  ff .end (operand)
  77 49 00 00               01 24 .exec Wait
  79 49 00 00                  01 .literal
  7a 49 00 00         19 00 00 00 25
  7e 49 00 00                  ff .end (operand)
  7f 49 00 00               03 0d .var1 SPECIALFRAME
  81 49 00 00                  01 .literal
  82 49 00 00         0e 00 00 00 14
  86 49 00 00                  ff .end (operand)
  87 49 00 00                  01 .set
  88 49 00 00                  01 .literal
  89 49 00 00         03 00 00 00 3
  8d 49 00 00                  ff .end (operand)
  8e 49 00 00               01 24 .exec Wait
  90 49 00 00                  01 .literal
  91 49 00 00         0f 00 00 00 15
  95 49 00 00                  ff .end (operand)
  96 49 00 00               03 0d .var1 SPECIALFRAME
  98 49 00 00                  01 .literal
  99 49 00 00         0e 00 00 00 14
  9d 49 00 00                  ff .end (operand)
  9e 49 00 00                  01 .set
  9f 49 00 00                  01 .literal
  a0 49 00 00         00 00 00 00 0
  a4 49 00 00                  ff .end (operand)
  a5 49 00 00                  0a .switch
  a6 49 00 00               03 00 .var1 FLAGS
  a8 49 00 00                  01 .literal
  a9 49 00 00         84 02 00 00 644
  ad 49 00 00                  ff .end (operand)
  ae 49 00 00                  ff .end (operand)
  af 49 00 00                  0b .case
  b0 49 00 00                  05 .group
  b1 49 00 00                  01 .literal
  b2 49 00 00         01 00 00 00 1
  b6 49 00 00                  ff .end (operand)
  b7 49 00 00                  ff .end (operand)
  b8 49 00 00         37 4a 00 00 .case-end-address
if202
 :bc 49 00 00               05 01 .if [terms=1]
  be 49 00 00         e7 49 00 00 .else
  c2 49 00 00               03 00 .var1 FLAGS
  c4 49 00 00                  01 .literal
  c5 49 00 00         61 02 00 00 609
  c9 49 00 00                  ff .end (operand)
  ca 49 00 00                  ff .end (operand)
  cc 49 00 00                  06 .if-sign-nonzero
  cc 49 00 00               03 00 .var1 FLAGS
  ce 49 00 00                  01 .literal
  cf 49 00 00         6a 02 00 00 618
  d3 49 00 00                  ff .end (operand)
  d4 49 00 00                  ff .end (operand)
  d5 49 00 00               03 00 .var1 FLAGS
  d7 49 00 00                  01 .literal
  d8 49 00 00         6a 02 00 00 618
  dc 49 00 00                  ff .end (operand)
  dd 49 00 00                  01 .set
  de 49 00 00               03 00 .var1 FLAGS
  e0 49 00 00                  01 .literal
  e1 49 00 00         61 02 00 00 609
  e5 49 00 00                  ff .end (operand)
  e6 49 00 00                  ff .end (operand)
::e7 49 00 00               03 00 .var1 FLAGS
  e9 49 00 00                  01 .literal
  ea 49 00 00         61 02 00 00 609
  ee 49 00 00                  ff .end (operand)
  ef 49 00 00                  05 .decset
  f0 49 00 00               03 00 .var1 FLAGS
  f2 49 00 00                  01 .literal
  f3 49 00 00         6a 02 00 00 618
  f7 49 00 00                  ff .end (operand)
  f8 49 00 00                  ff .end (operand)
if203
 :f9 49 00 00               05 01 .if [terms=1]
  fb 49 00 00         24 4a 00 00 .else
  ff 49 00 00               03 00 .var1 FLAGS
  01 4a 00 00                  01 .literal
  02 4a 00 00         56 02 00 00 598
  06 4a 00 00                  ff .end (operand)
  07 4a 00 00                  ff .end (operand)
  09 4a 00 00                  06 .if-sign-nonzero
  09 4a 00 00               03 00 .var1 FLAGS
  0b 4a 00 00                  01 .literal
  0c 4a 00 00         61 02 00 00 609
  10 4a 00 00                  ff .end (operand)
  11 4a 00 00                  ff .end (operand)
  12 4a 00 00               03 00 .var1 FLAGS
  14 4a 00 00                  01 .literal
  15 4a 00 00         61 02 00 00 609
  19 4a 00 00                  ff .end (operand)
  1a 4a 00 00                  01 .set
  1b 4a 00 00               03 00 .var1 FLAGS
  1d 4a 00 00                  01 .literal
  1e 4a 00 00         56 02 00 00 598
  22 4a 00 00                  ff .end (operand)
  23 4a 00 00                  ff .end (operand)
::24 4a 00 00               03 00 .var1 FLAGS
  26 4a 00 00                  01 .literal
  27 4a 00 00         56 02 00 00 598
  2b 4a 00 00                  ff .end (operand)
  2c 4a 00 00                  05 .decset
  2d 4a 00 00               03 00 .var1 FLAGS
  2f 4a 00 00                  01 .literal
  30 4a 00 00         61 02 00 00 609
  34 4a 00 00                  ff .end (operand)
  35 4a 00 00                  ff .end (operand)
  36 4a 00 00                  ff .end (block)
 :37 4a 00 00                  0b .case
  38 4a 00 00                  05 .group
  39 4a 00 00                  01 .literal
  3a 4a 00 00         02 00 00 00 2
  3e 4a 00 00                  ff .end (operand)
  3f 4a 00 00                  ff .end (operand)
  40 4a 00 00         bf 4a 00 00 .case-end-address
if204
 :44 4a 00 00               05 01 .if [terms=1]
  46 4a 00 00         6f 4a 00 00 .else
  4a 4a 00 00               03 00 .var1 FLAGS
  4c 4a 00 00                  01 .literal
  4d 4a 00 00         61 02 00 00 609
  51 4a 00 00                  ff .end (operand)
  52 4a 00 00                  ff .end (operand)
  54 4a 00 00                  06 .if-sign-nonzero
  54 4a 00 00               03 00 .var1 FLAGS
  56 4a 00 00                  01 .literal
  57 4a 00 00         6c 02 00 00 620
  5b 4a 00 00                  ff .end (operand)
  5c 4a 00 00                  ff .end (operand)
  5d 4a 00 00               03 00 .var1 FLAGS
  5f 4a 00 00                  01 .literal
  60 4a 00 00         6c 02 00 00 620
  64 4a 00 00                  ff .end (operand)
  65 4a 00 00                  01 .set
  66 4a 00 00               03 00 .var1 FLAGS
  68 4a 00 00                  01 .literal
  69 4a 00 00         61 02 00 00 609
  6d 4a 00 00                  ff .end (operand)
  6e 4a 00 00                  ff .end (operand)
::6f 4a 00 00               03 00 .var1 FLAGS
  71 4a 00 00                  01 .literal
  72 4a 00 00         61 02 00 00 609
  76 4a 00 00                  ff .end (operand)
  77 4a 00 00                  05 .decset
  78 4a 00 00               03 00 .var1 FLAGS
  7a 4a 00 00                  01 .literal
  7b 4a 00 00         6c 02 00 00 620
  7f 4a 00 00                  ff .end (operand)
  80 4a 00 00                  ff .end (operand)
if205
 :81 4a 00 00               05 01 .if [terms=1]
  83 4a 00 00         ac 4a 00 00 .else
  87 4a 00 00               03 00 .var1 FLAGS
  89 4a 00 00                  01 .literal
  8a 4a 00 00         57 02 00 00 599
  8e 4a 00 00                  ff .end (operand)
  8f 4a 00 00                  ff .end (operand)
  91 4a 00 00                  06 .if-sign-nonzero
  91 4a 00 00               03 00 .var1 FLAGS
  93 4a 00 00                  01 .literal
  94 4a 00 00         61 02 00 00 609
  98 4a 00 00                  ff .end (operand)
  99 4a 00 00                  ff .end (operand)
  9a 4a 00 00               03 00 .var1 FLAGS
  9c 4a 00 00                  01 .literal
  9d 4a 00 00         61 02 00 00 609
  a1 4a 00 00                  ff .end (operand)
  a2 4a 00 00                  01 .set
  a3 4a 00 00               03 00 .var1 FLAGS
  a5 4a 00 00                  01 .literal
  a6 4a 00 00         57 02 00 00 599
  aa 4a 00 00                  ff .end (operand)
  ab 4a 00 00                  ff .end (operand)
::ac 4a 00 00               03 00 .var1 FLAGS
  ae 4a 00 00                  01 .literal
  af 4a 00 00         57 02 00 00 599
  b3 4a 00 00                  ff .end (operand)
  b4 4a 00 00                  05 .decset
  b5 4a 00 00               03 00 .var1 FLAGS
  b7 4a 00 00                  01 .literal
  b8 4a 00 00         61 02 00 00 609
  bc 4a 00 00                  ff .end (operand)
  bd 4a 00 00                  ff .end (operand)
  be 4a 00 00                  ff .end (block)
 :bf 4a 00 00                  0b .case
  c0 4a 00 00                  05 .group
  c1 4a 00 00                  01 .literal
  c2 4a 00 00         03 00 00 00 3
  c6 4a 00 00                  ff .end (operand)
  c7 4a 00 00                  ff .end (operand)
  c8 4a 00 00         47 4b 00 00 .case-end-address
if206
 :cc 4a 00 00               05 01 .if [terms=1]
  ce 4a 00 00         f7 4a 00 00 .else
  d2 4a 00 00               03 00 .var1 FLAGS
  d4 4a 00 00                  01 .literal
  d5 4a 00 00         61 02 00 00 609
  d9 4a 00 00                  ff .end (operand)
  da 4a 00 00                  ff .end (operand)
  dc 4a 00 00                  06 .if-sign-nonzero
  dc 4a 00 00               03 00 .var1 FLAGS
  de 4a 00 00                  01 .literal
  df 4a 00 00         6e 02 00 00 622
  e3 4a 00 00                  ff .end (operand)
  e4 4a 00 00                  ff .end (operand)
  e5 4a 00 00               03 00 .var1 FLAGS
  e7 4a 00 00                  01 .literal
  e8 4a 00 00         6e 02 00 00 622
  ec 4a 00 00                  ff .end (operand)
  ed 4a 00 00                  01 .set
  ee 4a 00 00               03 00 .var1 FLAGS
  f0 4a 00 00                  01 .literal
  f1 4a 00 00         61 02 00 00 609
  f5 4a 00 00                  ff .end (operand)
  f6 4a 00 00                  ff .end (operand)
::f7 4a 00 00               03 00 .var1 FLAGS
  f9 4a 00 00                  01 .literal
  fa 4a 00 00         61 02 00 00 609
  fe 4a 00 00                  ff .end (operand)
  ff 4a 00 00                  05 .decset
  00 4b 00 00               03 00 .var1 FLAGS
  02 4b 00 00                  01 .literal
  03 4b 00 00         6e 02 00 00 622
  07 4b 00 00                  ff .end (operand)
  08 4b 00 00                  ff .end (operand)
if207
 :09 4b 00 00               05 01 .if [terms=1]
  0b 4b 00 00         34 4b 00 00 .else
  0f 4b 00 00               03 00 .var1 FLAGS
  11 4b 00 00                  01 .literal
  12 4b 00 00         58 02 00 00 600
  16 4b 00 00                  ff .end (operand)
  17 4b 00 00                  ff .end (operand)
  19 4b 00 00                  06 .if-sign-nonzero
  19 4b 00 00               03 00 .var1 FLAGS
  1b 4b 00 00                  01 .literal
  1c 4b 00 00         61 02 00 00 609
  20 4b 00 00                  ff .end (operand)
  21 4b 00 00                  ff .end (operand)
  22 4b 00 00               03 00 .var1 FLAGS
  24 4b 00 00                  01 .literal
  25 4b 00 00         61 02 00 00 609
  29 4b 00 00                  ff .end (operand)
  2a 4b 00 00                  01 .set
  2b 4b 00 00               03 00 .var1 FLAGS
  2d 4b 00 00                  01 .literal
  2e 4b 00 00         58 02 00 00 600
  32 4b 00 00                  ff .end (operand)
  33 4b 00 00                  ff .end (operand)
::34 4b 00 00               03 00 .var1 FLAGS
  36 4b 00 00                  01 .literal
  37 4b 00 00         58 02 00 00 600
  3b 4b 00 00                  ff .end (operand)
  3c 4b 00 00                  05 .decset
  3d 4b 00 00               03 00 .var1 FLAGS
  3f 4b 00 00                  01 .literal
  40 4b 00 00         61 02 00 00 609
  44 4b 00 00                  ff .end (operand)
  45 4b 00 00                  ff .end (operand)
  46 4b 00 00                  ff .end (block)
 :47 4b 00 00                  ff .end (switch)
  48 4b 00 00               01 18 .exec CallEvent
  4b 4b 00 00                  01 .literal
  4c 4b 00 00         0f 00 00 00 15
  50 4b 00 00                  ff .end (operand)
  51 4b 00 00                  ff .end (block)
 :52 4b 00 00                  0b .case
  53 4b 00 00                  05 .group
  54 4b 00 00                  01 .literal
  55 4b 00 00         02 00 00 00 2
  59 4b 00 00                  ff .end (operand)
  5a 4b 00 00                  ff .end (operand)
  5b 4b 00 00         92 4d 00 00 .case-end-address
  5f 4b 00 00               01 21 .exec SText
  61 4b 00 00                  01 .literal
  62 4b 00 00         05 00 00 00 5
  66 4b 00 00                  ff .end (operand)
  67 4b 00 00                     "I'm, um, borrowing!"

              49 27 6d 2c 20 75 6d 2c 
              20 62 6f 72 72 6f 77 69 
              6e 67 21 00 
  7b 4b 00 00                     "Yeah, that's it!"

              59 65 61 68 2c 20 74 68 
              61 74 27 73 20 69 74 21 
              00 
  8c 4b 00 00                     ""

              00 
  8d 4b 00 00               03 0d .var1 SPECIALFRAME
  8f 4b 00 00                  01 .literal
  90 4b 00 00         0e 00 00 00 14
  94 4b 00 00                  ff .end (operand)
  95 4b 00 00                  01 .set
  96 4b 00 00                  01 .literal
  97 4b 00 00         15 00 00 00 21
  9b 4b 00 00                  ff .end (operand)
  9c 4b 00 00               01 24 .exec Wait
  9e 4b 00 00                  01 .literal
  9f 4b 00 00         0a 00 00 00 10
  a3 4b 00 00                  ff .end (operand)
  a4 4b 00 00               03 0d .var1 SPECIALFRAME
  a6 4b 00 00                  01 .literal
  a7 4b 00 00         0e 00 00 00 14
  ab 4b 00 00                  ff .end (operand)
  ac 4b 00 00                  01 .set
  ad 4b 00 00                  01 .literal
  ae 4b 00 00         16 00 00 00 22
  b2 4b 00 00                  ff .end (operand)
  b3 4b 00 00               01 24 .exec Wait
  b5 4b 00 00                  01 .literal
  b6 4b 00 00         0a 00 00 00 10
  ba 4b 00 00                  ff .end (operand)
  bb 4b 00 00               03 0d .var1 SPECIALFRAME
  bd 4b 00 00                  01 .literal
  be 4b 00 00         0e 00 00 00 14
  c2 4b 00 00                  ff .end (operand)
  c3 4b 00 00                  01 .set
  c4 4b 00 00                  01 .literal
  c5 4b 00 00         15 00 00 00 21
  c9 4b 00 00                  ff .end (operand)
  ca 4b 00 00               01 24 .exec Wait
  cc 4b 00 00                  01 .literal
  cd 4b 00 00         0a 00 00 00 10
  d1 4b 00 00                  ff .end (operand)
  d2 4b 00 00               03 0d .var1 SPECIALFRAME
  d4 4b 00 00                  01 .literal
  d5 4b 00 00         0e 00 00 00 14
  d9 4b 00 00                  ff .end (operand)
  da 4b 00 00                  01 .set
  db 4b 00 00                  01 .literal
  dc 4b 00 00         16 00 00 00 22
  e0 4b 00 00                  ff .end (operand)
  e1 4b 00 00               01 24 .exec Wait
  e3 4b 00 00                  01 .literal
  e4 4b 00 00         0a 00 00 00 10
  e8 4b 00 00                  ff .end (operand)
  e9 4b 00 00               03 0d .var1 SPECIALFRAME
  eb 4b 00 00                  01 .literal
  ec 4b 00 00         0e 00 00 00 14
  f0 4b 00 00                  ff .end (operand)
  f1 4b 00 00                  01 .set
  f2 4b 00 00                  01 .literal
  f3 4b 00 00         15 00 00 00 21
  f7 4b 00 00                  ff .end (operand)
  f8 4b 00 00               01 24 .exec Wait
  fa 4b 00 00                  01 .literal
  fb 4b 00 00         0a 00 00 00 10
  ff 4b 00 00                  ff .end (operand)
  00 4c 00 00               03 0d .var1 SPECIALFRAME
  02 4c 00 00                  01 .literal
  03 4c 00 00         0e 00 00 00 14
  07 4c 00 00                  ff .end (operand)
  08 4c 00 00                  01 .set
  09 4c 00 00                  01 .literal
  0a 4c 00 00         16 00 00 00 22
  0e 4c 00 00                  ff .end (operand)
  0f 4c 00 00               01 24 .exec Wait
  11 4c 00 00                  01 .literal
  12 4c 00 00         0a 00 00 00 10
  16 4c 00 00                  ff .end (operand)
  17 4c 00 00               03 0d .var1 SPECIALFRAME
  19 4c 00 00                  01 .literal
  1a 4c 00 00         0e 00 00 00 14
  1e 4c 00 00                  ff .end (operand)
  1f 4c 00 00                  01 .set
  20 4c 00 00                  01 .literal
  21 4c 00 00         00 00 00 00 0
  25 4c 00 00                  ff .end (operand)
  26 4c 00 00               03 00 .var1 FLAGS
  28 4c 00 00                  01 .literal
  29 4c 00 00         61 02 00 00 609
  2d 4c 00 00                  ff .end (operand)
  2e 4c 00 00                  01 .set
  2f 4c 00 00                  01 .literal
  30 4c 00 00         00 00 00 00 0
  34 4c 00 00                  ff .end (operand)
  35 4c 00 00               03 00 .var1 FLAGS
  37 4c 00 00                  01 .literal
  38 4c 00 00         bd 02 00 00 701
  3c 4c 00 00                  ff .end (operand)
  3d 4c 00 00                  01 .set
  3e 4c 00 00               04 00 .var2 RANDOM
  40 4c 00 00                  01 .literal
  41 4c 00 00         01 00 00 00 1
  45 4c 00 00                  ff .end (operand)
  46 4c 00 00                  01 .literal
  47 4c 00 00         14 00 00 00 20
  4b 4c 00 00                  ff .end (operand)
  4c 4c 00 00                  ff .end (operand)
if208
 :4d 4c 00 00               05 01 .if [terms=1]
  4f 4c 00 00         cb 4c 00 00 .else
  53 4c 00 00               03 00 .var1 FLAGS
  55 4c 00 00                  01 .literal
  56 4c 00 00         bd 02 00 00 701
  5a 4c 00 00                  ff .end (operand)
  5b 4c 00 00                  ff .end (operand)
  5d 4c 00 00                  02 .if-sign-nonzero
  5d 4c 00 00                  01 .literal
  5e 4c 00 00         01 00 00 00 1
  62 4c 00 00                  ff .end (operand)
  63 4c 00 00                  0a .switch
  64 4c 00 00               03 00 .var1 FLAGS
  66 4c 00 00                  01 .literal
  67 4c 00 00         84 02 00 00 644
  6b 4c 00 00                  ff .end (operand)
  6c 4c 00 00                  ff .end (operand)
  6d 4c 00 00                  0b .case
  6e 4c 00 00                  05 .group
  6f 4c 00 00                  01 .literal
  70 4c 00 00         01 00 00 00 1
  74 4c 00 00                  ff .end (operand)
  75 4c 00 00                  ff .end (operand)
  76 4c 00 00         8c 4c 00 00 .case-end-address
  7a 4c 00 00               01 2c .exec GetItem
  7c 4c 00 00                  01 .literal
  7d 4c 00 00         05 00 00 00 5
  81 4c 00 00                  ff .end (operand)
  82 4c 00 00               03 00 .var1 FLAGS
  84 4c 00 00                  01 .literal
  85 4c 00 00         01 02 00 00 513
  89 4c 00 00                  ff .end (operand)
  8a 4c 00 00                  ff .end (operand)
  8b 4c 00 00                  ff .end (block)
 :8c 4c 00 00                  0b .case
  8d 4c 00 00                  05 .group
  8e 4c 00 00                  01 .literal
  8f 4c 00 00         02 00 00 00 2
  93 4c 00 00                  ff .end (operand)
  94 4c 00 00                  ff .end (operand)
  95 4c 00 00         ab 4c 00 00 .case-end-address
  99 4c 00 00               01 2c .exec GetItem
  9b 4c 00 00                  01 .literal
  9c 4c 00 00         05 00 00 00 5
  a0 4c 00 00                  ff .end (operand)
  a1 4c 00 00               03 00 .var1 FLAGS
  a3 4c 00 00                  01 .literal
  a4 4c 00 00         0e 02 00 00 526
  a8 4c 00 00                  ff .end (operand)
  a9 4c 00 00                  ff .end (operand)
  aa 4c 00 00                  ff .end (block)
 :ab 4c 00 00                  0b .case
  ac 4c 00 00                  05 .group
  ad 4c 00 00                  01 .literal
  ae 4c 00 00         03 00 00 00 3
  b2 4c 00 00                  ff .end (operand)
  b3 4c 00 00                  ff .end (operand)
  b4 4c 00 00         ca 4c 00 00 .case-end-address
  b8 4c 00 00               01 2c .exec GetItem
  ba 4c 00 00                  01 .literal
  bb 4c 00 00         05 00 00 00 5
  bf 4c 00 00                  ff .end (operand)
  c0 4c 00 00               03 00 .var1 FLAGS
  c2 4c 00 00                  01 .literal
  c3 4c 00 00         1b 02 00 00 539
  c7 4c 00 00                  ff .end (operand)
  c8 4c 00 00                  ff .end (operand)
  c9 4c 00 00                  ff .end (block)
 :ca 4c 00 00                  ff .end (switch)
if209
::cb 4c 00 00               05 02 .if [terms=2]
  cd 4c 00 00         59 4d 00 00 .else
  d1 4c 00 00               03 00 .var1 FLAGS
  d3 4c 00 00                  01 .literal
  d4 4c 00 00         bd 02 00 00 701
  d8 4c 00 00                  ff .end (operand)
  d9 4c 00 00                  ff .end (operand)
  db 4c 00 00                  04 .if-sign-nonzero
  db 4c 00 00                  01 .literal
  dc 4c 00 00         01 00 00 00 1
  e0 4c 00 00                  ff .end (operand)
  e1 4c 00 00               03 00 .var1 FLAGS
  e3 4c 00 00                  01 .literal
  e4 4c 00 00         bd 02 00 00 701
  e8 4c 00 00                  ff .end (operand)
  e9 4c 00 00                  ff .end (operand)
  eb 4c 00 00                  06 .if-sign-nonzero
  eb 4c 00 00                  01 .literal
  ec 4c 00 00         09 00 00 00 9
  f0 4c 00 00                  ff .end (operand)
  f1 4c 00 00                  0a .switch
  f2 4c 00 00               03 00 .var1 FLAGS
  f4 4c 00 00                  01 .literal
  f5 4c 00 00         84 02 00 00 644
  f9 4c 00 00                  ff .end (operand)
  fa 4c 00 00                  ff .end (operand)
  fb 4c 00 00                  0b .case
  fc 4c 00 00                  05 .group
  fd 4c 00 00                  01 .literal
  fe 4c 00 00         01 00 00 00 1
  02 4d 00 00                  ff .end (operand)
  03 4d 00 00                  ff .end (operand)
  04 4d 00 00         1a 4d 00 00 .case-end-address
  08 4d 00 00               01 2c .exec GetItem
  0a 4d 00 00                  01 .literal
  0b 4d 00 00         05 00 00 00 5
  0f 4d 00 00                  ff .end (operand)
  10 4d 00 00               03 00 .var1 FLAGS
  12 4d 00 00                  01 .literal
  13 4d 00 00         00 02 00 00 512
  17 4d 00 00                  ff .end (operand)
  18 4d 00 00                  ff .end (operand)
  19 4d 00 00                  ff .end (block)
 :1a 4d 00 00                  0b .case
  1b 4d 00 00                  05 .group
  1c 4d 00 00                  01 .literal
  1d 4d 00 00         02 00 00 00 2
  21 4d 00 00                  ff .end (operand)
  22 4d 00 00                  ff .end (operand)
  23 4d 00 00         39 4d 00 00 .case-end-address
  27 4d 00 00               01 2c .exec GetItem
  29 4d 00 00                  01 .literal
  2a 4d 00 00         05 00 00 00 5
  2e 4d 00 00                  ff .end (operand)
  2f 4d 00 00               03 00 .var1 FLAGS
  31 4d 00 00                  01 .literal
  32 4d 00 00         0d 02 00 00 525
  36 4d 00 00                  ff .end (operand)
  37 4d 00 00                  ff .end (operand)
  38 4d 00 00                  ff .end (block)
 :39 4d 00 00                  0b .case
  3a 4d 00 00                  05 .group
  3b 4d 00 00                  01 .literal
  3c 4d 00 00         03 00 00 00 3
  40 4d 00 00                  ff .end (operand)
  41 4d 00 00                  ff .end (operand)
  42 4d 00 00         58 4d 00 00 .case-end-address
  46 4d 00 00               01 2c .exec GetItem
  48 4d 00 00                  01 .literal
  49 4d 00 00         05 00 00 00 5
  4d 4d 00 00                  ff .end (operand)
  4e 4d 00 00               03 00 .var1 FLAGS
  50 4d 00 00                  01 .literal
  51 4d 00 00         1a 02 00 00 538
  55 4d 00 00                  ff .end (operand)
  56 4d 00 00                  ff .end (operand)
  57 4d 00 00                  ff .end (block)
 :58 4d 00 00                  ff .end (switch)
if210
::59 4d 00 00               05 01 .if [terms=1]
  5b 4d 00 00         88 4d 00 00 .else
  5f 4d 00 00               03 00 .var1 FLAGS
  61 4d 00 00                  01 .literal
  62 4d 00 00         bd 02 00 00 701
  66 4d 00 00                  ff .end (operand)
  67 4d 00 00                  ff .end (operand)
  69 4d 00 00                  04 .if-sign-nonzero
  69 4d 00 00                  01 .literal
  6a 4d 00 00         08 00 00 00 8
  6e 4d 00 00                  ff .end (operand)
  6f 4d 00 00               01 12 .exec Banner
  71 4d 00 00                     "Failed to steal!"

              46 61 69 6c 65 64 20 74 
              6f 20 73 74 65 61 6c 21 
              00 
  82 4d 00 00                  01 .literal
  83 4d 00 00         02 00 00 00 2
  87 4d 00 00                  ff .end (operand)
::88 4d 00 00               01 18 .exec CallEvent
  8b 4d 00 00                  01 .literal
  8c 4d 00 00         12 00 00 00 18
  90 4d 00 00                  ff .end (operand)
  91 4d 00 00                  ff .end (block)
 :92 4d 00 00                  0b .case
  93 4d 00 00                  05 .group
  94 4d 00 00                  01 .literal
  95 4d 00 00         05 00 00 00 5
  99 4d 00 00                  ff .end (operand)
  9a 4d 00 00                  ff .end (operand)
  9b 4d 00 00         a0 4d 00 00 .case-end-address
  9f 4d 00 00                  ff .end (block)
 :a0 4d 00 00                  ff .end (switch)
if211
::a1 4d 00 00               05 02 .if [terms=2]
  a3 4d 00 00         f7 4f 00 00 .else
  a7 4d 00 00               03 02 .var1 CHAR
  a9 4d 00 00                  01 .literal
  aa 4d 00 00         06 00 00 00 6
  ae 4d 00 00                  ff .end (operand)
  af 4d 00 00                  ff .end (operand)
  b1 4d 00 00                  01 .if-sign-nonzero
  b1 4d 00 00               03 07 .var1 CURHP
  b3 4d 00 00                  01 .literal
  b4 4d 00 00         06 00 00 00 6
  b8 4d 00 00                  ff .end (operand)
  b9 4d 00 00                  ff .end (operand)
  bb 4d 00 00                  04 .if-sign-nonzero
  bb 4d 00 00                  01 .literal
  bc 4d 00 00         00 00 00 00 0
  c0 4d 00 00                  ff .end (operand)
  c1 4d 00 00               03 00 .var1 FLAGS
  c3 4d 00 00                  01 .literal
  c4 4d 00 00         7e 02 00 00 638
  c8 4d 00 00                  ff .end (operand)
  c9 4d 00 00                  01 .set
  ca 4d 00 00                  01 .literal
  cb 4d 00 00         06 00 00 00 6
  cf 4d 00 00                  ff .end (operand)
  d0 4d 00 00                  0a .switch
  d1 4d 00 00               03 00 .var1 FLAGS
  d3 4d 00 00                  01 .literal
  d4 4d 00 00         7b 02 00 00 635
  d8 4d 00 00                  ff .end (operand)
  d9 4d 00 00                  ff .end (operand)
  da 4d 00 00                  0b .case
  db 4d 00 00                  05 .group
  dc 4d 00 00                  01 .literal
  dd 4d 00 00         01 00 00 00 1
  e1 4d 00 00                  ff .end (operand)
  e2 4d 00 00                  ff .end (operand)
  e3 4d 00 00         e8 4f 00 00 .case-end-address
  e7 4d 00 00               03 0d .var1 SPECIALFRAME
  e9 4d 00 00                  01 .literal
  ea 4d 00 00         0f 00 00 00 15
  ee 4d 00 00                  ff .end (operand)
  ef 4d 00 00                  01 .set
  f0 4d 00 00                  01 .literal
  f1 4d 00 00         03 00 00 00 3
  f5 4d 00 00                  ff .end (operand)
  f6 4d 00 00               01 24 .exec Wait
  f8 4d 00 00                  01 .literal
  f9 4d 00 00         0f 00 00 00 15
  fd 4d 00 00                  ff .end (operand)
  fe 4d 00 00               03 0d .var1 SPECIALFRAME
  00 4e 00 00                  01 .literal
  01 4e 00 00         0f 00 00 00 15
  05 4e 00 00                  ff .end (operand)
  06 4e 00 00                  01 .set
  07 4e 00 00                  01 .literal
  08 4e 00 00         04 00 00 00 4
  0c 4e 00 00                  ff .end (operand)
  0d 4e 00 00               01 24 .exec Wait
  0f 4e 00 00                  01 .literal
  10 4e 00 00         19 00 00 00 25
  14 4e 00 00                  ff .end (operand)
  15 4e 00 00               03 0d .var1 SPECIALFRAME
  17 4e 00 00                  01 .literal
  18 4e 00 00         0f 00 00 00 15
  1c 4e 00 00                  ff .end (operand)
  1d 4e 00 00                  01 .set
  1e 4e 00 00                  01 .literal
  1f 4e 00 00         03 00 00 00 3
  23 4e 00 00                  ff .end (operand)
  24 4e 00 00               01 24 .exec Wait
  26 4e 00 00                  01 .literal
  27 4e 00 00         0f 00 00 00 15
  2b 4e 00 00                  ff .end (operand)
  2c 4e 00 00               03 0d .var1 SPECIALFRAME
  2e 4e 00 00                  01 .literal
  2f 4e 00 00         0f 00 00 00 15
  33 4e 00 00                  ff .end (operand)
  34 4e 00 00                  01 .set
  35 4e 00 00                  01 .literal
  36 4e 00 00         00 00 00 00 0
  3a 4e 00 00                  ff .end (operand)
  3b 4e 00 00                  0a .switch
  3c 4e 00 00               03 00 .var1 FLAGS
  3e 4e 00 00                  01 .literal
  3f 4e 00 00         85 02 00 00 645
  43 4e 00 00                  ff .end (operand)
  44 4e 00 00                  ff .end (operand)
  45 4e 00 00                  0b .case
  46 4e 00 00                  05 .group
  47 4e 00 00                  01 .literal
  48 4e 00 00         01 00 00 00 1
  4c 4e 00 00                  ff .end (operand)
  4d 4e 00 00                  ff .end (operand)
  4e 4e 00 00         cd 4e 00 00 .case-end-address
if212
 :52 4e 00 00               05 01 .if [terms=1]
  54 4e 00 00         7d 4e 00 00 .else
  58 4e 00 00               03 00 .var1 FLAGS
  5a 4e 00 00                  01 .literal
  5b 4e 00 00         63 02 00 00 611
  5f 4e 00 00                  ff .end (operand)
  60 4e 00 00                  ff .end (operand)
  62 4e 00 00                  06 .if-sign-nonzero
  62 4e 00 00               03 00 .var1 FLAGS
  64 4e 00 00                  01 .literal
  65 4e 00 00         6a 02 00 00 618
  69 4e 00 00                  ff .end (operand)
  6a 4e 00 00                  ff .end (operand)
  6b 4e 00 00               03 00 .var1 FLAGS
  6d 4e 00 00                  01 .literal
  6e 4e 00 00         6a 02 00 00 618
  72 4e 00 00                  ff .end (operand)
  73 4e 00 00                  01 .set
  74 4e 00 00               03 00 .var1 FLAGS
  76 4e 00 00                  01 .literal
  77 4e 00 00         63 02 00 00 611
  7b 4e 00 00                  ff .end (operand)
  7c 4e 00 00                  ff .end (operand)
::7d 4e 00 00               03 00 .var1 FLAGS
  7f 4e 00 00                  01 .literal
  80 4e 00 00         63 02 00 00 611
  84 4e 00 00                  ff .end (operand)
  85 4e 00 00                  05 .decset
  86 4e 00 00               03 00 .var1 FLAGS
  88 4e 00 00                  01 .literal
  89 4e 00 00         6a 02 00 00 618
  8d 4e 00 00                  ff .end (operand)
  8e 4e 00 00                  ff .end (operand)
if213
 :8f 4e 00 00               05 01 .if [terms=1]
  91 4e 00 00         ba 4e 00 00 .else
  95 4e 00 00               03 00 .var1 FLAGS
  97 4e 00 00                  01 .literal
  98 4e 00 00         56 02 00 00 598
  9c 4e 00 00                  ff .end (operand)
  9d 4e 00 00                  ff .end (operand)
  9f 4e 00 00                  06 .if-sign-nonzero
  9f 4e 00 00               03 00 .var1 FLAGS
  a1 4e 00 00                  01 .literal
  a2 4e 00 00         63 02 00 00 611
  a6 4e 00 00                  ff .end (operand)
  a7 4e 00 00                  ff .end (operand)
  a8 4e 00 00               03 00 .var1 FLAGS
  aa 4e 00 00                  01 .literal
  ab 4e 00 00         63 02 00 00 611
  af 4e 00 00                  ff .end (operand)
  b0 4e 00 00                  01 .set
  b1 4e 00 00               03 00 .var1 FLAGS
  b3 4e 00 00                  01 .literal
  b4 4e 00 00         56 02 00 00 598
  b8 4e 00 00                  ff .end (operand)
  b9 4e 00 00                  ff .end (operand)
::ba 4e 00 00               03 00 .var1 FLAGS
  bc 4e 00 00                  01 .literal
  bd 4e 00 00         56 02 00 00 598
  c1 4e 00 00                  ff .end (operand)
  c2 4e 00 00                  05 .decset
  c3 4e 00 00               03 00 .var1 FLAGS
  c5 4e 00 00                  01 .literal
  c6 4e 00 00         63 02 00 00 611
  ca 4e 00 00                  ff .end (operand)
  cb 4e 00 00                  ff .end (operand)
  cc 4e 00 00                  ff .end (block)
 :cd 4e 00 00                  0b .case
  ce 4e 00 00                  05 .group
  cf 4e 00 00                  01 .literal
  d0 4e 00 00         02 00 00 00 2
  d4 4e 00 00                  ff .end (operand)
  d5 4e 00 00                  ff .end (operand)
  d6 4e 00 00         55 4f 00 00 .case-end-address
if214
 :da 4e 00 00               05 01 .if [terms=1]
  dc 4e 00 00         05 4f 00 00 .else
  e0 4e 00 00               03 00 .var1 FLAGS
  e2 4e 00 00                  01 .literal
  e3 4e 00 00         63 02 00 00 611
  e7 4e 00 00                  ff .end (operand)
  e8 4e 00 00                  ff .end (operand)
  ea 4e 00 00                  06 .if-sign-nonzero
  ea 4e 00 00               03 00 .var1 FLAGS
  ec 4e 00 00                  01 .literal
  ed 4e 00 00         6c 02 00 00 620
  f1 4e 00 00                  ff .end (operand)
  f2 4e 00 00                  ff .end (operand)
  f3 4e 00 00               03 00 .var1 FLAGS
  f5 4e 00 00                  01 .literal
  f6 4e 00 00         6c 02 00 00 620
  fa 4e 00 00                  ff .end (operand)
  fb 4e 00 00                  01 .set
  fc 4e 00 00               03 00 .var1 FLAGS
  fe 4e 00 00                  01 .literal
  ff 4e 00 00         63 02 00 00 611
  03 4f 00 00                  ff .end (operand)
  04 4f 00 00                  ff .end (operand)
::05 4f 00 00               03 00 .var1 FLAGS
  07 4f 00 00                  01 .literal
  08 4f 00 00         63 02 00 00 611
  0c 4f 00 00                  ff .end (operand)
  0d 4f 00 00                  05 .decset
  0e 4f 00 00               03 00 .var1 FLAGS
  10 4f 00 00                  01 .literal
  11 4f 00 00         6c 02 00 00 620
  15 4f 00 00                  ff .end (operand)
  16 4f 00 00                  ff .end (operand)
if215
 :17 4f 00 00               05 01 .if [terms=1]
  19 4f 00 00         42 4f 00 00 .else
  1d 4f 00 00               03 00 .var1 FLAGS
  1f 4f 00 00                  01 .literal
  20 4f 00 00         57 02 00 00 599
  24 4f 00 00                  ff .end (operand)
  25 4f 00 00                  ff .end (operand)
  27 4f 00 00                  06 .if-sign-nonzero
  27 4f 00 00               03 00 .var1 FLAGS
  29 4f 00 00                  01 .literal
  2a 4f 00 00         63 02 00 00 611
  2e 4f 00 00                  ff .end (operand)
  2f 4f 00 00                  ff .end (operand)
  30 4f 00 00               03 00 .var1 FLAGS
  32 4f 00 00                  01 .literal
  33 4f 00 00         63 02 00 00 611
  37 4f 00 00                  ff .end (operand)
  38 4f 00 00                  01 .set
  39 4f 00 00               03 00 .var1 FLAGS
  3b 4f 00 00                  01 .literal
  3c 4f 00 00         57 02 00 00 599
  40 4f 00 00                  ff .end (operand)
  41 4f 00 00                  ff .end (operand)
::42 4f 00 00               03 00 .var1 FLAGS
  44 4f 00 00                  01 .literal
  45 4f 00 00         57 02 00 00 599
  49 4f 00 00                  ff .end (operand)
  4a 4f 00 00                  05 .decset
  4b 4f 00 00               03 00 .var1 FLAGS
  4d 4f 00 00                  01 .literal
  4e 4f 00 00         63 02 00 00 611
  52 4f 00 00                  ff .end (operand)
  53 4f 00 00                  ff .end (operand)
  54 4f 00 00                  ff .end (block)
 :55 4f 00 00                  0b .case
  56 4f 00 00                  05 .group
  57 4f 00 00                  01 .literal
  58 4f 00 00         03 00 00 00 3
  5c 4f 00 00                  ff .end (operand)
  5d 4f 00 00                  ff .end (operand)
  5e 4f 00 00         dd 4f 00 00 .case-end-address
if216
 :62 4f 00 00               05 01 .if [terms=1]
  64 4f 00 00         8d 4f 00 00 .else
  68 4f 00 00               03 00 .var1 FLAGS
  6a 4f 00 00                  01 .literal
  6b 4f 00 00         63 02 00 00 611
  6f 4f 00 00                  ff .end (operand)
  70 4f 00 00                  ff .end (operand)
  72 4f 00 00                  06 .if-sign-nonzero
  72 4f 00 00               03 00 .var1 FLAGS
  74 4f 00 00                  01 .literal
  75 4f 00 00         6e 02 00 00 622
  79 4f 00 00                  ff .end (operand)
  7a 4f 00 00                  ff .end (operand)
  7b 4f 00 00               03 00 .var1 FLAGS
  7d 4f 00 00                  01 .literal
  7e 4f 00 00         6e 02 00 00 622
  82 4f 00 00                  ff .end (operand)
  83 4f 00 00                  01 .set
  84 4f 00 00               03 00 .var1 FLAGS
  86 4f 00 00                  01 .literal
  87 4f 00 00         63 02 00 00 611
  8b 4f 00 00                  ff .end (operand)
  8c 4f 00 00                  ff .end (operand)
::8d 4f 00 00               03 00 .var1 FLAGS
  8f 4f 00 00                  01 .literal
  90 4f 00 00         63 02 00 00 611
  94 4f 00 00                  ff .end (operand)
  95 4f 00 00                  05 .decset
  96 4f 00 00               03 00 .var1 FLAGS
  98 4f 00 00                  01 .literal
  99 4f 00 00         6e 02 00 00 622
  9d 4f 00 00                  ff .end (operand)
  9e 4f 00 00                  ff .end (operand)
if217
 :9f 4f 00 00               05 01 .if [terms=1]
  a1 4f 00 00         ca 4f 00 00 .else
  a5 4f 00 00               03 00 .var1 FLAGS
  a7 4f 00 00                  01 .literal
  a8 4f 00 00         58 02 00 00 600
  ac 4f 00 00                  ff .end (operand)
  ad 4f 00 00                  ff .end (operand)
  af 4f 00 00                  06 .if-sign-nonzero
  af 4f 00 00               03 00 .var1 FLAGS
  b1 4f 00 00                  01 .literal
  b2 4f 00 00         63 02 00 00 611
  b6 4f 00 00                  ff .end (operand)
  b7 4f 00 00                  ff .end (operand)
  b8 4f 00 00               03 00 .var1 FLAGS
  ba 4f 00 00                  01 .literal
  bb 4f 00 00         63 02 00 00 611
  bf 4f 00 00                  ff .end (operand)
  c0 4f 00 00                  01 .set
  c1 4f 00 00               03 00 .var1 FLAGS
  c3 4f 00 00                  01 .literal
  c4 4f 00 00         58 02 00 00 600
  c8 4f 00 00                  ff .end (operand)
  c9 4f 00 00                  ff .end (operand)
::ca 4f 00 00               03 00 .var1 FLAGS
  cc 4f 00 00                  01 .literal
  cd 4f 00 00         58 02 00 00 600
  d1 4f 00 00                  ff .end (operand)
  d2 4f 00 00                  05 .decset
  d3 4f 00 00               03 00 .var1 FLAGS
  d5 4f 00 00                  01 .literal
  d6 4f 00 00         63 02 00 00 611
  da 4f 00 00                  ff .end (operand)
  db 4f 00 00                  ff .end (operand)
  dc 4f 00 00                  ff .end (block)
 :dd 4f 00 00                  ff .end (switch)
  de 4f 00 00               01 18 .exec CallEvent
  e1 4f 00 00                  01 .literal
  e2 4f 00 00         0f 00 00 00 15
  e6 4f 00 00                  ff .end (operand)
  e7 4f 00 00                  ff .end (block)
 :e8 4f 00 00                  0b .case
  e9 4f 00 00                  05 .group
  ea 4f 00 00                  01 .literal
  eb 4f 00 00         04 00 00 00 4
  ef 4f 00 00                  ff .end (operand)
  f0 4f 00 00                  ff .end (operand)
  f1 4f 00 00         f6 4f 00 00 .case-end-address
  f5 4f 00 00                  ff .end (block)
 :f6 4f 00 00                  ff .end (switch)
if218
::f7 4f 00 00               05 02 .if [terms=2]
  f9 4f 00 00         f3 53 00 00 .else
  fd 4f 00 00               03 02 .var1 CHAR
  ff 4f 00 00                  01 .literal
  00 50 00 00         07 00 00 00 7
  04 50 00 00                  ff .end (operand)
  05 50 00 00                  ff .end (operand)
  07 50 00 00                  01 .if-sign-nonzero
  07 50 00 00               03 07 .var1 CURHP
  09 50 00 00                  01 .literal
  0a 50 00 00         07 00 00 00 7
  0e 50 00 00                  ff .end (operand)
  0f 50 00 00                  ff .end (operand)
  11 50 00 00                  04 .if-sign-nonzero
  11 50 00 00                  01 .literal
  12 50 00 00         00 00 00 00 0
  16 50 00 00                  ff .end (operand)
  17 50 00 00               03 00 .var1 FLAGS
  19 50 00 00                  01 .literal
  1a 50 00 00         7e 02 00 00 638
  1e 50 00 00                  ff .end (operand)
  1f 50 00 00                  01 .set
  20 50 00 00                  01 .literal
  21 50 00 00         07 00 00 00 7
  25 50 00 00                  ff .end (operand)
  26 50 00 00                  0a .switch
  27 50 00 00               03 00 .var1 FLAGS
  29 50 00 00                  01 .literal
  2a 50 00 00         7c 02 00 00 636
  2e 50 00 00                  ff .end (operand)
  2f 50 00 00                  ff .end (operand)
  30 50 00 00                  0b .case
  31 50 00 00                  05 .group
  32 50 00 00                  01 .literal
  33 50 00 00         01 00 00 00 1
  37 50 00 00                  ff .end (operand)
  38 50 00 00                  ff .end (operand)
  39 50 00 00         3e 52 00 00 .case-end-address
  3d 50 00 00               03 0d .var1 SPECIALFRAME
  3f 50 00 00                  01 .literal
  40 50 00 00         0c 00 00 00 12
  44 50 00 00                  ff .end (operand)
  45 50 00 00                  01 .set
  46 50 00 00                  01 .literal
  47 50 00 00         03 00 00 00 3
  4b 50 00 00                  ff .end (operand)
  4c 50 00 00               01 24 .exec Wait
  4e 50 00 00                  01 .literal
  4f 50 00 00         0f 00 00 00 15
  53 50 00 00                  ff .end (operand)
  54 50 00 00               03 0d .var1 SPECIALFRAME
  56 50 00 00                  01 .literal
  57 50 00 00         0c 00 00 00 12
  5b 50 00 00                  ff .end (operand)
  5c 50 00 00                  01 .set
  5d 50 00 00                  01 .literal
  5e 50 00 00         04 00 00 00 4
  62 50 00 00                  ff .end (operand)
  63 50 00 00               01 24 .exec Wait
  65 50 00 00                  01 .literal
  66 50 00 00         19 00 00 00 25
  6a 50 00 00                  ff .end (operand)
  6b 50 00 00               03 0d .var1 SPECIALFRAME
  6d 50 00 00                  01 .literal
  6e 50 00 00         0c 00 00 00 12
  72 50 00 00                  ff .end (operand)
  73 50 00 00                  01 .set
  74 50 00 00                  01 .literal
  75 50 00 00         03 00 00 00 3
  79 50 00 00                  ff .end (operand)
  7a 50 00 00               01 24 .exec Wait
  7c 50 00 00                  01 .literal
  7d 50 00 00         0f 00 00 00 15
  81 50 00 00                  ff .end (operand)
  82 50 00 00               03 0d .var1 SPECIALFRAME
  84 50 00 00                  01 .literal
  85 50 00 00         0c 00 00 00 12
  89 50 00 00                  ff .end (operand)
  8a 50 00 00                  01 .set
  8b 50 00 00                  01 .literal
  8c 50 00 00         00 00 00 00 0
  90 50 00 00                  ff .end (operand)
  91 50 00 00                  0a .switch
  92 50 00 00               03 00 .var1 FLAGS
  94 50 00 00                  01 .literal
  95 50 00 00         86 02 00 00 646
  99 50 00 00                  ff .end (operand)
  9a 50 00 00                  ff .end (operand)
  9b 50 00 00                  0b .case
  9c 50 00 00                  05 .group
  9d 50 00 00                  01 .literal
  9e 50 00 00         01 00 00 00 1
  a2 50 00 00                  ff .end (operand)
  a3 50 00 00                  ff .end (operand)
  a4 50 00 00         23 51 00 00 .case-end-address
if219
 :a8 50 00 00               05 01 .if [terms=1]
  aa 50 00 00         d3 50 00 00 .else
  ae 50 00 00               03 00 .var1 FLAGS
  b0 50 00 00                  01 .literal
  b1 50 00 00         65 02 00 00 613
  b5 50 00 00                  ff .end (operand)
  b6 50 00 00                  ff .end (operand)
  b8 50 00 00                  06 .if-sign-nonzero
  b8 50 00 00               03 00 .var1 FLAGS
  ba 50 00 00                  01 .literal
  bb 50 00 00         6a 02 00 00 618
  bf 50 00 00                  ff .end (operand)
  c0 50 00 00                  ff .end (operand)
  c1 50 00 00               03 00 .var1 FLAGS
  c3 50 00 00                  01 .literal
  c4 50 00 00         6a 02 00 00 618
  c8 50 00 00                  ff .end (operand)
  c9 50 00 00                  01 .set
  ca 50 00 00               03 00 .var1 FLAGS
  cc 50 00 00                  01 .literal
  cd 50 00 00         65 02 00 00 613
  d1 50 00 00                  ff .end (operand)
  d2 50 00 00                  ff .end (operand)
::d3 50 00 00               03 00 .var1 FLAGS
  d5 50 00 00                  01 .literal
  d6 50 00 00         65 02 00 00 613
  da 50 00 00                  ff .end (operand)
  db 50 00 00                  05 .decset
  dc 50 00 00               03 00 .var1 FLAGS
  de 50 00 00                  01 .literal
  df 50 00 00         6a 02 00 00 618
  e3 50 00 00                  ff .end (operand)
  e4 50 00 00                  ff .end (operand)
if220
 :e5 50 00 00               05 01 .if [terms=1]
  e7 50 00 00         10 51 00 00 .else
  eb 50 00 00               03 00 .var1 FLAGS
  ed 50 00 00                  01 .literal
  ee 50 00 00         56 02 00 00 598
  f2 50 00 00                  ff .end (operand)
  f3 50 00 00                  ff .end (operand)
  f5 50 00 00                  06 .if-sign-nonzero
  f5 50 00 00               03 00 .var1 FLAGS
  f7 50 00 00                  01 .literal
  f8 50 00 00         65 02 00 00 613
  fc 50 00 00                  ff .end (operand)
  fd 50 00 00                  ff .end (operand)
  fe 50 00 00               03 00 .var1 FLAGS
  00 51 00 00                  01 .literal
  01 51 00 00         65 02 00 00 613
  05 51 00 00                  ff .end (operand)
  06 51 00 00                  01 .set
  07 51 00 00               03 00 .var1 FLAGS
  09 51 00 00                  01 .literal
  0a 51 00 00         56 02 00 00 598
  0e 51 00 00                  ff .end (operand)
  0f 51 00 00                  ff .end (operand)
::10 51 00 00               03 00 .var1 FLAGS
  12 51 00 00                  01 .literal
  13 51 00 00         56 02 00 00 598
  17 51 00 00                  ff .end (operand)
  18 51 00 00                  05 .decset
  19 51 00 00               03 00 .var1 FLAGS
  1b 51 00 00                  01 .literal
  1c 51 00 00         65 02 00 00 613
  20 51 00 00                  ff .end (operand)
  21 51 00 00                  ff .end (operand)
  22 51 00 00                  ff .end (block)
 :23 51 00 00                  0b .case
  24 51 00 00                  05 .group
  25 51 00 00                  01 .literal
  26 51 00 00         02 00 00 00 2
  2a 51 00 00                  ff .end (operand)
  2b 51 00 00                  ff .end (operand)
  2c 51 00 00         ab 51 00 00 .case-end-address
if221
 :30 51 00 00               05 01 .if [terms=1]
  32 51 00 00         5b 51 00 00 .else
  36 51 00 00               03 00 .var1 FLAGS
  38 51 00 00                  01 .literal
  39 51 00 00         65 02 00 00 613
  3d 51 00 00                  ff .end (operand)
  3e 51 00 00                  ff .end (operand)
  40 51 00 00                  06 .if-sign-nonzero
  40 51 00 00               03 00 .var1 FLAGS
  42 51 00 00                  01 .literal
  43 51 00 00         6c 02 00 00 620
  47 51 00 00                  ff .end (operand)
  48 51 00 00                  ff .end (operand)
  49 51 00 00               03 00 .var1 FLAGS
  4b 51 00 00                  01 .literal
  4c 51 00 00         6c 02 00 00 620
  50 51 00 00                  ff .end (operand)
  51 51 00 00                  01 .set
  52 51 00 00               03 00 .var1 FLAGS
  54 51 00 00                  01 .literal
  55 51 00 00         65 02 00 00 613
  59 51 00 00                  ff .end (operand)
  5a 51 00 00                  ff .end (operand)
::5b 51 00 00               03 00 .var1 FLAGS
  5d 51 00 00                  01 .literal
  5e 51 00 00         65 02 00 00 613
  62 51 00 00                  ff .end (operand)
  63 51 00 00                  05 .decset
  64 51 00 00               03 00 .var1 FLAGS
  66 51 00 00                  01 .literal
  67 51 00 00         6c 02 00 00 620
  6b 51 00 00                  ff .end (operand)
  6c 51 00 00                  ff .end (operand)
if222
 :6d 51 00 00               05 01 .if [terms=1]
  6f 51 00 00         98 51 00 00 .else
  73 51 00 00               03 00 .var1 FLAGS
  75 51 00 00                  01 .literal
  76 51 00 00         57 02 00 00 599
  7a 51 00 00                  ff .end (operand)
  7b 51 00 00                  ff .end (operand)
  7d 51 00 00                  06 .if-sign-nonzero
  7d 51 00 00               03 00 .var1 FLAGS
  7f 51 00 00                  01 .literal
  80 51 00 00         65 02 00 00 613
  84 51 00 00                  ff .end (operand)
  85 51 00 00                  ff .end (operand)
  86 51 00 00               03 00 .var1 FLAGS
  88 51 00 00                  01 .literal
  89 51 00 00         65 02 00 00 613
  8d 51 00 00                  ff .end (operand)
  8e 51 00 00                  01 .set
  8f 51 00 00               03 00 .var1 FLAGS
  91 51 00 00                  01 .literal
  92 51 00 00         57 02 00 00 599
  96 51 00 00                  ff .end (operand)
  97 51 00 00                  ff .end (operand)
::98 51 00 00               03 00 .var1 FLAGS
  9a 51 00 00                  01 .literal
  9b 51 00 00         57 02 00 00 599
  9f 51 00 00                  ff .end (operand)
  a0 51 00 00                  05 .decset
  a1 51 00 00               03 00 .var1 FLAGS
  a3 51 00 00                  01 .literal
  a4 51 00 00         65 02 00 00 613
  a8 51 00 00                  ff .end (operand)
  a9 51 00 00                  ff .end (operand)
  aa 51 00 00                  ff .end (block)
 :ab 51 00 00                  0b .case
  ac 51 00 00                  05 .group
  ad 51 00 00                  01 .literal
  ae 51 00 00         03 00 00 00 3
  b2 51 00 00                  ff .end (operand)
  b3 51 00 00                  ff .end (operand)
  b4 51 00 00         33 52 00 00 .case-end-address
if223
 :b8 51 00 00               05 01 .if [terms=1]
  ba 51 00 00         e3 51 00 00 .else
  be 51 00 00               03 00 .var1 FLAGS
  c0 51 00 00                  01 .literal
  c1 51 00 00         65 02 00 00 613
  c5 51 00 00                  ff .end (operand)
  c6 51 00 00                  ff .end (operand)
  c8 51 00 00                  06 .if-sign-nonzero
  c8 51 00 00               03 00 .var1 FLAGS
  ca 51 00 00                  01 .literal
  cb 51 00 00         6e 02 00 00 622
  cf 51 00 00                  ff .end (operand)
  d0 51 00 00                  ff .end (operand)
  d1 51 00 00               03 00 .var1 FLAGS
  d3 51 00 00                  01 .literal
  d4 51 00 00         6e 02 00 00 622
  d8 51 00 00                  ff .end (operand)
  d9 51 00 00                  01 .set
  da 51 00 00               03 00 .var1 FLAGS
  dc 51 00 00                  01 .literal
  dd 51 00 00         65 02 00 00 613
  e1 51 00 00                  ff .end (operand)
  e2 51 00 00                  ff .end (operand)
::e3 51 00 00               03 00 .var1 FLAGS
  e5 51 00 00                  01 .literal
  e6 51 00 00         65 02 00 00 613
  ea 51 00 00                  ff .end (operand)
  eb 51 00 00                  05 .decset
  ec 51 00 00               03 00 .var1 FLAGS
  ee 51 00 00                  01 .literal
  ef 51 00 00         6e 02 00 00 622
  f3 51 00 00                  ff .end (operand)
  f4 51 00 00                  ff .end (operand)
if224
 :f5 51 00 00               05 01 .if [terms=1]
  f7 51 00 00         20 52 00 00 .else
  fb 51 00 00               03 00 .var1 FLAGS
  fd 51 00 00                  01 .literal
  fe 51 00 00         58 02 00 00 600
  02 52 00 00                  ff .end (operand)
  03 52 00 00                  ff .end (operand)
  05 52 00 00                  06 .if-sign-nonzero
  05 52 00 00               03 00 .var1 FLAGS
  07 52 00 00                  01 .literal
  08 52 00 00         65 02 00 00 613
  0c 52 00 00                  ff .end (operand)
  0d 52 00 00                  ff .end (operand)
  0e 52 00 00               03 00 .var1 FLAGS
  10 52 00 00                  01 .literal
  11 52 00 00         65 02 00 00 613
  15 52 00 00                  ff .end (operand)
  16 52 00 00                  01 .set
  17 52 00 00               03 00 .var1 FLAGS
  19 52 00 00                  01 .literal
  1a 52 00 00         58 02 00 00 600
  1e 52 00 00                  ff .end (operand)
  1f 52 00 00                  ff .end (operand)
::20 52 00 00               03 00 .var1 FLAGS
  22 52 00 00                  01 .literal
  23 52 00 00         58 02 00 00 600
  27 52 00 00                  ff .end (operand)
  28 52 00 00                  05 .decset
  29 52 00 00               03 00 .var1 FLAGS
  2b 52 00 00                  01 .literal
  2c 52 00 00         65 02 00 00 613
  30 52 00 00                  ff .end (operand)
  31 52 00 00                  ff .end (operand)
  32 52 00 00                  ff .end (block)
 :33 52 00 00                  ff .end (switch)
  34 52 00 00               01 18 .exec CallEvent
  37 52 00 00                  01 .literal
  38 52 00 00         0f 00 00 00 15
  3c 52 00 00                  ff .end (operand)
  3d 52 00 00                  ff .end (block)
 :3e 52 00 00                  0b .case
  3f 52 00 00                  05 .group
  40 52 00 00                  01 .literal
  41 52 00 00         02 00 00 00 2
  45 52 00 00                  ff .end (operand)
  46 52 00 00                  ff .end (operand)
  47 52 00 00         e4 53 00 00 .case-end-address
  4b 52 00 00               01 12 .exec Banner
  4d 52 00 00                     "Croak"

              43 72 6f 61 6b 00 
  53 52 00 00                  01 .literal
  54 52 00 00         01 00 00 00 1
  58 52 00 00                  ff .end (operand)
  59 52 00 00               03 0d .var1 SPECIALFRAME
  5b 52 00 00                  01 .literal
  5c 52 00 00         0c 00 00 00 12
  60 52 00 00                  ff .end (operand)
  61 52 00 00                  01 .set
  62 52 00 00                  01 .literal
  63 52 00 00         05 00 00 00 5
  67 52 00 00                  ff .end (operand)
  68 52 00 00               01 24 .exec Wait
  6a 52 00 00                  01 .literal
  6b 52 00 00         0f 00 00 00 15
  6f 52 00 00                  ff .end (operand)
  70 52 00 00               03 0d .var1 SPECIALFRAME
  72 52 00 00                  01 .literal
  73 52 00 00         0c 00 00 00 12
  77 52 00 00                  ff .end (operand)
  78 52 00 00                  01 .set
  79 52 00 00                  01 .literal
  7a 52 00 00         06 00 00 00 6
  7e 52 00 00                  ff .end (operand)
  7f 52 00 00               01 24 .exec Wait
  81 52 00 00                  01 .literal
  82 52 00 00         0f 00 00 00 15
  86 52 00 00                  ff .end (operand)
  87 52 00 00               03 0d .var1 SPECIALFRAME
  89 52 00 00                  01 .literal
  8a 52 00 00         0c 00 00 00 12
  8e 52 00 00                  ff .end (operand)
  8f 52 00 00                  01 .set
  90 52 00 00                  01 .literal
  91 52 00 00         07 00 00 00 7
  95 52 00 00                  ff .end (operand)
  96 52 00 00               01 24 .exec Wait
  98 52 00 00                  01 .literal
  99 52 00 00         0f 00 00 00 15
  9d 52 00 00                  ff .end (operand)
  9e 52 00 00               03 0d .var1 SPECIALFRAME
  a0 52 00 00                  01 .literal
  a1 52 00 00         0c 00 00 00 12
  a5 52 00 00                  ff .end (operand)
  a6 52 00 00                  01 .set
  a7 52 00 00                  01 .literal
  a8 52 00 00         06 00 00 00 6
  ac 52 00 00                  ff .end (operand)
  ad 52 00 00               01 24 .exec Wait
  af 52 00 00                  01 .literal
  b0 52 00 00         0f 00 00 00 15
  b4 52 00 00                  ff .end (operand)
  b5 52 00 00               03 0d .var1 SPECIALFRAME
  b7 52 00 00                  01 .literal
  b8 52 00 00         0c 00 00 00 12
  bc 52 00 00                  ff .end (operand)
  bd 52 00 00                  01 .set
  be 52 00 00                  01 .literal
  bf 52 00 00         05 00 00 00 5
  c3 52 00 00                  ff .end (operand)
  c4 52 00 00               01 24 .exec Wait
  c6 52 00 00                  01 .literal
  c7 52 00 00         0f 00 00 00 15
  cb 52 00 00                  ff .end (operand)
  cc 52 00 00               03 0d .var1 SPECIALFRAME
  ce 52 00 00                  01 .literal
  cf 52 00 00         0c 00 00 00 12
  d3 52 00 00                  ff .end (operand)
  d4 52 00 00                  01 .set
  d5 52 00 00                  01 .literal
  d6 52 00 00         00 00 00 00 0
  da 52 00 00                  ff .end (operand)
  db 52 00 00               03 00 .var1 FLAGS
  dd 52 00 00                  01 .literal
  de 52 00 00         86 02 00 00 646
  e2 52 00 00                  ff .end (operand)
  e3 52 00 00                  01 .set
  e4 52 00 00                  01 .literal
  e5 52 00 00         07 00 00 00 7
  e9 52 00 00                  ff .end (operand)
if225
 :ea 52 00 00               05 01 .if [terms=1]
  ec 52 00 00         12 53 00 00 .else
  f0 52 00 00               03 00 .var1 FLAGS
  f2 52 00 00                  01 .literal
  f3 52 00 00         56 02 00 00 598
  f7 52 00 00                  ff .end (operand)
  f8 52 00 00                  ff .end (operand)
  fa 52 00 00                  06 .if-sign-nonzero
  fa 52 00 00               03 00 .var1 FLAGS
  fc 52 00 00                  01 .literal
  fd 52 00 00         65 02 00 00 613
  01 53 00 00                  ff .end (operand)
  02 53 00 00                  ff .end (operand)
  03 53 00 00               03 00 .var1 FLAGS
  05 53 00 00                  01 .literal
  06 53 00 00         56 02 00 00 598
  0a 53 00 00                  ff .end (operand)
  0b 53 00 00                  01 .set
  0c 53 00 00                  01 .literal
  0d 53 00 00         00 00 00 00 0
  11 53 00 00                  ff .end (operand)
if226
::12 53 00 00               05 01 .if [terms=1]
  14 53 00 00         3a 53 00 00 .else
  18 53 00 00               03 00 .var1 FLAGS
  1a 53 00 00                  01 .literal
  1b 53 00 00         57 02 00 00 599
  1f 53 00 00                  ff .end (operand)
  20 53 00 00                  ff .end (operand)
  22 53 00 00                  06 .if-sign-nonzero
  22 53 00 00               03 00 .var1 FLAGS
  24 53 00 00                  01 .literal
  25 53 00 00         65 02 00 00 613
  29 53 00 00                  ff .end (operand)
  2a 53 00 00                  ff .end (operand)
  2b 53 00 00               03 00 .var1 FLAGS
  2d 53 00 00                  01 .literal
  2e 53 00 00         57 02 00 00 599
  32 53 00 00                  ff .end (operand)
  33 53 00 00                  01 .set
  34 53 00 00                  01 .literal
  35 53 00 00         00 00 00 00 0
  39 53 00 00                  ff .end (operand)
if227
::3a 53 00 00               05 01 .if [terms=1]
  3c 53 00 00         62 53 00 00 .else
  40 53 00 00               03 00 .var1 FLAGS
  42 53 00 00                  01 .literal
  43 53 00 00         58 02 00 00 600
  47 53 00 00                  ff .end (operand)
  48 53 00 00                  ff .end (operand)
  4a 53 00 00                  06 .if-sign-nonzero
  4a 53 00 00               03 00 .var1 FLAGS
  4c 53 00 00                  01 .literal
  4d 53 00 00         65 02 00 00 613
  51 53 00 00                  ff .end (operand)
  52 53 00 00                  ff .end (operand)
  53 53 00 00               03 00 .var1 FLAGS
  55 53 00 00                  01 .literal
  56 53 00 00         58 02 00 00 600
  5a 53 00 00                  ff .end (operand)
  5b 53 00 00                  01 .set
  5c 53 00 00                  01 .literal
  5d 53 00 00         00 00 00 00 0
  61 53 00 00                  ff .end (operand)
if228
::62 53 00 00               05 01 .if [terms=1]
  64 53 00 00         8a 53 00 00 .else
  68 53 00 00               03 00 .var1 FLAGS
  6a 53 00 00                  01 .literal
  6b 53 00 00         56 02 00 00 598
  6f 53 00 00                  ff .end (operand)
  70 53 00 00                  ff .end (operand)
  72 53 00 00                  03 .if-sign-nonzero
  72 53 00 00                  01 .literal
  73 53 00 00         00 00 00 00 0
  77 53 00 00                  ff .end (operand)
  78 53 00 00               03 00 .var1 FLAGS
  7a 53 00 00                  01 .literal
  7b 53 00 00         56 02 00 00 598
  7f 53 00 00                  ff .end (operand)
  80 53 00 00                  05 .decset
  81 53 00 00               03 00 .var1 FLAGS
  83 53 00 00                  01 .literal
  84 53 00 00         65 02 00 00 613
  88 53 00 00                  ff .end (operand)
  89 53 00 00                  ff .end (operand)
if229
::8a 53 00 00               05 01 .if [terms=1]
  8c 53 00 00         b2 53 00 00 .else
  90 53 00 00               03 00 .var1 FLAGS
  92 53 00 00                  01 .literal
  93 53 00 00         57 02 00 00 599
  97 53 00 00                  ff .end (operand)
  98 53 00 00                  ff .end (operand)
  9a 53 00 00                  03 .if-sign-nonzero
  9a 53 00 00                  01 .literal
  9b 53 00 00         00 00 00 00 0
  9f 53 00 00                  ff .end (operand)
  a0 53 00 00               03 00 .var1 FLAGS
  a2 53 00 00                  01 .literal
  a3 53 00 00         57 02 00 00 599
  a7 53 00 00                  ff .end (operand)
  a8 53 00 00                  05 .decset
  a9 53 00 00               03 00 .var1 FLAGS
  ab 53 00 00                  01 .literal
  ac 53 00 00         65 02 00 00 613
  b0 53 00 00                  ff .end (operand)
  b1 53 00 00                  ff .end (operand)
if230
::b2 53 00 00               05 01 .if [terms=1]
  b4 53 00 00         da 53 00 00 .else
  b8 53 00 00               03 00 .var1 FLAGS
  ba 53 00 00                  01 .literal
  bb 53 00 00         58 02 00 00 600
  bf 53 00 00                  ff .end (operand)
  c0 53 00 00                  ff .end (operand)
  c2 53 00 00                  03 .if-sign-nonzero
  c2 53 00 00                  01 .literal
  c3 53 00 00         00 00 00 00 0
  c7 53 00 00                  ff .end (operand)
  c8 53 00 00               03 00 .var1 FLAGS
  ca 53 00 00                  01 .literal
  cb 53 00 00         58 02 00 00 600
  cf 53 00 00                  ff .end (operand)
  d0 53 00 00                  05 .decset
  d1 53 00 00               03 00 .var1 FLAGS
  d3 53 00 00                  01 .literal
  d4 53 00 00         65 02 00 00 613
  d8 53 00 00                  ff .end (operand)
  d9 53 00 00                  ff .end (operand)
::da 53 00 00               01 18 .exec CallEvent
  dd 53 00 00                  01 .literal
  de 53 00 00         0f 00 00 00 15
  e2 53 00 00                  ff .end (operand)
  e3 53 00 00                  ff .end (block)
 :e4 53 00 00                  0b .case
  e5 53 00 00                  05 .group
  e6 53 00 00                  01 .literal
  e7 53 00 00         04 00 00 00 4
  eb 53 00 00                  ff .end (operand)
  ec 53 00 00                  ff .end (operand)
  ed 53 00 00         f2 53 00 00 .case-end-address
  f1 53 00 00                  ff .end (block)
 :f2 53 00 00                  ff .end (switch)
if231
::f3 53 00 00               05 02 .if [terms=2]
  f5 53 00 00         49 56 00 00 .else
  f9 53 00 00               03 02 .var1 CHAR
  fb 53 00 00                  01 .literal
  fc 53 00 00         08 00 00 00 8
  00 54 00 00                  ff .end (operand)
  01 54 00 00                  ff .end (operand)
  03 54 00 00                  01 .if-sign-nonzero
  03 54 00 00               03 07 .var1 CURHP
  05 54 00 00                  01 .literal
  06 54 00 00         08 00 00 00 8
  0a 54 00 00                  ff .end (operand)
  0b 54 00 00                  ff .end (operand)
  0d 54 00 00                  04 .if-sign-nonzero
  0d 54 00 00                  01 .literal
  0e 54 00 00         00 00 00 00 0
  12 54 00 00                  ff .end (operand)
  13 54 00 00               03 00 .var1 FLAGS
  15 54 00 00                  01 .literal
  16 54 00 00         7e 02 00 00 638
  1a 54 00 00                  ff .end (operand)
  1b 54 00 00                  01 .set
  1c 54 00 00                  01 .literal
  1d 54 00 00         08 00 00 00 8
  21 54 00 00                  ff .end (operand)
  22 54 00 00                  0a .switch
  23 54 00 00               03 00 .var1 FLAGS
  25 54 00 00                  01 .literal
  26 54 00 00         7d 02 00 00 637
  2a 54 00 00                  ff .end (operand)
  2b 54 00 00                  ff .end (operand)
  2c 54 00 00                  0b .case
  2d 54 00 00                  05 .group
  2e 54 00 00                  01 .literal
  2f 54 00 00         01 00 00 00 1
  33 54 00 00                  ff .end (operand)
  34 54 00 00                  ff .end (operand)
  35 54 00 00         3a 56 00 00 .case-end-address
  39 54 00 00               03 0d .var1 SPECIALFRAME
  3b 54 00 00                  01 .literal
  3c 54 00 00         0b 00 00 00 11
  40 54 00 00                  ff .end (operand)
  41 54 00 00                  01 .set
  42 54 00 00                  01 .literal
  43 54 00 00         03 00 00 00 3
  47 54 00 00                  ff .end (operand)
  48 54 00 00               01 24 .exec Wait
  4a 54 00 00                  01 .literal
  4b 54 00 00         0f 00 00 00 15
  4f 54 00 00                  ff .end (operand)
  50 54 00 00               03 0d .var1 SPECIALFRAME
  52 54 00 00                  01 .literal
  53 54 00 00         0b 00 00 00 11
  57 54 00 00                  ff .end (operand)
  58 54 00 00                  01 .set
  59 54 00 00                  01 .literal
  5a 54 00 00         04 00 00 00 4
  5e 54 00 00                  ff .end (operand)
  5f 54 00 00               01 24 .exec Wait
  61 54 00 00                  01 .literal
  62 54 00 00         19 00 00 00 25
  66 54 00 00                  ff .end (operand)
  67 54 00 00               03 0d .var1 SPECIALFRAME
  69 54 00 00                  01 .literal
  6a 54 00 00         0b 00 00 00 11
  6e 54 00 00                  ff .end (operand)
  6f 54 00 00                  01 .set
  70 54 00 00                  01 .literal
  71 54 00 00         03 00 00 00 3
  75 54 00 00                  ff .end (operand)
  76 54 00 00               01 24 .exec Wait
  78 54 00 00                  01 .literal
  79 54 00 00         0f 00 00 00 15
  7d 54 00 00                  ff .end (operand)
  7e 54 00 00               03 0d .var1 SPECIALFRAME
  80 54 00 00                  01 .literal
  81 54 00 00         0b 00 00 00 11
  85 54 00 00                  ff .end (operand)
  86 54 00 00                  01 .set
  87 54 00 00                  01 .literal
  88 54 00 00         00 00 00 00 0
  8c 54 00 00                  ff .end (operand)
  8d 54 00 00                  0a .switch
  8e 54 00 00               03 00 .var1 FLAGS
  90 54 00 00                  01 .literal
  91 54 00 00         87 02 00 00 647
  95 54 00 00                  ff .end (operand)
  96 54 00 00                  ff .end (operand)
  97 54 00 00                  0b .case
  98 54 00 00                  05 .group
  99 54 00 00                  01 .literal
  9a 54 00 00         01 00 00 00 1
  9e 54 00 00                  ff .end (operand)
  9f 54 00 00                  ff .end (operand)
  a0 54 00 00         1f 55 00 00 .case-end-address
if232
 :a4 54 00 00               05 01 .if [terms=1]
  a6 54 00 00         cf 54 00 00 .else
  aa 54 00 00               03 00 .var1 FLAGS
  ac 54 00 00                  01 .literal
  ad 54 00 00         67 02 00 00 615
  b1 54 00 00                  ff .end (operand)
  b2 54 00 00                  ff .end (operand)
  b4 54 00 00                  06 .if-sign-nonzero
  b4 54 00 00               03 00 .var1 FLAGS
  b6 54 00 00                  01 .literal
  b7 54 00 00         6a 02 00 00 618
  bb 54 00 00                  ff .end (operand)
  bc 54 00 00                  ff .end (operand)
  bd 54 00 00               03 00 .var1 FLAGS
  bf 54 00 00                  01 .literal
  c0 54 00 00         6a 02 00 00 618
  c4 54 00 00                  ff .end (operand)
  c5 54 00 00                  01 .set
  c6 54 00 00               03 00 .var1 FLAGS
  c8 54 00 00                  01 .literal
  c9 54 00 00         67 02 00 00 615
  cd 54 00 00                  ff .end (operand)
  ce 54 00 00                  ff .end (operand)
::cf 54 00 00               03 00 .var1 FLAGS
  d1 54 00 00                  01 .literal
  d2 54 00 00         67 02 00 00 615
  d6 54 00 00                  ff .end (operand)
  d7 54 00 00                  05 .decset
  d8 54 00 00               03 00 .var1 FLAGS
  da 54 00 00                  01 .literal
  db 54 00 00         6a 02 00 00 618
  df 54 00 00                  ff .end (operand)
  e0 54 00 00                  ff .end (operand)
if233
 :e1 54 00 00               05 01 .if [terms=1]
  e3 54 00 00         0c 55 00 00 .else
  e7 54 00 00               03 00 .var1 FLAGS
  e9 54 00 00                  01 .literal
  ea 54 00 00         56 02 00 00 598
  ee 54 00 00                  ff .end (operand)
  ef 54 00 00                  ff .end (operand)
  f1 54 00 00                  06 .if-sign-nonzero
  f1 54 00 00               03 00 .var1 FLAGS
  f3 54 00 00                  01 .literal
  f4 54 00 00         67 02 00 00 615
  f8 54 00 00                  ff .end (operand)
  f9 54 00 00                  ff .end (operand)
  fa 54 00 00               03 00 .var1 FLAGS
  fc 54 00 00                  01 .literal
  fd 54 00 00         67 02 00 00 615
  01 55 00 00                  ff .end (operand)
  02 55 00 00                  01 .set
  03 55 00 00               03 00 .var1 FLAGS
  05 55 00 00                  01 .literal
  06 55 00 00         56 02 00 00 598
  0a 55 00 00                  ff .end (operand)
  0b 55 00 00                  ff .end (operand)
::0c 55 00 00               03 00 .var1 FLAGS
  0e 55 00 00                  01 .literal
  0f 55 00 00         56 02 00 00 598
  13 55 00 00                  ff .end (operand)
  14 55 00 00                  05 .decset
  15 55 00 00               03 00 .var1 FLAGS
  17 55 00 00                  01 .literal
  18 55 00 00         67 02 00 00 615
  1c 55 00 00                  ff .end (operand)
  1d 55 00 00                  ff .end (operand)
  1e 55 00 00                  ff .end (block)
 :1f 55 00 00                  0b .case
  20 55 00 00                  05 .group
  21 55 00 00                  01 .literal
  22 55 00 00         02 00 00 00 2
  26 55 00 00                  ff .end (operand)
  27 55 00 00                  ff .end (operand)
  28 55 00 00         a7 55 00 00 .case-end-address
if234
 :2c 55 00 00               05 01 .if [terms=1]
  2e 55 00 00         57 55 00 00 .else
  32 55 00 00               03 00 .var1 FLAGS
  34 55 00 00                  01 .literal
  35 55 00 00         65 02 00 00 613
  39 55 00 00                  ff .end (operand)
  3a 55 00 00                  ff .end (operand)
  3c 55 00 00                  06 .if-sign-nonzero
  3c 55 00 00               03 00 .var1 FLAGS
  3e 55 00 00                  01 .literal
  3f 55 00 00         6c 02 00 00 620
  43 55 00 00                  ff .end (operand)
  44 55 00 00                  ff .end (operand)
  45 55 00 00               03 00 .var1 FLAGS
  47 55 00 00                  01 .literal
  48 55 00 00         6c 02 00 00 620
  4c 55 00 00                  ff .end (operand)
  4d 55 00 00                  01 .set
  4e 55 00 00               03 00 .var1 FLAGS
  50 55 00 00                  01 .literal
  51 55 00 00         65 02 00 00 613
  55 55 00 00                  ff .end (operand)
  56 55 00 00                  ff .end (operand)
::57 55 00 00               03 00 .var1 FLAGS
  59 55 00 00                  01 .literal
  5a 55 00 00         67 02 00 00 615
  5e 55 00 00                  ff .end (operand)
  5f 55 00 00                  05 .decset
  60 55 00 00               03 00 .var1 FLAGS
  62 55 00 00                  01 .literal
  63 55 00 00         6c 02 00 00 620
  67 55 00 00                  ff .end (operand)
  68 55 00 00                  ff .end (operand)
if235
 :69 55 00 00               05 01 .if [terms=1]
  6b 55 00 00         94 55 00 00 .else
  6f 55 00 00               03 00 .var1 FLAGS
  71 55 00 00                  01 .literal
  72 55 00 00         57 02 00 00 599
  76 55 00 00                  ff .end (operand)
  77 55 00 00                  ff .end (operand)
  79 55 00 00                  06 .if-sign-nonzero
  79 55 00 00               03 00 .var1 FLAGS
  7b 55 00 00                  01 .literal
  7c 55 00 00         67 02 00 00 615
  80 55 00 00                  ff .end (operand)
  81 55 00 00                  ff .end (operand)
  82 55 00 00               03 00 .var1 FLAGS
  84 55 00 00                  01 .literal
  85 55 00 00         67 02 00 00 615
  89 55 00 00                  ff .end (operand)
  8a 55 00 00                  01 .set
  8b 55 00 00               03 00 .var1 FLAGS
  8d 55 00 00                  01 .literal
  8e 55 00 00         57 02 00 00 599
  92 55 00 00                  ff .end (operand)
  93 55 00 00                  ff .end (operand)
::94 55 00 00               03 00 .var1 FLAGS
  96 55 00 00                  01 .literal
  97 55 00 00         57 02 00 00 599
  9b 55 00 00                  ff .end (operand)
  9c 55 00 00                  05 .decset
  9d 55 00 00               03 00 .var1 FLAGS
  9f 55 00 00                  01 .literal
  a0 55 00 00         67 02 00 00 615
  a4 55 00 00                  ff .end (operand)
  a5 55 00 00                  ff .end (operand)
  a6 55 00 00                  ff .end (block)
 :a7 55 00 00                  0b .case
  a8 55 00 00                  05 .group
  a9 55 00 00                  01 .literal
  aa 55 00 00         03 00 00 00 3
  ae 55 00 00                  ff .end (operand)
  af 55 00 00                  ff .end (operand)
  b0 55 00 00         2f 56 00 00 .case-end-address
if236
 :b4 55 00 00               05 01 .if [terms=1]
  b6 55 00 00         df 55 00 00 .else
  ba 55 00 00               03 00 .var1 FLAGS
  bc 55 00 00                  01 .literal
  bd 55 00 00         65 02 00 00 613
  c1 55 00 00                  ff .end (operand)
  c2 55 00 00                  ff .end (operand)
  c4 55 00 00                  06 .if-sign-nonzero
  c4 55 00 00               03 00 .var1 FLAGS
  c6 55 00 00                  01 .literal
  c7 55 00 00         6e 02 00 00 622
  cb 55 00 00                  ff .end (operand)
  cc 55 00 00                  ff .end (operand)
  cd 55 00 00               03 00 .var1 FLAGS
  cf 55 00 00                  01 .literal
  d0 55 00 00         6e 02 00 00 622
  d4 55 00 00                  ff .end (operand)
  d5 55 00 00                  01 .set
  d6 55 00 00               03 00 .var1 FLAGS
  d8 55 00 00                  01 .literal
  d9 55 00 00         65 02 00 00 613
  dd 55 00 00                  ff .end (operand)
  de 55 00 00                  ff .end (operand)
::df 55 00 00               03 00 .var1 FLAGS
  e1 55 00 00                  01 .literal
  e2 55 00 00         67 02 00 00 615
  e6 55 00 00                  ff .end (operand)
  e7 55 00 00                  05 .decset
  e8 55 00 00               03 00 .var1 FLAGS
  ea 55 00 00                  01 .literal
  eb 55 00 00         6e 02 00 00 622
  ef 55 00 00                  ff .end (operand)
  f0 55 00 00                  ff .end (operand)
if237
 :f1 55 00 00               05 01 .if [terms=1]
  f3 55 00 00         1c 56 00 00 .else
  f7 55 00 00               03 00 .var1 FLAGS
  f9 55 00 00                  01 .literal
  fa 55 00 00         58 02 00 00 600
  fe 55 00 00                  ff .end (operand)
  ff 55 00 00                  ff .end (operand)
  01 56 00 00                  06 .if-sign-nonzero
  01 56 00 00               03 00 .var1 FLAGS
  03 56 00 00                  01 .literal
  04 56 00 00         67 02 00 00 615
  08 56 00 00                  ff .end (operand)
  09 56 00 00                  ff .end (operand)
  0a 56 00 00               03 00 .var1 FLAGS
  0c 56 00 00                  01 .literal
  0d 56 00 00         67 02 00 00 615
  11 56 00 00                  ff .end (operand)
  12 56 00 00                  01 .set
  13 56 00 00               03 00 .var1 FLAGS
  15 56 00 00                  01 .literal
  16 56 00 00         58 02 00 00 600
  1a 56 00 00                  ff .end (operand)
  1b 56 00 00                  ff .end (operand)
::1c 56 00 00               03 00 .var1 FLAGS
  1e 56 00 00                  01 .literal
  1f 56 00 00         58 02 00 00 600
  23 56 00 00                  ff .end (operand)
  24 56 00 00                  05 .decset
  25 56 00 00               03 00 .var1 FLAGS
  27 56 00 00                  01 .literal
  28 56 00 00         67 02 00 00 615
  2c 56 00 00                  ff .end (operand)
  2d 56 00 00                  ff .end (operand)
  2e 56 00 00                  ff .end (block)
 :2f 56 00 00                  ff .end (switch)
  30 56 00 00               01 18 .exec CallEvent
  33 56 00 00                  01 .literal
  34 56 00 00         0f 00 00 00 15
  38 56 00 00                  ff .end (operand)
  39 56 00 00                  ff .end (block)
 :3a 56 00 00                  0b .case
  3b 56 00 00                  05 .group
  3c 56 00 00                  01 .literal
  3d 56 00 00         04 00 00 00 4
  41 56 00 00                  ff .end (operand)
  42 56 00 00                  ff .end (operand)
  43 56 00 00         48 56 00 00 .case-end-address
  47 56 00 00                  ff .end (block)
 :48 56 00 00                  ff .end (switch)
::49 56 00 00               03 00 .var1 FLAGS
  4b 56 00 00                  01 .literal
  4c 56 00 00         76 02 00 00 630
  50 56 00 00                  ff .end (operand)
  51 56 00 00                  01 .set
  52 56 00 00                  01 .literal
  53 56 00 00         00 00 00 00 0
  57 56 00 00                  ff .end (operand)
  58 56 00 00               03 00 .var1 FLAGS
  5a 56 00 00                  01 .literal
  5b 56 00 00         77 02 00 00 631
  5f 56 00 00                  ff .end (operand)
  60 56 00 00                  01 .set
  61 56 00 00                  01 .literal
  62 56 00 00         00 00 00 00 0
  66 56 00 00                  ff .end (operand)
  67 56 00 00               03 00 .var1 FLAGS
  69 56 00 00                  01 .literal
  6a 56 00 00         78 02 00 00 632
  6e 56 00 00                  ff .end (operand)
  6f 56 00 00                  01 .set
  70 56 00 00                  01 .literal
  71 56 00 00         00 00 00 00 0
  75 56 00 00                  ff .end (operand)
  76 56 00 00               03 00 .var1 FLAGS
  78 56 00 00                  01 .literal
  79 56 00 00         79 02 00 00 633
  7d 56 00 00                  ff .end (operand)
  7e 56 00 00                  01 .set
  7f 56 00 00                  01 .literal
  80 56 00 00         00 00 00 00 0
  84 56 00 00                  ff .end (operand)
  85 56 00 00               03 00 .var1 FLAGS
  87 56 00 00                  01 .literal
  88 56 00 00         7a 02 00 00 634
  8c 56 00 00                  ff .end (operand)
  8d 56 00 00                  01 .set
  8e 56 00 00                  01 .literal
  8f 56 00 00         00 00 00 00 0
  93 56 00 00                  ff .end (operand)
  94 56 00 00               03 00 .var1 FLAGS
  96 56 00 00                  01 .literal
  97 56 00 00         7b 02 00 00 635
  9b 56 00 00                  ff .end (operand)
  9c 56 00 00                  01 .set
  9d 56 00 00                  01 .literal
  9e 56 00 00         00 00 00 00 0
  a2 56 00 00                  ff .end (operand)
  a3 56 00 00               03 00 .var1 FLAGS
  a5 56 00 00                  01 .literal
  a6 56 00 00         7c 02 00 00 636
  aa 56 00 00                  ff .end (operand)
  ab 56 00 00                  01 .set
  ac 56 00 00                  01 .literal
  ad 56 00 00         00 00 00 00 0
  b1 56 00 00                  ff .end (operand)
  b2 56 00 00               03 00 .var1 FLAGS
  b4 56 00 00                  01 .literal
  b5 56 00 00         7d 02 00 00 637
  b9 56 00 00                  ff .end (operand)
  ba 56 00 00                  01 .set
  bb 56 00 00                  01 .literal
  bc 56 00 00         00 00 00 00 0
  c0 56 00 00                  ff .end (operand)
  c1 56 00 00                  ff .end (block)

.event 13
if238
*:c2 56 00 00               05 02 .if [terms=2]
  c4 56 00 00         f1 56 00 00 .else
  c8 56 00 00               03 07 .var1 CURHP
  ca 56 00 00                  01 .literal
  cb 56 00 00         01 00 00 00 1
  cf 56 00 00                  ff .end (operand)
  d0 56 00 00                  ff .end (operand)
  d2 56 00 00                  02 .if-sign-nonzero
  d2 56 00 00                  01 .literal
  d3 56 00 00         00 00 00 00 0
  d7 56 00 00                  ff .end (operand)
  d8 56 00 00               03 02 .var1 CHAR
  da 56 00 00                  01 .literal
  db 56 00 00         01 00 00 00 1
  df 56 00 00                  ff .end (operand)
  e0 56 00 00                  ff .end (operand)
  e2 56 00 00                  01 .if-sign-nonzero
  e2 56 00 00               03 00 .var1 FLAGS
  e4 56 00 00                  01 .literal
  e5 56 00 00         be 02 00 00 702
  e9 56 00 00                  ff .end (operand)
  ea 56 00 00                  04 .incset
  eb 56 00 00                  01 .literal
  ec 56 00 00         01 00 00 00 1
  f0 56 00 00                  ff .end (operand)
if239
::f1 56 00 00               05 02 .if [terms=2]
  f3 56 00 00         20 57 00 00 .else
  f7 56 00 00               03 07 .var1 CURHP
  f9 56 00 00                  01 .literal
  fa 56 00 00         02 00 00 00 2
  fe 56 00 00                  ff .end (operand)
  ff 56 00 00                  ff .end (operand)
  01 57 00 00                  02 .if-sign-nonzero
  01 57 00 00                  01 .literal
  02 57 00 00         00 00 00 00 0
  06 57 00 00                  ff .end (operand)
  07 57 00 00               03 02 .var1 CHAR
  09 57 00 00                  01 .literal
  0a 57 00 00         02 00 00 00 2
  0e 57 00 00                  ff .end (operand)
  0f 57 00 00                  ff .end (operand)
  11 57 00 00                  01 .if-sign-nonzero
  11 57 00 00               03 00 .var1 FLAGS
  13 57 00 00                  01 .literal
  14 57 00 00         be 02 00 00 702
  18 57 00 00                  ff .end (operand)
  19 57 00 00                  04 .incset
  1a 57 00 00                  01 .literal
  1b 57 00 00         01 00 00 00 1
  1f 57 00 00                  ff .end (operand)
if240
::20 57 00 00               05 02 .if [terms=2]
  22 57 00 00         4f 57 00 00 .else
  26 57 00 00               03 07 .var1 CURHP
  28 57 00 00                  01 .literal
  29 57 00 00         03 00 00 00 3
  2d 57 00 00                  ff .end (operand)
  2e 57 00 00                  ff .end (operand)
  30 57 00 00                  02 .if-sign-nonzero
  30 57 00 00                  01 .literal
  31 57 00 00         00 00 00 00 0
  35 57 00 00                  ff .end (operand)
  36 57 00 00               03 02 .var1 CHAR
  38 57 00 00                  01 .literal
  39 57 00 00         03 00 00 00 3
  3d 57 00 00                  ff .end (operand)
  3e 57 00 00                  ff .end (operand)
  40 57 00 00                  01 .if-sign-nonzero
  40 57 00 00               03 00 .var1 FLAGS
  42 57 00 00                  01 .literal
  43 57 00 00         be 02 00 00 702
  47 57 00 00                  ff .end (operand)
  48 57 00 00                  04 .incset
  49 57 00 00                  01 .literal
  4a 57 00 00         01 00 00 00 1
  4e 57 00 00                  ff .end (operand)
if241
::4f 57 00 00               05 02 .if [terms=2]
  51 57 00 00         7e 57 00 00 .else
  55 57 00 00               03 07 .var1 CURHP
  57 57 00 00                  01 .literal
  58 57 00 00         04 00 00 00 4
  5c 57 00 00                  ff .end (operand)
  5d 57 00 00                  ff .end (operand)
  5f 57 00 00                  02 .if-sign-nonzero
  5f 57 00 00                  01 .literal
  60 57 00 00         00 00 00 00 0
  64 57 00 00                  ff .end (operand)
  65 57 00 00               03 02 .var1 CHAR
  67 57 00 00                  01 .literal
  68 57 00 00         04 00 00 00 4
  6c 57 00 00                  ff .end (operand)
  6d 57 00 00                  ff .end (operand)
  6f 57 00 00                  01 .if-sign-nonzero
  6f 57 00 00               03 00 .var1 FLAGS
  71 57 00 00                  01 .literal
  72 57 00 00         be 02 00 00 702
  76 57 00 00                  ff .end (operand)
  77 57 00 00                  04 .incset
  78 57 00 00                  01 .literal
  79 57 00 00         01 00 00 00 1
  7d 57 00 00                  ff .end (operand)
if242
::7e 57 00 00               05 02 .if [terms=2]
  80 57 00 00         ad 57 00 00 .else
  84 57 00 00               03 07 .var1 CURHP
  86 57 00 00                  01 .literal
  87 57 00 00         05 00 00 00 5
  8b 57 00 00                  ff .end (operand)
  8c 57 00 00                  ff .end (operand)
  8e 57 00 00                  02 .if-sign-nonzero
  8e 57 00 00                  01 .literal
  8f 57 00 00         00 00 00 00 0
  93 57 00 00                  ff .end (operand)
  94 57 00 00               03 02 .var1 CHAR
  96 57 00 00                  01 .literal
  97 57 00 00         05 00 00 00 5
  9b 57 00 00                  ff .end (operand)
  9c 57 00 00                  ff .end (operand)
  9e 57 00 00                  01 .if-sign-nonzero
  9e 57 00 00               03 00 .var1 FLAGS
  a0 57 00 00                  01 .literal
  a1 57 00 00         be 02 00 00 702
  a5 57 00 00                  ff .end (operand)
  a6 57 00 00                  04 .incset
  a7 57 00 00                  01 .literal
  a8 57 00 00         01 00 00 00 1
  ac 57 00 00                  ff .end (operand)
if243
::ad 57 00 00               05 02 .if [terms=2]
  af 57 00 00         dc 57 00 00 .else
  b3 57 00 00               03 07 .var1 CURHP
  b5 57 00 00                  01 .literal
  b6 57 00 00         06 00 00 00 6
  ba 57 00 00                  ff .end (operand)
  bb 57 00 00                  ff .end (operand)
  bd 57 00 00                  02 .if-sign-nonzero
  bd 57 00 00                  01 .literal
  be 57 00 00         00 00 00 00 0
  c2 57 00 00                  ff .end (operand)
  c3 57 00 00               03 02 .var1 CHAR
  c5 57 00 00                  01 .literal
  c6 57 00 00         06 00 00 00 6
  ca 57 00 00                  ff .end (operand)
  cb 57 00 00                  ff .end (operand)
  cd 57 00 00                  01 .if-sign-nonzero
  cd 57 00 00               03 00 .var1 FLAGS
  cf 57 00 00                  01 .literal
  d0 57 00 00         be 02 00 00 702
  d4 57 00 00                  ff .end (operand)
  d5 57 00 00                  04 .incset
  d6 57 00 00                  01 .literal
  d7 57 00 00         01 00 00 00 1
  db 57 00 00                  ff .end (operand)
if244
::dc 57 00 00               05 02 .if [terms=2]
  de 57 00 00         0b 58 00 00 .else
  e2 57 00 00               03 07 .var1 CURHP
  e4 57 00 00                  01 .literal
  e5 57 00 00         07 00 00 00 7
  e9 57 00 00                  ff .end (operand)
  ea 57 00 00                  ff .end (operand)
  ec 57 00 00                  02 .if-sign-nonzero
  ec 57 00 00                  01 .literal
  ed 57 00 00         00 00 00 00 0
  f1 57 00 00                  ff .end (operand)
  f2 57 00 00               03 02 .var1 CHAR
  f4 57 00 00                  01 .literal
  f5 57 00 00         07 00 00 00 7
  f9 57 00 00                  ff .end (operand)
  fa 57 00 00                  ff .end (operand)
  fc 57 00 00                  01 .if-sign-nonzero
  fc 57 00 00               03 00 .var1 FLAGS
  fe 57 00 00                  01 .literal
  ff 57 00 00         be 02 00 00 702
  03 58 00 00                  ff .end (operand)
  04 58 00 00                  04 .incset
  05 58 00 00                  01 .literal
  06 58 00 00         01 00 00 00 1
  0a 58 00 00                  ff .end (operand)
if245
::0b 58 00 00               05 02 .if [terms=2]
  0d 58 00 00         3a 58 00 00 .else
  11 58 00 00               03 07 .var1 CURHP
  13 58 00 00                  01 .literal
  14 58 00 00         08 00 00 00 8
  18 58 00 00                  ff .end (operand)
  19 58 00 00                  ff .end (operand)
  1b 58 00 00                  02 .if-sign-nonzero
  1b 58 00 00                  01 .literal
  1c 58 00 00         00 00 00 00 0
  20 58 00 00                  ff .end (operand)
  21 58 00 00               03 02 .var1 CHAR
  23 58 00 00                  01 .literal
  24 58 00 00         08 00 00 00 8
  28 58 00 00                  ff .end (operand)
  29 58 00 00                  ff .end (operand)
  2b 58 00 00                  01 .if-sign-nonzero
  2b 58 00 00               03 00 .var1 FLAGS
  2d 58 00 00                  01 .literal
  2e 58 00 00         be 02 00 00 702
  32 58 00 00                  ff .end (operand)
  33 58 00 00                  04 .incset
  34 58 00 00                  01 .literal
  35 58 00 00         01 00 00 00 1
  39 58 00 00                  ff .end (operand)
if246
::3a 58 00 00               05 01 .if [terms=1]
  3c 58 00 00         63 58 00 00 .else
  40 58 00 00               03 00 .var1 FLAGS
  42 58 00 00                  01 .literal
  43 58 00 00         be 02 00 00 702
  47 58 00 00                  ff .end (operand)
  48 58 00 00                  ff .end (operand)
  4a 58 00 00                  02 .if-sign-nonzero
  4a 58 00 00               02 1a .var0 NUMCHARS
  4c 58 00 00                  ff .end (operand)
  4d 58 00 00               01 12 .exec Banner
  4f 58 00 00                     "You lose..."

              59 6f 75 20 6c 6f 73 65 
              2e 2e 2e 00 
  5b 58 00 00                  01 .literal
  5c 58 00 00         03 00 00 00 3
  60 58 00 00                  ff .end (operand)
  61 58 00 00               01 3d .exec Exit
::63 58 00 00               03 00 .var1 FLAGS
  65 58 00 00                  01 .literal
  66 58 00 00         be 02 00 00 702
  6a 58 00 00                  ff .end (operand)
  6b 58 00 00                  01 .set
  6c 58 00 00                  01 .literal
  6d 58 00 00         00 00 00 00 0
  71 58 00 00                  ff .end (operand)
if247
 :72 58 00 00               05 03 .if [terms=3]
  74 58 00 00         94 5c 00 00 .else
  78 58 00 00               03 00 .var1 FLAGS
  7a 58 00 00                  01 .literal
  7b 58 00 00         56 02 00 00 598
  7f 58 00 00                  ff .end (operand)
  80 58 00 00                  ff .end (operand)
  82 58 00 00                  02 .if-sign-nonzero
  82 58 00 00                  01 .literal
  83 58 00 00         00 00 00 00 0
  87 58 00 00                  ff .end (operand)
  88 58 00 00               03 00 .var1 FLAGS
  8a 58 00 00                  01 .literal
  8b 58 00 00         57 02 00 00 599
  8f 58 00 00                  ff .end (operand)
  90 58 00 00                  ff .end (operand)
  92 58 00 00                  02 .if-sign-nonzero
  92 58 00 00                  01 .literal
  93 58 00 00         00 00 00 00 0
  97 58 00 00                  ff .end (operand)
  98 58 00 00               03 00 .var1 FLAGS
  9a 58 00 00                  01 .literal
  9b 58 00 00         58 02 00 00 600
  9f 58 00 00                  ff .end (operand)
  a0 58 00 00                  ff .end (operand)
  a2 58 00 00                  02 .if-sign-nonzero
  a2 58 00 00                  01 .literal
  a3 58 00 00         00 00 00 00 0
  a7 58 00 00                  ff .end (operand)
  a8 58 00 00               01 23 .exec EnableMenu
  aa 58 00 00               01 12 .exec Banner
  ac 58 00 00                     "You win!"

              59 6f 75 20 77 69 6e 21 
              00 
  b5 58 00 00                  01 .literal
  b6 58 00 00         03 00 00 00 3
  ba 58 00 00                  ff .end (operand)
  bb 58 00 00               08 17 .for0 X
  bd 58 00 00                  01 .literal
  be 58 00 00         01 00 00 00 1
  c2 58 00 00                  ff .end (operand)
  c3 58 00 00                  01 .literal
  c4 58 00 00         08 00 00 00 8
  c8 58 00 00                  ff .end (operand)
  c9 58 00 00                  01 .for0-sign-nonzero
  ca 58 00 00                  01 .literal
  cb 58 00 00         01 00 00 00 1
  cf 58 00 00                  ff .end (operand)
if248
 :d0 58 00 00               05 02 .if [terms=2]
  d2 58 00 00         14 59 00 00 .else
  d6 58 00 00               03 02 .var1 CHAR
  d8 58 00 00               02 17 .var0 X
  da 58 00 00                  ff .end (operand)
  db 58 00 00                  ff .end (operand)
  dd 58 00 00                  01 .if-sign-nonzero
  dd 58 00 00               03 07 .var1 CURHP
  df 58 00 00               02 17 .var0 X
  e1 58 00 00                  ff .end (operand)
  e2 58 00 00                  ff .end (operand)
  e4 58 00 00                  04 .if-sign-nonzero
  e4 58 00 00                  01 .literal
  e5 58 00 00         00 00 00 00 0
  e9 58 00 00                  ff .end (operand)
  ea 58 00 00               01 2e .exec GiveXp
  ec 58 00 00               02 17 .var0 X
  ee 58 00 00                  ff .end (operand)
  ef 58 00 00               03 00 .var1 FLAGS
  f1 58 00 00                  01 .literal
  f2 58 00 00         fd 01 00 00 509
  f6 58 00 00                  ff .end (operand)
  f7 58 00 00                  ff .end (operand)
  f8 58 00 00               01 2e .exec GiveXp
  fa 58 00 00               02 17 .var0 X
  fc 58 00 00                  ff .end (operand)
  fd 58 00 00               03 00 .var1 FLAGS
  ff 58 00 00                  01 .literal
  00 59 00 00         0a 02 00 00 522
  04 59 00 00                  ff .end (operand)
  05 59 00 00                  ff .end (operand)
  06 59 00 00               01 2e .exec GiveXp
  08 59 00 00               02 17 .var0 X
  0a 59 00 00                  ff .end (operand)
  0b 59 00 00               03 00 .var1 FLAGS
  0d 59 00 00                  01 .literal
  0e 59 00 00         17 02 00 00 535
  12 59 00 00                  ff .end (operand)
  13 59 00 00                  ff .end (operand)
::14 59 00 00                  ff .end (block) for0
  15 59 00 00               03 00 .var1 FLAGS
  17 59 00 00                  01 .literal
  18 59 00 00         bd 02 00 00 701
  1c 59 00 00                  ff .end (operand)
  1d 59 00 00                  01 .set
  1e 59 00 00               04 00 .var2 RANDOM
  20 59 00 00                  01 .literal
  21 59 00 00         01 00 00 00 1
  25 59 00 00                  ff .end (operand)
  26 59 00 00                  01 .literal
  27 59 00 00         14 00 00 00 20
  2b 59 00 00                  ff .end (operand)
  2c 59 00 00                  ff .end (operand)
if249
 :2d 59 00 00               05 01 .if [terms=1]
  2f 59 00 00         4e 59 00 00 .else
  33 59 00 00               03 00 .var1 FLAGS
  35 59 00 00                  01 .literal
  36 59 00 00         bd 02 00 00 701
  3a 59 00 00                  ff .end (operand)
  3b 59 00 00                  ff .end (operand)
  3d 59 00 00                  02 .if-sign-nonzero
  3d 59 00 00                  01 .literal
  3e 59 00 00         01 00 00 00 1
  42 59 00 00                  ff .end (operand)
  43 59 00 00               01 05 .exec GiveItem
  45 59 00 00               03 00 .var1 FLAGS
  47 59 00 00                  01 .literal
  48 59 00 00         01 02 00 00 513
  4c 59 00 00                  ff .end (operand)
  4d 59 00 00                  ff .end (operand)
if250
 :4e 59 00 00               05 02 .if [terms=2]
  50 59 00 00         7f 59 00 00 .else
  54 59 00 00               03 00 .var1 FLAGS
  56 59 00 00                  01 .literal
  57 59 00 00         bd 02 00 00 701
  5b 59 00 00                  ff .end (operand)
  5c 59 00 00                  ff .end (operand)
  5e 59 00 00                  04 .if-sign-nonzero
  5e 59 00 00                  01 .literal
  5f 59 00 00         01 00 00 00 1
  63 59 00 00                  ff .end (operand)
  64 59 00 00               03 00 .var1 FLAGS
  66 59 00 00                  01 .literal
  67 59 00 00         bd 02 00 00 701
  6b 59 00 00                  ff .end (operand)
  6c 59 00 00                  ff .end (operand)
  6e 59 00 00                  06 .if-sign-nonzero
  6e 59 00 00                  01 .literal
  6f 59 00 00         09 00 00 00 9
  73 59 00 00                  ff .end (operand)
  74 59 00 00               01 05 .exec GiveItem
  76 59 00 00               03 00 .var1 FLAGS
  78 59 00 00                  01 .literal
  79 59 00 00         00 02 00 00 512
  7d 59 00 00                  ff .end (operand)
  7e 59 00 00                  ff .end (operand)
 :7f 59 00 00               01 29 .exec GiveGp
  81 59 00 00               03 00 .var1 FLAGS
  83 59 00 00                  01 .literal
  84 59 00 00         fe 01 00 00 510
  88 59 00 00                  ff .end (operand)
  89 59 00 00                  ff .end (operand)
  8a 59 00 00               01 29 .exec GiveGp
  8c 59 00 00               03 00 .var1 FLAGS
  8e 59 00 00                  01 .literal
  8f 59 00 00         0b 02 00 00 523
  93 59 00 00                  ff .end (operand)
  94 59 00 00                  ff .end (operand)
  95 59 00 00               01 29 .exec GiveGp
  97 59 00 00               03 00 .var1 FLAGS
  99 59 00 00                  01 .literal
  9a 59 00 00         18 02 00 00 536
  9e 59 00 00                  ff .end (operand)
  9f 59 00 00                  ff .end (operand)
  a0 59 00 00               03 00 .var1 FLAGS
  a2 59 00 00                  01 .literal
  a3 59 00 00         bf 02 00 00 703
  a7 59 00 00                  ff .end (operand)
  a8 59 00 00                  04 .incset
  a9 59 00 00               03 00 .var1 FLAGS
  ab 59 00 00                  01 .literal
  ac 59 00 00         ff 01 00 00 511
  b0 59 00 00                  ff .end (operand)
  b1 59 00 00                  ff .end (operand)
  b2 59 00 00               03 00 .var1 FLAGS
  b4 59 00 00                  01 .literal
  b5 59 00 00         bf 02 00 00 703
  b9 59 00 00                  ff .end (operand)
  ba 59 00 00                  04 .incset
  bb 59 00 00               03 00 .var1 FLAGS
  bd 59 00 00                  01 .literal
  be 59 00 00         0c 02 00 00 524
  c2 59 00 00                  ff .end (operand)
  c3 59 00 00                  ff .end (operand)
  c4 59 00 00               03 00 .var1 FLAGS
  c6 59 00 00                  01 .literal
  c7 59 00 00         bf 02 00 00 703
  cb 59 00 00                  ff .end (operand)
  cc 59 00 00                  04 .incset
  cd 59 00 00               03 00 .var1 FLAGS
  cf 59 00 00                  01 .literal
  d0 59 00 00         19 02 00 00 537
  d4 59 00 00                  ff .end (operand)
  d5 59 00 00                  ff .end (operand)
  d6 59 00 00               01 39 .exec VcClear
  d8 59 00 00               02 2f .var0 LAYERVC
  da 59 00 00                  01 .set
  db 59 00 00                  01 .literal
  dc 59 00 00         00 00 00 00 0
  e0 59 00 00                  ff .end (operand)
  e1 59 00 00               03 00 .var1 FLAGS
  e3 59 00 00                  01 .literal
  e4 59 00 00         20 03 00 00 800
  e8 59 00 00                  ff .end (operand)
  e9 59 00 00                  01 .set
  ea 59 00 00                  01 .literal
  eb 59 00 00         00 00 00 00 0
  ef 59 00 00                  ff .end (operand)
  f0 59 00 00               03 00 .var1 FLAGS
  f2 59 00 00                  01 .literal
  f3 59 00 00         53 03 00 00 851
  f7 59 00 00                  ff .end (operand)
  f8 59 00 00                  01 .set
  f9 59 00 00                  01 .literal
  fa 59 00 00         00 00 00 00 0
  fe 59 00 00                  ff .end (operand)
  ff 59 00 00               03 00 .var1 FLAGS
  01 5a 00 00                  01 .literal
  02 5a 00 00         54 03 00 00 852
  06 5a 00 00                  ff .end (operand)
  07 5a 00 00                  01 .set
  08 5a 00 00                  01 .literal
  09 5a 00 00         00 00 00 00 0
  0d 5a 00 00                  ff .end (operand)
  0e 5a 00 00               03 00 .var1 FLAGS
  10 5a 00 00                  01 .literal
  11 5a 00 00         55 03 00 00 853
  15 5a 00 00                  ff .end (operand)
  16 5a 00 00                  01 .set
  17 5a 00 00                  01 .literal
  18 5a 00 00         00 00 00 00 0
  1c 5a 00 00                  ff .end (operand)
  1d 5a 00 00               03 00 .var1 FLAGS
  1f 5a 00 00                  01 .literal
  20 5a 00 00         56 03 00 00 854
  24 5a 00 00                  ff .end (operand)
  25 5a 00 00                  01 .set
  26 5a 00 00                  01 .literal
  27 5a 00 00         00 00 00 00 0
  2b 5a 00 00                  ff .end (operand)
  2c 5a 00 00               03 00 .var1 FLAGS
  2e 5a 00 00                  01 .literal
  2f 5a 00 00         57 03 00 00 855
  33 5a 00 00                  ff .end (operand)
  34 5a 00 00                  01 .set
  35 5a 00 00                  01 .literal
  36 5a 00 00         00 00 00 00 0
  3a 5a 00 00                  ff .end (operand)
  3b 5a 00 00               03 00 .var1 FLAGS
  3d 5a 00 00                  01 .literal
  3e 5a 00 00         58 03 00 00 856
  42 5a 00 00                  ff .end (operand)
  43 5a 00 00                  01 .set
  44 5a 00 00                  01 .literal
  45 5a 00 00         00 00 00 00 0
  49 5a 00 00                  ff .end (operand)
  4a 5a 00 00               03 00 .var1 FLAGS
  4c 5a 00 00                  01 .literal
  4d 5a 00 00         59 03 00 00 857
  51 5a 00 00                  ff .end (operand)
  52 5a 00 00                  01 .set
  53 5a 00 00                  01 .literal
  54 5a 00 00         00 00 00 00 0
  58 5a 00 00                  ff .end (operand)
  59 5a 00 00               03 00 .var1 FLAGS
  5b 5a 00 00                  01 .literal
  5c 5a 00 00         5a 03 00 00 858
  60 5a 00 00                  ff .end (operand)
  61 5a 00 00                  01 .set
  62 5a 00 00                  01 .literal
  63 5a 00 00         00 00 00 00 0
  67 5a 00 00                  ff .end (operand)
  68 5a 00 00               03 00 .var1 FLAGS
  6a 5a 00 00                  01 .literal
  6b 5a 00 00         5b 03 00 00 859
  6f 5a 00 00                  ff .end (operand)
  70 5a 00 00                  01 .set
  71 5a 00 00                  01 .literal
  72 5a 00 00         00 00 00 00 0
  76 5a 00 00                  ff .end (operand)
  77 5a 00 00               03 00 .var1 FLAGS
  79 5a 00 00                  01 .literal
  7a 5a 00 00         5c 03 00 00 860
  7e 5a 00 00                  ff .end (operand)
  7f 5a 00 00                  01 .set
  80 5a 00 00                  01 .literal
  81 5a 00 00         00 00 00 00 0
  85 5a 00 00                  ff .end (operand)
  86 5a 00 00               01 24 .exec Wait
  88 5a 00 00                  01 .literal
  89 5a 00 00         64 00 00 00 100
  8d 5a 00 00                  ff .end (operand)
  8e 5a 00 00               02 1f .var0 DRAWPARTY
  90 5a 00 00                  01 .set
  91 5a 00 00                  01 .literal
  92 5a 00 00         01 00 00 00 1
  96 5a 00 00                  ff .end (operand)
  97 5a 00 00               03 00 .var1 FLAGS
  99 5a 00 00                  01 .literal
  9a 5a 00 00         be 00 00 00 190
  9e 5a 00 00                  ff .end (operand)
  9f 5a 00 00                  01 .set
  a0 5a 00 00                  01 .literal
  a1 5a 00 00         01 00 00 00 1
  a5 5a 00 00                  ff .end (operand)
if251
 :a6 5a 00 00               05 01 .if [terms=1]
  a8 5a 00 00         e1 5a 00 00 .else
  ac 5a 00 00               03 00 .var1 FLAGS
  ae 5a 00 00                  01 .literal
  af 5a 00 00         21 03 00 00 801
  b3 5a 00 00                  ff .end (operand)
  b4 5a 00 00                  ff .end (operand)
  b6 5a 00 00                  02 .if-sign-nonzero
  b6 5a 00 00                  01 .literal
  b7 5a 00 00         01 00 00 00 1
  bb 5a 00 00                  ff .end (operand)
  bc 5a 00 00               01 01 .exec MapSwitch
  be 5a 00 00                     "damfor.map"

              64 61 6d 66 6f 72 2e 6d 
              61 70 00 
  c9 5a 00 00               03 00 .var1 FLAGS
  cb 5a 00 00                  01 .literal
  cc 5a 00 00         6d 00 00 00 109
  d0 5a 00 00                  ff .end (operand)
  d1 5a 00 00                  ff .end (operand)
  d2 5a 00 00               03 00 .var1 FLAGS
  d4 5a 00 00                  01 .literal
  d5 5a 00 00         6e 00 00 00 110
  d9 5a 00 00                  ff .end (operand)
  da 5a 00 00                  ff .end (operand)
  db 5a 00 00                  01 .literal
  dc 5a 00 00         00 00 00 00 0
  e0 5a 00 00                  ff .end (operand)
if252
 :e1 5a 00 00               05 01 .if [terms=1]
  e3 5a 00 00         1e 5b 00 00 .else
  e7 5a 00 00               03 00 .var1 FLAGS
  e9 5a 00 00                  01 .literal
  ea 5a 00 00         21 03 00 00 801
  ee 5a 00 00                  ff .end (operand)
  ef 5a 00 00                  ff .end (operand)
  f1 5a 00 00                  02 .if-sign-nonzero
  f1 5a 00 00                  01 .literal
  f2 5a 00 00         02 00 00 00 2
  f6 5a 00 00                  ff .end (operand)
  f7 5a 00 00               01 01 .exec MapSwitch
  f9 5a 00 00                     "packwood.map"

              70 61 63 6b 77 6f 6f 64 
              2e 6d 61 70 00 
  06 5b 00 00               03 00 .var1 FLAGS
  08 5b 00 00                  01 .literal
  09 5b 00 00         6d 00 00 00 109
  0d 5b 00 00                  ff .end (operand)
  0e 5b 00 00                  ff .end (operand)
  0f 5b 00 00               03 00 .var1 FLAGS
  11 5b 00 00                  01 .literal
  12 5b 00 00         6e 00 00 00 110
  16 5b 00 00                  ff .end (operand)
  17 5b 00 00                  ff .end (operand)
  18 5b 00 00                  01 .literal
  19 5b 00 00         00 00 00 00 0
  1d 5b 00 00                  ff .end (operand)
if253
 :1e 5b 00 00               05 01 .if [terms=1]
  20 5b 00 00         5a 5b 00 00 .else
  24 5b 00 00               03 00 .var1 FLAGS
  26 5b 00 00                  01 .literal
  27 5b 00 00         21 03 00 00 801
  2b 5b 00 00                  ff .end (operand)
  2c 5b 00 00                  ff .end (operand)
  2e 5b 00 00                  02 .if-sign-nonzero
  2e 5b 00 00                  01 .literal
  2f 5b 00 00         03 00 00 00 3
  33 5b 00 00                  ff .end (operand)
  34 5b 00 00               01 01 .exec MapSwitch
  36 5b 00 00                     "orchard.map"

              6f 72 63 68 61 72 64 2e 
              6d 61 70 00 
  42 5b 00 00               03 00 .var1 FLAGS
  44 5b 00 00                  01 .literal
  45 5b 00 00         6d 00 00 00 109
  49 5b 00 00                  ff .end (operand)
  4a 5b 00 00                  ff .end (operand)
  4b 5b 00 00               03 00 .var1 FLAGS
  4d 5b 00 00                  01 .literal
  4e 5b 00 00         6e 00 00 00 110
  52 5b 00 00                  ff .end (operand)
  53 5b 00 00                  ff .end (operand)
  54 5b 00 00                  01 .literal
  55 5b 00 00         00 00 00 00 0
  59 5b 00 00                  ff .end (operand)
if254
 :5a 5b 00 00               05 01 .if [terms=1]
  5c 5b 00 00         97 5b 00 00 .else
  60 5b 00 00               03 00 .var1 FLAGS
  62 5b 00 00                  01 .literal
  63 5b 00 00         21 03 00 00 801
  67 5b 00 00                  ff .end (operand)
  68 5b 00 00                  ff .end (operand)
  6a 5b 00 00                  02 .if-sign-nonzero
  6a 5b 00 00                  01 .literal
  6b 5b 00 00         04 00 00 00 4
  6f 5b 00 00                  ff .end (operand)
  70 5b 00 00               01 01 .exec MapSwitch
  72 5b 00 00                     "greatfor.map"

              67 72 65 61 74 66 6f 72 
              2e 6d 61 70 00 
  7f 5b 00 00               03 00 .var1 FLAGS
  81 5b 00 00                  01 .literal
  82 5b 00 00         6d 00 00 00 109
  86 5b 00 00                  ff .end (operand)
  87 5b 00 00                  ff .end (operand)
  88 5b 00 00               03 00 .var1 FLAGS
  8a 5b 00 00                  01 .literal
  8b 5b 00 00         6e 00 00 00 110
  8f 5b 00 00                  ff .end (operand)
  90 5b 00 00                  ff .end (operand)
  91 5b 00 00                  01 .literal
  92 5b 00 00         00 00 00 00 0
  96 5b 00 00                  ff .end (operand)
if255
 :97 5b 00 00               05 01 .if [terms=1]
  99 5b 00 00         d3 5b 00 00 .else
  9d 5b 00 00               03 00 .var1 FLAGS
  9f 5b 00 00                  01 .literal
  a0 5b 00 00         21 03 00 00 801
  a4 5b 00 00                  ff .end (operand)
  a5 5b 00 00                  ff .end (operand)
  a7 5b 00 00                  02 .if-sign-nonzero
  a7 5b 00 00                  01 .literal
  a8 5b 00 00         05 00 00 00 5
  ac 5b 00 00                  ff .end (operand)
  ad 5b 00 00               01 01 .exec MapSwitch
  af 5b 00 00                     "morefor.map"

              6d 6f 72 65 66 6f 72 2e 
              6d 61 70 00 
  bb 5b 00 00               03 00 .var1 FLAGS
  bd 5b 00 00                  01 .literal
  be 5b 00 00         6d 00 00 00 109
  c2 5b 00 00                  ff .end (operand)
  c3 5b 00 00                  ff .end (operand)
  c4 5b 00 00               03 00 .var1 FLAGS
  c6 5b 00 00                  01 .literal
  c7 5b 00 00         6e 00 00 00 110
  cb 5b 00 00                  ff .end (operand)
  cc 5b 00 00                  ff .end (operand)
  cd 5b 00 00                  01 .literal
  ce 5b 00 00         00 00 00 00 0
  d2 5b 00 00                  ff .end (operand)
if256
 :d3 5b 00 00               05 01 .if [terms=1]
  d5 5b 00 00         10 5c 00 00 .else
  d9 5b 00 00               03 00 .var1 FLAGS
  db 5b 00 00                  01 .literal
  dc 5b 00 00         21 03 00 00 801
  e0 5b 00 00                  ff .end (operand)
  e1 5b 00 00                  ff .end (operand)
  e3 5b 00 00                  02 .if-sign-nonzero
  e3 5b 00 00                  01 .literal
  e4 5b 00 00         06 00 00 00 6
  e8 5b 00 00                  ff .end (operand)
  e9 5b 00 00               01 01 .exec MapSwitch
  eb 5b 00 00                     "overland.map"

              6f 76 65 72 6c 61 6e 64 
              2e 6d 61 70 00 
  f8 5b 00 00               03 00 .var1 FLAGS
  fa 5b 00 00                  01 .literal
  fb 5b 00 00         6d 00 00 00 109
  ff 5b 00 00                  ff .end (operand)
  00 5c 00 00                  ff .end (operand)
  01 5c 00 00               03 00 .var1 FLAGS
  03 5c 00 00                  01 .literal
  04 5c 00 00         6e 00 00 00 110
  08 5c 00 00                  ff .end (operand)
  09 5c 00 00                  ff .end (operand)
  0a 5c 00 00                  01 .literal
  0b 5c 00 00         00 00 00 00 0
  0f 5c 00 00                  ff .end (operand)
if257
 :10 5c 00 00               05 01 .if [terms=1]
  12 5c 00 00         4d 5c 00 00 .else
  16 5c 00 00               03 00 .var1 FLAGS
  18 5c 00 00                  01 .literal
  19 5c 00 00         21 03 00 00 801
  1d 5c 00 00                  ff .end (operand)
  1e 5c 00 00                  ff .end (operand)
  20 5c 00 00                  02 .if-sign-nonzero
  20 5c 00 00                  01 .literal
  21 5c 00 00         07 00 00 00 7
  25 5c 00 00                  ff .end (operand)
  26 5c 00 00               01 01 .exec MapSwitch
  28 5c 00 00                     "packtown.map"

              70 61 63 6b 74 6f 77 6e 
              2e 6d 61 70 00 
  35 5c 00 00               03 00 .var1 FLAGS
  37 5c 00 00                  01 .literal
  38 5c 00 00         6d 00 00 00 109
  3c 5c 00 00                  ff .end (operand)
  3d 5c 00 00                  ff .end (operand)
  3e 5c 00 00               03 00 .var1 FLAGS
  40 5c 00 00                  01 .literal
  41 5c 00 00         6e 00 00 00 110
  45 5c 00 00                  ff .end (operand)
  46 5c 00 00                  ff .end (operand)
  47 5c 00 00                  01 .literal
  48 5c 00 00         00 00 00 00 0
  4c 5c 00 00                  ff .end (operand)
if258
 :4d 5c 00 00               05 01 .if [terms=1]
  4f 5c 00 00         89 5c 00 00 .else
  53 5c 00 00               03 00 .var1 FLAGS
  55 5c 00 00                  01 .literal
  56 5c 00 00         21 03 00 00 801
  5a 5c 00 00                  ff .end (operand)
  5b 5c 00 00                  ff .end (operand)
  5d 5c 00 00                  02 .if-sign-nonzero
  5d 5c 00 00                  01 .literal
  5e 5c 00 00         08 00 00 00 8
  62 5c 00 00                  ff .end (operand)
  63 5c 00 00               01 01 .exec MapSwitch
  65 5c 00 00                     "kreegah.map"

              6b 72 65 65 67 61 68 2e 
              6d 61 70 00 
  71 5c 00 00               03 00 .var1 FLAGS
  73 5c 00 00                  01 .literal
  74 5c 00 00         6d 00 00 00 109
  78 5c 00 00                  ff .end (operand)
  79 5c 00 00                  ff .end (operand)
  7a 5c 00 00               03 00 .var1 FLAGS
  7c 5c 00 00                  01 .literal
  7d 5c 00 00         6e 00 00 00 110
  81 5c 00 00                  ff .end (operand)
  82 5c 00 00                  ff .end (operand)
  83 5c 00 00                  01 .literal
  84 5c 00 00         00 00 00 00 0
  88 5c 00 00                  ff .end (operand)
 :89 5c 00 00               01 3e .exec Quit
  8b 5c 00 00                     "You Win!"

              59 6f 75 20 57 69 6e 21 
              00 
::94 5c 00 00               01 17 .exec ChainEvent
  97 5c 00 00                  01 .literal
  98 5c 00 00         01 00 00 00 1
  9c 5c 00 00                  ff .end (operand)
  9d 5c 00 00                  ff .end (block)

.event 14
if259
*:9e 5c 00 00               05 03 .if [terms=3]
  a0 5c 00 00         92 60 00 00 .else
  a4 5c 00 00               03 00 .var1 FLAGS
  a6 5c 00 00                  01 .literal
  a7 5c 00 00         56 02 00 00 598
  ab 5c 00 00                  ff .end (operand)
  ac 5c 00 00                  ff .end (operand)
  ae 5c 00 00                  04 .if-sign-nonzero
  ae 5c 00 00                  01 .literal
  af 5c 00 00         00 00 00 00 0
  b3 5c 00 00                  ff .end (operand)
  b4 5c 00 00               03 00 .var1 FLAGS
  b6 5c 00 00                  01 .literal
  b7 5c 00 00         57 02 00 00 599
  bb 5c 00 00                  ff .end (operand)
  bc 5c 00 00                  ff .end (operand)
  be 5c 00 00                  04 .if-sign-nonzero
  be 5c 00 00                  01 .literal
  bf 5c 00 00         00 00 00 00 0
  c3 5c 00 00                  ff .end (operand)
  c4 5c 00 00               03 00 .var1 FLAGS
  c6 5c 00 00                  01 .literal
  c7 5c 00 00         58 02 00 00 600
  cb 5c 00 00                  ff .end (operand)
  cc 5c 00 00                  ff .end (operand)
  ce 5c 00 00                  04 .if-sign-nonzero
  ce 5c 00 00                  01 .literal
  cf 5c 00 00         00 00 00 00 0
  d3 5c 00 00                  ff .end (operand)
  d4 5c 00 00               01 5c .exec TextMenu
  d6 5c 00 00                  01 .literal
  d7 5c 00 00         1e 00 00 00 30
  db 5c 00 00                  ff .end (operand)
  dc 5c 00 00                  01 .literal
  dd 5c 00 00         1e 00 00 00 30
  e1 5c 00 00                  ff .end (operand)
  e2 5c 00 00                  01 .literal
  e3 5c 00 00         7f 02 00 00 639
  e7 5c 00 00                  ff .end (operand)
  e8 5c 00 00                  01 .literal
  e9 5c 00 00         01 00 00 00 1
  ed 5c 00 00                  ff .end (operand)
  ef 5c 00 00                     "Enemy 1"

              45 6e 65 6d 79 20 31 00 
  f7 5c 00 00                     "Enemy 2"

              45 6e 65 6d 79 20 32 00 
  ff 5c 00 00                     "Enemy 3"

              45 6e 65 6d 79 20 33 00 
  07 5d 00 00                  0a .switch
  08 5d 00 00               03 00 .var1 FLAGS
  0a 5d 00 00                  01 .literal
  0b 5d 00 00         7e 02 00 00 638
  0f 5d 00 00                  ff .end (operand)
  10 5d 00 00                  ff .end (operand)
  11 5d 00 00                  0b .case
  12 5d 00 00                  05 .group
  13 5d 00 00                  01 .literal
  14 5d 00 00         01 00 00 00 1
  18 5d 00 00                  ff .end (operand)
  19 5d 00 00                  ff .end (operand)
  1a 5d 00 00         81 5d 00 00 .case-end-address
  1e 5d 00 00                  0a .switch
  1f 5d 00 00               03 00 .var1 FLAGS
  21 5d 00 00                  01 .literal
  22 5d 00 00         7f 02 00 00 639
  26 5d 00 00                  ff .end (operand)
  27 5d 00 00                  ff .end (operand)
  28 5d 00 00                  0b .case
  29 5d 00 00                  05 .group
  2a 5d 00 00                  01 .literal
  2b 5d 00 00         01 00 00 00 1
  2f 5d 00 00                  ff .end (operand)
  30 5d 00 00                  ff .end (operand)
  31 5d 00 00         45 5d 00 00 .case-end-address
  35 5d 00 00               03 00 .var1 FLAGS
  37 5d 00 00                  01 .literal
  38 5d 00 00         80 02 00 00 640
  3c 5d 00 00                  ff .end (operand)
  3d 5d 00 00                  01 .set
  3e 5d 00 00                  01 .literal
  3f 5d 00 00         01 00 00 00 1
  43 5d 00 00                  ff .end (operand)
  44 5d 00 00                  ff .end (block)
 :45 5d 00 00                  0b .case
  46 5d 00 00                  05 .group
  47 5d 00 00                  01 .literal
  48 5d 00 00         02 00 00 00 2
  4c 5d 00 00                  ff .end (operand)
  4d 5d 00 00                  ff .end (operand)
  4e 5d 00 00         62 5d 00 00 .case-end-address
  52 5d 00 00               03 00 .var1 FLAGS
  54 5d 00 00                  01 .literal
  55 5d 00 00         80 02 00 00 640
  59 5d 00 00                  ff .end (operand)
  5a 5d 00 00                  01 .set
  5b 5d 00 00                  01 .literal
  5c 5d 00 00         02 00 00 00 2
  60 5d 00 00                  ff .end (operand)
  61 5d 00 00                  ff .end (block)
 :62 5d 00 00                  0b .case
  63 5d 00 00                  05 .group
  64 5d 00 00                  01 .literal
  65 5d 00 00         03 00 00 00 3
  69 5d 00 00                  ff .end (operand)
  6a 5d 00 00                  ff .end (operand)
  6b 5d 00 00         7f 5d 00 00 .case-end-address
  6f 5d 00 00               03 00 .var1 FLAGS
  71 5d 00 00                  01 .literal
  72 5d 00 00         80 02 00 00 640
  76 5d 00 00                  ff .end (operand)
  77 5d 00 00                  01 .set
  78 5d 00 00                  01 .literal
  79 5d 00 00         03 00 00 00 3
  7d 5d 00 00                  ff .end (operand)
  7e 5d 00 00                  ff .end (block)
 :7f 5d 00 00                  ff .end (switch)
  80 5d 00 00                  ff .end (block)
 :81 5d 00 00                  0b .case
  82 5d 00 00                  05 .group
  83 5d 00 00                  01 .literal
  84 5d 00 00         02 00 00 00 2
  88 5d 00 00                  ff .end (operand)
  89 5d 00 00                  ff .end (operand)
  8a 5d 00 00         f1 5d 00 00 .case-end-address
  8e 5d 00 00                  0a .switch
  8f 5d 00 00               03 00 .var1 FLAGS
  91 5d 00 00                  01 .literal
  92 5d 00 00         7f 02 00 00 639
  96 5d 00 00                  ff .end (operand)
  97 5d 00 00                  ff .end (operand)
  98 5d 00 00                  0b .case
  99 5d 00 00                  05 .group
  9a 5d 00 00                  01 .literal
  9b 5d 00 00         01 00 00 00 1
  9f 5d 00 00                  ff .end (operand)
  a0 5d 00 00                  ff .end (operand)
  a1 5d 00 00         b5 5d 00 00 .case-end-address
  a5 5d 00 00               03 00 .var1 FLAGS
  a7 5d 00 00                  01 .literal
  a8 5d 00 00         81 02 00 00 641
  ac 5d 00 00                  ff .end (operand)
  ad 5d 00 00                  01 .set
  ae 5d 00 00                  01 .literal
  af 5d 00 00         01 00 00 00 1
  b3 5d 00 00                  ff .end (operand)
  b4 5d 00 00                  ff .end (block)
 :b5 5d 00 00                  0b .case
  b6 5d 00 00                  05 .group
  b7 5d 00 00                  01 .literal
  b8 5d 00 00         02 00 00 00 2
  bc 5d 00 00                  ff .end (operand)
  bd 5d 00 00                  ff .end (operand)
  be 5d 00 00         d2 5d 00 00 .case-end-address
  c2 5d 00 00               03 00 .var1 FLAGS
  c4 5d 00 00                  01 .literal
  c5 5d 00 00         81 02 00 00 641
  c9 5d 00 00                  ff .end (operand)
  ca 5d 00 00                  01 .set
  cb 5d 00 00                  01 .literal
  cc 5d 00 00         02 00 00 00 2
  d0 5d 00 00                  ff .end (operand)
  d1 5d 00 00                  ff .end (block)
 :d2 5d 00 00                  0b .case
  d3 5d 00 00                  05 .group
  d4 5d 00 00                  01 .literal
  d5 5d 00 00         03 00 00 00 3
  d9 5d 00 00                  ff .end (operand)
  da 5d 00 00                  ff .end (operand)
  db 5d 00 00         ef 5d 00 00 .case-end-address
  df 5d 00 00               03 00 .var1 FLAGS
  e1 5d 00 00                  01 .literal
  e2 5d 00 00         81 02 00 00 641
  e6 5d 00 00                  ff .end (operand)
  e7 5d 00 00                  01 .set
  e8 5d 00 00                  01 .literal
  e9 5d 00 00         03 00 00 00 3
  ed 5d 00 00                  ff .end (operand)
  ee 5d 00 00                  ff .end (block)
 :ef 5d 00 00                  ff .end (switch)
  f0 5d 00 00                  ff .end (block)
 :f1 5d 00 00                  0b .case
  f2 5d 00 00                  05 .group
  f3 5d 00 00                  01 .literal
  f4 5d 00 00         03 00 00 00 3
  f8 5d 00 00                  ff .end (operand)
  f9 5d 00 00                  ff .end (operand)
  fa 5d 00 00         61 5e 00 00 .case-end-address
  fe 5d 00 00                  0a .switch
  ff 5d 00 00               03 00 .var1 FLAGS
  01 5e 00 00                  01 .literal
  02 5e 00 00         7f 02 00 00 639
  06 5e 00 00                  ff .end (operand)
  07 5e 00 00                  ff .end (operand)
  08 5e 00 00                  0b .case
  09 5e 00 00                  05 .group
  0a 5e 00 00                  01 .literal
  0b 5e 00 00         01 00 00 00 1
  0f 5e 00 00                  ff .end (operand)
  10 5e 00 00                  ff .end (operand)
  11 5e 00 00         25 5e 00 00 .case-end-address
  15 5e 00 00               03 00 .var1 FLAGS
  17 5e 00 00                  01 .literal
  18 5e 00 00         82 02 00 00 642
  1c 5e 00 00                  ff .end (operand)
  1d 5e 00 00                  01 .set
  1e 5e 00 00                  01 .literal
  1f 5e 00 00         01 00 00 00 1
  23 5e 00 00                  ff .end (operand)
  24 5e 00 00                  ff .end (block)
 :25 5e 00 00                  0b .case
  26 5e 00 00                  05 .group
  27 5e 00 00                  01 .literal
  28 5e 00 00         02 00 00 00 2
  2c 5e 00 00                  ff .end (operand)
  2d 5e 00 00                  ff .end (operand)
  2e 5e 00 00         42 5e 00 00 .case-end-address
  32 5e 00 00               03 00 .var1 FLAGS
  34 5e 00 00                  01 .literal
  35 5e 00 00         82 02 00 00 642
  39 5e 00 00                  ff .end (operand)
  3a 5e 00 00                  01 .set
  3b 5e 00 00                  01 .literal
  3c 5e 00 00         02 00 00 00 2
  40 5e 00 00                  ff .end (operand)
  41 5e 00 00                  ff .end (block)
 :42 5e 00 00                  0b .case
  43 5e 00 00                  05 .group
  44 5e 00 00                  01 .literal
  45 5e 00 00         03 00 00 00 3
  49 5e 00 00                  ff .end (operand)
  4a 5e 00 00                  ff .end (operand)
  4b 5e 00 00         5f 5e 00 00 .case-end-address
  4f 5e 00 00               03 00 .var1 FLAGS
  51 5e 00 00                  01 .literal
  52 5e 00 00         82 02 00 00 642
  56 5e 00 00                  ff .end (operand)
  57 5e 00 00                  01 .set
  58 5e 00 00                  01 .literal
  59 5e 00 00         03 00 00 00 3
  5d 5e 00 00                  ff .end (operand)
  5e 5e 00 00                  ff .end (block)
 :5f 5e 00 00                  ff .end (switch)
  60 5e 00 00                  ff .end (block)
 :61 5e 00 00                  0b .case
  62 5e 00 00                  05 .group
  63 5e 00 00                  01 .literal
  64 5e 00 00         04 00 00 00 4
  68 5e 00 00                  ff .end (operand)
  69 5e 00 00                  ff .end (operand)
  6a 5e 00 00         d1 5e 00 00 .case-end-address
  6e 5e 00 00                  0a .switch
  6f 5e 00 00               03 00 .var1 FLAGS
  71 5e 00 00                  01 .literal
  72 5e 00 00         7f 02 00 00 639
  76 5e 00 00                  ff .end (operand)
  77 5e 00 00                  ff .end (operand)
  78 5e 00 00                  0b .case
  79 5e 00 00                  05 .group
  7a 5e 00 00                  01 .literal
  7b 5e 00 00         01 00 00 00 1
  7f 5e 00 00                  ff .end (operand)
  80 5e 00 00                  ff .end (operand)
  81 5e 00 00         95 5e 00 00 .case-end-address
  85 5e 00 00               03 00 .var1 FLAGS
  87 5e 00 00                  01 .literal
  88 5e 00 00         83 02 00 00 643
  8c 5e 00 00                  ff .end (operand)
  8d 5e 00 00                  01 .set
  8e 5e 00 00                  01 .literal
  8f 5e 00 00         01 00 00 00 1
  93 5e 00 00                  ff .end (operand)
  94 5e 00 00                  ff .end (block)
 :95 5e 00 00                  0b .case
  96 5e 00 00                  05 .group
  97 5e 00 00                  01 .literal
  98 5e 00 00         02 00 00 00 2
  9c 5e 00 00                  ff .end (operand)
  9d 5e 00 00                  ff .end (operand)
  9e 5e 00 00         b2 5e 00 00 .case-end-address
  a2 5e 00 00               03 00 .var1 FLAGS
  a4 5e 00 00                  01 .literal
  a5 5e 00 00         83 02 00 00 643
  a9 5e 00 00                  ff .end (operand)
  aa 5e 00 00                  01 .set
  ab 5e 00 00                  01 .literal
  ac 5e 00 00         02 00 00 00 2
  b0 5e 00 00                  ff .end (operand)
  b1 5e 00 00                  ff .end (block)
 :b2 5e 00 00                  0b .case
  b3 5e 00 00                  05 .group
  b4 5e 00 00                  01 .literal
  b5 5e 00 00         03 00 00 00 3
  b9 5e 00 00                  ff .end (operand)
  ba 5e 00 00                  ff .end (operand)
  bb 5e 00 00         cf 5e 00 00 .case-end-address
  bf 5e 00 00               03 00 .var1 FLAGS
  c1 5e 00 00                  01 .literal
  c2 5e 00 00         83 02 00 00 643
  c6 5e 00 00                  ff .end (operand)
  c7 5e 00 00                  01 .set
  c8 5e 00 00                  01 .literal
  c9 5e 00 00         03 00 00 00 3
  cd 5e 00 00                  ff .end (operand)
  ce 5e 00 00                  ff .end (block)
 :cf 5e 00 00                  ff .end (switch)
  d0 5e 00 00                  ff .end (block)
 :d1 5e 00 00                  0b .case
  d2 5e 00 00                  05 .group
  d3 5e 00 00                  01 .literal
  d4 5e 00 00         05 00 00 00 5
  d8 5e 00 00                  ff .end (operand)
  d9 5e 00 00                  ff .end (operand)
  da 5e 00 00         41 5f 00 00 .case-end-address
  de 5e 00 00                  0a .switch
  df 5e 00 00               03 00 .var1 FLAGS
  e1 5e 00 00                  01 .literal
  e2 5e 00 00         7f 02 00 00 639
  e6 5e 00 00                  ff .end (operand)
  e7 5e 00 00                  ff .end (operand)
  e8 5e 00 00                  0b .case
  e9 5e 00 00                  05 .group
  ea 5e 00 00                  01 .literal
  eb 5e 00 00         01 00 00 00 1
  ef 5e 00 00                  ff .end (operand)
  f0 5e 00 00                  ff .end (operand)
  f1 5e 00 00         05 5f 00 00 .case-end-address
  f5 5e 00 00               03 00 .var1 FLAGS
  f7 5e 00 00                  01 .literal
  f8 5e 00 00         84 02 00 00 644
  fc 5e 00 00                  ff .end (operand)
  fd 5e 00 00                  01 .set
  fe 5e 00 00                  01 .literal
  ff 5e 00 00         01 00 00 00 1
  03 5f 00 00                  ff .end (operand)
  04 5f 00 00                  ff .end (block)
 :05 5f 00 00                  0b .case
  06 5f 00 00                  05 .group
  07 5f 00 00                  01 .literal
  08 5f 00 00         02 00 00 00 2
  0c 5f 00 00                  ff .end (operand)
  0d 5f 00 00                  ff .end (operand)
  0e 5f 00 00         22 5f 00 00 .case-end-address
  12 5f 00 00               03 00 .var1 FLAGS
  14 5f 00 00                  01 .literal
  15 5f 00 00         84 02 00 00 644
  19 5f 00 00                  ff .end (operand)
  1a 5f 00 00                  01 .set
  1b 5f 00 00                  01 .literal
  1c 5f 00 00         02 00 00 00 2
  20 5f 00 00                  ff .end (operand)
  21 5f 00 00                  ff .end (block)
 :22 5f 00 00                  0b .case
  23 5f 00 00                  05 .group
  24 5f 00 00                  01 .literal
  25 5f 00 00         03 00 00 00 3
  29 5f 00 00                  ff .end (operand)
  2a 5f 00 00                  ff .end (operand)
  2b 5f 00 00         3f 5f 00 00 .case-end-address
  2f 5f 00 00               03 00 .var1 FLAGS
  31 5f 00 00                  01 .literal
  32 5f 00 00         84 02 00 00 644
  36 5f 00 00                  ff .end (operand)
  37 5f 00 00                  01 .set
  38 5f 00 00                  01 .literal
  39 5f 00 00         03 00 00 00 3
  3d 5f 00 00                  ff .end (operand)
  3e 5f 00 00                  ff .end (block)
 :3f 5f 00 00                  ff .end (switch)
  40 5f 00 00                  ff .end (block)
 :41 5f 00 00                  0b .case
  42 5f 00 00                  05 .group
  43 5f 00 00                  01 .literal
  44 5f 00 00         06 00 00 00 6
  48 5f 00 00                  ff .end (operand)
  49 5f 00 00                  ff .end (operand)
  4a 5f 00 00         b1 5f 00 00 .case-end-address
  4e 5f 00 00                  0a .switch
  4f 5f 00 00               03 00 .var1 FLAGS
  51 5f 00 00                  01 .literal
  52 5f 00 00         7f 02 00 00 639
  56 5f 00 00                  ff .end (operand)
  57 5f 00 00                  ff .end (operand)
  58 5f 00 00                  0b .case
  59 5f 00 00                  05 .group
  5a 5f 00 00                  01 .literal
  5b 5f 00 00         01 00 00 00 1
  5f 5f 00 00                  ff .end (operand)
  60 5f 00 00                  ff .end (operand)
  61 5f 00 00         75 5f 00 00 .case-end-address
  65 5f 00 00               03 00 .var1 FLAGS
  67 5f 00 00                  01 .literal
  68 5f 00 00         85 02 00 00 645
  6c 5f 00 00                  ff .end (operand)
  6d 5f 00 00                  01 .set
  6e 5f 00 00                  01 .literal
  6f 5f 00 00         01 00 00 00 1
  73 5f 00 00                  ff .end (operand)
  74 5f 00 00                  ff .end (block)
 :75 5f 00 00                  0b .case
  76 5f 00 00                  05 .group
  77 5f 00 00                  01 .literal
  78 5f 00 00         02 00 00 00 2
  7c 5f 00 00                  ff .end (operand)
  7d 5f 00 00                  ff .end (operand)
  7e 5f 00 00         92 5f 00 00 .case-end-address
  82 5f 00 00               03 00 .var1 FLAGS
  84 5f 00 00                  01 .literal
  85 5f 00 00         85 02 00 00 645
  89 5f 00 00                  ff .end (operand)
  8a 5f 00 00                  01 .set
  8b 5f 00 00                  01 .literal
  8c 5f 00 00         02 00 00 00 2
  90 5f 00 00                  ff .end (operand)
  91 5f 00 00                  ff .end (block)
 :92 5f 00 00                  0b .case
  93 5f 00 00                  05 .group
  94 5f 00 00                  01 .literal
  95 5f 00 00         03 00 00 00 3
  99 5f 00 00                  ff .end (operand)
  9a 5f 00 00                  ff .end (operand)
  9b 5f 00 00         af 5f 00 00 .case-end-address
  9f 5f 00 00               03 00 .var1 FLAGS
  a1 5f 00 00                  01 .literal
  a2 5f 00 00         85 02 00 00 645
  a6 5f 00 00                  ff .end (operand)
  a7 5f 00 00                  01 .set
  a8 5f 00 00                  01 .literal
  a9 5f 00 00         03 00 00 00 3
  ad 5f 00 00                  ff .end (operand)
  ae 5f 00 00                  ff .end (block)
 :af 5f 00 00                  ff .end (switch)
  b0 5f 00 00                  ff .end (block)
 :b1 5f 00 00                  0b .case
  b2 5f 00 00                  05 .group
  b3 5f 00 00                  01 .literal
  b4 5f 00 00         07 00 00 00 7
  b8 5f 00 00                  ff .end (operand)
  b9 5f 00 00                  ff .end (operand)
  ba 5f 00 00         21 60 00 00 .case-end-address
  be 5f 00 00                  0a .switch
  bf 5f 00 00               03 00 .var1 FLAGS
  c1 5f 00 00                  01 .literal
  c2 5f 00 00         7f 02 00 00 639
  c6 5f 00 00                  ff .end (operand)
  c7 5f 00 00                  ff .end (operand)
  c8 5f 00 00                  0b .case
  c9 5f 00 00                  05 .group
  ca 5f 00 00                  01 .literal
  cb 5f 00 00         01 00 00 00 1
  cf 5f 00 00                  ff .end (operand)
  d0 5f 00 00                  ff .end (operand)
  d1 5f 00 00         e5 5f 00 00 .case-end-address
  d5 5f 00 00               03 00 .var1 FLAGS
  d7 5f 00 00                  01 .literal
  d8 5f 00 00         86 02 00 00 646
  dc 5f 00 00                  ff .end (operand)
  dd 5f 00 00                  01 .set
  de 5f 00 00                  01 .literal
  df 5f 00 00         01 00 00 00 1
  e3 5f 00 00                  ff .end (operand)
  e4 5f 00 00                  ff .end (block)
 :e5 5f 00 00                  0b .case
  e6 5f 00 00                  05 .group
  e7 5f 00 00                  01 .literal
  e8 5f 00 00         02 00 00 00 2
  ec 5f 00 00                  ff .end (operand)
  ed 5f 00 00                  ff .end (operand)
  ee 5f 00 00         02 60 00 00 .case-end-address
  f2 5f 00 00               03 00 .var1 FLAGS
  f4 5f 00 00                  01 .literal
  f5 5f 00 00         86 02 00 00 646
  f9 5f 00 00                  ff .end (operand)
  fa 5f 00 00                  01 .set
  fb 5f 00 00                  01 .literal
  fc 5f 00 00         02 00 00 00 2
  00 60 00 00                  ff .end (operand)
  01 60 00 00                  ff .end (block)
 :02 60 00 00                  0b .case
  03 60 00 00                  05 .group
  04 60 00 00                  01 .literal
  05 60 00 00         03 00 00 00 3
  09 60 00 00                  ff .end (operand)
  0a 60 00 00                  ff .end (operand)
  0b 60 00 00         1f 60 00 00 .case-end-address
  0f 60 00 00               03 00 .var1 FLAGS
  11 60 00 00                  01 .literal
  12 60 00 00         86 02 00 00 646
  16 60 00 00                  ff .end (operand)
  17 60 00 00                  01 .set
  18 60 00 00                  01 .literal
  19 60 00 00         03 00 00 00 3
  1d 60 00 00                  ff .end (operand)
  1e 60 00 00                  ff .end (block)
 :1f 60 00 00                  ff .end (switch)
  20 60 00 00                  ff .end (block)
 :21 60 00 00                  0b .case
  22 60 00 00                  05 .group
  23 60 00 00                  01 .literal
  24 60 00 00         08 00 00 00 8
  28 60 00 00                  ff .end (operand)
  29 60 00 00                  ff .end (operand)
  2a 60 00 00         91 60 00 00 .case-end-address
  2e 60 00 00                  0a .switch
  2f 60 00 00               03 00 .var1 FLAGS
  31 60 00 00                  01 .literal
  32 60 00 00         7f 02 00 00 639
  36 60 00 00                  ff .end (operand)
  37 60 00 00                  ff .end (operand)
  38 60 00 00                  0b .case
  39 60 00 00                  05 .group
  3a 60 00 00                  01 .literal
  3b 60 00 00         01 00 00 00 1
  3f 60 00 00                  ff .end (operand)
  40 60 00 00                  ff .end (operand)
  41 60 00 00         55 60 00 00 .case-end-address
  45 60 00 00               03 00 .var1 FLAGS
  47 60 00 00                  01 .literal
  48 60 00 00         87 02 00 00 647
  4c 60 00 00                  ff .end (operand)
  4d 60 00 00                  01 .set
  4e 60 00 00                  01 .literal
  4f 60 00 00         01 00 00 00 1
  53 60 00 00                  ff .end (operand)
  54 60 00 00                  ff .end (block)
 :55 60 00 00                  0b .case
  56 60 00 00                  05 .group
  57 60 00 00                  01 .literal
  58 60 00 00         02 00 00 00 2
  5c 60 00 00                  ff .end (operand)
  5d 60 00 00                  ff .end (operand)
  5e 60 00 00         72 60 00 00 .case-end-address
  62 60 00 00               03 00 .var1 FLAGS
  64 60 00 00                  01 .literal
  65 60 00 00         87 02 00 00 647
  69 60 00 00                  ff .end (operand)
  6a 60 00 00                  01 .set
  6b 60 00 00                  01 .literal
  6c 60 00 00         02 00 00 00 2
  70 60 00 00                  ff .end (operand)
  71 60 00 00                  ff .end (block)
 :72 60 00 00                  0b .case
  73 60 00 00                  05 .group
  74 60 00 00                  01 .literal
  75 60 00 00         03 00 00 00 3
  79 60 00 00                  ff .end (operand)
  7a 60 00 00                  ff .end (operand)
  7b 60 00 00         8f 60 00 00 .case-end-address
  7f 60 00 00               03 00 .var1 FLAGS
  81 60 00 00                  01 .literal
  82 60 00 00         87 02 00 00 647
  86 60 00 00                  ff .end (operand)
  87 60 00 00                  01 .set
  88 60 00 00                  01 .literal
  89 60 00 00         03 00 00 00 3
  8d 60 00 00                  ff .end (operand)
  8e 60 00 00                  ff .end (block)
 :8f 60 00 00                  ff .end (switch)
  90 60 00 00                  ff .end (block)
 :91 60 00 00                  ff .end (switch)
if260
::92 60 00 00               05 03 .if [terms=3]
  94 60 00 00         96 63 00 00 .else
  98 60 00 00               03 00 .var1 FLAGS
  9a 60 00 00                  01 .literal
  9b 60 00 00         56 02 00 00 598
  9f 60 00 00                  ff .end (operand)
  a0 60 00 00                  ff .end (operand)
  a2 60 00 00                  02 .if-sign-nonzero
  a2 60 00 00                  01 .literal
  a3 60 00 00         00 00 00 00 0
  a7 60 00 00                  ff .end (operand)
  a8 60 00 00               03 00 .var1 FLAGS
  aa 60 00 00                  01 .literal
  ab 60 00 00         57 02 00 00 599
  af 60 00 00                  ff .end (operand)
  b0 60 00 00                  ff .end (operand)
  b2 60 00 00                  04 .if-sign-nonzero
  b2 60 00 00                  01 .literal
  b3 60 00 00         00 00 00 00 0
  b7 60 00 00                  ff .end (operand)
  b8 60 00 00               03 00 .var1 FLAGS
  ba 60 00 00                  01 .literal
  bb 60 00 00         58 02 00 00 600
  bf 60 00 00                  ff .end (operand)
  c0 60 00 00                  ff .end (operand)
  c2 60 00 00                  04 .if-sign-nonzero
  c2 60 00 00                  01 .literal
  c3 60 00 00         00 00 00 00 0
  c7 60 00 00                  ff .end (operand)
  c8 60 00 00               01 5c .exec TextMenu
  ca 60 00 00                  01 .literal
  cb 60 00 00         1e 00 00 00 30
  cf 60 00 00                  ff .end (operand)
  d0 60 00 00                  01 .literal
  d1 60 00 00         1e 00 00 00 30
  d5 60 00 00                  ff .end (operand)
  d6 60 00 00                  01 .literal
  d7 60 00 00         7f 02 00 00 639
  db 60 00 00                  ff .end (operand)
  dc 60 00 00                  01 .literal
  dd 60 00 00         01 00 00 00 1
  e1 60 00 00                  ff .end (operand)
  e3 60 00 00                     "Enemy 2"

              45 6e 65 6d 79 20 32 00 
  eb 60 00 00                     "Enemy 3"

              45 6e 65 6d 79 20 33 00 
  f3 60 00 00                  0a .switch
  f4 60 00 00               03 00 .var1 FLAGS
  f6 60 00 00                  01 .literal
  f7 60 00 00         7e 02 00 00 638
  fb 60 00 00                  ff .end (operand)
  fc 60 00 00                  ff .end (operand)
  fd 60 00 00                  0b .case
  fe 60 00 00                  05 .group
  ff 60 00 00                  01 .literal
  00 61 00 00         01 00 00 00 1
  04 61 00 00                  ff .end (operand)
  05 61 00 00                  ff .end (operand)
  06 61 00 00         50 61 00 00 .case-end-address
  0a 61 00 00                  0a .switch
  0b 61 00 00               03 00 .var1 FLAGS
  0d 61 00 00                  01 .literal
  0e 61 00 00         7f 02 00 00 639
  12 61 00 00                  ff .end (operand)
  13 61 00 00                  ff .end (operand)
  14 61 00 00                  0b .case
  15 61 00 00                  05 .group
  16 61 00 00                  01 .literal
  17 61 00 00         01 00 00 00 1
  1b 61 00 00                  ff .end (operand)
  1c 61 00 00                  ff .end (operand)
  1d 61 00 00         31 61 00 00 .case-end-address
  21 61 00 00               03 00 .var1 FLAGS
  23 61 00 00                  01 .literal
  24 61 00 00         80 02 00 00 640
  28 61 00 00                  ff .end (operand)
  29 61 00 00                  01 .set
  2a 61 00 00                  01 .literal
  2b 61 00 00         02 00 00 00 2
  2f 61 00 00                  ff .end (operand)
  30 61 00 00                  ff .end (block)
 :31 61 00 00                  0b .case
  32 61 00 00                  05 .group
  33 61 00 00                  01 .literal
  34 61 00 00         02 00 00 00 2
  38 61 00 00                  ff .end (operand)
  39 61 00 00                  ff .end (operand)
  3a 61 00 00         4e 61 00 00 .case-end-address
  3e 61 00 00               03 00 .var1 FLAGS
  40 61 00 00                  01 .literal
  41 61 00 00         80 02 00 00 640
  45 61 00 00                  ff .end (operand)
  46 61 00 00                  01 .set
  47 61 00 00                  01 .literal
  48 61 00 00         03 00 00 00 3
  4c 61 00 00                  ff .end (operand)
  4d 61 00 00                  ff .end (block)
 :4e 61 00 00                  ff .end (switch)
  4f 61 00 00                  ff .end (block)
 :50 61 00 00                  0b .case
  51 61 00 00                  05 .group
  52 61 00 00                  01 .literal
  53 61 00 00         02 00 00 00 2
  57 61 00 00                  ff .end (operand)
  58 61 00 00                  ff .end (operand)
  59 61 00 00         a3 61 00 00 .case-end-address
  5d 61 00 00                  0a .switch
  5e 61 00 00               03 00 .var1 FLAGS
  60 61 00 00                  01 .literal
  61 61 00 00         7f 02 00 00 639
  65 61 00 00                  ff .end (operand)
  66 61 00 00                  ff .end (operand)
  67 61 00 00                  0b .case
  68 61 00 00                  05 .group
  69 61 00 00                  01 .literal
  6a 61 00 00         01 00 00 00 1
  6e 61 00 00                  ff .end (operand)
  6f 61 00 00                  ff .end (operand)
  70 61 00 00         84 61 00 00 .case-end-address
  74 61 00 00               03 00 .var1 FLAGS
  76 61 00 00                  01 .literal
  77 61 00 00         81 02 00 00 641
  7b 61 00 00                  ff .end (operand)
  7c 61 00 00                  01 .set
  7d 61 00 00                  01 .literal
  7e 61 00 00         02 00 00 00 2
  82 61 00 00                  ff .end (operand)
  83 61 00 00                  ff .end (block)
 :84 61 00 00                  0b .case
  85 61 00 00                  05 .group
  86 61 00 00                  01 .literal
  87 61 00 00         02 00 00 00 2
  8b 61 00 00                  ff .end (operand)
  8c 61 00 00                  ff .end (operand)
  8d 61 00 00         a1 61 00 00 .case-end-address
  91 61 00 00               03 00 .var1 FLAGS
  93 61 00 00                  01 .literal
  94 61 00 00         81 02 00 00 641
  98 61 00 00                  ff .end (operand)
  99 61 00 00                  01 .set
  9a 61 00 00                  01 .literal
  9b 61 00 00         03 00 00 00 3
  9f 61 00 00                  ff .end (operand)
  a0 61 00 00                  ff .end (block)
 :a1 61 00 00                  ff .end (switch)
  a2 61 00 00                  ff .end (block)
 :a3 61 00 00                  0b .case
  a4 61 00 00                  05 .group
  a5 61 00 00                  01 .literal
  a6 61 00 00         03 00 00 00 3
  aa 61 00 00                  ff .end (operand)
  ab 61 00 00                  ff .end (operand)
  ac 61 00 00         f6 61 00 00 .case-end-address
  b0 61 00 00                  0a .switch
  b1 61 00 00               03 00 .var1 FLAGS
  b3 61 00 00                  01 .literal
  b4 61 00 00         7f 02 00 00 639
  b8 61 00 00                  ff .end (operand)
  b9 61 00 00                  ff .end (operand)
  ba 61 00 00                  0b .case
  bb 61 00 00                  05 .group
  bc 61 00 00                  01 .literal
  bd 61 00 00         01 00 00 00 1
  c1 61 00 00                  ff .end (operand)
  c2 61 00 00                  ff .end (operand)
  c3 61 00 00         d7 61 00 00 .case-end-address
  c7 61 00 00               03 00 .var1 FLAGS
  c9 61 00 00                  01 .literal
  ca 61 00 00         82 02 00 00 642
  ce 61 00 00                  ff .end (operand)
  cf 61 00 00                  01 .set
  d0 61 00 00                  01 .literal
  d1 61 00 00         02 00 00 00 2
  d5 61 00 00                  ff .end (operand)
  d6 61 00 00                  ff .end (block)
 :d7 61 00 00                  0b .case
  d8 61 00 00                  05 .group
  d9 61 00 00                  01 .literal
  da 61 00 00         02 00 00 00 2
  de 61 00 00                  ff .end (operand)
  df 61 00 00                  ff .end (operand)
  e0 61 00 00         f4 61 00 00 .case-end-address
  e4 61 00 00               03 00 .var1 FLAGS
  e6 61 00 00                  01 .literal
  e7 61 00 00         82 02 00 00 642
  eb 61 00 00                  ff .end (operand)
  ec 61 00 00                  01 .set
  ed 61 00 00                  01 .literal
  ee 61 00 00         03 00 00 00 3
  f2 61 00 00                  ff .end (operand)
  f3 61 00 00                  ff .end (block)
 :f4 61 00 00                  ff .end (switch)
  f5 61 00 00                  ff .end (block)
 :f6 61 00 00                  0b .case
  f7 61 00 00                  05 .group
  f8 61 00 00                  01 .literal
  f9 61 00 00         04 00 00 00 4
  fd 61 00 00                  ff .end (operand)
  fe 61 00 00                  ff .end (operand)
  ff 61 00 00         49 62 00 00 .case-end-address
  03 62 00 00                  0a .switch
  04 62 00 00               03 00 .var1 FLAGS
  06 62 00 00                  01 .literal
  07 62 00 00         7f 02 00 00 639
  0b 62 00 00                  ff .end (operand)
  0c 62 00 00                  ff .end (operand)
  0d 62 00 00                  0b .case
  0e 62 00 00                  05 .group
  0f 62 00 00                  01 .literal
  10 62 00 00         01 00 00 00 1
  14 62 00 00                  ff .end (operand)
  15 62 00 00                  ff .end (operand)
  16 62 00 00         2a 62 00 00 .case-end-address
  1a 62 00 00               03 00 .var1 FLAGS
  1c 62 00 00                  01 .literal
  1d 62 00 00         83 02 00 00 643
  21 62 00 00                  ff .end (operand)
  22 62 00 00                  01 .set
  23 62 00 00                  01 .literal
  24 62 00 00         02 00 00 00 2
  28 62 00 00                  ff .end (operand)
  29 62 00 00                  ff .end (block)
 :2a 62 00 00                  0b .case
  2b 62 00 00                  05 .group
  2c 62 00 00                  01 .literal
  2d 62 00 00         02 00 00 00 2
  31 62 00 00                  ff .end (operand)
  32 62 00 00                  ff .end (operand)
  33 62 00 00         47 62 00 00 .case-end-address
  37 62 00 00               03 00 .var1 FLAGS
  39 62 00 00                  01 .literal
  3a 62 00 00         83 02 00 00 643
  3e 62 00 00                  ff .end (operand)
  3f 62 00 00                  01 .set
  40 62 00 00                  01 .literal
  41 62 00 00         03 00 00 00 3
  45 62 00 00                  ff .end (operand)
  46 62 00 00                  ff .end (block)
 :47 62 00 00                  ff .end (switch)
  48 62 00 00                  ff .end (block)
 :49 62 00 00                  0b .case
  4a 62 00 00                  05 .group
  4b 62 00 00                  01 .literal
  4c 62 00 00         05 00 00 00 5
  50 62 00 00                  ff .end (operand)
  51 62 00 00                  ff .end (operand)
  52 62 00 00         9c 62 00 00 .case-end-address
  56 62 00 00                  0a .switch
  57 62 00 00               03 00 .var1 FLAGS
  59 62 00 00                  01 .literal
  5a 62 00 00         7f 02 00 00 639
  5e 62 00 00                  ff .end (operand)
  5f 62 00 00                  ff .end (operand)
  60 62 00 00                  0b .case
  61 62 00 00                  05 .group
  62 62 00 00                  01 .literal
  63 62 00 00         01 00 00 00 1
  67 62 00 00                  ff .end (operand)
  68 62 00 00                  ff .end (operand)
  69 62 00 00         7d 62 00 00 .case-end-address
  6d 62 00 00               03 00 .var1 FLAGS
  6f 62 00 00                  01 .literal
  70 62 00 00         84 02 00 00 644
  74 62 00 00                  ff .end (operand)
  75 62 00 00                  01 .set
  76 62 00 00                  01 .literal
  77 62 00 00         02 00 00 00 2
  7b 62 00 00                  ff .end (operand)
  7c 62 00 00                  ff .end (block)
 :7d 62 00 00                  0b .case
  7e 62 00 00                  05 .group
  7f 62 00 00                  01 .literal
  80 62 00 00         02 00 00 00 2
  84 62 00 00                  ff .end (operand)
  85 62 00 00                  ff .end (operand)
  86 62 00 00         9a 62 00 00 .case-end-address
  8a 62 00 00               03 00 .var1 FLAGS
  8c 62 00 00                  01 .literal
  8d 62 00 00         84 02 00 00 644
  91 62 00 00                  ff .end (operand)
  92 62 00 00                  01 .set
  93 62 00 00                  01 .literal
  94 62 00 00         03 00 00 00 3
  98 62 00 00                  ff .end (operand)
  99 62 00 00                  ff .end (block)
 :9a 62 00 00                  ff .end (switch)
  9b 62 00 00                  ff .end (block)
 :9c 62 00 00                  0b .case
  9d 62 00 00                  05 .group
  9e 62 00 00                  01 .literal
  9f 62 00 00         06 00 00 00 6
  a3 62 00 00                  ff .end (operand)
  a4 62 00 00                  ff .end (operand)
  a5 62 00 00         ef 62 00 00 .case-end-address
  a9 62 00 00                  0a .switch
  aa 62 00 00               03 00 .var1 FLAGS
  ac 62 00 00                  01 .literal
  ad 62 00 00         7f 02 00 00 639
  b1 62 00 00                  ff .end (operand)
  b2 62 00 00                  ff .end (operand)
  b3 62 00 00                  0b .case
  b4 62 00 00                  05 .group
  b5 62 00 00                  01 .literal
  b6 62 00 00         01 00 00 00 1
  ba 62 00 00                  ff .end (operand)
  bb 62 00 00                  ff .end (operand)
  bc 62 00 00         d0 62 00 00 .case-end-address
  c0 62 00 00               03 00 .var1 FLAGS
  c2 62 00 00                  01 .literal
  c3 62 00 00         85 02 00 00 645
  c7 62 00 00                  ff .end (operand)
  c8 62 00 00                  01 .set
  c9 62 00 00                  01 .literal
  ca 62 00 00         02 00 00 00 2
  ce 62 00 00                  ff .end (operand)
  cf 62 00 00                  ff .end (block)
 :d0 62 00 00                  0b .case
  d1 62 00 00                  05 .group
  d2 62 00 00                  01 .literal
  d3 62 00 00         02 00 00 00 2
  d7 62 00 00                  ff .end (operand)
  d8 62 00 00                  ff .end (operand)
  d9 62 00 00         ed 62 00 00 .case-end-address
  dd 62 00 00               03 00 .var1 FLAGS
  df 62 00 00                  01 .literal
  e0 62 00 00         85 02 00 00 645
  e4 62 00 00                  ff .end (operand)
  e5 62 00 00                  01 .set
  e6 62 00 00                  01 .literal
  e7 62 00 00         03 00 00 00 3
  eb 62 00 00                  ff .end (operand)
  ec 62 00 00                  ff .end (block)
 :ed 62 00 00                  ff .end (switch)
  ee 62 00 00                  ff .end (block)
 :ef 62 00 00                  0b .case
  f0 62 00 00                  05 .group
  f1 62 00 00                  01 .literal
  f2 62 00 00         07 00 00 00 7
  f6 62 00 00                  ff .end (operand)
  f7 62 00 00                  ff .end (operand)
  f8 62 00 00         42 63 00 00 .case-end-address
  fc 62 00 00                  0a .switch
  fd 62 00 00               03 00 .var1 FLAGS
  ff 62 00 00                  01 .literal
  00 63 00 00         7f 02 00 00 639
  04 63 00 00                  ff .end (operand)
  05 63 00 00                  ff .end (operand)
  06 63 00 00                  0b .case
  07 63 00 00                  05 .group
  08 63 00 00                  01 .literal
  09 63 00 00         01 00 00 00 1
  0d 63 00 00                  ff .end (operand)
  0e 63 00 00                  ff .end (operand)
  0f 63 00 00         23 63 00 00 .case-end-address
  13 63 00 00               03 00 .var1 FLAGS
  15 63 00 00                  01 .literal
  16 63 00 00         86 02 00 00 646
  1a 63 00 00                  ff .end (operand)
  1b 63 00 00                  01 .set
  1c 63 00 00                  01 .literal
  1d 63 00 00         02 00 00 00 2
  21 63 00 00                  ff .end (operand)
  22 63 00 00                  ff .end (block)
 :23 63 00 00                  0b .case
  24 63 00 00                  05 .group
  25 63 00 00                  01 .literal
  26 63 00 00         02 00 00 00 2
  2a 63 00 00                  ff .end (operand)
  2b 63 00 00                  ff .end (operand)
  2c 63 00 00         40 63 00 00 .case-end-address
  30 63 00 00               03 00 .var1 FLAGS
  32 63 00 00                  01 .literal
  33 63 00 00         86 02 00 00 646
  37 63 00 00                  ff .end (operand)
  38 63 00 00                  01 .set
  39 63 00 00                  01 .literal
  3a 63 00 00         03 00 00 00 3
  3e 63 00 00                  ff .end (operand)
  3f 63 00 00                  ff .end (block)
 :40 63 00 00                  ff .end (switch)
  41 63 00 00                  ff .end (block)
 :42 63 00 00                  0b .case
  43 63 00 00                  05 .group
  44 63 00 00                  01 .literal
  45 63 00 00         08 00 00 00 8
  49 63 00 00                  ff .end (operand)
  4a 63 00 00                  ff .end (operand)
  4b 63 00 00         95 63 00 00 .case-end-address
  4f 63 00 00                  0a .switch
  50 63 00 00               03 00 .var1 FLAGS
  52 63 00 00                  01 .literal
  53 63 00 00         7f 02 00 00 639
  57 63 00 00                  ff .end (operand)
  58 63 00 00                  ff .end (operand)
  59 63 00 00                  0b .case
  5a 63 00 00                  05 .group
  5b 63 00 00                  01 .literal
  5c 63 00 00         01 00 00 00 1
  60 63 00 00                  ff .end (operand)
  61 63 00 00                  ff .end (operand)
  62 63 00 00         76 63 00 00 .case-end-address
  66 63 00 00               03 00 .var1 FLAGS
  68 63 00 00                  01 .literal
  69 63 00 00         87 02 00 00 647
  6d 63 00 00                  ff .end (operand)
  6e 63 00 00                  01 .set
  6f 63 00 00                  01 .literal
  70 63 00 00         02 00 00 00 2
  74 63 00 00                  ff .end (operand)
  75 63 00 00                  ff .end (block)
 :76 63 00 00                  0b .case
  77 63 00 00                  05 .group
  78 63 00 00                  01 .literal
  79 63 00 00         02 00 00 00 2
  7d 63 00 00                  ff .end (operand)
  7e 63 00 00                  ff .end (operand)
  7f 63 00 00         93 63 00 00 .case-end-address
  83 63 00 00               03 00 .var1 FLAGS
  85 63 00 00                  01 .literal
  86 63 00 00         87 02 00 00 647
  8a 63 00 00                  ff .end (operand)
  8b 63 00 00                  01 .set
  8c 63 00 00                  01 .literal
  8d 63 00 00         03 00 00 00 3
  91 63 00 00                  ff .end (operand)
  92 63 00 00                  ff .end (block)
 :93 63 00 00                  ff .end (switch)
  94 63 00 00                  ff .end (block)
 :95 63 00 00                  ff .end (switch)
if261
::96 63 00 00               05 03 .if [terms=3]
  98 63 00 00         9a 66 00 00 .else
  9c 63 00 00               03 00 .var1 FLAGS
  9e 63 00 00                  01 .literal
  9f 63 00 00         56 02 00 00 598
  a3 63 00 00                  ff .end (operand)
  a4 63 00 00                  ff .end (operand)
  a6 63 00 00                  04 .if-sign-nonzero
  a6 63 00 00                  01 .literal
  a7 63 00 00         00 00 00 00 0
  ab 63 00 00                  ff .end (operand)
  ac 63 00 00               03 00 .var1 FLAGS
  ae 63 00 00                  01 .literal
  af 63 00 00         57 02 00 00 599
  b3 63 00 00                  ff .end (operand)
  b4 63 00 00                  ff .end (operand)
  b6 63 00 00                  02 .if-sign-nonzero
  b6 63 00 00                  01 .literal
  b7 63 00 00         00 00 00 00 0
  bb 63 00 00                  ff .end (operand)
  bc 63 00 00               03 00 .var1 FLAGS
  be 63 00 00                  01 .literal
  bf 63 00 00         58 02 00 00 600
  c3 63 00 00                  ff .end (operand)
  c4 63 00 00                  ff .end (operand)
  c6 63 00 00                  04 .if-sign-nonzero
  c6 63 00 00                  01 .literal
  c7 63 00 00         00 00 00 00 0
  cb 63 00 00                  ff .end (operand)
  cc 63 00 00               01 5c .exec TextMenu
  ce 63 00 00                  01 .literal
  cf 63 00 00         1e 00 00 00 30
  d3 63 00 00                  ff .end (operand)
  d4 63 00 00                  01 .literal
  d5 63 00 00         1e 00 00 00 30
  d9 63 00 00                  ff .end (operand)
  da 63 00 00                  01 .literal
  db 63 00 00         7f 02 00 00 639
  df 63 00 00                  ff .end (operand)
  e0 63 00 00                  01 .literal
  e1 63 00 00         01 00 00 00 1
  e5 63 00 00                  ff .end (operand)
  e7 63 00 00                     "Enemy 1"

              45 6e 65 6d 79 20 31 00 
  ef 63 00 00                     "Enemy 3"

              45 6e 65 6d 79 20 33 00 
  f7 63 00 00                  0a .switch
  f8 63 00 00               03 00 .var1 FLAGS
  fa 63 00 00                  01 .literal
  fb 63 00 00         7e 02 00 00 638
  ff 63 00 00                  ff .end (operand)
  00 64 00 00                  ff .end (operand)
  01 64 00 00                  0b .case
  02 64 00 00                  05 .group
  03 64 00 00                  01 .literal
  04 64 00 00         01 00 00 00 1
  08 64 00 00                  ff .end (operand)
  09 64 00 00                  ff .end (operand)
  0a 64 00 00         54 64 00 00 .case-end-address
  0e 64 00 00                  0a .switch
  0f 64 00 00               03 00 .var1 FLAGS
  11 64 00 00                  01 .literal
  12 64 00 00         7f 02 00 00 639
  16 64 00 00                  ff .end (operand)
  17 64 00 00                  ff .end (operand)
  18 64 00 00                  0b .case
  19 64 00 00                  05 .group
  1a 64 00 00                  01 .literal
  1b 64 00 00         01 00 00 00 1
  1f 64 00 00                  ff .end (operand)
  20 64 00 00                  ff .end (operand)
  21 64 00 00         35 64 00 00 .case-end-address
  25 64 00 00               03 00 .var1 FLAGS
  27 64 00 00                  01 .literal
  28 64 00 00         80 02 00 00 640
  2c 64 00 00                  ff .end (operand)
  2d 64 00 00                  01 .set
  2e 64 00 00                  01 .literal
  2f 64 00 00         01 00 00 00 1
  33 64 00 00                  ff .end (operand)
  34 64 00 00                  ff .end (block)
 :35 64 00 00                  0b .case
  36 64 00 00                  05 .group
  37 64 00 00                  01 .literal
  38 64 00 00         02 00 00 00 2
  3c 64 00 00                  ff .end (operand)
  3d 64 00 00                  ff .end (operand)
  3e 64 00 00         52 64 00 00 .case-end-address
  42 64 00 00               03 00 .var1 FLAGS
  44 64 00 00                  01 .literal
  45 64 00 00         80 02 00 00 640
  49 64 00 00                  ff .end (operand)
  4a 64 00 00                  01 .set
  4b 64 00 00                  01 .literal
  4c 64 00 00         03 00 00 00 3
  50 64 00 00                  ff .end (operand)
  51 64 00 00                  ff .end (block)
 :52 64 00 00                  ff .end (switch)
  53 64 00 00                  ff .end (block)
 :54 64 00 00                  0b .case
  55 64 00 00                  05 .group
  56 64 00 00                  01 .literal
  57 64 00 00         02 00 00 00 2
  5b 64 00 00                  ff .end (operand)
  5c 64 00 00                  ff .end (operand)
  5d 64 00 00         a7 64 00 00 .case-end-address
  61 64 00 00                  0a .switch
  62 64 00 00               03 00 .var1 FLAGS
  64 64 00 00                  01 .literal
  65 64 00 00         7f 02 00 00 639
  69 64 00 00                  ff .end (operand)
  6a 64 00 00                  ff .end (operand)
  6b 64 00 00                  0b .case
  6c 64 00 00                  05 .group
  6d 64 00 00                  01 .literal
  6e 64 00 00         01 00 00 00 1
  72 64 00 00                  ff .end (operand)
  73 64 00 00                  ff .end (operand)
  74 64 00 00         88 64 00 00 .case-end-address
  78 64 00 00               03 00 .var1 FLAGS
  7a 64 00 00                  01 .literal
  7b 64 00 00         81 02 00 00 641
  7f 64 00 00                  ff .end (operand)
  80 64 00 00                  01 .set
  81 64 00 00                  01 .literal
  82 64 00 00         01 00 00 00 1
  86 64 00 00                  ff .end (operand)
  87 64 00 00                  ff .end (block)
 :88 64 00 00                  0b .case
  89 64 00 00                  05 .group
  8a 64 00 00                  01 .literal
  8b 64 00 00         02 00 00 00 2
  8f 64 00 00                  ff .end (operand)
  90 64 00 00                  ff .end (operand)
  91 64 00 00         a5 64 00 00 .case-end-address
  95 64 00 00               03 00 .var1 FLAGS
  97 64 00 00                  01 .literal
  98 64 00 00         81 02 00 00 641
  9c 64 00 00                  ff .end (operand)
  9d 64 00 00                  01 .set
  9e 64 00 00                  01 .literal
  9f 64 00 00         03 00 00 00 3
  a3 64 00 00                  ff .end (operand)
  a4 64 00 00                  ff .end (block)
 :a5 64 00 00                  ff .end (switch)
  a6 64 00 00                  ff .end (block)
 :a7 64 00 00                  0b .case
  a8 64 00 00                  05 .group
  a9 64 00 00                  01 .literal
  aa 64 00 00         03 00 00 00 3
  ae 64 00 00                  ff .end (operand)
  af 64 00 00                  ff .end (operand)
  b0 64 00 00         fa 64 00 00 .case-end-address
  b4 64 00 00                  0a .switch
  b5 64 00 00               03 00 .var1 FLAGS
  b7 64 00 00                  01 .literal
  b8 64 00 00         7f 02 00 00 639
  bc 64 00 00                  ff .end (operand)
  bd 64 00 00                  ff .end (operand)
  be 64 00 00                  0b .case
  bf 64 00 00                  05 .group
  c0 64 00 00                  01 .literal
  c1 64 00 00         01 00 00 00 1
  c5 64 00 00                  ff .end (operand)
  c6 64 00 00                  ff .end (operand)
  c7 64 00 00         db 64 00 00 .case-end-address
  cb 64 00 00               03 00 .var1 FLAGS
  cd 64 00 00                  01 .literal
  ce 64 00 00         82 02 00 00 642
  d2 64 00 00                  ff .end (operand)
  d3 64 00 00                  01 .set
  d4 64 00 00                  01 .literal
  d5 64 00 00         01 00 00 00 1
  d9 64 00 00                  ff .end (operand)
  da 64 00 00                  ff .end (block)
 :db 64 00 00                  0b .case
  dc 64 00 00                  05 .group
  dd 64 00 00                  01 .literal
  de 64 00 00         02 00 00 00 2
  e2 64 00 00                  ff .end (operand)
  e3 64 00 00                  ff .end (operand)
  e4 64 00 00         f8 64 00 00 .case-end-address
  e8 64 00 00               03 00 .var1 FLAGS
  ea 64 00 00                  01 .literal
  eb 64 00 00         82 02 00 00 642
  ef 64 00 00                  ff .end (operand)
  f0 64 00 00                  01 .set
  f1 64 00 00                  01 .literal
  f2 64 00 00         03 00 00 00 3
  f6 64 00 00                  ff .end (operand)
  f7 64 00 00                  ff .end (block)
 :f8 64 00 00                  ff .end (switch)
  f9 64 00 00                  ff .end (block)
 :fa 64 00 00                  0b .case
  fb 64 00 00                  05 .group
  fc 64 00 00                  01 .literal
  fd 64 00 00         04 00 00 00 4
  01 65 00 00                  ff .end (operand)
  02 65 00 00                  ff .end (operand)
  03 65 00 00         4d 65 00 00 .case-end-address
  07 65 00 00                  0a .switch
  08 65 00 00               03 00 .var1 FLAGS
  0a 65 00 00                  01 .literal
  0b 65 00 00         7f 02 00 00 639
  0f 65 00 00                  ff .end (operand)
  10 65 00 00                  ff .end (operand)
  11 65 00 00                  0b .case
  12 65 00 00                  05 .group
  13 65 00 00                  01 .literal
  14 65 00 00         01 00 00 00 1
  18 65 00 00                  ff .end (operand)
  19 65 00 00                  ff .end (operand)
  1a 65 00 00         2e 65 00 00 .case-end-address
  1e 65 00 00               03 00 .var1 FLAGS
  20 65 00 00                  01 .literal
  21 65 00 00         83 02 00 00 643
  25 65 00 00                  ff .end (operand)
  26 65 00 00                  01 .set
  27 65 00 00                  01 .literal
  28 65 00 00         01 00 00 00 1
  2c 65 00 00                  ff .end (operand)
  2d 65 00 00                  ff .end (block)
 :2e 65 00 00                  0b .case
  2f 65 00 00                  05 .group
  30 65 00 00                  01 .literal
  31 65 00 00         02 00 00 00 2
  35 65 00 00                  ff .end (operand)
  36 65 00 00                  ff .end (operand)
  37 65 00 00         4b 65 00 00 .case-end-address
  3b 65 00 00               03 00 .var1 FLAGS
  3d 65 00 00                  01 .literal
  3e 65 00 00         83 02 00 00 643
  42 65 00 00                  ff .end (operand)
  43 65 00 00                  01 .set
  44 65 00 00                  01 .literal
  45 65 00 00         03 00 00 00 3
  49 65 00 00                  ff .end (operand)
  4a 65 00 00                  ff .end (block)
 :4b 65 00 00                  ff .end (switch)
  4c 65 00 00                  ff .end (block)
 :4d 65 00 00                  0b .case
  4e 65 00 00                  05 .group
  4f 65 00 00                  01 .literal
  50 65 00 00         05 00 00 00 5
  54 65 00 00                  ff .end (operand)
  55 65 00 00                  ff .end (operand)
  56 65 00 00         a0 65 00 00 .case-end-address
  5a 65 00 00                  0a .switch
  5b 65 00 00               03 00 .var1 FLAGS
  5d 65 00 00                  01 .literal
  5e 65 00 00         7f 02 00 00 639
  62 65 00 00                  ff .end (operand)
  63 65 00 00                  ff .end (operand)
  64 65 00 00                  0b .case
  65 65 00 00                  05 .group
  66 65 00 00                  01 .literal
  67 65 00 00         01 00 00 00 1
  6b 65 00 00                  ff .end (operand)
  6c 65 00 00                  ff .end (operand)
  6d 65 00 00         81 65 00 00 .case-end-address
  71 65 00 00               03 00 .var1 FLAGS
  73 65 00 00                  01 .literal
  74 65 00 00         84 02 00 00 644
  78 65 00 00                  ff .end (operand)
  79 65 00 00                  01 .set
  7a 65 00 00                  01 .literal
  7b 65 00 00         01 00 00 00 1
  7f 65 00 00                  ff .end (operand)
  80 65 00 00                  ff .end (block)
 :81 65 00 00                  0b .case
  82 65 00 00                  05 .group
  83 65 00 00                  01 .literal
  84 65 00 00         02 00 00 00 2
  88 65 00 00                  ff .end (operand)
  89 65 00 00                  ff .end (operand)
  8a 65 00 00         9e 65 00 00 .case-end-address
  8e 65 00 00               03 00 .var1 FLAGS
  90 65 00 00                  01 .literal
  91 65 00 00         84 02 00 00 644
  95 65 00 00                  ff .end (operand)
  96 65 00 00                  01 .set
  97 65 00 00                  01 .literal
  98 65 00 00         03 00 00 00 3
  9c 65 00 00                  ff .end (operand)
  9d 65 00 00                  ff .end (block)
 :9e 65 00 00                  ff .end (switch)
  9f 65 00 00                  ff .end (block)
 :a0 65 00 00                  0b .case
  a1 65 00 00                  05 .group
  a2 65 00 00                  01 .literal
  a3 65 00 00         06 00 00 00 6
  a7 65 00 00                  ff .end (operand)
  a8 65 00 00                  ff .end (operand)
  a9 65 00 00         f3 65 00 00 .case-end-address
  ad 65 00 00                  0a .switch
  ae 65 00 00               03 00 .var1 FLAGS
  b0 65 00 00                  01 .literal
  b1 65 00 00         7f 02 00 00 639
  b5 65 00 00                  ff .end (operand)
  b6 65 00 00                  ff .end (operand)
  b7 65 00 00                  0b .case
  b8 65 00 00                  05 .group
  b9 65 00 00                  01 .literal
  ba 65 00 00         01 00 00 00 1
  be 65 00 00                  ff .end (operand)
  bf 65 00 00                  ff .end (operand)
  c0 65 00 00         d4 65 00 00 .case-end-address
  c4 65 00 00               03 00 .var1 FLAGS
  c6 65 00 00                  01 .literal
  c7 65 00 00         85 02 00 00 645
  cb 65 00 00                  ff .end (operand)
  cc 65 00 00                  01 .set
  cd 65 00 00                  01 .literal
  ce 65 00 00         01 00 00 00 1
  d2 65 00 00                  ff .end (operand)
  d3 65 00 00                  ff .end (block)
 :d4 65 00 00                  0b .case
  d5 65 00 00                  05 .group
  d6 65 00 00                  01 .literal
  d7 65 00 00         02 00 00 00 2
  db 65 00 00                  ff .end (operand)
  dc 65 00 00                  ff .end (operand)
  dd 65 00 00         f1 65 00 00 .case-end-address
  e1 65 00 00               03 00 .var1 FLAGS
  e3 65 00 00                  01 .literal
  e4 65 00 00         85 02 00 00 645
  e8 65 00 00                  ff .end (operand)
  e9 65 00 00                  01 .set
  ea 65 00 00                  01 .literal
  eb 65 00 00         03 00 00 00 3
  ef 65 00 00                  ff .end (operand)
  f0 65 00 00                  ff .end (block)
 :f1 65 00 00                  ff .end (switch)
  f2 65 00 00                  ff .end (block)
 :f3 65 00 00                  0b .case
  f4 65 00 00                  05 .group
  f5 65 00 00                  01 .literal
  f6 65 00 00         07 00 00 00 7
  fa 65 00 00                  ff .end (operand)
  fb 65 00 00                  ff .end (operand)
  fc 65 00 00         46 66 00 00 .case-end-address
  00 66 00 00                  0a .switch
  01 66 00 00               03 00 .var1 FLAGS
  03 66 00 00                  01 .literal
  04 66 00 00         7f 02 00 00 639
  08 66 00 00                  ff .end (operand)
  09 66 00 00                  ff .end (operand)
  0a 66 00 00                  0b .case
  0b 66 00 00                  05 .group
  0c 66 00 00                  01 .literal
  0d 66 00 00         01 00 00 00 1
  11 66 00 00                  ff .end (operand)
  12 66 00 00                  ff .end (operand)
  13 66 00 00         27 66 00 00 .case-end-address
  17 66 00 00               03 00 .var1 FLAGS
  19 66 00 00                  01 .literal
  1a 66 00 00         86 02 00 00 646
  1e 66 00 00                  ff .end (operand)
  1f 66 00 00                  01 .set
  20 66 00 00                  01 .literal
  21 66 00 00         01 00 00 00 1
  25 66 00 00                  ff .end (operand)
  26 66 00 00                  ff .end (block)
 :27 66 00 00                  0b .case
  28 66 00 00                  05 .group
  29 66 00 00                  01 .literal
  2a 66 00 00         02 00 00 00 2
  2e 66 00 00                  ff .end (operand)
  2f 66 00 00                  ff .end (operand)
  30 66 00 00         44 66 00 00 .case-end-address
  34 66 00 00               03 00 .var1 FLAGS
  36 66 00 00                  01 .literal
  37 66 00 00         86 02 00 00 646
  3b 66 00 00                  ff .end (operand)
  3c 66 00 00                  01 .set
  3d 66 00 00                  01 .literal
  3e 66 00 00         03 00 00 00 3
  42 66 00 00                  ff .end (operand)
  43 66 00 00                  ff .end (block)
 :44 66 00 00                  ff .end (switch)
  45 66 00 00                  ff .end (block)
 :46 66 00 00                  0b .case
  47 66 00 00                  05 .group
  48 66 00 00                  01 .literal
  49 66 00 00         08 00 00 00 8
  4d 66 00 00                  ff .end (operand)
  4e 66 00 00                  ff .end (operand)
  4f 66 00 00         99 66 00 00 .case-end-address
  53 66 00 00                  0a .switch
  54 66 00 00               03 00 .var1 FLAGS
  56 66 00 00                  01 .literal
  57 66 00 00         7f 02 00 00 639
  5b 66 00 00                  ff .end (operand)
  5c 66 00 00                  ff .end (operand)
  5d 66 00 00                  0b .case
  5e 66 00 00                  05 .group
  5f 66 00 00                  01 .literal
  60 66 00 00         01 00 00 00 1
  64 66 00 00                  ff .end (operand)
  65 66 00 00                  ff .end (operand)
  66 66 00 00         7a 66 00 00 .case-end-address
  6a 66 00 00               03 00 .var1 FLAGS
  6c 66 00 00                  01 .literal
  6d 66 00 00         87 02 00 00 647
  71 66 00 00                  ff .end (operand)
  72 66 00 00                  01 .set
  73 66 00 00                  01 .literal
  74 66 00 00         01 00 00 00 1
  78 66 00 00                  ff .end (operand)
  79 66 00 00                  ff .end (block)
 :7a 66 00 00                  0b .case
  7b 66 00 00                  05 .group
  7c 66 00 00                  01 .literal
  7d 66 00 00         02 00 00 00 2
  81 66 00 00                  ff .end (operand)
  82 66 00 00                  ff .end (operand)
  83 66 00 00         97 66 00 00 .case-end-address
  87 66 00 00               03 00 .var1 FLAGS
  89 66 00 00                  01 .literal
  8a 66 00 00         87 02 00 00 647
  8e 66 00 00                  ff .end (operand)
  8f 66 00 00                  01 .set
  90 66 00 00                  01 .literal
  91 66 00 00         03 00 00 00 3
  95 66 00 00                  ff .end (operand)
  96 66 00 00                  ff .end (block)
 :97 66 00 00                  ff .end (switch)
  98 66 00 00                  ff .end (block)
 :99 66 00 00                  ff .end (switch)
if262
::9a 66 00 00               05 03 .if [terms=3]
  9c 66 00 00         9e 69 00 00 .else
  a0 66 00 00               03 00 .var1 FLAGS
  a2 66 00 00                  01 .literal
  a3 66 00 00         56 02 00 00 598
  a7 66 00 00                  ff .end (operand)
  a8 66 00 00                  ff .end (operand)
  aa 66 00 00                  04 .if-sign-nonzero
  aa 66 00 00                  01 .literal
  ab 66 00 00         00 00 00 00 0
  af 66 00 00                  ff .end (operand)
  b0 66 00 00               03 00 .var1 FLAGS
  b2 66 00 00                  01 .literal
  b3 66 00 00         57 02 00 00 599
  b7 66 00 00                  ff .end (operand)
  b8 66 00 00                  ff .end (operand)
  ba 66 00 00                  04 .if-sign-nonzero
  ba 66 00 00                  01 .literal
  bb 66 00 00         00 00 00 00 0
  bf 66 00 00                  ff .end (operand)
  c0 66 00 00               03 00 .var1 FLAGS
  c2 66 00 00                  01 .literal
  c3 66 00 00         58 02 00 00 600
  c7 66 00 00                  ff .end (operand)
  c8 66 00 00                  ff .end (operand)
  ca 66 00 00                  02 .if-sign-nonzero
  ca 66 00 00                  01 .literal
  cb 66 00 00         00 00 00 00 0
  cf 66 00 00                  ff .end (operand)
  d0 66 00 00               01 5c .exec TextMenu
  d2 66 00 00                  01 .literal
  d3 66 00 00         1e 00 00 00 30
  d7 66 00 00                  ff .end (operand)
  d8 66 00 00                  01 .literal
  d9 66 00 00         1e 00 00 00 30
  dd 66 00 00                  ff .end (operand)
  de 66 00 00                  01 .literal
  df 66 00 00         7f 02 00 00 639
  e3 66 00 00                  ff .end (operand)
  e4 66 00 00                  01 .literal
  e5 66 00 00         01 00 00 00 1
  e9 66 00 00                  ff .end (operand)
  eb 66 00 00                     "Enemy 1"

              45 6e 65 6d 79 20 31 00 
  f3 66 00 00                     "Enemy 2"

              45 6e 65 6d 79 20 32 00 
  fb 66 00 00                  0a .switch
  fc 66 00 00               03 00 .var1 FLAGS
  fe 66 00 00                  01 .literal
  ff 66 00 00         7e 02 00 00 638
  03 67 00 00                  ff .end (operand)
  04 67 00 00                  ff .end (operand)
  05 67 00 00                  0b .case
  06 67 00 00                  05 .group
  07 67 00 00                  01 .literal
  08 67 00 00         01 00 00 00 1
  0c 67 00 00                  ff .end (operand)
  0d 67 00 00                  ff .end (operand)
  0e 67 00 00         58 67 00 00 .case-end-address
  12 67 00 00                  0a .switch
  13 67 00 00               03 00 .var1 FLAGS
  15 67 00 00                  01 .literal
  16 67 00 00         7f 02 00 00 639
  1a 67 00 00                  ff .end (operand)
  1b 67 00 00                  ff .end (operand)
  1c 67 00 00                  0b .case
  1d 67 00 00                  05 .group
  1e 67 00 00                  01 .literal
  1f 67 00 00         01 00 00 00 1
  23 67 00 00                  ff .end (operand)
  24 67 00 00                  ff .end (operand)
  25 67 00 00         39 67 00 00 .case-end-address
  29 67 00 00               03 00 .var1 FLAGS
  2b 67 00 00                  01 .literal
  2c 67 00 00         80 02 00 00 640
  30 67 00 00                  ff .end (operand)
  31 67 00 00                  01 .set
  32 67 00 00                  01 .literal
  33 67 00 00         01 00 00 00 1
  37 67 00 00                  ff .end (operand)
  38 67 00 00                  ff .end (block)
 :39 67 00 00                  0b .case
  3a 67 00 00                  05 .group
  3b 67 00 00                  01 .literal
  3c 67 00 00         02 00 00 00 2
  40 67 00 00                  ff .end (operand)
  41 67 00 00                  ff .end (operand)
  42 67 00 00         56 67 00 00 .case-end-address
  46 67 00 00               03 00 .var1 FLAGS
  48 67 00 00                  01 .literal
  49 67 00 00         80 02 00 00 640
  4d 67 00 00                  ff .end (operand)
  4e 67 00 00                  01 .set
  4f 67 00 00                  01 .literal
  50 67 00 00         02 00 00 00 2
  54 67 00 00                  ff .end (operand)
  55 67 00 00                  ff .end (block)
 :56 67 00 00                  ff .end (switch)
  57 67 00 00                  ff .end (block)
 :58 67 00 00                  0b .case
  59 67 00 00                  05 .group
  5a 67 00 00                  01 .literal
  5b 67 00 00         02 00 00 00 2
  5f 67 00 00                  ff .end (operand)
  60 67 00 00                  ff .end (operand)
  61 67 00 00         ab 67 00 00 .case-end-address
  65 67 00 00                  0a .switch
  66 67 00 00               03 00 .var1 FLAGS
  68 67 00 00                  01 .literal
  69 67 00 00         7f 02 00 00 639
  6d 67 00 00                  ff .end (operand)
  6e 67 00 00                  ff .end (operand)
  6f 67 00 00                  0b .case
  70 67 00 00                  05 .group
  71 67 00 00                  01 .literal
  72 67 00 00         01 00 00 00 1
  76 67 00 00                  ff .end (operand)
  77 67 00 00                  ff .end (operand)
  78 67 00 00         8c 67 00 00 .case-end-address
  7c 67 00 00               03 00 .var1 FLAGS
  7e 67 00 00                  01 .literal
  7f 67 00 00         81 02 00 00 641
  83 67 00 00                  ff .end (operand)
  84 67 00 00                  01 .set
  85 67 00 00                  01 .literal
  86 67 00 00         01 00 00 00 1
  8a 67 00 00                  ff .end (operand)
  8b 67 00 00                  ff .end (block)
 :8c 67 00 00                  0b .case
  8d 67 00 00                  05 .group
  8e 67 00 00                  01 .literal
  8f 67 00 00         02 00 00 00 2
  93 67 00 00                  ff .end (operand)
  94 67 00 00                  ff .end (operand)
  95 67 00 00         a9 67 00 00 .case-end-address
  99 67 00 00               03 00 .var1 FLAGS
  9b 67 00 00                  01 .literal
  9c 67 00 00         81 02 00 00 641
  a0 67 00 00                  ff .end (operand)
  a1 67 00 00                  01 .set
  a2 67 00 00                  01 .literal
  a3 67 00 00         02 00 00 00 2
  a7 67 00 00                  ff .end (operand)
  a8 67 00 00                  ff .end (block)
 :a9 67 00 00                  ff .end (switch)
  aa 67 00 00                  ff .end (block)
 :ab 67 00 00                  0b .case
  ac 67 00 00                  05 .group
  ad 67 00 00                  01 .literal
  ae 67 00 00         03 00 00 00 3
  b2 67 00 00                  ff .end (operand)
  b3 67 00 00                  ff .end (operand)
  b4 67 00 00         fe 67 00 00 .case-end-address
  b8 67 00 00                  0a .switch
  b9 67 00 00               03 00 .var1 FLAGS
  bb 67 00 00                  01 .literal
  bc 67 00 00         7f 02 00 00 639
  c0 67 00 00                  ff .end (operand)
  c1 67 00 00                  ff .end (operand)
  c2 67 00 00                  0b .case
  c3 67 00 00                  05 .group
  c4 67 00 00                  01 .literal
  c5 67 00 00         01 00 00 00 1
  c9 67 00 00                  ff .end (operand)
  ca 67 00 00                  ff .end (operand)
  cb 67 00 00         df 67 00 00 .case-end-address
  cf 67 00 00               03 00 .var1 FLAGS
  d1 67 00 00                  01 .literal
  d2 67 00 00         82 02 00 00 642
  d6 67 00 00                  ff .end (operand)
  d7 67 00 00                  01 .set
  d8 67 00 00                  01 .literal
  d9 67 00 00         01 00 00 00 1
  dd 67 00 00                  ff .end (operand)
  de 67 00 00                  ff .end (block)
 :df 67 00 00                  0b .case
  e0 67 00 00                  05 .group
  e1 67 00 00                  01 .literal
  e2 67 00 00         02 00 00 00 2
  e6 67 00 00                  ff .end (operand)
  e7 67 00 00                  ff .end (operand)
  e8 67 00 00         fc 67 00 00 .case-end-address
  ec 67 00 00               03 00 .var1 FLAGS
  ee 67 00 00                  01 .literal
  ef 67 00 00         82 02 00 00 642
  f3 67 00 00                  ff .end (operand)
  f4 67 00 00                  01 .set
  f5 67 00 00                  01 .literal
  f6 67 00 00         02 00 00 00 2
  fa 67 00 00                  ff .end (operand)
  fb 67 00 00                  ff .end (block)
 :fc 67 00 00                  ff .end (switch)
  fd 67 00 00                  ff .end (block)
 :fe 67 00 00                  0b .case
  ff 67 00 00                  05 .group
  00 68 00 00                  01 .literal
  01 68 00 00         04 00 00 00 4
  05 68 00 00                  ff .end (operand)
  06 68 00 00                  ff .end (operand)
  07 68 00 00         51 68 00 00 .case-end-address
  0b 68 00 00                  0a .switch
  0c 68 00 00               03 00 .var1 FLAGS
  0e 68 00 00                  01 .literal
  0f 68 00 00         7f 02 00 00 639
  13 68 00 00                  ff .end (operand)
  14 68 00 00                  ff .end (operand)
  15 68 00 00                  0b .case
  16 68 00 00                  05 .group
  17 68 00 00                  01 .literal
  18 68 00 00         01 00 00 00 1
  1c 68 00 00                  ff .end (operand)
  1d 68 00 00                  ff .end (operand)
  1e 68 00 00         32 68 00 00 .case-end-address
  22 68 00 00               03 00 .var1 FLAGS
  24 68 00 00                  01 .literal
  25 68 00 00         83 02 00 00 643
  29 68 00 00                  ff .end (operand)
  2a 68 00 00                  01 .set
  2b 68 00 00                  01 .literal
  2c 68 00 00         01 00 00 00 1
  30 68 00 00                  ff .end (operand)
  31 68 00 00                  ff .end (block)
 :32 68 00 00                  0b .case
  33 68 00 00                  05 .group
  34 68 00 00                  01 .literal
  35 68 00 00         02 00 00 00 2
  39 68 00 00                  ff .end (operand)
  3a 68 00 00                  ff .end (operand)
  3b 68 00 00         4f 68 00 00 .case-end-address
  3f 68 00 00               03 00 .var1 FLAGS
  41 68 00 00                  01 .literal
  42 68 00 00         83 02 00 00 643
  46 68 00 00                  ff .end (operand)
  47 68 00 00                  01 .set
  48 68 00 00                  01 .literal
  49 68 00 00         02 00 00 00 2
  4d 68 00 00                  ff .end (operand)
  4e 68 00 00                  ff .end (block)
 :4f 68 00 00                  ff .end (switch)
  50 68 00 00                  ff .end (block)
 :51 68 00 00                  0b .case
  52 68 00 00                  05 .group
  53 68 00 00                  01 .literal
  54 68 00 00         05 00 00 00 5
  58 68 00 00                  ff .end (operand)
  59 68 00 00                  ff .end (operand)
  5a 68 00 00         a4 68 00 00 .case-end-address
  5e 68 00 00                  0a .switch
  5f 68 00 00               03 00 .var1 FLAGS
  61 68 00 00                  01 .literal
  62 68 00 00         7f 02 00 00 639
  66 68 00 00                  ff .end (operand)
  67 68 00 00                  ff .end (operand)
  68 68 00 00                  0b .case
  69 68 00 00                  05 .group
  6a 68 00 00                  01 .literal
  6b 68 00 00         01 00 00 00 1
  6f 68 00 00                  ff .end (operand)
  70 68 00 00                  ff .end (operand)
  71 68 00 00         85 68 00 00 .case-end-address
  75 68 00 00               03 00 .var1 FLAGS
  77 68 00 00                  01 .literal
  78 68 00 00         84 02 00 00 644
  7c 68 00 00                  ff .end (operand)
  7d 68 00 00                  01 .set
  7e 68 00 00                  01 .literal
  7f 68 00 00         01 00 00 00 1
  83 68 00 00                  ff .end (operand)
  84 68 00 00                  ff .end (block)
 :85 68 00 00                  0b .case
  86 68 00 00                  05 .group
  87 68 00 00                  01 .literal
  88 68 00 00         02 00 00 00 2
  8c 68 00 00                  ff .end (operand)
  8d 68 00 00                  ff .end (operand)
  8e 68 00 00         a2 68 00 00 .case-end-address
  92 68 00 00               03 00 .var1 FLAGS
  94 68 00 00                  01 .literal
  95 68 00 00         84 02 00 00 644
  99 68 00 00                  ff .end (operand)
  9a 68 00 00                  01 .set
  9b 68 00 00                  01 .literal
  9c 68 00 00         02 00 00 00 2
  a0 68 00 00                  ff .end (operand)
  a1 68 00 00                  ff .end (block)
 :a2 68 00 00                  ff .end (switch)
  a3 68 00 00                  ff .end (block)
 :a4 68 00 00                  0b .case
  a5 68 00 00                  05 .group
  a6 68 00 00                  01 .literal
  a7 68 00 00         06 00 00 00 6
  ab 68 00 00                  ff .end (operand)
  ac 68 00 00                  ff .end (operand)
  ad 68 00 00         f7 68 00 00 .case-end-address
  b1 68 00 00                  0a .switch
  b2 68 00 00               03 00 .var1 FLAGS
  b4 68 00 00                  01 .literal
  b5 68 00 00         7f 02 00 00 639
  b9 68 00 00                  ff .end (operand)
  ba 68 00 00                  ff .end (operand)
  bb 68 00 00                  0b .case
  bc 68 00 00                  05 .group
  bd 68 00 00                  01 .literal
  be 68 00 00         01 00 00 00 1
  c2 68 00 00                  ff .end (operand)
  c3 68 00 00                  ff .end (operand)
  c4 68 00 00         d8 68 00 00 .case-end-address
  c8 68 00 00               03 00 .var1 FLAGS
  ca 68 00 00                  01 .literal
  cb 68 00 00         85 02 00 00 645
  cf 68 00 00                  ff .end (operand)
  d0 68 00 00                  01 .set
  d1 68 00 00                  01 .literal
  d2 68 00 00         01 00 00 00 1
  d6 68 00 00                  ff .end (operand)
  d7 68 00 00                  ff .end (block)
 :d8 68 00 00                  0b .case
  d9 68 00 00                  05 .group
  da 68 00 00                  01 .literal
  db 68 00 00         02 00 00 00 2
  df 68 00 00                  ff .end (operand)
  e0 68 00 00                  ff .end (operand)
  e1 68 00 00         f5 68 00 00 .case-end-address
  e5 68 00 00               03 00 .var1 FLAGS
  e7 68 00 00                  01 .literal
  e8 68 00 00         85 02 00 00 645
  ec 68 00 00                  ff .end (operand)
  ed 68 00 00                  01 .set
  ee 68 00 00                  01 .literal
  ef 68 00 00         02 00 00 00 2
  f3 68 00 00                  ff .end (operand)
  f4 68 00 00                  ff .end (block)
 :f5 68 00 00                  ff .end (switch)
  f6 68 00 00                  ff .end (block)
 :f7 68 00 00                  0b .case
  f8 68 00 00                  05 .group
  f9 68 00 00                  01 .literal
  fa 68 00 00         07 00 00 00 7
  fe 68 00 00                  ff .end (operand)
  ff 68 00 00                  ff .end (operand)
  00 69 00 00         4a 69 00 00 .case-end-address
  04 69 00 00                  0a .switch
  05 69 00 00               03 00 .var1 FLAGS
  07 69 00 00                  01 .literal
  08 69 00 00         7f 02 00 00 639
  0c 69 00 00                  ff .end (operand)
  0d 69 00 00                  ff .end (operand)
  0e 69 00 00                  0b .case
  0f 69 00 00                  05 .group
  10 69 00 00                  01 .literal
  11 69 00 00         01 00 00 00 1
  15 69 00 00                  ff .end (operand)
  16 69 00 00                  ff .end (operand)
  17 69 00 00         2b 69 00 00 .case-end-address
  1b 69 00 00               03 00 .var1 FLAGS
  1d 69 00 00                  01 .literal
  1e 69 00 00         86 02 00 00 646
  22 69 00 00                  ff .end (operand)
  23 69 00 00                  01 .set
  24 69 00 00                  01 .literal
  25 69 00 00         01 00 00 00 1
  29 69 00 00                  ff .end (operand)
  2a 69 00 00                  ff .end (block)
 :2b 69 00 00                  0b .case
  2c 69 00 00                  05 .group
  2d 69 00 00                  01 .literal
  2e 69 00 00         02 00 00 00 2
  32 69 00 00                  ff .end (operand)
  33 69 00 00                  ff .end (operand)
  34 69 00 00         48 69 00 00 .case-end-address
  38 69 00 00               03 00 .var1 FLAGS
  3a 69 00 00                  01 .literal
  3b 69 00 00         86 02 00 00 646
  3f 69 00 00                  ff .end (operand)
  40 69 00 00                  01 .set
  41 69 00 00                  01 .literal
  42 69 00 00         02 00 00 00 2
  46 69 00 00                  ff .end (operand)
  47 69 00 00                  ff .end (block)
 :48 69 00 00                  ff .end (switch)
  49 69 00 00                  ff .end (block)
 :4a 69 00 00                  0b .case
  4b 69 00 00                  05 .group
  4c 69 00 00                  01 .literal
  4d 69 00 00         08 00 00 00 8
  51 69 00 00                  ff .end (operand)
  52 69 00 00                  ff .end (operand)
  53 69 00 00         9d 69 00 00 .case-end-address
  57 69 00 00                  0a .switch
  58 69 00 00               03 00 .var1 FLAGS
  5a 69 00 00                  01 .literal
  5b 69 00 00         7f 02 00 00 639
  5f 69 00 00                  ff .end (operand)
  60 69 00 00                  ff .end (operand)
  61 69 00 00                  0b .case
  62 69 00 00                  05 .group
  63 69 00 00                  01 .literal
  64 69 00 00         01 00 00 00 1
  68 69 00 00                  ff .end (operand)
  69 69 00 00                  ff .end (operand)
  6a 69 00 00         7e 69 00 00 .case-end-address
  6e 69 00 00               03 00 .var1 FLAGS
  70 69 00 00                  01 .literal
  71 69 00 00         87 02 00 00 647
  75 69 00 00                  ff .end (operand)
  76 69 00 00                  01 .set
  77 69 00 00                  01 .literal
  78 69 00 00         01 00 00 00 1
  7c 69 00 00                  ff .end (operand)
  7d 69 00 00                  ff .end (block)
 :7e 69 00 00                  0b .case
  7f 69 00 00                  05 .group
  80 69 00 00                  01 .literal
  81 69 00 00         02 00 00 00 2
  85 69 00 00                  ff .end (operand)
  86 69 00 00                  ff .end (operand)
  87 69 00 00         9b 69 00 00 .case-end-address
  8b 69 00 00               03 00 .var1 FLAGS
  8d 69 00 00                  01 .literal
  8e 69 00 00         87 02 00 00 647
  92 69 00 00                  ff .end (operand)
  93 69 00 00                  01 .set
  94 69 00 00                  01 .literal
  95 69 00 00         02 00 00 00 2
  99 69 00 00                  ff .end (operand)
  9a 69 00 00                  ff .end (block)
 :9b 69 00 00                  ff .end (switch)
  9c 69 00 00                  ff .end (block)
 :9d 69 00 00                  ff .end (switch)
if263
::9e 69 00 00               05 03 .if [terms=3]
  a0 69 00 00         c7 6a 00 00 .else
  a4 69 00 00               03 00 .var1 FLAGS
  a6 69 00 00                  01 .literal
  a7 69 00 00         56 02 00 00 598
  ab 69 00 00                  ff .end (operand)
  ac 69 00 00                  ff .end (operand)
  ae 69 00 00                  02 .if-sign-nonzero
  ae 69 00 00                  01 .literal
  af 69 00 00         00 00 00 00 0
  b3 69 00 00                  ff .end (operand)
  b4 69 00 00               03 00 .var1 FLAGS
  b6 69 00 00                  01 .literal
  b7 69 00 00         57 02 00 00 599
  bb 69 00 00                  ff .end (operand)
  bc 69 00 00                  ff .end (operand)
  be 69 00 00                  02 .if-sign-nonzero
  be 69 00 00                  01 .literal
  bf 69 00 00         00 00 00 00 0
  c3 69 00 00                  ff .end (operand)
  c4 69 00 00               03 00 .var1 FLAGS
  c6 69 00 00                  01 .literal
  c7 69 00 00         58 02 00 00 600
  cb 69 00 00                  ff .end (operand)
  cc 69 00 00                  ff .end (operand)
  ce 69 00 00                  04 .if-sign-nonzero
  ce 69 00 00                  01 .literal
  cf 69 00 00         00 00 00 00 0
  d3 69 00 00                  ff .end (operand)
  d4 69 00 00                  0a .switch
  d5 69 00 00               03 00 .var1 FLAGS
  d7 69 00 00                  01 .literal
  d8 69 00 00         7e 02 00 00 638
  dc 69 00 00                  ff .end (operand)
  dd 69 00 00                  ff .end (operand)
  de 69 00 00                  0b .case
  df 69 00 00                  05 .group
  e0 69 00 00                  01 .literal
  e1 69 00 00         01 00 00 00 1
  e5 69 00 00                  ff .end (operand)
  e6 69 00 00                  ff .end (operand)
  e7 69 00 00         fb 69 00 00 .case-end-address
  eb 69 00 00               03 00 .var1 FLAGS
  ed 69 00 00                  01 .literal
  ee 69 00 00         80 02 00 00 640
  f2 69 00 00                  ff .end (operand)
  f3 69 00 00                  01 .set
  f4 69 00 00                  01 .literal
  f5 69 00 00         03 00 00 00 3
  f9 69 00 00                  ff .end (operand)
  fa 69 00 00                  ff .end (block)
 :fb 69 00 00                  0b .case
  fc 69 00 00                  05 .group
  fd 69 00 00                  01 .literal
  fe 69 00 00         02 00 00 00 2
  02 6a 00 00                  ff .end (operand)
  03 6a 00 00                  ff .end (operand)
  04 6a 00 00         18 6a 00 00 .case-end-address
  08 6a 00 00               03 00 .var1 FLAGS
  0a 6a 00 00                  01 .literal
  0b 6a 00 00         81 02 00 00 641
  0f 6a 00 00                  ff .end (operand)
  10 6a 00 00                  01 .set
  11 6a 00 00                  01 .literal
  12 6a 00 00         03 00 00 00 3
  16 6a 00 00                  ff .end (operand)
  17 6a 00 00                  ff .end (block)
 :18 6a 00 00                  0b .case
  19 6a 00 00                  05 .group
  1a 6a 00 00                  01 .literal
  1b 6a 00 00         03 00 00 00 3
  1f 6a 00 00                  ff .end (operand)
  20 6a 00 00                  ff .end (operand)
  21 6a 00 00         35 6a 00 00 .case-end-address
  25 6a 00 00               03 00 .var1 FLAGS
  27 6a 00 00                  01 .literal
  28 6a 00 00         82 02 00 00 642
  2c 6a 00 00                  ff .end (operand)
  2d 6a 00 00                  01 .set
  2e 6a 00 00                  01 .literal
  2f 6a 00 00         03 00 00 00 3
  33 6a 00 00                  ff .end (operand)
  34 6a 00 00                  ff .end (block)
 :35 6a 00 00                  0b .case
  36 6a 00 00                  05 .group
  37 6a 00 00                  01 .literal
  38 6a 00 00         04 00 00 00 4
  3c 6a 00 00                  ff .end (operand)
  3d 6a 00 00                  ff .end (operand)
  3e 6a 00 00         52 6a 00 00 .case-end-address
  42 6a 00 00               03 00 .var1 FLAGS
  44 6a 00 00                  01 .literal
  45 6a 00 00         83 02 00 00 643
  49 6a 00 00                  ff .end (operand)
  4a 6a 00 00                  01 .set
  4b 6a 00 00                  01 .literal
  4c 6a 00 00         03 00 00 00 3
  50 6a 00 00                  ff .end (operand)
  51 6a 00 00                  ff .end (block)
 :52 6a 00 00                  0b .case
  53 6a 00 00                  05 .group
  54 6a 00 00                  01 .literal
  55 6a 00 00         05 00 00 00 5
  59 6a 00 00                  ff .end (operand)
  5a 6a 00 00                  ff .end (operand)
  5b 6a 00 00         6f 6a 00 00 .case-end-address
  5f 6a 00 00               03 00 .var1 FLAGS
  61 6a 00 00                  01 .literal
  62 6a 00 00         84 02 00 00 644
  66 6a 00 00                  ff .end (operand)
  67 6a 00 00                  01 .set
  68 6a 00 00                  01 .literal
  69 6a 00 00         03 00 00 00 3
  6d 6a 00 00                  ff .end (operand)
  6e 6a 00 00                  ff .end (block)
 :6f 6a 00 00                  0b .case
  70 6a 00 00                  05 .group
  71 6a 00 00                  01 .literal
  72 6a 00 00         06 00 00 00 6
  76 6a 00 00                  ff .end (operand)
  77 6a 00 00                  ff .end (operand)
  78 6a 00 00         8c 6a 00 00 .case-end-address
  7c 6a 00 00               03 00 .var1 FLAGS
  7e 6a 00 00                  01 .literal
  7f 6a 00 00         85 02 00 00 645
  83 6a 00 00                  ff .end (operand)
  84 6a 00 00                  01 .set
  85 6a 00 00                  01 .literal
  86 6a 00 00         03 00 00 00 3
  8a 6a 00 00                  ff .end (operand)
  8b 6a 00 00                  ff .end (block)
 :8c 6a 00 00                  0b .case
  8d 6a 00 00                  05 .group
  8e 6a 00 00                  01 .literal
  8f 6a 00 00         07 00 00 00 7
  93 6a 00 00                  ff .end (operand)
  94 6a 00 00                  ff .end (operand)
  95 6a 00 00         a9 6a 00 00 .case-end-address
  99 6a 00 00               03 00 .var1 FLAGS
  9b 6a 00 00                  01 .literal
  9c 6a 00 00         86 02 00 00 646
  a0 6a 00 00                  ff .end (operand)
  a1 6a 00 00                  01 .set
  a2 6a 00 00                  01 .literal
  a3 6a 00 00         03 00 00 00 3
  a7 6a 00 00                  ff .end (operand)
  a8 6a 00 00                  ff .end (block)
 :a9 6a 00 00                  0b .case
  aa 6a 00 00                  05 .group
  ab 6a 00 00                  01 .literal
  ac 6a 00 00         08 00 00 00 8
  b0 6a 00 00                  ff .end (operand)
  b1 6a 00 00                  ff .end (operand)
  b2 6a 00 00         c6 6a 00 00 .case-end-address
  b6 6a 00 00               03 00 .var1 FLAGS
  b8 6a 00 00                  01 .literal
  b9 6a 00 00         87 02 00 00 647
  bd 6a 00 00                  ff .end (operand)
  be 6a 00 00                  01 .set
  bf 6a 00 00                  01 .literal
  c0 6a 00 00         03 00 00 00 3
  c4 6a 00 00                  ff .end (operand)
  c5 6a 00 00                  ff .end (block)
 :c6 6a 00 00                  ff .end (switch)
if264
::c7 6a 00 00               05 03 .if [terms=3]
  c9 6a 00 00         f0 6b 00 00 .else
  cd 6a 00 00               03 00 .var1 FLAGS
  cf 6a 00 00                  01 .literal
  d0 6a 00 00         56 02 00 00 598
  d4 6a 00 00                  ff .end (operand)
  d5 6a 00 00                  ff .end (operand)
  d7 6a 00 00                  02 .if-sign-nonzero
  d7 6a 00 00                  01 .literal
  d8 6a 00 00         00 00 00 00 0
  dc 6a 00 00                  ff .end (operand)
  dd 6a 00 00               03 00 .var1 FLAGS
  df 6a 00 00                  01 .literal
  e0 6a 00 00         57 02 00 00 599
  e4 6a 00 00                  ff .end (operand)
  e5 6a 00 00                  ff .end (operand)
  e7 6a 00 00                  04 .if-sign-nonzero
  e7 6a 00 00                  01 .literal
  e8 6a 00 00         00 00 00 00 0
  ec 6a 00 00                  ff .end (operand)
  ed 6a 00 00               03 00 .var1 FLAGS
  ef 6a 00 00                  01 .literal
  f0 6a 00 00         58 02 00 00 600
  f4 6a 00 00                  ff .end (operand)
  f5 6a 00 00                  ff .end (operand)
  f7 6a 00 00                  02 .if-sign-nonzero
  f7 6a 00 00                  01 .literal
  f8 6a 00 00         00 00 00 00 0
  fc 6a 00 00                  ff .end (operand)
  fd 6a 00 00                  0a .switch
  fe 6a 00 00               03 00 .var1 FLAGS
  00 6b 00 00                  01 .literal
  01 6b 00 00         7e 02 00 00 638
  05 6b 00 00                  ff .end (operand)
  06 6b 00 00                  ff .end (operand)
  07 6b 00 00                  0b .case
  08 6b 00 00                  05 .group
  09 6b 00 00                  01 .literal
  0a 6b 00 00         01 00 00 00 1
  0e 6b 00 00                  ff .end (operand)
  0f 6b 00 00                  ff .end (operand)
  10 6b 00 00         24 6b 00 00 .case-end-address
  14 6b 00 00               03 00 .var1 FLAGS
  16 6b 00 00                  01 .literal
  17 6b 00 00         80 02 00 00 640
  1b 6b 00 00                  ff .end (operand)
  1c 6b 00 00                  01 .set
  1d 6b 00 00                  01 .literal
  1e 6b 00 00         02 00 00 00 2
  22 6b 00 00                  ff .end (operand)
  23 6b 00 00                  ff .end (block)
 :24 6b 00 00                  0b .case
  25 6b 00 00                  05 .group
  26 6b 00 00                  01 .literal
  27 6b 00 00         02 00 00 00 2
  2b 6b 00 00                  ff .end (operand)
  2c 6b 00 00                  ff .end (operand)
  2d 6b 00 00         41 6b 00 00 .case-end-address
  31 6b 00 00               03 00 .var1 FLAGS
  33 6b 00 00                  01 .literal
  34 6b 00 00         81 02 00 00 641
  38 6b 00 00                  ff .end (operand)
  39 6b 00 00                  01 .set
  3a 6b 00 00                  01 .literal
  3b 6b 00 00         02 00 00 00 2
  3f 6b 00 00                  ff .end (operand)
  40 6b 00 00                  ff .end (block)
 :41 6b 00 00                  0b .case
  42 6b 00 00                  05 .group
  43 6b 00 00                  01 .literal
  44 6b 00 00         03 00 00 00 3
  48 6b 00 00                  ff .end (operand)
  49 6b 00 00                  ff .end (operand)
  4a 6b 00 00         5e 6b 00 00 .case-end-address
  4e 6b 00 00               03 00 .var1 FLAGS
  50 6b 00 00                  01 .literal
  51 6b 00 00         82 02 00 00 642
  55 6b 00 00                  ff .end (operand)
  56 6b 00 00                  01 .set
  57 6b 00 00                  01 .literal
  58 6b 00 00         02 00 00 00 2
  5c 6b 00 00                  ff .end (operand)
  5d 6b 00 00                  ff .end (block)
 :5e 6b 00 00                  0b .case
  5f 6b 00 00                  05 .group
  60 6b 00 00                  01 .literal
  61 6b 00 00         04 00 00 00 4
  65 6b 00 00                  ff .end (operand)
  66 6b 00 00                  ff .end (operand)
  67 6b 00 00         7b 6b 00 00 .case-end-address
  6b 6b 00 00               03 00 .var1 FLAGS
  6d 6b 00 00                  01 .literal
  6e 6b 00 00         83 02 00 00 643
  72 6b 00 00                  ff .end (operand)
  73 6b 00 00                  01 .set
  74 6b 00 00                  01 .literal
  75 6b 00 00         02 00 00 00 2
  79 6b 00 00                  ff .end (operand)
  7a 6b 00 00                  ff .end (block)
 :7b 6b 00 00                  0b .case
  7c 6b 00 00                  05 .group
  7d 6b 00 00                  01 .literal
  7e 6b 00 00         05 00 00 00 5
  82 6b 00 00                  ff .end (operand)
  83 6b 00 00                  ff .end (operand)
  84 6b 00 00         98 6b 00 00 .case-end-address
  88 6b 00 00               03 00 .var1 FLAGS
  8a 6b 00 00                  01 .literal
  8b 6b 00 00         84 02 00 00 644
  8f 6b 00 00                  ff .end (operand)
  90 6b 00 00                  01 .set
  91 6b 00 00                  01 .literal
  92 6b 00 00         02 00 00 00 2
  96 6b 00 00                  ff .end (operand)
  97 6b 00 00                  ff .end (block)
 :98 6b 00 00                  0b .case
  99 6b 00 00                  05 .group
  9a 6b 00 00                  01 .literal
  9b 6b 00 00         06 00 00 00 6
  9f 6b 00 00                  ff .end (operand)
  a0 6b 00 00                  ff .end (operand)
  a1 6b 00 00         b5 6b 00 00 .case-end-address
  a5 6b 00 00               03 00 .var1 FLAGS
  a7 6b 00 00                  01 .literal
  a8 6b 00 00         85 02 00 00 645
  ac 6b 00 00                  ff .end (operand)
  ad 6b 00 00                  01 .set
  ae 6b 00 00                  01 .literal
  af 6b 00 00         02 00 00 00 2
  b3 6b 00 00                  ff .end (operand)
  b4 6b 00 00                  ff .end (block)
 :b5 6b 00 00                  0b .case
  b6 6b 00 00                  05 .group
  b7 6b 00 00                  01 .literal
  b8 6b 00 00         07 00 00 00 7
  bc 6b 00 00                  ff .end (operand)
  bd 6b 00 00                  ff .end (operand)
  be 6b 00 00         d2 6b 00 00 .case-end-address
  c2 6b 00 00               03 00 .var1 FLAGS
  c4 6b 00 00                  01 .literal
  c5 6b 00 00         86 02 00 00 646
  c9 6b 00 00                  ff .end (operand)
  ca 6b 00 00                  01 .set
  cb 6b 00 00                  01 .literal
  cc 6b 00 00         02 00 00 00 2
  d0 6b 00 00                  ff .end (operand)
  d1 6b 00 00                  ff .end (block)
 :d2 6b 00 00                  0b .case
  d3 6b 00 00                  05 .group
  d4 6b 00 00                  01 .literal
  d5 6b 00 00         08 00 00 00 8
  d9 6b 00 00                  ff .end (operand)
  da 6b 00 00                  ff .end (operand)
  db 6b 00 00         ef 6b 00 00 .case-end-address
  df 6b 00 00               03 00 .var1 FLAGS
  e1 6b 00 00                  01 .literal
  e2 6b 00 00         87 02 00 00 647
  e6 6b 00 00                  ff .end (operand)
  e7 6b 00 00                  01 .set
  e8 6b 00 00                  01 .literal
  e9 6b 00 00         02 00 00 00 2
  ed 6b 00 00                  ff .end (operand)
  ee 6b 00 00                  ff .end (block)
 :ef 6b 00 00                  ff .end (switch)
if265
::f0 6b 00 00               05 03 .if [terms=3]
  f2 6b 00 00         19 6d 00 00 .else
  f6 6b 00 00               03 00 .var1 FLAGS
  f8 6b 00 00                  01 .literal
  f9 6b 00 00         56 02 00 00 598
  fd 6b 00 00                  ff .end (operand)
  fe 6b 00 00                  ff .end (operand)
  00 6c 00 00                  04 .if-sign-nonzero
  00 6c 00 00                  01 .literal
  01 6c 00 00         00 00 00 00 0
  05 6c 00 00                  ff .end (operand)
  06 6c 00 00               03 00 .var1 FLAGS
  08 6c 00 00                  01 .literal
  09 6c 00 00         57 02 00 00 599
  0d 6c 00 00                  ff .end (operand)
  0e 6c 00 00                  ff .end (operand)
  10 6c 00 00                  02 .if-sign-nonzero
  10 6c 00 00                  01 .literal
  11 6c 00 00         00 00 00 00 0
  15 6c 00 00                  ff .end (operand)
  16 6c 00 00               03 00 .var1 FLAGS
  18 6c 00 00                  01 .literal
  19 6c 00 00         58 02 00 00 600
  1d 6c 00 00                  ff .end (operand)
  1e 6c 00 00                  ff .end (operand)
  20 6c 00 00                  02 .if-sign-nonzero
  20 6c 00 00                  01 .literal
  21 6c 00 00         00 00 00 00 0
  25 6c 00 00                  ff .end (operand)
  26 6c 00 00                  0a .switch
  27 6c 00 00               03 00 .var1 FLAGS
  29 6c 00 00                  01 .literal
  2a 6c 00 00         7e 02 00 00 638
  2e 6c 00 00                  ff .end (operand)
  2f 6c 00 00                  ff .end (operand)
  30 6c 00 00                  0b .case
  31 6c 00 00                  05 .group
  32 6c 00 00                  01 .literal
  33 6c 00 00         01 00 00 00 1
  37 6c 00 00                  ff .end (operand)
  38 6c 00 00                  ff .end (operand)
  39 6c 00 00         4d 6c 00 00 .case-end-address
  3d 6c 00 00               03 00 .var1 FLAGS
  3f 6c 00 00                  01 .literal
  40 6c 00 00         80 02 00 00 640
  44 6c 00 00                  ff .end (operand)
  45 6c 00 00                  01 .set
  46 6c 00 00                  01 .literal
  47 6c 00 00         01 00 00 00 1
  4b 6c 00 00                  ff .end (operand)
  4c 6c 00 00                  ff .end (block)
 :4d 6c 00 00                  0b .case
  4e 6c 00 00                  05 .group
  4f 6c 00 00                  01 .literal
  50 6c 00 00         02 00 00 00 2
  54 6c 00 00                  ff .end (operand)
  55 6c 00 00                  ff .end (operand)
  56 6c 00 00         6a 6c 00 00 .case-end-address
  5a 6c 00 00               03 00 .var1 FLAGS
  5c 6c 00 00                  01 .literal
  5d 6c 00 00         81 02 00 00 641
  61 6c 00 00                  ff .end (operand)
  62 6c 00 00                  01 .set
  63 6c 00 00                  01 .literal
  64 6c 00 00         01 00 00 00 1
  68 6c 00 00                  ff .end (operand)
  69 6c 00 00                  ff .end (block)
 :6a 6c 00 00                  0b .case
  6b 6c 00 00                  05 .group
  6c 6c 00 00                  01 .literal
  6d 6c 00 00         03 00 00 00 3
  71 6c 00 00                  ff .end (operand)
  72 6c 00 00                  ff .end (operand)
  73 6c 00 00         87 6c 00 00 .case-end-address
  77 6c 00 00               03 00 .var1 FLAGS
  79 6c 00 00                  01 .literal
  7a 6c 00 00         82 02 00 00 642
  7e 6c 00 00                  ff .end (operand)
  7f 6c 00 00                  01 .set
  80 6c 00 00                  01 .literal
  81 6c 00 00         01 00 00 00 1
  85 6c 00 00                  ff .end (operand)
  86 6c 00 00                  ff .end (block)
 :87 6c 00 00                  0b .case
  88 6c 00 00                  05 .group
  89 6c 00 00                  01 .literal
  8a 6c 00 00         04 00 00 00 4
  8e 6c 00 00                  ff .end (operand)
  8f 6c 00 00                  ff .end (operand)
  90 6c 00 00         a4 6c 00 00 .case-end-address
  94 6c 00 00               03 00 .var1 FLAGS
  96 6c 00 00                  01 .literal
  97 6c 00 00         83 02 00 00 643
  9b 6c 00 00                  ff .end (operand)
  9c 6c 00 00                  01 .set
  9d 6c 00 00                  01 .literal
  9e 6c 00 00         01 00 00 00 1
  a2 6c 00 00                  ff .end (operand)
  a3 6c 00 00                  ff .end (block)
 :a4 6c 00 00                  0b .case
  a5 6c 00 00                  05 .group
  a6 6c 00 00                  01 .literal
  a7 6c 00 00         05 00 00 00 5
  ab 6c 00 00                  ff .end (operand)
  ac 6c 00 00                  ff .end (operand)
  ad 6c 00 00         c1 6c 00 00 .case-end-address
  b1 6c 00 00               03 00 .var1 FLAGS
  b3 6c 00 00                  01 .literal
  b4 6c 00 00         84 02 00 00 644
  b8 6c 00 00                  ff .end (operand)
  b9 6c 00 00                  01 .set
  ba 6c 00 00                  01 .literal
  bb 6c 00 00         01 00 00 00 1
  bf 6c 00 00                  ff .end (operand)
  c0 6c 00 00                  ff .end (block)
 :c1 6c 00 00                  0b .case
  c2 6c 00 00                  05 .group
  c3 6c 00 00                  01 .literal
  c4 6c 00 00         06 00 00 00 6
  c8 6c 00 00                  ff .end (operand)
  c9 6c 00 00                  ff .end (operand)
  ca 6c 00 00         de 6c 00 00 .case-end-address
  ce 6c 00 00               03 00 .var1 FLAGS
  d0 6c 00 00                  01 .literal
  d1 6c 00 00         85 02 00 00 645
  d5 6c 00 00                  ff .end (operand)
  d6 6c 00 00                  01 .set
  d7 6c 00 00                  01 .literal
  d8 6c 00 00         01 00 00 00 1
  dc 6c 00 00                  ff .end (operand)
  dd 6c 00 00                  ff .end (block)
 :de 6c 00 00                  0b .case
  df 6c 00 00                  05 .group
  e0 6c 00 00                  01 .literal
  e1 6c 00 00         07 00 00 00 7
  e5 6c 00 00                  ff .end (operand)
  e6 6c 00 00                  ff .end (operand)
  e7 6c 00 00         fb 6c 00 00 .case-end-address
  eb 6c 00 00               03 00 .var1 FLAGS
  ed 6c 00 00                  01 .literal
  ee 6c 00 00         86 02 00 00 646
  f2 6c 00 00                  ff .end (operand)
  f3 6c 00 00                  01 .set
  f4 6c 00 00                  01 .literal
  f5 6c 00 00         01 00 00 00 1
  f9 6c 00 00                  ff .end (operand)
  fa 6c 00 00                  ff .end (block)
 :fb 6c 00 00                  0b .case
  fc 6c 00 00                  05 .group
  fd 6c 00 00                  01 .literal
  fe 6c 00 00         08 00 00 00 8
  02 6d 00 00                  ff .end (operand)
  03 6d 00 00                  ff .end (operand)
  04 6d 00 00         18 6d 00 00 .case-end-address
  08 6d 00 00               03 00 .var1 FLAGS
  0a 6d 00 00                  01 .literal
  0b 6d 00 00         87 02 00 00 647
  0f 6d 00 00                  ff .end (operand)
  10 6d 00 00                  01 .set
  11 6d 00 00                  01 .literal
  12 6d 00 00         01 00 00 00 1
  16 6d 00 00                  ff .end (operand)
  17 6d 00 00                  ff .end (block)
 :18 6d 00 00                  ff .end (switch)
 :19 6d 00 00                  ff .end (block)

.event 15
* 1a 6d 00 00                  0a .switch
  1b 6d 00 00               03 00 .var1 FLAGS
  1d 6d 00 00                  01 .literal
  1e 6d 00 00         7e 02 00 00 638
  22 6d 00 00                  ff .end (operand)
  23 6d 00 00                  ff .end (operand)
  24 6d 00 00                  0b .case
  25 6d 00 00                  05 .group
  26 6d 00 00                  01 .literal
  27 6d 00 00         01 00 00 00 1
  2b 6d 00 00                  ff .end (operand)
  2c 6d 00 00                  ff .end (operand)
  2d 6d 00 00         41 6e 00 00 .case-end-address
  31 6d 00 00                  0a .switch
  32 6d 00 00               03 00 .var1 FLAGS
  34 6d 00 00                  01 .literal
  35 6d 00 00         80 02 00 00 640
  39 6d 00 00                  ff .end (operand)
  3a 6d 00 00                  ff .end (operand)
  3b 6d 00 00                  0b .case
  3c 6d 00 00                  05 .group
  3d 6d 00 00                  01 .literal
  3e 6d 00 00         01 00 00 00 1
  42 6d 00 00                  ff .end (operand)
  43 6d 00 00                  ff .end (operand)
  44 6d 00 00         60 6d 00 00 .case-end-address
  48 6d 00 00               01 4e .exec VcTextNum
  4a 6d 00 00                  01 .literal
  4b 6d 00 00         30 00 00 00 48
  4f 6d 00 00                  ff .end (operand)
  50 6d 00 00                  01 .literal
  51 6d 00 00         50 00 00 00 80
  55 6d 00 00                  ff .end (operand)
  56 6d 00 00               03 00 .var1 FLAGS
  58 6d 00 00                  01 .literal
  59 6d 00 00         59 02 00 00 601
  5d 6d 00 00                  ff .end (operand)
  5e 6d 00 00                  ff .end (operand)
  5f 6d 00 00                  ff .end (block)
 :60 6d 00 00                  0b .case
  61 6d 00 00                  05 .group
  62 6d 00 00                  01 .literal
  63 6d 00 00         02 00 00 00 2
  67 6d 00 00                  ff .end (operand)
  68 6d 00 00                  ff .end (operand)
  69 6d 00 00         85 6d 00 00 .case-end-address
  6d 6d 00 00               01 4e .exec VcTextNum
  6f 6d 00 00                  01 .literal
  70 6d 00 00         30 00 00 00 48
  74 6d 00 00                  ff .end (operand)
  75 6d 00 00                  01 .literal
  76 6d 00 00         70 00 00 00 112
  7a 6d 00 00                  ff .end (operand)
  7b 6d 00 00               03 00 .var1 FLAGS
  7d 6d 00 00                  01 .literal
  7e 6d 00 00         59 02 00 00 601
  82 6d 00 00                  ff .end (operand)
  83 6d 00 00                  ff .end (operand)
  84 6d 00 00                  ff .end (block)
 :85 6d 00 00                  0b .case
  86 6d 00 00                  05 .group
  87 6d 00 00                  01 .literal
  88 6d 00 00         03 00 00 00 3
  8c 6d 00 00                  ff .end (operand)
  8d 6d 00 00                  ff .end (operand)
  8e 6d 00 00         aa 6d 00 00 .case-end-address
  92 6d 00 00               01 4e .exec VcTextNum
  94 6d 00 00                  01 .literal
  95 6d 00 00         30 00 00 00 48
  99 6d 00 00                  ff .end (operand)
  9a 6d 00 00                  01 .literal
  9b 6d 00 00         90 00 00 00 144
  9f 6d 00 00                  ff .end (operand)
  a0 6d 00 00               03 00 .var1 FLAGS
  a2 6d 00 00                  01 .literal
  a3 6d 00 00         59 02 00 00 601
  a7 6d 00 00                  ff .end (operand)
  a8 6d 00 00                  ff .end (operand)
  a9 6d 00 00                  ff .end (block)
 :aa 6d 00 00                  0b .case
  ab 6d 00 00                  05 .group
  ac 6d 00 00                  01 .literal
  ad 6d 00 00         07 00 00 00 7
  b1 6d 00 00                  ff .end (operand)
  b2 6d 00 00                  ff .end (operand)
  b3 6d 00 00         3f 6e 00 00 .case-end-address
if266
 :b7 6d 00 00               05 01 .if [terms=1]
  b9 6d 00 00         e4 6d 00 00 .else
  bd 6d 00 00               03 00 .var1 FLAGS
  bf 6d 00 00                  01 .literal
  c0 6d 00 00         56 02 00 00 598
  c4 6d 00 00                  ff .end (operand)
  c5 6d 00 00                  ff .end (operand)
  c7 6d 00 00                  03 .if-sign-nonzero
  c7 6d 00 00                  01 .literal
  c8 6d 00 00         00 00 00 00 0
  cc 6d 00 00                  ff .end (operand)
  cd 6d 00 00               01 4e .exec VcTextNum
  cf 6d 00 00                  01 .literal
  d0 6d 00 00         30 00 00 00 48
  d4 6d 00 00                  ff .end (operand)
  d5 6d 00 00                  01 .literal
  d6 6d 00 00         50 00 00 00 80
  da 6d 00 00                  ff .end (operand)
  db 6d 00 00               03 00 .var1 FLAGS
  dd 6d 00 00                  01 .literal
  de 6d 00 00         59 02 00 00 601
  e2 6d 00 00                  ff .end (operand)
  e3 6d 00 00                  ff .end (operand)
if267
::e4 6d 00 00               05 01 .if [terms=1]
  e6 6d 00 00         11 6e 00 00 .else
  ea 6d 00 00               03 00 .var1 FLAGS
  ec 6d 00 00                  01 .literal
  ed 6d 00 00         57 02 00 00 599
  f1 6d 00 00                  ff .end (operand)
  f2 6d 00 00                  ff .end (operand)
  f4 6d 00 00                  03 .if-sign-nonzero
  f4 6d 00 00                  01 .literal
  f5 6d 00 00         00 00 00 00 0
  f9 6d 00 00                  ff .end (operand)
  fa 6d 00 00               01 4e .exec VcTextNum
  fc 6d 00 00                  01 .literal
  fd 6d 00 00         30 00 00 00 48
  01 6e 00 00                  ff .end (operand)
  02 6e 00 00                  01 .literal
  03 6e 00 00         70 00 00 00 112
  07 6e 00 00                  ff .end (operand)
  08 6e 00 00               03 00 .var1 FLAGS
  0a 6e 00 00                  01 .literal
  0b 6e 00 00         59 02 00 00 601
  0f 6e 00 00                  ff .end (operand)
  10 6e 00 00                  ff .end (operand)
if268
::11 6e 00 00               05 01 .if [terms=1]
  13 6e 00 00         3e 6e 00 00 .else
  17 6e 00 00               03 00 .var1 FLAGS
  19 6e 00 00                  01 .literal
  1a 6e 00 00         58 02 00 00 600
  1e 6e 00 00                  ff .end (operand)
  1f 6e 00 00                  ff .end (operand)
  21 6e 00 00                  03 .if-sign-nonzero
  21 6e 00 00                  01 .literal
  22 6e 00 00         00 00 00 00 0
  26 6e 00 00                  ff .end (operand)
  27 6e 00 00               01 4e .exec VcTextNum
  29 6e 00 00                  01 .literal
  2a 6e 00 00         30 00 00 00 48
  2e 6e 00 00                  ff .end (operand)
  2f 6e 00 00                  01 .literal
  30 6e 00 00         90 00 00 00 144
  34 6e 00 00                  ff .end (operand)
  35 6e 00 00               03 00 .var1 FLAGS
  37 6e 00 00                  01 .literal
  38 6e 00 00         59 02 00 00 601
  3c 6e 00 00                  ff .end (operand)
  3d 6e 00 00                  ff .end (operand)
 :3e 6e 00 00                  ff .end (block)
 :3f 6e 00 00                  ff .end (switch)
  40 6e 00 00                  ff .end (block)
 :41 6e 00 00                  0b .case
  42 6e 00 00                  05 .group
  43 6e 00 00                  01 .literal
  44 6e 00 00         02 00 00 00 2
  48 6e 00 00                  ff .end (operand)
  49 6e 00 00                  ff .end (operand)
  4a 6e 00 00         5e 6f 00 00 .case-end-address
  4e 6e 00 00                  0a .switch
  4f 6e 00 00               03 00 .var1 FLAGS
  51 6e 00 00                  01 .literal
  52 6e 00 00         81 02 00 00 641
  56 6e 00 00                  ff .end (operand)
  57 6e 00 00                  ff .end (operand)
  58 6e 00 00                  0b .case
  59 6e 00 00                  05 .group
  5a 6e 00 00                  01 .literal
  5b 6e 00 00         01 00 00 00 1
  5f 6e 00 00                  ff .end (operand)
  60 6e 00 00                  ff .end (operand)
  61 6e 00 00         7d 6e 00 00 .case-end-address
  65 6e 00 00               01 4e .exec VcTextNum
  67 6e 00 00                  01 .literal
  68 6e 00 00         30 00 00 00 48
  6c 6e 00 00                  ff .end (operand)
  6d 6e 00 00                  01 .literal
  6e 6e 00 00         50 00 00 00 80
  72 6e 00 00                  ff .end (operand)
  73 6e 00 00               03 00 .var1 FLAGS
  75 6e 00 00                  01 .literal
  76 6e 00 00         5b 02 00 00 603
  7a 6e 00 00                  ff .end (operand)
  7b 6e 00 00                  ff .end (operand)
  7c 6e 00 00                  ff .end (block)
 :7d 6e 00 00                  0b .case
  7e 6e 00 00                  05 .group
  7f 6e 00 00                  01 .literal
  80 6e 00 00         02 00 00 00 2
  84 6e 00 00                  ff .end (operand)
  85 6e 00 00                  ff .end (operand)
  86 6e 00 00         a2 6e 00 00 .case-end-address
  8a 6e 00 00               01 4e .exec VcTextNum
  8c 6e 00 00                  01 .literal
  8d 6e 00 00         30 00 00 00 48
  91 6e 00 00                  ff .end (operand)
  92 6e 00 00                  01 .literal
  93 6e 00 00         70 00 00 00 112
  97 6e 00 00                  ff .end (operand)
  98 6e 00 00               03 00 .var1 FLAGS
  9a 6e 00 00                  01 .literal
  9b 6e 00 00         5b 02 00 00 603
  9f 6e 00 00                  ff .end (operand)
  a0 6e 00 00                  ff .end (operand)
  a1 6e 00 00                  ff .end (block)
 :a2 6e 00 00                  0b .case
  a3 6e 00 00                  05 .group
  a4 6e 00 00                  01 .literal
  a5 6e 00 00         03 00 00 00 3
  a9 6e 00 00                  ff .end (operand)
  aa 6e 00 00                  ff .end (operand)
  ab 6e 00 00         c7 6e 00 00 .case-end-address
  af 6e 00 00               01 4e .exec VcTextNum
  b1 6e 00 00                  01 .literal
  b2 6e 00 00         30 00 00 00 48
  b6 6e 00 00                  ff .end (operand)
  b7 6e 00 00                  01 .literal
  b8 6e 00 00         90 00 00 00 144
  bc 6e 00 00                  ff .end (operand)
  bd 6e 00 00               03 00 .var1 FLAGS
  bf 6e 00 00                  01 .literal
  c0 6e 00 00         5b 02 00 00 603
  c4 6e 00 00                  ff .end (operand)
  c5 6e 00 00                  ff .end (operand)
  c6 6e 00 00                  ff .end (block)
 :c7 6e 00 00                  0b .case
  c8 6e 00 00                  05 .group
  c9 6e 00 00                  01 .literal
  ca 6e 00 00         07 00 00 00 7
  ce 6e 00 00                  ff .end (operand)
  cf 6e 00 00                  ff .end (operand)
  d0 6e 00 00         5c 6f 00 00 .case-end-address
if269
 :d4 6e 00 00               05 01 .if [terms=1]
  d6 6e 00 00         01 6f 00 00 .else
  da 6e 00 00               03 00 .var1 FLAGS
  dc 6e 00 00                  01 .literal
  dd 6e 00 00         56 02 00 00 598
  e1 6e 00 00                  ff .end (operand)
  e2 6e 00 00                  ff .end (operand)
  e4 6e 00 00                  03 .if-sign-nonzero
  e4 6e 00 00                  01 .literal
  e5 6e 00 00         00 00 00 00 0
  e9 6e 00 00                  ff .end (operand)
  ea 6e 00 00               01 4e .exec VcTextNum
  ec 6e 00 00                  01 .literal
  ed 6e 00 00         30 00 00 00 48
  f1 6e 00 00                  ff .end (operand)
  f2 6e 00 00                  01 .literal
  f3 6e 00 00         50 00 00 00 80
  f7 6e 00 00                  ff .end (operand)
  f8 6e 00 00               03 00 .var1 FLAGS
  fa 6e 00 00                  01 .literal
  fb 6e 00 00         5b 02 00 00 603
  ff 6e 00 00                  ff .end (operand)
  00 6f 00 00                  ff .end (operand)
if270
::01 6f 00 00               05 01 .if [terms=1]
  03 6f 00 00         2e 6f 00 00 .else
  07 6f 00 00               03 00 .var1 FLAGS
  09 6f 00 00                  01 .literal
  0a 6f 00 00         57 02 00 00 599
  0e 6f 00 00                  ff .end (operand)
  0f 6f 00 00                  ff .end (operand)
  11 6f 00 00                  03 .if-sign-nonzero
  11 6f 00 00                  01 .literal
  12 6f 00 00         00 00 00 00 0
  16 6f 00 00                  ff .end (operand)
  17 6f 00 00               01 4e .exec VcTextNum
  19 6f 00 00                  01 .literal
  1a 6f 00 00         30 00 00 00 48
  1e 6f 00 00                  ff .end (operand)
  1f 6f 00 00                  01 .literal
  20 6f 00 00         70 00 00 00 112
  24 6f 00 00                  ff .end (operand)
  25 6f 00 00               03 00 .var1 FLAGS
  27 6f 00 00                  01 .literal
  28 6f 00 00         5b 02 00 00 603
  2c 6f 00 00                  ff .end (operand)
  2d 6f 00 00                  ff .end (operand)
if271
::2e 6f 00 00               05 01 .if [terms=1]
  30 6f 00 00         5b 6f 00 00 .else
  34 6f 00 00               03 00 .var1 FLAGS
  36 6f 00 00                  01 .literal
  37 6f 00 00         58 02 00 00 600
  3b 6f 00 00                  ff .end (operand)
  3c 6f 00 00                  ff .end (operand)
  3e 6f 00 00                  03 .if-sign-nonzero
  3e 6f 00 00                  01 .literal
  3f 6f 00 00         00 00 00 00 0
  43 6f 00 00                  ff .end (operand)
  44 6f 00 00               01 4e .exec VcTextNum
  46 6f 00 00                  01 .literal
  47 6f 00 00         30 00 00 00 48
  4b 6f 00 00                  ff .end (operand)
  4c 6f 00 00                  01 .literal
  4d 6f 00 00         90 00 00 00 144
  51 6f 00 00                  ff .end (operand)
  52 6f 00 00               03 00 .var1 FLAGS
  54 6f 00 00                  01 .literal
  55 6f 00 00         5b 02 00 00 603
  59 6f 00 00                  ff .end (operand)
  5a 6f 00 00                  ff .end (operand)
 :5b 6f 00 00                  ff .end (block)
 :5c 6f 00 00                  ff .end (switch)
  5d 6f 00 00                  ff .end (block)
 :5e 6f 00 00                  0b .case
  5f 6f 00 00                  05 .group
  60 6f 00 00                  01 .literal
  61 6f 00 00         03 00 00 00 3
  65 6f 00 00                  ff .end (operand)
  66 6f 00 00                  ff .end (operand)
  67 6f 00 00         7b 70 00 00 .case-end-address
  6b 6f 00 00                  0a .switch
  6c 6f 00 00               03 00 .var1 FLAGS
  6e 6f 00 00                  01 .literal
  6f 6f 00 00         82 02 00 00 642
  73 6f 00 00                  ff .end (operand)
  74 6f 00 00                  ff .end (operand)
  75 6f 00 00                  0b .case
  76 6f 00 00                  05 .group
  77 6f 00 00                  01 .literal
  78 6f 00 00         01 00 00 00 1
  7c 6f 00 00                  ff .end (operand)
  7d 6f 00 00                  ff .end (operand)
  7e 6f 00 00         9a 6f 00 00 .case-end-address
  82 6f 00 00               01 4e .exec VcTextNum
  84 6f 00 00                  01 .literal
  85 6f 00 00         30 00 00 00 48
  89 6f 00 00                  ff .end (operand)
  8a 6f 00 00                  01 .literal
  8b 6f 00 00         50 00 00 00 80
  8f 6f 00 00                  ff .end (operand)
  90 6f 00 00               03 00 .var1 FLAGS
  92 6f 00 00                  01 .literal
  93 6f 00 00         5d 02 00 00 605
  97 6f 00 00                  ff .end (operand)
  98 6f 00 00                  ff .end (operand)
  99 6f 00 00                  ff .end (block)
 :9a 6f 00 00                  0b .case
  9b 6f 00 00                  05 .group
  9c 6f 00 00                  01 .literal
  9d 6f 00 00         02 00 00 00 2
  a1 6f 00 00                  ff .end (operand)
  a2 6f 00 00                  ff .end (operand)
  a3 6f 00 00         bf 6f 00 00 .case-end-address
  a7 6f 00 00               01 4e .exec VcTextNum
  a9 6f 00 00                  01 .literal
  aa 6f 00 00         30 00 00 00 48
  ae 6f 00 00                  ff .end (operand)
  af 6f 00 00                  01 .literal
  b0 6f 00 00         70 00 00 00 112
  b4 6f 00 00                  ff .end (operand)
  b5 6f 00 00               03 00 .var1 FLAGS
  b7 6f 00 00                  01 .literal
  b8 6f 00 00         5d 02 00 00 605
  bc 6f 00 00                  ff .end (operand)
  bd 6f 00 00                  ff .end (operand)
  be 6f 00 00                  ff .end (block)
 :bf 6f 00 00                  0b .case
  c0 6f 00 00                  05 .group
  c1 6f 00 00                  01 .literal
  c2 6f 00 00         03 00 00 00 3
  c6 6f 00 00                  ff .end (operand)
  c7 6f 00 00                  ff .end (operand)
  c8 6f 00 00         e4 6f 00 00 .case-end-address
  cc 6f 00 00               01 4e .exec VcTextNum
  ce 6f 00 00                  01 .literal
  cf 6f 00 00         30 00 00 00 48
  d3 6f 00 00                  ff .end (operand)
  d4 6f 00 00                  01 .literal
  d5 6f 00 00         90 00 00 00 144
  d9 6f 00 00                  ff .end (operand)
  da 6f 00 00               03 00 .var1 FLAGS
  dc 6f 00 00                  01 .literal
  dd 6f 00 00         5d 02 00 00 605
  e1 6f 00 00                  ff .end (operand)
  e2 6f 00 00                  ff .end (operand)
  e3 6f 00 00                  ff .end (block)
 :e4 6f 00 00                  0b .case
  e5 6f 00 00                  05 .group
  e6 6f 00 00                  01 .literal
  e7 6f 00 00         07 00 00 00 7
  eb 6f 00 00                  ff .end (operand)
  ec 6f 00 00                  ff .end (operand)
  ed 6f 00 00         79 70 00 00 .case-end-address
if272
 :f1 6f 00 00               05 01 .if [terms=1]
  f3 6f 00 00         1e 70 00 00 .else
  f7 6f 00 00               03 00 .var1 FLAGS
  f9 6f 00 00                  01 .literal
  fa 6f 00 00         56 02 00 00 598
  fe 6f 00 00                  ff .end (operand)
  ff 6f 00 00                  ff .end (operand)
  01 70 00 00                  03 .if-sign-nonzero
  01 70 00 00                  01 .literal
  02 70 00 00         00 00 00 00 0
  06 70 00 00                  ff .end (operand)
  07 70 00 00               01 4e .exec VcTextNum
  09 70 00 00                  01 .literal
  0a 70 00 00         30 00 00 00 48
  0e 70 00 00                  ff .end (operand)
  0f 70 00 00                  01 .literal
  10 70 00 00         50 00 00 00 80
  14 70 00 00                  ff .end (operand)
  15 70 00 00               03 00 .var1 FLAGS
  17 70 00 00                  01 .literal
  18 70 00 00         5d 02 00 00 605
  1c 70 00 00                  ff .end (operand)
  1d 70 00 00                  ff .end (operand)
if273
::1e 70 00 00               05 01 .if [terms=1]
  20 70 00 00         4b 70 00 00 .else
  24 70 00 00               03 00 .var1 FLAGS
  26 70 00 00                  01 .literal
  27 70 00 00         57 02 00 00 599
  2b 70 00 00                  ff .end (operand)
  2c 70 00 00                  ff .end (operand)
  2e 70 00 00                  03 .if-sign-nonzero
  2e 70 00 00                  01 .literal
  2f 70 00 00         00 00 00 00 0
  33 70 00 00                  ff .end (operand)
  34 70 00 00               01 4e .exec VcTextNum
  36 70 00 00                  01 .literal
  37 70 00 00         30 00 00 00 48
  3b 70 00 00                  ff .end (operand)
  3c 70 00 00                  01 .literal
  3d 70 00 00         70 00 00 00 112
  41 70 00 00                  ff .end (operand)
  42 70 00 00               03 00 .var1 FLAGS
  44 70 00 00                  01 .literal
  45 70 00 00         5d 02 00 00 605
  49 70 00 00                  ff .end (operand)
  4a 70 00 00                  ff .end (operand)
if274
::4b 70 00 00               05 01 .if [terms=1]
  4d 70 00 00         78 70 00 00 .else
  51 70 00 00               03 00 .var1 FLAGS
  53 70 00 00                  01 .literal
  54 70 00 00         58 02 00 00 600
  58 70 00 00                  ff .end (operand)
  59 70 00 00                  ff .end (operand)
  5b 70 00 00                  03 .if-sign-nonzero
  5b 70 00 00                  01 .literal
  5c 70 00 00         00 00 00 00 0
  60 70 00 00                  ff .end (operand)
  61 70 00 00               01 4e .exec VcTextNum
  63 70 00 00                  01 .literal
  64 70 00 00         30 00 00 00 48
  68 70 00 00                  ff .end (operand)
  69 70 00 00                  01 .literal
  6a 70 00 00         90 00 00 00 144
  6e 70 00 00                  ff .end (operand)
  6f 70 00 00               03 00 .var1 FLAGS
  71 70 00 00                  01 .literal
  72 70 00 00         5d 02 00 00 605
  76 70 00 00                  ff .end (operand)
  77 70 00 00                  ff .end (operand)
 :78 70 00 00                  ff .end (block)
 :79 70 00 00                  ff .end (switch)
  7a 70 00 00                  ff .end (block)
 :7b 70 00 00                  0b .case
  7c 70 00 00                  05 .group
  7d 70 00 00                  01 .literal
  7e 70 00 00         04 00 00 00 4
  82 70 00 00                  ff .end (operand)
  83 70 00 00                  ff .end (operand)
  84 70 00 00         98 71 00 00 .case-end-address
  88 70 00 00                  0a .switch
  89 70 00 00               03 00 .var1 FLAGS
  8b 70 00 00                  01 .literal
  8c 70 00 00         83 02 00 00 643
  90 70 00 00                  ff .end (operand)
  91 70 00 00                  ff .end (operand)
  92 70 00 00                  0b .case
  93 70 00 00                  05 .group
  94 70 00 00                  01 .literal
  95 70 00 00         01 00 00 00 1
  99 70 00 00                  ff .end (operand)
  9a 70 00 00                  ff .end (operand)
  9b 70 00 00         b7 70 00 00 .case-end-address
  9f 70 00 00               01 4e .exec VcTextNum
  a1 70 00 00                  01 .literal
  a2 70 00 00         30 00 00 00 48
  a6 70 00 00                  ff .end (operand)
  a7 70 00 00                  01 .literal
  a8 70 00 00         50 00 00 00 80
  ac 70 00 00                  ff .end (operand)
  ad 70 00 00               03 00 .var1 FLAGS
  af 70 00 00                  01 .literal
  b0 70 00 00         5f 02 00 00 607
  b4 70 00 00                  ff .end (operand)
  b5 70 00 00                  ff .end (operand)
  b6 70 00 00                  ff .end (block)
 :b7 70 00 00                  0b .case
  b8 70 00 00                  05 .group
  b9 70 00 00                  01 .literal
  ba 70 00 00         02 00 00 00 2
  be 70 00 00                  ff .end (operand)
  bf 70 00 00                  ff .end (operand)
  c0 70 00 00         dc 70 00 00 .case-end-address
  c4 70 00 00               01 4e .exec VcTextNum
  c6 70 00 00                  01 .literal
  c7 70 00 00         30 00 00 00 48
  cb 70 00 00                  ff .end (operand)
  cc 70 00 00                  01 .literal
  cd 70 00 00         70 00 00 00 112
  d1 70 00 00                  ff .end (operand)
  d2 70 00 00               03 00 .var1 FLAGS
  d4 70 00 00                  01 .literal
  d5 70 00 00         5f 02 00 00 607
  d9 70 00 00                  ff .end (operand)
  da 70 00 00                  ff .end (operand)
  db 70 00 00                  ff .end (block)
 :dc 70 00 00                  0b .case
  dd 70 00 00                  05 .group
  de 70 00 00                  01 .literal
  df 70 00 00         03 00 00 00 3
  e3 70 00 00                  ff .end (operand)
  e4 70 00 00                  ff .end (operand)
  e5 70 00 00         01 71 00 00 .case-end-address
  e9 70 00 00               01 4e .exec VcTextNum
  eb 70 00 00                  01 .literal
  ec 70 00 00         30 00 00 00 48
  f0 70 00 00                  ff .end (operand)
  f1 70 00 00                  01 .literal
  f2 70 00 00         90 00 00 00 144
  f6 70 00 00                  ff .end (operand)
  f7 70 00 00               03 00 .var1 FLAGS
  f9 70 00 00                  01 .literal
  fa 70 00 00         5f 02 00 00 607
  fe 70 00 00                  ff .end (operand)
  ff 70 00 00                  ff .end (operand)
  00 71 00 00                  ff .end (block)
 :01 71 00 00                  0b .case
  02 71 00 00                  05 .group
  03 71 00 00                  01 .literal
  04 71 00 00         07 00 00 00 7
  08 71 00 00                  ff .end (operand)
  09 71 00 00                  ff .end (operand)
  0a 71 00 00         96 71 00 00 .case-end-address
if275
 :0e 71 00 00               05 01 .if [terms=1]
  10 71 00 00         3b 71 00 00 .else
  14 71 00 00               03 00 .var1 FLAGS
  16 71 00 00                  01 .literal
  17 71 00 00         56 02 00 00 598
  1b 71 00 00                  ff .end (operand)
  1c 71 00 00                  ff .end (operand)
  1e 71 00 00                  03 .if-sign-nonzero
  1e 71 00 00                  01 .literal
  1f 71 00 00         00 00 00 00 0
  23 71 00 00                  ff .end (operand)
  24 71 00 00               01 4e .exec VcTextNum
  26 71 00 00                  01 .literal
  27 71 00 00         30 00 00 00 48
  2b 71 00 00                  ff .end (operand)
  2c 71 00 00                  01 .literal
  2d 71 00 00         50 00 00 00 80
  31 71 00 00                  ff .end (operand)
  32 71 00 00               03 00 .var1 FLAGS
  34 71 00 00                  01 .literal
  35 71 00 00         5f 02 00 00 607
  39 71 00 00                  ff .end (operand)
  3a 71 00 00                  ff .end (operand)
if276
::3b 71 00 00               05 01 .if [terms=1]
  3d 71 00 00         68 71 00 00 .else
  41 71 00 00               03 00 .var1 FLAGS
  43 71 00 00                  01 .literal
  44 71 00 00         57 02 00 00 599
  48 71 00 00                  ff .end (operand)
  49 71 00 00                  ff .end (operand)
  4b 71 00 00                  03 .if-sign-nonzero
  4b 71 00 00                  01 .literal
  4c 71 00 00         00 00 00 00 0
  50 71 00 00                  ff .end (operand)
  51 71 00 00               01 4e .exec VcTextNum
  53 71 00 00                  01 .literal
  54 71 00 00         30 00 00 00 48
  58 71 00 00                  ff .end (operand)
  59 71 00 00                  01 .literal
  5a 71 00 00         70 00 00 00 112
  5e 71 00 00                  ff .end (operand)
  5f 71 00 00               03 00 .var1 FLAGS
  61 71 00 00                  01 .literal
  62 71 00 00         5f 02 00 00 607
  66 71 00 00                  ff .end (operand)
  67 71 00 00                  ff .end (operand)
if277
::68 71 00 00               05 01 .if [terms=1]
  6a 71 00 00         95 71 00 00 .else
  6e 71 00 00               03 00 .var1 FLAGS
  70 71 00 00                  01 .literal
  71 71 00 00         58 02 00 00 600
  75 71 00 00                  ff .end (operand)
  76 71 00 00                  ff .end (operand)
  78 71 00 00                  03 .if-sign-nonzero
  78 71 00 00                  01 .literal
  79 71 00 00         00 00 00 00 0
  7d 71 00 00                  ff .end (operand)
  7e 71 00 00               01 4e .exec VcTextNum
  80 71 00 00                  01 .literal
  81 71 00 00         30 00 00 00 48
  85 71 00 00                  ff .end (operand)
  86 71 00 00                  01 .literal
  87 71 00 00         90 00 00 00 144
  8b 71 00 00                  ff .end (operand)
  8c 71 00 00               03 00 .var1 FLAGS
  8e 71 00 00                  01 .literal
  8f 71 00 00         5f 02 00 00 607
  93 71 00 00                  ff .end (operand)
  94 71 00 00                  ff .end (operand)
 :95 71 00 00                  ff .end (block)
 :96 71 00 00                  ff .end (switch)
  97 71 00 00                  ff .end (block)
 :98 71 00 00                  0b .case
  99 71 00 00                  05 .group
  9a 71 00 00                  01 .literal
  9b 71 00 00         05 00 00 00 5
  9f 71 00 00                  ff .end (operand)
  a0 71 00 00                  ff .end (operand)
  a1 71 00 00         b5 72 00 00 .case-end-address
  a5 71 00 00                  0a .switch
  a6 71 00 00               03 00 .var1 FLAGS
  a8 71 00 00                  01 .literal
  a9 71 00 00         84 02 00 00 644
  ad 71 00 00                  ff .end (operand)
  ae 71 00 00                  ff .end (operand)
  af 71 00 00                  0b .case
  b0 71 00 00                  05 .group
  b1 71 00 00                  01 .literal
  b2 71 00 00         01 00 00 00 1
  b6 71 00 00                  ff .end (operand)
  b7 71 00 00                  ff .end (operand)
  b8 71 00 00         d4 71 00 00 .case-end-address
  bc 71 00 00               01 4e .exec VcTextNum
  be 71 00 00                  01 .literal
  bf 71 00 00         30 00 00 00 48
  c3 71 00 00                  ff .end (operand)
  c4 71 00 00                  01 .literal
  c5 71 00 00         50 00 00 00 80
  c9 71 00 00                  ff .end (operand)
  ca 71 00 00               03 00 .var1 FLAGS
  cc 71 00 00                  01 .literal
  cd 71 00 00         61 02 00 00 609
  d1 71 00 00                  ff .end (operand)
  d2 71 00 00                  ff .end (operand)
  d3 71 00 00                  ff .end (block)
 :d4 71 00 00                  0b .case
  d5 71 00 00                  05 .group
  d6 71 00 00                  01 .literal
  d7 71 00 00         02 00 00 00 2
  db 71 00 00                  ff .end (operand)
  dc 71 00 00                  ff .end (operand)
  dd 71 00 00         f9 71 00 00 .case-end-address
  e1 71 00 00               01 4e .exec VcTextNum
  e3 71 00 00                  01 .literal
  e4 71 00 00         30 00 00 00 48
  e8 71 00 00                  ff .end (operand)
  e9 71 00 00                  01 .literal
  ea 71 00 00         70 00 00 00 112
  ee 71 00 00                  ff .end (operand)
  ef 71 00 00               03 00 .var1 FLAGS
  f1 71 00 00                  01 .literal
  f2 71 00 00         61 02 00 00 609
  f6 71 00 00                  ff .end (operand)
  f7 71 00 00                  ff .end (operand)
  f8 71 00 00                  ff .end (block)
 :f9 71 00 00                  0b .case
  fa 71 00 00                  05 .group
  fb 71 00 00                  01 .literal
  fc 71 00 00         03 00 00 00 3
  00 72 00 00                  ff .end (operand)
  01 72 00 00                  ff .end (operand)
  02 72 00 00         1e 72 00 00 .case-end-address
  06 72 00 00               01 4e .exec VcTextNum
  08 72 00 00                  01 .literal
  09 72 00 00         30 00 00 00 48
  0d 72 00 00                  ff .end (operand)
  0e 72 00 00                  01 .literal
  0f 72 00 00         90 00 00 00 144
  13 72 00 00                  ff .end (operand)
  14 72 00 00               03 00 .var1 FLAGS
  16 72 00 00                  01 .literal
  17 72 00 00         61 02 00 00 609
  1b 72 00 00                  ff .end (operand)
  1c 72 00 00                  ff .end (operand)
  1d 72 00 00                  ff .end (block)
 :1e 72 00 00                  0b .case
  1f 72 00 00                  05 .group
  20 72 00 00                  01 .literal
  21 72 00 00         07 00 00 00 7
  25 72 00 00                  ff .end (operand)
  26 72 00 00                  ff .end (operand)
  27 72 00 00         b3 72 00 00 .case-end-address
if278
 :2b 72 00 00               05 01 .if [terms=1]
  2d 72 00 00         58 72 00 00 .else
  31 72 00 00               03 00 .var1 FLAGS
  33 72 00 00                  01 .literal
  34 72 00 00         56 02 00 00 598
  38 72 00 00                  ff .end (operand)
  39 72 00 00                  ff .end (operand)
  3b 72 00 00                  03 .if-sign-nonzero
  3b 72 00 00                  01 .literal
  3c 72 00 00         00 00 00 00 0
  40 72 00 00                  ff .end (operand)
  41 72 00 00               01 4e .exec VcTextNum
  43 72 00 00                  01 .literal
  44 72 00 00         30 00 00 00 48
  48 72 00 00                  ff .end (operand)
  49 72 00 00                  01 .literal
  4a 72 00 00         50 00 00 00 80
  4e 72 00 00                  ff .end (operand)
  4f 72 00 00               03 00 .var1 FLAGS
  51 72 00 00                  01 .literal
  52 72 00 00         61 02 00 00 609
  56 72 00 00                  ff .end (operand)
  57 72 00 00                  ff .end (operand)
if279
::58 72 00 00               05 01 .if [terms=1]
  5a 72 00 00         85 72 00 00 .else
  5e 72 00 00               03 00 .var1 FLAGS
  60 72 00 00                  01 .literal
  61 72 00 00         57 02 00 00 599
  65 72 00 00                  ff .end (operand)
  66 72 00 00                  ff .end (operand)
  68 72 00 00                  03 .if-sign-nonzero
  68 72 00 00                  01 .literal
  69 72 00 00         00 00 00 00 0
  6d 72 00 00                  ff .end (operand)
  6e 72 00 00               01 4e .exec VcTextNum
  70 72 00 00                  01 .literal
  71 72 00 00         30 00 00 00 48
  75 72 00 00                  ff .end (operand)
  76 72 00 00                  01 .literal
  77 72 00 00         70 00 00 00 112
  7b 72 00 00                  ff .end (operand)
  7c 72 00 00               03 00 .var1 FLAGS
  7e 72 00 00                  01 .literal
  7f 72 00 00         61 02 00 00 609
  83 72 00 00                  ff .end (operand)
  84 72 00 00                  ff .end (operand)
if280
::85 72 00 00               05 01 .if [terms=1]
  87 72 00 00         b2 72 00 00 .else
  8b 72 00 00               03 00 .var1 FLAGS
  8d 72 00 00                  01 .literal
  8e 72 00 00         58 02 00 00 600
  92 72 00 00                  ff .end (operand)
  93 72 00 00                  ff .end (operand)
  95 72 00 00                  03 .if-sign-nonzero
  95 72 00 00                  01 .literal
  96 72 00 00         00 00 00 00 0
  9a 72 00 00                  ff .end (operand)
  9b 72 00 00               01 4e .exec VcTextNum
  9d 72 00 00                  01 .literal
  9e 72 00 00         30 00 00 00 48
  a2 72 00 00                  ff .end (operand)
  a3 72 00 00                  01 .literal
  a4 72 00 00         90 00 00 00 144
  a8 72 00 00                  ff .end (operand)
  a9 72 00 00               03 00 .var1 FLAGS
  ab 72 00 00                  01 .literal
  ac 72 00 00         61 02 00 00 609
  b0 72 00 00                  ff .end (operand)
  b1 72 00 00                  ff .end (operand)
 :b2 72 00 00                  ff .end (block)
 :b3 72 00 00                  ff .end (switch)
  b4 72 00 00                  ff .end (block)
 :b5 72 00 00                  0b .case
  b6 72 00 00                  05 .group
  b7 72 00 00                  01 .literal
  b8 72 00 00         06 00 00 00 6
  bc 72 00 00                  ff .end (operand)
  bd 72 00 00                  ff .end (operand)
  be 72 00 00         d2 73 00 00 .case-end-address
  c2 72 00 00                  0a .switch
  c3 72 00 00               03 00 .var1 FLAGS
  c5 72 00 00                  01 .literal
  c6 72 00 00         85 02 00 00 645
  ca 72 00 00                  ff .end (operand)
  cb 72 00 00                  ff .end (operand)
  cc 72 00 00                  0b .case
  cd 72 00 00                  05 .group
  ce 72 00 00                  01 .literal
  cf 72 00 00         01 00 00 00 1
  d3 72 00 00                  ff .end (operand)
  d4 72 00 00                  ff .end (operand)
  d5 72 00 00         f1 72 00 00 .case-end-address
  d9 72 00 00               01 4e .exec VcTextNum
  db 72 00 00                  01 .literal
  dc 72 00 00         30 00 00 00 48
  e0 72 00 00                  ff .end (operand)
  e1 72 00 00                  01 .literal
  e2 72 00 00         50 00 00 00 80
  e6 72 00 00                  ff .end (operand)
  e7 72 00 00               03 00 .var1 FLAGS
  e9 72 00 00                  01 .literal
  ea 72 00 00         63 02 00 00 611
  ee 72 00 00                  ff .end (operand)
  ef 72 00 00                  ff .end (operand)
  f0 72 00 00                  ff .end (block)
 :f1 72 00 00                  0b .case
  f2 72 00 00                  05 .group
  f3 72 00 00                  01 .literal
  f4 72 00 00         02 00 00 00 2
  f8 72 00 00                  ff .end (operand)
  f9 72 00 00                  ff .end (operand)
  fa 72 00 00         16 73 00 00 .case-end-address
  fe 72 00 00               01 4e .exec VcTextNum
  00 73 00 00                  01 .literal
  01 73 00 00         30 00 00 00 48
  05 73 00 00                  ff .end (operand)
  06 73 00 00                  01 .literal
  07 73 00 00         70 00 00 00 112
  0b 73 00 00                  ff .end (operand)
  0c 73 00 00               03 00 .var1 FLAGS
  0e 73 00 00                  01 .literal
  0f 73 00 00         63 02 00 00 611
  13 73 00 00                  ff .end (operand)
  14 73 00 00                  ff .end (operand)
  15 73 00 00                  ff .end (block)
 :16 73 00 00                  0b .case
  17 73 00 00                  05 .group
  18 73 00 00                  01 .literal
  19 73 00 00         03 00 00 00 3
  1d 73 00 00                  ff .end (operand)
  1e 73 00 00                  ff .end (operand)
  1f 73 00 00         3b 73 00 00 .case-end-address
  23 73 00 00               01 4e .exec VcTextNum
  25 73 00 00                  01 .literal
  26 73 00 00         30 00 00 00 48
  2a 73 00 00                  ff .end (operand)
  2b 73 00 00                  01 .literal
  2c 73 00 00         90 00 00 00 144
  30 73 00 00                  ff .end (operand)
  31 73 00 00               03 00 .var1 FLAGS
  33 73 00 00                  01 .literal
  34 73 00 00         63 02 00 00 611
  38 73 00 00                  ff .end (operand)
  39 73 00 00                  ff .end (operand)
  3a 73 00 00                  ff .end (block)
 :3b 73 00 00                  0b .case
  3c 73 00 00                  05 .group
  3d 73 00 00                  01 .literal
  3e 73 00 00         07 00 00 00 7
  42 73 00 00                  ff .end (operand)
  43 73 00 00                  ff .end (operand)
  44 73 00 00         d0 73 00 00 .case-end-address
if281
 :48 73 00 00               05 01 .if [terms=1]
  4a 73 00 00         75 73 00 00 .else
  4e 73 00 00               03 00 .var1 FLAGS
  50 73 00 00                  01 .literal
  51 73 00 00         56 02 00 00 598
  55 73 00 00                  ff .end (operand)
  56 73 00 00                  ff .end (operand)
  58 73 00 00                  03 .if-sign-nonzero
  58 73 00 00                  01 .literal
  59 73 00 00         00 00 00 00 0
  5d 73 00 00                  ff .end (operand)
  5e 73 00 00               01 4e .exec VcTextNum
  60 73 00 00                  01 .literal
  61 73 00 00         30 00 00 00 48
  65 73 00 00                  ff .end (operand)
  66 73 00 00                  01 .literal
  67 73 00 00         50 00 00 00 80
  6b 73 00 00                  ff .end (operand)
  6c 73 00 00               03 00 .var1 FLAGS
  6e 73 00 00                  01 .literal
  6f 73 00 00         63 02 00 00 611
  73 73 00 00                  ff .end (operand)
  74 73 00 00                  ff .end (operand)
if282
::75 73 00 00               05 01 .if [terms=1]
  77 73 00 00         a2 73 00 00 .else
  7b 73 00 00               03 00 .var1 FLAGS
  7d 73 00 00                  01 .literal
  7e 73 00 00         57 02 00 00 599
  82 73 00 00                  ff .end (operand)
  83 73 00 00                  ff .end (operand)
  85 73 00 00                  03 .if-sign-nonzero
  85 73 00 00                  01 .literal
  86 73 00 00         00 00 00 00 0
  8a 73 00 00                  ff .end (operand)
  8b 73 00 00               01 4e .exec VcTextNum
  8d 73 00 00                  01 .literal
  8e 73 00 00         30 00 00 00 48
  92 73 00 00                  ff .end (operand)
  93 73 00 00                  01 .literal
  94 73 00 00         70 00 00 00 112
  98 73 00 00                  ff .end (operand)
  99 73 00 00               03 00 .var1 FLAGS
  9b 73 00 00                  01 .literal
  9c 73 00 00         63 02 00 00 611
  a0 73 00 00                  ff .end (operand)
  a1 73 00 00                  ff .end (operand)
if283
::a2 73 00 00               05 01 .if [terms=1]
  a4 73 00 00         cf 73 00 00 .else
  a8 73 00 00               03 00 .var1 FLAGS
  aa 73 00 00                  01 .literal
  ab 73 00 00         58 02 00 00 600
  af 73 00 00                  ff .end (operand)
  b0 73 00 00                  ff .end (operand)
  b2 73 00 00                  03 .if-sign-nonzero
  b2 73 00 00                  01 .literal
  b3 73 00 00         00 00 00 00 0
  b7 73 00 00                  ff .end (operand)
  b8 73 00 00               01 4e .exec VcTextNum
  ba 73 00 00                  01 .literal
  bb 73 00 00         30 00 00 00 48
  bf 73 00 00                  ff .end (operand)
  c0 73 00 00                  01 .literal
  c1 73 00 00         90 00 00 00 144
  c5 73 00 00                  ff .end (operand)
  c6 73 00 00               03 00 .var1 FLAGS
  c8 73 00 00                  01 .literal
  c9 73 00 00         63 02 00 00 611
  cd 73 00 00                  ff .end (operand)
  ce 73 00 00                  ff .end (operand)
 :cf 73 00 00                  ff .end (block)
 :d0 73 00 00                  ff .end (switch)
  d1 73 00 00                  ff .end (block)
 :d2 73 00 00                  0b .case
  d3 73 00 00                  05 .group
  d4 73 00 00                  01 .literal
  d5 73 00 00         07 00 00 00 7
  d9 73 00 00                  ff .end (operand)
  da 73 00 00                  ff .end (operand)
  db 73 00 00         ef 74 00 00 .case-end-address
  df 73 00 00                  0a .switch
  e0 73 00 00               03 00 .var1 FLAGS
  e2 73 00 00                  01 .literal
  e3 73 00 00         86 02 00 00 646
  e7 73 00 00                  ff .end (operand)
  e8 73 00 00                  ff .end (operand)
  e9 73 00 00                  0b .case
  ea 73 00 00                  05 .group
  eb 73 00 00                  01 .literal
  ec 73 00 00         01 00 00 00 1
  f0 73 00 00                  ff .end (operand)
  f1 73 00 00                  ff .end (operand)
  f2 73 00 00         0e 74 00 00 .case-end-address
  f6 73 00 00               01 4e .exec VcTextNum
  f8 73 00 00                  01 .literal
  f9 73 00 00         30 00 00 00 48
  fd 73 00 00                  ff .end (operand)
  fe 73 00 00                  01 .literal
  ff 73 00 00         50 00 00 00 80
  03 74 00 00                  ff .end (operand)
  04 74 00 00               03 00 .var1 FLAGS
  06 74 00 00                  01 .literal
  07 74 00 00         65 02 00 00 613
  0b 74 00 00                  ff .end (operand)
  0c 74 00 00                  ff .end (operand)
  0d 74 00 00                  ff .end (block)
 :0e 74 00 00                  0b .case
  0f 74 00 00                  05 .group
  10 74 00 00                  01 .literal
  11 74 00 00         02 00 00 00 2
  15 74 00 00                  ff .end (operand)
  16 74 00 00                  ff .end (operand)
  17 74 00 00         33 74 00 00 .case-end-address
  1b 74 00 00               01 4e .exec VcTextNum
  1d 74 00 00                  01 .literal
  1e 74 00 00         30 00 00 00 48
  22 74 00 00                  ff .end (operand)
  23 74 00 00                  01 .literal
  24 74 00 00         70 00 00 00 112
  28 74 00 00                  ff .end (operand)
  29 74 00 00               03 00 .var1 FLAGS
  2b 74 00 00                  01 .literal
  2c 74 00 00         65 02 00 00 613
  30 74 00 00                  ff .end (operand)
  31 74 00 00                  ff .end (operand)
  32 74 00 00                  ff .end (block)
 :33 74 00 00                  0b .case
  34 74 00 00                  05 .group
  35 74 00 00                  01 .literal
  36 74 00 00         03 00 00 00 3
  3a 74 00 00                  ff .end (operand)
  3b 74 00 00                  ff .end (operand)
  3c 74 00 00         58 74 00 00 .case-end-address
  40 74 00 00               01 4e .exec VcTextNum
  42 74 00 00                  01 .literal
  43 74 00 00         30 00 00 00 48
  47 74 00 00                  ff .end (operand)
  48 74 00 00                  01 .literal
  49 74 00 00         90 00 00 00 144
  4d 74 00 00                  ff .end (operand)
  4e 74 00 00               03 00 .var1 FLAGS
  50 74 00 00                  01 .literal
  51 74 00 00         65 02 00 00 613
  55 74 00 00                  ff .end (operand)
  56 74 00 00                  ff .end (operand)
  57 74 00 00                  ff .end (block)
 :58 74 00 00                  0b .case
  59 74 00 00                  05 .group
  5a 74 00 00                  01 .literal
  5b 74 00 00         07 00 00 00 7
  5f 74 00 00                  ff .end (operand)
  60 74 00 00                  ff .end (operand)
  61 74 00 00         ed 74 00 00 .case-end-address
if284
 :65 74 00 00               05 01 .if [terms=1]
  67 74 00 00         92 74 00 00 .else
  6b 74 00 00               03 00 .var1 FLAGS
  6d 74 00 00                  01 .literal
  6e 74 00 00         56 02 00 00 598
  72 74 00 00                  ff .end (operand)
  73 74 00 00                  ff .end (operand)
  75 74 00 00                  03 .if-sign-nonzero
  75 74 00 00                  01 .literal
  76 74 00 00         00 00 00 00 0
  7a 74 00 00                  ff .end (operand)
  7b 74 00 00               01 4e .exec VcTextNum
  7d 74 00 00                  01 .literal
  7e 74 00 00         30 00 00 00 48
  82 74 00 00                  ff .end (operand)
  83 74 00 00                  01 .literal
  84 74 00 00         50 00 00 00 80
  88 74 00 00                  ff .end (operand)
  89 74 00 00               03 00 .var1 FLAGS
  8b 74 00 00                  01 .literal
  8c 74 00 00         65 02 00 00 613
  90 74 00 00                  ff .end (operand)
  91 74 00 00                  ff .end (operand)
if285
::92 74 00 00               05 01 .if [terms=1]
  94 74 00 00         bf 74 00 00 .else
  98 74 00 00               03 00 .var1 FLAGS
  9a 74 00 00                  01 .literal
  9b 74 00 00         57 02 00 00 599
  9f 74 00 00                  ff .end (operand)
  a0 74 00 00                  ff .end (operand)
  a2 74 00 00                  03 .if-sign-nonzero
  a2 74 00 00                  01 .literal
  a3 74 00 00         00 00 00 00 0
  a7 74 00 00                  ff .end (operand)
  a8 74 00 00               01 4e .exec VcTextNum
  aa 74 00 00                  01 .literal
  ab 74 00 00         30 00 00 00 48
  af 74 00 00                  ff .end (operand)
  b0 74 00 00                  01 .literal
  b1 74 00 00         70 00 00 00 112
  b5 74 00 00                  ff .end (operand)
  b6 74 00 00               03 00 .var1 FLAGS
  b8 74 00 00                  01 .literal
  b9 74 00 00         65 02 00 00 613
  bd 74 00 00                  ff .end (operand)
  be 74 00 00                  ff .end (operand)
if286
::bf 74 00 00               05 01 .if [terms=1]
  c1 74 00 00         ec 74 00 00 .else
  c5 74 00 00               03 00 .var1 FLAGS
  c7 74 00 00                  01 .literal
  c8 74 00 00         58 02 00 00 600
  cc 74 00 00                  ff .end (operand)
  cd 74 00 00                  ff .end (operand)
  cf 74 00 00                  03 .if-sign-nonzero
  cf 74 00 00                  01 .literal
  d0 74 00 00         00 00 00 00 0
  d4 74 00 00                  ff .end (operand)
  d5 74 00 00               01 4e .exec VcTextNum
  d7 74 00 00                  01 .literal
  d8 74 00 00         30 00 00 00 48
  dc 74 00 00                  ff .end (operand)
  dd 74 00 00                  01 .literal
  de 74 00 00         90 00 00 00 144
  e2 74 00 00                  ff .end (operand)
  e3 74 00 00               03 00 .var1 FLAGS
  e5 74 00 00                  01 .literal
  e6 74 00 00         65 02 00 00 613
  ea 74 00 00                  ff .end (operand)
  eb 74 00 00                  ff .end (operand)
 :ec 74 00 00                  ff .end (block)
 :ed 74 00 00                  ff .end (switch)
  ee 74 00 00                  ff .end (block)
 :ef 74 00 00                  0b .case
  f0 74 00 00                  05 .group
  f1 74 00 00                  01 .literal
  f2 74 00 00         08 00 00 00 8
  f6 74 00 00                  ff .end (operand)
  f7 74 00 00                  ff .end (operand)
  f8 74 00 00         0c 76 00 00 .case-end-address
  fc 74 00 00                  0a .switch
  fd 74 00 00               03 00 .var1 FLAGS
  ff 74 00 00                  01 .literal
  00 75 00 00         87 02 00 00 647
  04 75 00 00                  ff .end (operand)
  05 75 00 00                  ff .end (operand)
  06 75 00 00                  0b .case
  07 75 00 00                  05 .group
  08 75 00 00                  01 .literal
  09 75 00 00         01 00 00 00 1
  0d 75 00 00                  ff .end (operand)
  0e 75 00 00                  ff .end (operand)
  0f 75 00 00         2b 75 00 00 .case-end-address
  13 75 00 00               01 4e .exec VcTextNum
  15 75 00 00                  01 .literal
  16 75 00 00         30 00 00 00 48
  1a 75 00 00                  ff .end (operand)
  1b 75 00 00                  01 .literal
  1c 75 00 00         50 00 00 00 80
  20 75 00 00                  ff .end (operand)
  21 75 00 00               03 00 .var1 FLAGS
  23 75 00 00                  01 .literal
  24 75 00 00         67 02 00 00 615
  28 75 00 00                  ff .end (operand)
  29 75 00 00                  ff .end (operand)
  2a 75 00 00                  ff .end (block)
 :2b 75 00 00                  0b .case
  2c 75 00 00                  05 .group
  2d 75 00 00                  01 .literal
  2e 75 00 00         02 00 00 00 2
  32 75 00 00                  ff .end (operand)
  33 75 00 00                  ff .end (operand)
  34 75 00 00         50 75 00 00 .case-end-address
  38 75 00 00               01 4e .exec VcTextNum
  3a 75 00 00                  01 .literal
  3b 75 00 00         30 00 00 00 48
  3f 75 00 00                  ff .end (operand)
  40 75 00 00                  01 .literal
  41 75 00 00         70 00 00 00 112
  45 75 00 00                  ff .end (operand)
  46 75 00 00               03 00 .var1 FLAGS
  48 75 00 00                  01 .literal
  49 75 00 00         67 02 00 00 615
  4d 75 00 00                  ff .end (operand)
  4e 75 00 00                  ff .end (operand)
  4f 75 00 00                  ff .end (block)
 :50 75 00 00                  0b .case
  51 75 00 00                  05 .group
  52 75 00 00                  01 .literal
  53 75 00 00         03 00 00 00 3
  57 75 00 00                  ff .end (operand)
  58 75 00 00                  ff .end (operand)
  59 75 00 00         75 75 00 00 .case-end-address
  5d 75 00 00               01 4e .exec VcTextNum
  5f 75 00 00                  01 .literal
  60 75 00 00         30 00 00 00 48
  64 75 00 00                  ff .end (operand)
  65 75 00 00                  01 .literal
  66 75 00 00         90 00 00 00 144
  6a 75 00 00                  ff .end (operand)
  6b 75 00 00               03 00 .var1 FLAGS
  6d 75 00 00                  01 .literal
  6e 75 00 00         67 02 00 00 615
  72 75 00 00                  ff .end (operand)
  73 75 00 00                  ff .end (operand)
  74 75 00 00                  ff .end (block)
 :75 75 00 00                  0b .case
  76 75 00 00                  05 .group
  77 75 00 00                  01 .literal
  78 75 00 00         07 00 00 00 7
  7c 75 00 00                  ff .end (operand)
  7d 75 00 00                  ff .end (operand)
  7e 75 00 00         0a 76 00 00 .case-end-address
if287
 :82 75 00 00               05 01 .if [terms=1]
  84 75 00 00         af 75 00 00 .else
  88 75 00 00               03 00 .var1 FLAGS
  8a 75 00 00                  01 .literal
  8b 75 00 00         56 02 00 00 598
  8f 75 00 00                  ff .end (operand)
  90 75 00 00                  ff .end (operand)
  92 75 00 00                  03 .if-sign-nonzero
  92 75 00 00                  01 .literal
  93 75 00 00         00 00 00 00 0
  97 75 00 00                  ff .end (operand)
  98 75 00 00               01 4e .exec VcTextNum
  9a 75 00 00                  01 .literal
  9b 75 00 00         30 00 00 00 48
  9f 75 00 00                  ff .end (operand)
  a0 75 00 00                  01 .literal
  a1 75 00 00         50 00 00 00 80
  a5 75 00 00                  ff .end (operand)
  a6 75 00 00               03 00 .var1 FLAGS
  a8 75 00 00                  01 .literal
  a9 75 00 00         67 02 00 00 615
  ad 75 00 00                  ff .end (operand)
  ae 75 00 00                  ff .end (operand)
if288
::af 75 00 00               05 01 .if [terms=1]
  b1 75 00 00         dc 75 00 00 .else
  b5 75 00 00               03 00 .var1 FLAGS
  b7 75 00 00                  01 .literal
  b8 75 00 00         57 02 00 00 599
  bc 75 00 00                  ff .end (operand)
  bd 75 00 00                  ff .end (operand)
  bf 75 00 00                  03 .if-sign-nonzero
  bf 75 00 00                  01 .literal
  c0 75 00 00         00 00 00 00 0
  c4 75 00 00                  ff .end (operand)
  c5 75 00 00               01 4e .exec VcTextNum
  c7 75 00 00                  01 .literal
  c8 75 00 00         30 00 00 00 48
  cc 75 00 00                  ff .end (operand)
  cd 75 00 00                  01 .literal
  ce 75 00 00         70 00 00 00 112
  d2 75 00 00                  ff .end (operand)
  d3 75 00 00               03 00 .var1 FLAGS
  d5 75 00 00                  01 .literal
  d6 75 00 00         67 02 00 00 615
  da 75 00 00                  ff .end (operand)
  db 75 00 00                  ff .end (operand)
if289
::dc 75 00 00               05 01 .if [terms=1]
  de 75 00 00         09 76 00 00 .else
  e2 75 00 00               03 00 .var1 FLAGS
  e4 75 00 00                  01 .literal
  e5 75 00 00         58 02 00 00 600
  e9 75 00 00                  ff .end (operand)
  ea 75 00 00                  ff .end (operand)
  ec 75 00 00                  03 .if-sign-nonzero
  ec 75 00 00                  01 .literal
  ed 75 00 00         00 00 00 00 0
  f1 75 00 00                  ff .end (operand)
  f2 75 00 00               01 4e .exec VcTextNum
  f4 75 00 00                  01 .literal
  f5 75 00 00         30 00 00 00 48
  f9 75 00 00                  ff .end (operand)
  fa 75 00 00                  01 .literal
  fb 75 00 00         90 00 00 00 144
  ff 75 00 00                  ff .end (operand)
  00 76 00 00               03 00 .var1 FLAGS
  02 76 00 00                  01 .literal
  03 76 00 00         67 02 00 00 615
  07 76 00 00                  ff .end (operand)
  08 76 00 00                  ff .end (operand)
 :09 76 00 00                  ff .end (block)
 :0a 76 00 00                  ff .end (switch)
  0b 76 00 00                  ff .end (block)
 :0c 76 00 00                  ff .end (switch)
  0d 76 00 00               01 24 .exec Wait
  0f 76 00 00                  01 .literal
  10 76 00 00         64 00 00 00 100
  14 76 00 00                  ff .end (operand)
if290
 :15 76 00 00               05 01 .if [terms=1]
  17 76 00 00         3a 76 00 00 .else
  1b 76 00 00               03 00 .var1 FLAGS
  1d 76 00 00                  01 .literal
  1e 76 00 00         56 02 00 00 598
  22 76 00 00                  ff .end (operand)
  23 76 00 00                  ff .end (operand)
  25 76 00 00                  02 .if-sign-nonzero
  25 76 00 00                  01 .literal
  26 76 00 00         00 00 00 00 0
  2a 76 00 00                  ff .end (operand)
  2b 76 00 00               03 0d .var1 SPECIALFRAME
  2d 76 00 00                  01 .literal
  2e 76 00 00         07 00 00 00 7
  32 76 00 00                  ff .end (operand)
  33 76 00 00                  01 .set
  34 76 00 00                  01 .literal
  35 76 00 00         1d 00 00 00 29
  39 76 00 00                  ff .end (operand)
if291
::3a 76 00 00               05 01 .if [terms=1]
  3c 76 00 00         5f 76 00 00 .else
  40 76 00 00               03 00 .var1 FLAGS
  42 76 00 00                  01 .literal
  43 76 00 00         57 02 00 00 599
  47 76 00 00                  ff .end (operand)
  48 76 00 00                  ff .end (operand)
  4a 76 00 00                  02 .if-sign-nonzero
  4a 76 00 00                  01 .literal
  4b 76 00 00         00 00 00 00 0
  4f 76 00 00                  ff .end (operand)
  50 76 00 00               03 0d .var1 SPECIALFRAME
  52 76 00 00                  01 .literal
  53 76 00 00         05 00 00 00 5
  57 76 00 00                  ff .end (operand)
  58 76 00 00                  01 .set
  59 76 00 00                  01 .literal
  5a 76 00 00         1d 00 00 00 29
  5e 76 00 00                  ff .end (operand)
if292
::5f 76 00 00               05 01 .if [terms=1]
  61 76 00 00         84 76 00 00 .else
  65 76 00 00               03 00 .var1 FLAGS
  67 76 00 00                  01 .literal
  68 76 00 00         58 02 00 00 600
  6c 76 00 00                  ff .end (operand)
  6d 76 00 00                  ff .end (operand)
  6f 76 00 00                  02 .if-sign-nonzero
  6f 76 00 00                  01 .literal
  70 76 00 00         00 00 00 00 0
  74 76 00 00                  ff .end (operand)
  75 76 00 00               03 0d .var1 SPECIALFRAME
  77 76 00 00                  01 .literal
  78 76 00 00         06 00 00 00 6
  7c 76 00 00                  ff .end (operand)
  7d 76 00 00                  01 .set
  7e 76 00 00                  01 .literal
  7f 76 00 00         1d 00 00 00 29
  83 76 00 00                  ff .end (operand)
::84 76 00 00               01 39 .exec VcClear
  86 76 00 00               01 50 .exec VcBox
  88 76 00 00                  01 .literal
  89 76 00 00         f0 00 00 00 240
  8d 76 00 00                  ff .end (operand)
  8e 76 00 00                  01 .literal
  8f 76 00 00         0a 00 00 00 10
  93 76 00 00                  ff .end (operand)
  94 76 00 00                  01 .literal
  95 76 00 00         3a 01 00 00 314
  99 76 00 00                  ff .end (operand)
  9a 76 00 00                  01 .literal
  9b 76 00 00         c6 00 00 00 198
  9f 76 00 00                  ff .end (operand)
  a0 76 00 00               03 00 .var1 FLAGS
  a2 76 00 00                  01 .literal
  a3 76 00 00         53 02 00 00 595
  a7 76 00 00                  ff .end (operand)
  a8 76 00 00                  01 .set
  a9 76 00 00                  01 .literal
  aa 76 00 00         0d 00 00 00 13
  ae 76 00 00                  ff .end (operand)
if293
 :af 76 00 00               05 01 .if [terms=1]
  b1 76 00 00         8f 77 00 00 .else
  b5 76 00 00               03 02 .var1 CHAR
  b7 76 00 00                  01 .literal
  b8 76 00 00         01 00 00 00 1
  bc 76 00 00                  ff .end (operand)
  bd 76 00 00                  ff .end (operand)
  bf 76 00 00                  01 .if-sign-nonzero
  bf 76 00 00               03 00 .var1 FLAGS
  c1 76 00 00                  01 .literal
  c2 76 00 00         53 02 00 00 595
  c6 76 00 00                  ff .end (operand)
  c7 76 00 00                  04 .incset
  c8 76 00 00                  01 .literal
  c9 76 00 00         0a 00 00 00 10
  cd 76 00 00                  ff .end (operand)
  ce 76 00 00               01 3b .exec VcText
  d0 76 00 00                  01 .literal
  d1 76 00 00         f5 00 00 00 245
  d5 76 00 00                  ff .end (operand)
  d6 76 00 00               03 00 .var1 FLAGS
  d8 76 00 00                  01 .literal
  d9 76 00 00         53 02 00 00 595
  dd 76 00 00                  ff .end (operand)
  de 76 00 00                  ff .end (operand)
  df 76 00 00                     "Sam"

              53 61 6d 00 
  e3 76 00 00               03 00 .var1 FLAGS
  e5 76 00 00                  01 .literal
  e6 76 00 00         53 02 00 00 595
  ea 76 00 00                  ff .end (operand)
  eb 76 00 00                  04 .incset
  ec 76 00 00                  01 .literal
  ed 76 00 00         0a 00 00 00 10
  f1 76 00 00                  ff .end (operand)
  f2 76 00 00               01 4e .exec VcTextNum
  f4 76 00 00                  01 .literal
  f5 76 00 00         f5 00 00 00 245
  f9 76 00 00                  ff .end (operand)
  fa 76 00 00               03 00 .var1 FLAGS
  fc 76 00 00                  01 .literal
  fd 76 00 00         53 02 00 00 595
  01 77 00 00                  ff .end (operand)
  02 77 00 00                  ff .end (operand)
  03 77 00 00               03 07 .var1 CURHP
  05 77 00 00                  01 .literal
  06 77 00 00         01 00 00 00 1
  0a 77 00 00                  ff .end (operand)
  0b 77 00 00                  ff .end (operand)
  0c 77 00 00               01 3b .exec VcText
  0e 77 00 00                  01 .literal
  0f 77 00 00         09 01 00 00 265
  13 77 00 00                  ff .end (operand)
  14 77 00 00               03 00 .var1 FLAGS
  16 77 00 00                  01 .literal
  17 77 00 00         53 02 00 00 595
  1b 77 00 00                  ff .end (operand)
  1c 77 00 00                  ff .end (operand)
  1d 77 00 00                     "/"

              2f 00 
  1f 77 00 00               01 4e .exec VcTextNum
  21 77 00 00                  01 .literal
  22 77 00 00         13 01 00 00 275
  26 77 00 00                  ff .end (operand)
  27 77 00 00               03 00 .var1 FLAGS
  29 77 00 00                  01 .literal
  2a 77 00 00         53 02 00 00 595
  2e 77 00 00                  ff .end (operand)
  2f 77 00 00                  ff .end (operand)
  30 77 00 00               03 08 .var1 MAXHP
  32 77 00 00                  01 .literal
  33 77 00 00         01 00 00 00 1
  37 77 00 00                  ff .end (operand)
  38 77 00 00                  ff .end (operand)
  39 77 00 00               03 00 .var1 FLAGS
  3b 77 00 00                  01 .literal
  3c 77 00 00         53 02 00 00 595
  40 77 00 00                  ff .end (operand)
  41 77 00 00                  04 .incset
  42 77 00 00                  01 .literal
  43 77 00 00         0a 00 00 00 10
  47 77 00 00                  ff .end (operand)
  48 77 00 00               01 4e .exec VcTextNum
  4a 77 00 00                  01 .literal
  4b 77 00 00         f5 00 00 00 245
  4f 77 00 00                  ff .end (operand)
  50 77 00 00               03 00 .var1 FLAGS
  52 77 00 00                  01 .literal
  53 77 00 00         53 02 00 00 595
  57 77 00 00                  ff .end (operand)
  58 77 00 00                  ff .end (operand)
  59 77 00 00               03 09 .var1 CURMP
  5b 77 00 00                  01 .literal
  5c 77 00 00         01 00 00 00 1
  60 77 00 00                  ff .end (operand)
  61 77 00 00                  ff .end (operand)
  62 77 00 00               01 3b .exec VcText
  64 77 00 00                  01 .literal
  65 77 00 00         09 01 00 00 265
  69 77 00 00                  ff .end (operand)
  6a 77 00 00               03 00 .var1 FLAGS
  6c 77 00 00                  01 .literal
  6d 77 00 00         53 02 00 00 595
  71 77 00 00                  ff .end (operand)
  72 77 00 00                  ff .end (operand)
  73 77 00 00                     "/"

              2f 00 
  75 77 00 00               01 4e .exec VcTextNum
  77 77 00 00                  01 .literal
  78 77 00 00         13 01 00 00 275
  7c 77 00 00                  ff .end (operand)
  7d 77 00 00               03 00 .var1 FLAGS
  7f 77 00 00                  01 .literal
  80 77 00 00         53 02 00 00 595
  84 77 00 00                  ff .end (operand)
  85 77 00 00                  ff .end (operand)
  86 77 00 00               03 0a .var1 MAXMP
  88 77 00 00                  01 .literal
  89 77 00 00         01 00 00 00 1
  8d 77 00 00                  ff .end (operand)
  8e 77 00 00                  ff .end (operand)
if294
::8f 77 00 00               05 01 .if [terms=1]
  91 77 00 00         70 78 00 00 .else
  95 77 00 00               03 02 .var1 CHAR
  97 77 00 00                  01 .literal
  98 77 00 00         02 00 00 00 2
  9c 77 00 00                  ff .end (operand)
  9d 77 00 00                  ff .end (operand)
  9f 77 00 00                  01 .if-sign-nonzero
  9f 77 00 00               03 00 .var1 FLAGS
  a1 77 00 00                  01 .literal
  a2 77 00 00         53 02 00 00 595
  a6 77 00 00                  ff .end (operand)
  a7 77 00 00                  04 .incset
  a8 77 00 00                  01 .literal
  a9 77 00 00         0a 00 00 00 10
  ad 77 00 00                  ff .end (operand)
  ae 77 00 00               01 3b .exec VcText
  b0 77 00 00                  01 .literal
  b1 77 00 00         f5 00 00 00 245
  b5 77 00 00                  ff .end (operand)
  b6 77 00 00               03 00 .var1 FLAGS
  b8 77 00 00                  01 .literal
  b9 77 00 00         53 02 00 00 595
  bd 77 00 00                  ff .end (operand)
  be 77 00 00                  ff .end (operand)
  bf 77 00 00                     "Webb"

              57 65 62 62 00 
  c4 77 00 00               03 00 .var1 FLAGS
  c6 77 00 00                  01 .literal
  c7 77 00 00         53 02 00 00 595
  cb 77 00 00                  ff .end (operand)
  cc 77 00 00                  04 .incset
  cd 77 00 00                  01 .literal
  ce 77 00 00         0a 00 00 00 10
  d2 77 00 00                  ff .end (operand)
  d3 77 00 00               01 4e .exec VcTextNum
  d5 77 00 00                  01 .literal
  d6 77 00 00         f5 00 00 00 245
  da 77 00 00                  ff .end (operand)
  db 77 00 00               03 00 .var1 FLAGS
  dd 77 00 00                  01 .literal
  de 77 00 00         53 02 00 00 595
  e2 77 00 00                  ff .end (operand)
  e3 77 00 00                  ff .end (operand)
  e4 77 00 00               03 07 .var1 CURHP
  e6 77 00 00                  01 .literal
  e7 77 00 00         02 00 00 00 2
  eb 77 00 00                  ff .end (operand)
  ec 77 00 00                  ff .end (operand)
  ed 77 00 00               01 3b .exec VcText
  ef 77 00 00                  01 .literal
  f0 77 00 00         09 01 00 00 265
  f4 77 00 00                  ff .end (operand)
  f5 77 00 00               03 00 .var1 FLAGS
  f7 77 00 00                  01 .literal
  f8 77 00 00         53 02 00 00 595
  fc 77 00 00                  ff .end (operand)
  fd 77 00 00                  ff .end (operand)
  fe 77 00 00                     "/"

              2f 00 
  00 78 00 00               01 4e .exec VcTextNum
  02 78 00 00                  01 .literal
  03 78 00 00         13 01 00 00 275
  07 78 00 00                  ff .end (operand)
  08 78 00 00               03 00 .var1 FLAGS
  0a 78 00 00                  01 .literal
  0b 78 00 00         53 02 00 00 595
  0f 78 00 00                  ff .end (operand)
  10 78 00 00                  ff .end (operand)
  11 78 00 00               03 08 .var1 MAXHP
  13 78 00 00                  01 .literal
  14 78 00 00         02 00 00 00 2
  18 78 00 00                  ff .end (operand)
  19 78 00 00                  ff .end (operand)
  1a 78 00 00               03 00 .var1 FLAGS
  1c 78 00 00                  01 .literal
  1d 78 00 00         53 02 00 00 595
  21 78 00 00                  ff .end (operand)
  22 78 00 00                  04 .incset
  23 78 00 00                  01 .literal
  24 78 00 00         0a 00 00 00 10
  28 78 00 00                  ff .end (operand)
  29 78 00 00               01 4e .exec VcTextNum
  2b 78 00 00                  01 .literal
  2c 78 00 00         f5 00 00 00 245
  30 78 00 00                  ff .end (operand)
  31 78 00 00               03 00 .var1 FLAGS
  33 78 00 00                  01 .literal
  34 78 00 00         53 02 00 00 595
  38 78 00 00                  ff .end (operand)
  39 78 00 00                  ff .end (operand)
  3a 78 00 00               03 09 .var1 CURMP
  3c 78 00 00                  01 .literal
  3d 78 00 00         02 00 00 00 2
  41 78 00 00                  ff .end (operand)
  42 78 00 00                  ff .end (operand)
  43 78 00 00               01 3b .exec VcText
  45 78 00 00                  01 .literal
  46 78 00 00         09 01 00 00 265
  4a 78 00 00                  ff .end (operand)
  4b 78 00 00               03 00 .var1 FLAGS
  4d 78 00 00                  01 .literal
  4e 78 00 00         53 02 00 00 595
  52 78 00 00                  ff .end (operand)
  53 78 00 00                  ff .end (operand)
  54 78 00 00                     "/"

              2f 00 
  56 78 00 00               01 4e .exec VcTextNum
  58 78 00 00                  01 .literal
  59 78 00 00         13 01 00 00 275
  5d 78 00 00                  ff .end (operand)
  5e 78 00 00               03 00 .var1 FLAGS
  60 78 00 00                  01 .literal
  61 78 00 00         53 02 00 00 595
  65 78 00 00                  ff .end (operand)
  66 78 00 00                  ff .end (operand)
  67 78 00 00               03 0a .var1 MAXMP
  69 78 00 00                  01 .literal
  6a 78 00 00         02 00 00 00 2
  6e 78 00 00                  ff .end (operand)
  6f 78 00 00                  ff .end (operand)
if295
::70 78 00 00               05 01 .if [terms=1]
  72 78 00 00         51 79 00 00 .else
  76 78 00 00               03 02 .var1 CHAR
  78 78 00 00                  01 .literal
  79 78 00 00         03 00 00 00 3
  7d 78 00 00                  ff .end (operand)
  7e 78 00 00                  ff .end (operand)
  80 78 00 00                  01 .if-sign-nonzero
  80 78 00 00               03 00 .var1 FLAGS
  82 78 00 00                  01 .literal
  83 78 00 00         53 02 00 00 595
  87 78 00 00                  ff .end (operand)
  88 78 00 00                  04 .incset
  89 78 00 00                  01 .literal
  8a 78 00 00         0a 00 00 00 10
  8e 78 00 00                  ff .end (operand)
  8f 78 00 00               01 3b .exec VcText
  91 78 00 00                  01 .literal
  92 78 00 00         f5 00 00 00 245
  96 78 00 00                  ff .end (operand)
  97 78 00 00               03 00 .var1 FLAGS
  99 78 00 00                  01 .literal
  9a 78 00 00         53 02 00 00 595
  9e 78 00 00                  ff .end (operand)
  9f 78 00 00                  ff .end (operand)
  a0 78 00 00                     "Feng"

              46 65 6e 67 00 
  a5 78 00 00               03 00 .var1 FLAGS
  a7 78 00 00                  01 .literal
  a8 78 00 00         53 02 00 00 595
  ac 78 00 00                  ff .end (operand)
  ad 78 00 00                  04 .incset
  ae 78 00 00                  01 .literal
  af 78 00 00         0a 00 00 00 10
  b3 78 00 00                  ff .end (operand)
  b4 78 00 00               01 4e .exec VcTextNum
  b6 78 00 00                  01 .literal
  b7 78 00 00         f5 00 00 00 245
  bb 78 00 00                  ff .end (operand)
  bc 78 00 00               03 00 .var1 FLAGS
  be 78 00 00                  01 .literal
  bf 78 00 00         53 02 00 00 595
  c3 78 00 00                  ff .end (operand)
  c4 78 00 00                  ff .end (operand)
  c5 78 00 00               03 07 .var1 CURHP
  c7 78 00 00                  01 .literal
  c8 78 00 00         03 00 00 00 3
  cc 78 00 00                  ff .end (operand)
  cd 78 00 00                  ff .end (operand)
  ce 78 00 00               01 3b .exec VcText
  d0 78 00 00                  01 .literal
  d1 78 00 00         09 01 00 00 265
  d5 78 00 00                  ff .end (operand)
  d6 78 00 00               03 00 .var1 FLAGS
  d8 78 00 00                  01 .literal
  d9 78 00 00         53 02 00 00 595
  dd 78 00 00                  ff .end (operand)
  de 78 00 00                  ff .end (operand)
  df 78 00 00                     "/"

              2f 00 
  e1 78 00 00               01 4e .exec VcTextNum
  e3 78 00 00                  01 .literal
  e4 78 00 00         13 01 00 00 275
  e8 78 00 00                  ff .end (operand)
  e9 78 00 00               03 00 .var1 FLAGS
  eb 78 00 00                  01 .literal
  ec 78 00 00         53 02 00 00 595
  f0 78 00 00                  ff .end (operand)
  f1 78 00 00                  ff .end (operand)
  f2 78 00 00               03 08 .var1 MAXHP
  f4 78 00 00                  01 .literal
  f5 78 00 00         03 00 00 00 3
  f9 78 00 00                  ff .end (operand)
  fa 78 00 00                  ff .end (operand)
  fb 78 00 00               03 00 .var1 FLAGS
  fd 78 00 00                  01 .literal
  fe 78 00 00         53 02 00 00 595
  02 79 00 00                  ff .end (operand)
  03 79 00 00                  04 .incset
  04 79 00 00                  01 .literal
  05 79 00 00         0a 00 00 00 10
  09 79 00 00                  ff .end (operand)
  0a 79 00 00               01 4e .exec VcTextNum
  0c 79 00 00                  01 .literal
  0d 79 00 00         f5 00 00 00 245
  11 79 00 00                  ff .end (operand)
  12 79 00 00               03 00 .var1 FLAGS
  14 79 00 00                  01 .literal
  15 79 00 00         53 02 00 00 595
  19 79 00 00                  ff .end (operand)
  1a 79 00 00                  ff .end (operand)
  1b 79 00 00               03 09 .var1 CURMP
  1d 79 00 00                  01 .literal
  1e 79 00 00         03 00 00 00 3
  22 79 00 00                  ff .end (operand)
  23 79 00 00                  ff .end (operand)
  24 79 00 00               01 3b .exec VcText
  26 79 00 00                  01 .literal
  27 79 00 00         09 01 00 00 265
  2b 79 00 00                  ff .end (operand)
  2c 79 00 00               03 00 .var1 FLAGS
  2e 79 00 00                  01 .literal
  2f 79 00 00         53 02 00 00 595
  33 79 00 00                  ff .end (operand)
  34 79 00 00                  ff .end (operand)
  35 79 00 00                     "/"

              2f 00 
  37 79 00 00               01 4e .exec VcTextNum
  39 79 00 00                  01 .literal
  3a 79 00 00         13 01 00 00 275
  3e 79 00 00                  ff .end (operand)
  3f 79 00 00               03 00 .var1 FLAGS
  41 79 00 00                  01 .literal
  42 79 00 00         53 02 00 00 595
  46 79 00 00                  ff .end (operand)
  47 79 00 00                  ff .end (operand)
  48 79 00 00               03 0a .var1 MAXMP
  4a 79 00 00                  01 .literal
  4b 79 00 00         03 00 00 00 3
  4f 79 00 00                  ff .end (operand)
  50 79 00 00                  ff .end (operand)
if296
::51 79 00 00               05 01 .if [terms=1]
  53 79 00 00         32 7a 00 00 .else
  57 79 00 00               03 02 .var1 CHAR
  59 79 00 00                  01 .literal
  5a 79 00 00         04 00 00 00 4
  5e 79 00 00                  ff .end (operand)
  5f 79 00 00                  ff .end (operand)
  61 79 00 00                  01 .if-sign-nonzero
  61 79 00 00               03 00 .var1 FLAGS
  63 79 00 00                  01 .literal
  64 79 00 00         53 02 00 00 595
  68 79 00 00                  ff .end (operand)
  69 79 00 00                  04 .incset
  6a 79 00 00                  01 .literal
  6b 79 00 00         0a 00 00 00 10
  6f 79 00 00                  ff .end (operand)
  70 79 00 00               01 3b .exec VcText
  72 79 00 00                  01 .literal
  73 79 00 00         f5 00 00 00 245
  77 79 00 00                  ff .end (operand)
  78 79 00 00               03 00 .var1 FLAGS
  7a 79 00 00                  01 .literal
  7b 79 00 00         53 02 00 00 595
  7f 79 00 00                  ff .end (operand)
  80 79 00 00                  ff .end (operand)
  81 79 00 00                     "Rikk"

              52 69 6b 6b 00 
  86 79 00 00               03 00 .var1 FLAGS
  88 79 00 00                  01 .literal
  89 79 00 00         53 02 00 00 595
  8d 79 00 00                  ff .end (operand)
  8e 79 00 00                  04 .incset
  8f 79 00 00                  01 .literal
  90 79 00 00         0a 00 00 00 10
  94 79 00 00                  ff .end (operand)
  95 79 00 00               01 4e .exec VcTextNum
  97 79 00 00                  01 .literal
  98 79 00 00         f5 00 00 00 245
  9c 79 00 00                  ff .end (operand)
  9d 79 00 00               03 00 .var1 FLAGS
  9f 79 00 00                  01 .literal
  a0 79 00 00         53 02 00 00 595
  a4 79 00 00                  ff .end (operand)
  a5 79 00 00                  ff .end (operand)
  a6 79 00 00               03 07 .var1 CURHP
  a8 79 00 00                  01 .literal
  a9 79 00 00         04 00 00 00 4
  ad 79 00 00                  ff .end (operand)
  ae 79 00 00                  ff .end (operand)
  af 79 00 00               01 3b .exec VcText
  b1 79 00 00                  01 .literal
  b2 79 00 00         09 01 00 00 265
  b6 79 00 00                  ff .end (operand)
  b7 79 00 00               03 00 .var1 FLAGS
  b9 79 00 00                  01 .literal
  ba 79 00 00         53 02 00 00 595
  be 79 00 00                  ff .end (operand)
  bf 79 00 00                  ff .end (operand)
  c0 79 00 00                     "/"

              2f 00 
  c2 79 00 00               01 4e .exec VcTextNum
  c4 79 00 00                  01 .literal
  c5 79 00 00         13 01 00 00 275
  c9 79 00 00                  ff .end (operand)
  ca 79 00 00               03 00 .var1 FLAGS
  cc 79 00 00                  01 .literal
  cd 79 00 00         53 02 00 00 595
  d1 79 00 00                  ff .end (operand)
  d2 79 00 00                  ff .end (operand)
  d3 79 00 00               03 08 .var1 MAXHP
  d5 79 00 00                  01 .literal
  d6 79 00 00         04 00 00 00 4
  da 79 00 00                  ff .end (operand)
  db 79 00 00                  ff .end (operand)
  dc 79 00 00               03 00 .var1 FLAGS
  de 79 00 00                  01 .literal
  df 79 00 00         53 02 00 00 595
  e3 79 00 00                  ff .end (operand)
  e4 79 00 00                  04 .incset
  e5 79 00 00                  01 .literal
  e6 79 00 00         0a 00 00 00 10
  ea 79 00 00                  ff .end (operand)
  eb 79 00 00               01 4e .exec VcTextNum
  ed 79 00 00                  01 .literal
  ee 79 00 00         f5 00 00 00 245
  f2 79 00 00                  ff .end (operand)
  f3 79 00 00               03 00 .var1 FLAGS
  f5 79 00 00                  01 .literal
  f6 79 00 00         53 02 00 00 595
  fa 79 00 00                  ff .end (operand)
  fb 79 00 00                  ff .end (operand)
  fc 79 00 00               03 09 .var1 CURMP
  fe 79 00 00                  01 .literal
  ff 79 00 00         04 00 00 00 4
  03 7a 00 00                  ff .end (operand)
  04 7a 00 00                  ff .end (operand)
  05 7a 00 00               01 3b .exec VcText
  07 7a 00 00                  01 .literal
  08 7a 00 00         09 01 00 00 265
  0c 7a 00 00                  ff .end (operand)
  0d 7a 00 00               03 00 .var1 FLAGS
  0f 7a 00 00                  01 .literal
  10 7a 00 00         53 02 00 00 595
  14 7a 00 00                  ff .end (operand)
  15 7a 00 00                  ff .end (operand)
  16 7a 00 00                     "/"

              2f 00 
  18 7a 00 00               01 4e .exec VcTextNum
  1a 7a 00 00                  01 .literal
  1b 7a 00 00         13 01 00 00 275
  1f 7a 00 00                  ff .end (operand)
  20 7a 00 00               03 00 .var1 FLAGS
  22 7a 00 00                  01 .literal
  23 7a 00 00         53 02 00 00 595
  27 7a 00 00                  ff .end (operand)
  28 7a 00 00                  ff .end (operand)
  29 7a 00 00               03 0a .var1 MAXMP
  2b 7a 00 00                  01 .literal
  2c 7a 00 00         04 00 00 00 4
  30 7a 00 00                  ff .end (operand)
  31 7a 00 00                  ff .end (operand)
if297
::32 7a 00 00               05 01 .if [terms=1]
  34 7a 00 00         14 7b 00 00 .else
  38 7a 00 00               03 02 .var1 CHAR
  3a 7a 00 00                  01 .literal
  3b 7a 00 00         05 00 00 00 5
  3f 7a 00 00                  ff .end (operand)
  40 7a 00 00                  ff .end (operand)
  42 7a 00 00                  01 .if-sign-nonzero
  42 7a 00 00               03 00 .var1 FLAGS
  44 7a 00 00                  01 .literal
  45 7a 00 00         53 02 00 00 595
  49 7a 00 00                  ff .end (operand)
  4a 7a 00 00                  04 .incset
  4b 7a 00 00                  01 .literal
  4c 7a 00 00         0a 00 00 00 10
  50 7a 00 00                  ff .end (operand)
  51 7a 00 00               01 3b .exec VcText
  53 7a 00 00                  01 .literal
  54 7a 00 00         f5 00 00 00 245
  58 7a 00 00                  ff .end (operand)
  59 7a 00 00               03 00 .var1 FLAGS
  5b 7a 00 00                  01 .literal
  5c 7a 00 00         53 02 00 00 595
  60 7a 00 00                  ff .end (operand)
  61 7a 00 00                  ff .end (operand)
  62 7a 00 00                     "Dingo"

              44 69 6e 67 6f 00 
  68 7a 00 00               03 00 .var1 FLAGS
  6a 7a 00 00                  01 .literal
  6b 7a 00 00         53 02 00 00 595
  6f 7a 00 00                  ff .end (operand)
  70 7a 00 00                  04 .incset
  71 7a 00 00                  01 .literal
  72 7a 00 00         0a 00 00 00 10
  76 7a 00 00                  ff .end (operand)
  77 7a 00 00               01 4e .exec VcTextNum
  79 7a 00 00                  01 .literal
  7a 7a 00 00         f5 00 00 00 245
  7e 7a 00 00                  ff .end (operand)
  7f 7a 00 00               03 00 .var1 FLAGS
  81 7a 00 00                  01 .literal
  82 7a 00 00         53 02 00 00 595
  86 7a 00 00                  ff .end (operand)
  87 7a 00 00                  ff .end (operand)
  88 7a 00 00               03 07 .var1 CURHP
  8a 7a 00 00                  01 .literal
  8b 7a 00 00         05 00 00 00 5
  8f 7a 00 00                  ff .end (operand)
  90 7a 00 00                  ff .end (operand)
  91 7a 00 00               01 3b .exec VcText
  93 7a 00 00                  01 .literal
  94 7a 00 00         09 01 00 00 265
  98 7a 00 00                  ff .end (operand)
  99 7a 00 00               03 00 .var1 FLAGS
  9b 7a 00 00                  01 .literal
  9c 7a 00 00         53 02 00 00 595
  a0 7a 00 00                  ff .end (operand)
  a1 7a 00 00                  ff .end (operand)
  a2 7a 00 00                     "/"

              2f 00 
  a4 7a 00 00               01 4e .exec VcTextNum
  a6 7a 00 00                  01 .literal
  a7 7a 00 00         13 01 00 00 275
  ab 7a 00 00                  ff .end (operand)
  ac 7a 00 00               03 00 .var1 FLAGS
  ae 7a 00 00                  01 .literal
  af 7a 00 00         53 02 00 00 595
  b3 7a 00 00                  ff .end (operand)
  b4 7a 00 00                  ff .end (operand)
  b5 7a 00 00               03 08 .var1 MAXHP
  b7 7a 00 00                  01 .literal
  b8 7a 00 00         05 00 00 00 5
  bc 7a 00 00                  ff .end (operand)
  bd 7a 00 00                  ff .end (operand)
  be 7a 00 00               03 00 .var1 FLAGS
  c0 7a 00 00                  01 .literal
  c1 7a 00 00         53 02 00 00 595
  c5 7a 00 00                  ff .end (operand)
  c6 7a 00 00                  04 .incset
  c7 7a 00 00                  01 .literal
  c8 7a 00 00         0a 00 00 00 10
  cc 7a 00 00                  ff .end (operand)
  cd 7a 00 00               01 4e .exec VcTextNum
  cf 7a 00 00                  01 .literal
  d0 7a 00 00         f5 00 00 00 245
  d4 7a 00 00                  ff .end (operand)
  d5 7a 00 00               03 00 .var1 FLAGS
  d7 7a 00 00                  01 .literal
  d8 7a 00 00         53 02 00 00 595
  dc 7a 00 00                  ff .end (operand)
  dd 7a 00 00                  ff .end (operand)
  de 7a 00 00               03 09 .var1 CURMP
  e0 7a 00 00                  01 .literal
  e1 7a 00 00         05 00 00 00 5
  e5 7a 00 00                  ff .end (operand)
  e6 7a 00 00                  ff .end (operand)
  e7 7a 00 00               01 3b .exec VcText
  e9 7a 00 00                  01 .literal
  ea 7a 00 00         09 01 00 00 265
  ee 7a 00 00                  ff .end (operand)
  ef 7a 00 00               03 00 .var1 FLAGS
  f1 7a 00 00                  01 .literal
  f2 7a 00 00         53 02 00 00 595
  f6 7a 00 00                  ff .end (operand)
  f7 7a 00 00                  ff .end (operand)
  f8 7a 00 00                     "/"

              2f 00 
  fa 7a 00 00               01 4e .exec VcTextNum
  fc 7a 00 00                  01 .literal
  fd 7a 00 00         13 01 00 00 275
  01 7b 00 00                  ff .end (operand)
  02 7b 00 00               03 00 .var1 FLAGS
  04 7b 00 00                  01 .literal
  05 7b 00 00         53 02 00 00 595
  09 7b 00 00                  ff .end (operand)
  0a 7b 00 00                  ff .end (operand)
  0b 7b 00 00               03 0a .var1 MAXMP
  0d 7b 00 00                  01 .literal
  0e 7b 00 00         05 00 00 00 5
  12 7b 00 00                  ff .end (operand)
  13 7b 00 00                  ff .end (operand)
if298
::14 7b 00 00               05 01 .if [terms=1]
  16 7b 00 00         f8 7b 00 00 .else
  1a 7b 00 00               03 02 .var1 CHAR
  1c 7b 00 00                  01 .literal
  1d 7b 00 00         06 00 00 00 6
  21 7b 00 00                  ff .end (operand)
  22 7b 00 00                  ff .end (operand)
  24 7b 00 00                  01 .if-sign-nonzero
  24 7b 00 00               03 00 .var1 FLAGS
  26 7b 00 00                  01 .literal
  27 7b 00 00         53 02 00 00 595
  2b 7b 00 00                  ff .end (operand)
  2c 7b 00 00                  04 .incset
  2d 7b 00 00                  01 .literal
  2e 7b 00 00         0a 00 00 00 10
  32 7b 00 00                  ff .end (operand)
  33 7b 00 00               01 3b .exec VcText
  35 7b 00 00                  01 .literal
  36 7b 00 00         f5 00 00 00 245
  3a 7b 00 00                  ff .end (operand)
  3b 7b 00 00               03 00 .var1 FLAGS
  3d 7b 00 00                  01 .literal
  3e 7b 00 00         53 02 00 00 595
  42 7b 00 00                  ff .end (operand)
  43 7b 00 00                  ff .end (operand)
  44 7b 00 00                     "Jeemdub"

              4a 65 65 6d 64 75 62 00 
  4c 7b 00 00               03 00 .var1 FLAGS
  4e 7b 00 00                  01 .literal
  4f 7b 00 00         53 02 00 00 595
  53 7b 00 00                  ff .end (operand)
  54 7b 00 00                  04 .incset
  55 7b 00 00                  01 .literal
  56 7b 00 00         0a 00 00 00 10
  5a 7b 00 00                  ff .end (operand)
  5b 7b 00 00               01 4e .exec VcTextNum
  5d 7b 00 00                  01 .literal
  5e 7b 00 00         f5 00 00 00 245
  62 7b 00 00                  ff .end (operand)
  63 7b 00 00               03 00 .var1 FLAGS
  65 7b 00 00                  01 .literal
  66 7b 00 00         53 02 00 00 595
  6a 7b 00 00                  ff .end (operand)
  6b 7b 00 00                  ff .end (operand)
  6c 7b 00 00               03 07 .var1 CURHP
  6e 7b 00 00                  01 .literal
  6f 7b 00 00         06 00 00 00 6
  73 7b 00 00                  ff .end (operand)
  74 7b 00 00                  ff .end (operand)
  75 7b 00 00               01 3b .exec VcText
  77 7b 00 00                  01 .literal
  78 7b 00 00         09 01 00 00 265
  7c 7b 00 00                  ff .end (operand)
  7d 7b 00 00               03 00 .var1 FLAGS
  7f 7b 00 00                  01 .literal
  80 7b 00 00         53 02 00 00 595
  84 7b 00 00                  ff .end (operand)
  85 7b 00 00                  ff .end (operand)
  86 7b 00 00                     "/"

              2f 00 
  88 7b 00 00               01 4e .exec VcTextNum
  8a 7b 00 00                  01 .literal
  8b 7b 00 00         13 01 00 00 275
  8f 7b 00 00                  ff .end (operand)
  90 7b 00 00               03 00 .var1 FLAGS
  92 7b 00 00                  01 .literal
  93 7b 00 00         53 02 00 00 595
  97 7b 00 00                  ff .end (operand)
  98 7b 00 00                  ff .end (operand)
  99 7b 00 00               03 08 .var1 MAXHP
  9b 7b 00 00                  01 .literal
  9c 7b 00 00         06 00 00 00 6
  a0 7b 00 00                  ff .end (operand)
  a1 7b 00 00                  ff .end (operand)
  a2 7b 00 00               03 00 .var1 FLAGS
  a4 7b 00 00                  01 .literal
  a5 7b 00 00         53 02 00 00 595
  a9 7b 00 00                  ff .end (operand)
  aa 7b 00 00                  04 .incset
  ab 7b 00 00                  01 .literal
  ac 7b 00 00         0a 00 00 00 10
  b0 7b 00 00                  ff .end (operand)
  b1 7b 00 00               01 4e .exec VcTextNum
  b3 7b 00 00                  01 .literal
  b4 7b 00 00         f5 00 00 00 245
  b8 7b 00 00                  ff .end (operand)
  b9 7b 00 00               03 00 .var1 FLAGS
  bb 7b 00 00                  01 .literal
  bc 7b 00 00         53 02 00 00 595
  c0 7b 00 00                  ff .end (operand)
  c1 7b 00 00                  ff .end (operand)
  c2 7b 00 00               03 09 .var1 CURMP
  c4 7b 00 00                  01 .literal
  c5 7b 00 00         06 00 00 00 6
  c9 7b 00 00                  ff .end (operand)
  ca 7b 00 00                  ff .end (operand)
  cb 7b 00 00               01 3b .exec VcText
  cd 7b 00 00                  01 .literal
  ce 7b 00 00         09 01 00 00 265
  d2 7b 00 00                  ff .end (operand)
  d3 7b 00 00               03 00 .var1 FLAGS
  d5 7b 00 00                  01 .literal
  d6 7b 00 00         53 02 00 00 595
  da 7b 00 00                  ff .end (operand)
  db 7b 00 00                  ff .end (operand)
  dc 7b 00 00                     "/"

              2f 00 
  de 7b 00 00               01 4e .exec VcTextNum
  e0 7b 00 00                  01 .literal
  e1 7b 00 00         13 01 00 00 275
  e5 7b 00 00                  ff .end (operand)
  e6 7b 00 00               03 00 .var1 FLAGS
  e8 7b 00 00                  01 .literal
  e9 7b 00 00         53 02 00 00 595
  ed 7b 00 00                  ff .end (operand)
  ee 7b 00 00                  ff .end (operand)
  ef 7b 00 00               03 0a .var1 MAXMP
  f1 7b 00 00                  01 .literal
  f2 7b 00 00         06 00 00 00 6
  f6 7b 00 00                  ff .end (operand)
  f7 7b 00 00                  ff .end (operand)
if299
::f8 7b 00 00               05 01 .if [terms=1]
  fa 7b 00 00         d9 7c 00 00 .else
  fe 7b 00 00               03 02 .var1 CHAR
  00 7c 00 00                  01 .literal
  01 7c 00 00         07 00 00 00 7
  05 7c 00 00                  ff .end (operand)
  06 7c 00 00                  ff .end (operand)
  08 7c 00 00                  01 .if-sign-nonzero
  08 7c 00 00               03 00 .var1 FLAGS
  0a 7c 00 00                  01 .literal
  0b 7c 00 00         53 02 00 00 595
  0f 7c 00 00                  ff .end (operand)
  10 7c 00 00                  04 .incset
  11 7c 00 00                  01 .literal
  12 7c 00 00         0a 00 00 00 10
  16 7c 00 00                  ff .end (operand)
  17 7c 00 00               01 3b .exec VcText
  19 7c 00 00                  01 .literal
  1a 7c 00 00         f5 00 00 00 245
  1e 7c 00 00                  ff .end (operand)
  1f 7c 00 00               03 00 .var1 FLAGS
  21 7c 00 00                  01 .literal
  22 7c 00 00         53 02 00 00 595
  26 7c 00 00                  ff .end (operand)
  27 7c 00 00                  ff .end (operand)
  28 7c 00 00                     "Bull"

              42 75 6c 6c 00 
  2d 7c 00 00               03 00 .var1 FLAGS
  2f 7c 00 00                  01 .literal
  30 7c 00 00         53 02 00 00 595
  34 7c 00 00                  ff .end (operand)
  35 7c 00 00                  04 .incset
  36 7c 00 00                  01 .literal
  37 7c 00 00         0a 00 00 00 10
  3b 7c 00 00                  ff .end (operand)
  3c 7c 00 00               01 4e .exec VcTextNum
  3e 7c 00 00                  01 .literal
  3f 7c 00 00         f5 00 00 00 245
  43 7c 00 00                  ff .end (operand)
  44 7c 00 00               03 00 .var1 FLAGS
  46 7c 00 00                  01 .literal
  47 7c 00 00         53 02 00 00 595
  4b 7c 00 00                  ff .end (operand)
  4c 7c 00 00                  ff .end (operand)
  4d 7c 00 00               03 07 .var1 CURHP
  4f 7c 00 00                  01 .literal
  50 7c 00 00         07 00 00 00 7
  54 7c 00 00                  ff .end (operand)
  55 7c 00 00                  ff .end (operand)
  56 7c 00 00               01 3b .exec VcText
  58 7c 00 00                  01 .literal
  59 7c 00 00         09 01 00 00 265
  5d 7c 00 00                  ff .end (operand)
  5e 7c 00 00               03 00 .var1 FLAGS
  60 7c 00 00                  01 .literal
  61 7c 00 00         53 02 00 00 595
  65 7c 00 00                  ff .end (operand)
  66 7c 00 00                  ff .end (operand)
  67 7c 00 00                     "/"

              2f 00 
  69 7c 00 00               01 4e .exec VcTextNum
  6b 7c 00 00                  01 .literal
  6c 7c 00 00         13 01 00 00 275
  70 7c 00 00                  ff .end (operand)
  71 7c 00 00               03 00 .var1 FLAGS
  73 7c 00 00                  01 .literal
  74 7c 00 00         53 02 00 00 595
  78 7c 00 00                  ff .end (operand)
  79 7c 00 00                  ff .end (operand)
  7a 7c 00 00               03 08 .var1 MAXHP
  7c 7c 00 00                  01 .literal
  7d 7c 00 00         07 00 00 00 7
  81 7c 00 00                  ff .end (operand)
  82 7c 00 00                  ff .end (operand)
  83 7c 00 00               03 00 .var1 FLAGS
  85 7c 00 00                  01 .literal
  86 7c 00 00         53 02 00 00 595
  8a 7c 00 00                  ff .end (operand)
  8b 7c 00 00                  04 .incset
  8c 7c 00 00                  01 .literal
  8d 7c 00 00         0a 00 00 00 10
  91 7c 00 00                  ff .end (operand)
  92 7c 00 00               01 4e .exec VcTextNum
  94 7c 00 00                  01 .literal
  95 7c 00 00         f5 00 00 00 245
  99 7c 00 00                  ff .end (operand)
  9a 7c 00 00               03 00 .var1 FLAGS
  9c 7c 00 00                  01 .literal
  9d 7c 00 00         53 02 00 00 595
  a1 7c 00 00                  ff .end (operand)
  a2 7c 00 00                  ff .end (operand)
  a3 7c 00 00               03 09 .var1 CURMP
  a5 7c 00 00                  01 .literal
  a6 7c 00 00         07 00 00 00 7
  aa 7c 00 00                  ff .end (operand)
  ab 7c 00 00                  ff .end (operand)
  ac 7c 00 00               01 3b .exec VcText
  ae 7c 00 00                  01 .literal
  af 7c 00 00         09 01 00 00 265
  b3 7c 00 00                  ff .end (operand)
  b4 7c 00 00               03 00 .var1 FLAGS
  b6 7c 00 00                  01 .literal
  b7 7c 00 00         53 02 00 00 595
  bb 7c 00 00                  ff .end (operand)
  bc 7c 00 00                  ff .end (operand)
  bd 7c 00 00                     "/"

              2f 00 
  bf 7c 00 00               01 4e .exec VcTextNum
  c1 7c 00 00                  01 .literal
  c2 7c 00 00         13 01 00 00 275
  c6 7c 00 00                  ff .end (operand)
  c7 7c 00 00               03 00 .var1 FLAGS
  c9 7c 00 00                  01 .literal
  ca 7c 00 00         53 02 00 00 595
  ce 7c 00 00                  ff .end (operand)
  cf 7c 00 00                  ff .end (operand)
  d0 7c 00 00               03 0a .var1 MAXMP
  d2 7c 00 00                  01 .literal
  d3 7c 00 00         07 00 00 00 7
  d7 7c 00 00                  ff .end (operand)
  d8 7c 00 00                  ff .end (operand)
if300
::d9 7c 00 00               05 01 .if [terms=1]
  db 7c 00 00         bb 7d 00 00 .else
  df 7c 00 00               03 02 .var1 CHAR
  e1 7c 00 00                  01 .literal
  e2 7c 00 00         08 00 00 00 8
  e6 7c 00 00                  ff .end (operand)
  e7 7c 00 00                  ff .end (operand)
  e9 7c 00 00                  01 .if-sign-nonzero
  e9 7c 00 00               03 00 .var1 FLAGS
  eb 7c 00 00                  01 .literal
  ec 7c 00 00         53 02 00 00 595
  f0 7c 00 00                  ff .end (operand)
  f1 7c 00 00                  04 .incset
  f2 7c 00 00                  01 .literal
  f3 7c 00 00         0a 00 00 00 10
  f7 7c 00 00                  ff .end (operand)
  f8 7c 00 00               01 3b .exec VcText
  fa 7c 00 00                  01 .literal
  fb 7c 00 00         f5 00 00 00 245
  ff 7c 00 00                  ff .end (operand)
  00 7d 00 00               03 00 .var1 FLAGS
  02 7d 00 00                  01 .literal
  03 7d 00 00         53 02 00 00 595
  07 7d 00 00                  ff .end (operand)
  08 7d 00 00                  ff .end (operand)
  09 7d 00 00                     "Lumin"

              4c 75 6d 69 6e 00 
  0f 7d 00 00               03 00 .var1 FLAGS
  11 7d 00 00                  01 .literal
  12 7d 00 00         53 02 00 00 595
  16 7d 00 00                  ff .end (operand)
  17 7d 00 00                  04 .incset
  18 7d 00 00                  01 .literal
  19 7d 00 00         0a 00 00 00 10
  1d 7d 00 00                  ff .end (operand)
  1e 7d 00 00               01 4e .exec VcTextNum
  20 7d 00 00                  01 .literal
  21 7d 00 00         f5 00 00 00 245
  25 7d 00 00                  ff .end (operand)
  26 7d 00 00               03 00 .var1 FLAGS
  28 7d 00 00                  01 .literal
  29 7d 00 00         53 02 00 00 595
  2d 7d 00 00                  ff .end (operand)
  2e 7d 00 00                  ff .end (operand)
  2f 7d 00 00               03 07 .var1 CURHP
  31 7d 00 00                  01 .literal
  32 7d 00 00         08 00 00 00 8
  36 7d 00 00                  ff .end (operand)
  37 7d 00 00                  ff .end (operand)
  38 7d 00 00               01 3b .exec VcText
  3a 7d 00 00                  01 .literal
  3b 7d 00 00         09 01 00 00 265
  3f 7d 00 00                  ff .end (operand)
  40 7d 00 00               03 00 .var1 FLAGS
  42 7d 00 00                  01 .literal
  43 7d 00 00         53 02 00 00 595
  47 7d 00 00                  ff .end (operand)
  48 7d 00 00                  ff .end (operand)
  49 7d 00 00                     "/"

              2f 00 
  4b 7d 00 00               01 4e .exec VcTextNum
  4d 7d 00 00                  01 .literal
  4e 7d 00 00         13 01 00 00 275
  52 7d 00 00                  ff .end (operand)
  53 7d 00 00               03 00 .var1 FLAGS
  55 7d 00 00                  01 .literal
  56 7d 00 00         53 02 00 00 595
  5a 7d 00 00                  ff .end (operand)
  5b 7d 00 00                  ff .end (operand)
  5c 7d 00 00               03 08 .var1 MAXHP
  5e 7d 00 00                  01 .literal
  5f 7d 00 00         08 00 00 00 8
  63 7d 00 00                  ff .end (operand)
  64 7d 00 00                  ff .end (operand)
  65 7d 00 00               03 00 .var1 FLAGS
  67 7d 00 00                  01 .literal
  68 7d 00 00         53 02 00 00 595
  6c 7d 00 00                  ff .end (operand)
  6d 7d 00 00                  04 .incset
  6e 7d 00 00                  01 .literal
  6f 7d 00 00         0a 00 00 00 10
  73 7d 00 00                  ff .end (operand)
  74 7d 00 00               01 4e .exec VcTextNum
  76 7d 00 00                  01 .literal
  77 7d 00 00         f5 00 00 00 245
  7b 7d 00 00                  ff .end (operand)
  7c 7d 00 00               03 00 .var1 FLAGS
  7e 7d 00 00                  01 .literal
  7f 7d 00 00         53 02 00 00 595
  83 7d 00 00                  ff .end (operand)
  84 7d 00 00                  ff .end (operand)
  85 7d 00 00               03 09 .var1 CURMP
  87 7d 00 00                  01 .literal
  88 7d 00 00         08 00 00 00 8
  8c 7d 00 00                  ff .end (operand)
  8d 7d 00 00                  ff .end (operand)
  8e 7d 00 00               01 3b .exec VcText
  90 7d 00 00                  01 .literal
  91 7d 00 00         09 01 00 00 265
  95 7d 00 00                  ff .end (operand)
  96 7d 00 00               03 00 .var1 FLAGS
  98 7d 00 00                  01 .literal
  99 7d 00 00         53 02 00 00 595
  9d 7d 00 00                  ff .end (operand)
  9e 7d 00 00                  ff .end (operand)
  9f 7d 00 00                     "/"

              2f 00 
  a1 7d 00 00               01 4e .exec VcTextNum
  a3 7d 00 00                  01 .literal
  a4 7d 00 00         13 01 00 00 275
  a8 7d 00 00                  ff .end (operand)
  a9 7d 00 00               03 00 .var1 FLAGS
  ab 7d 00 00                  01 .literal
  ac 7d 00 00         53 02 00 00 595
  b0 7d 00 00                  ff .end (operand)
  b1 7d 00 00                  ff .end (operand)
  b2 7d 00 00               03 0a .var1 MAXMP
  b4 7d 00 00                  01 .literal
  b5 7d 00 00         08 00 00 00 8
  b9 7d 00 00                  ff .end (operand)
  ba 7d 00 00                  ff .end (operand)
::bb 7d 00 00               01 3b .exec VcText
  bd 7d 00 00                  01 .literal
  be 7d 00 00         f5 00 00 00 245
  c2 7d 00 00                  ff .end (operand)
  c3 7d 00 00                  01 .literal
  c4 7d 00 00         ad 00 00 00 173
  c8 7d 00 00                  ff .end (operand)
  c9 7d 00 00                     "SP"

              53 50 00 
  cc 7d 00 00               01 4e .exec VcTextNum
  ce 7d 00 00                  01 .literal
  cf 7d 00 00         f5 00 00 00 245
  d3 7d 00 00                  ff .end (operand)
  d4 7d 00 00                  01 .literal
  d5 7d 00 00         b7 00 00 00 183
  d9 7d 00 00                  ff .end (operand)
  da 7d 00 00               03 00 .var1 FLAGS
  dc 7d 00 00                  01 .literal
  dd 7d 00 00         bf 02 00 00 703
  e1 7d 00 00                  ff .end (operand)
  e2 7d 00 00                  ff .end (operand)
  e3 7d 00 00               01 20 .exec Redraw
  e5 7d 00 00                  ff .end (block)

.event 16
* e6 7d 00 00                  0a .switch
  e7 7d 00 00               03 00 .var1 FLAGS
  e9 7d 00 00                  01 .literal
  ea 7d 00 00         75 02 00 00 629
  ee 7d 00 00                  ff .end (operand)
  ef 7d 00 00                  ff .end (operand)
  f0 7d 00 00                  0b .case
  f1 7d 00 00                  05 .group
  f2 7d 00 00                  01 .literal
  f3 7d 00 00         01 00 00 00 1
  f7 7d 00 00                  ff .end (operand)
  f8 7d 00 00                  ff .end (operand)
  f9 7d 00 00         77 80 00 00 .case-end-address
  fd 7d 00 00                  0a .switch
  fe 7d 00 00               03 00 .var1 FLAGS
  00 7e 00 00                  01 .literal
  01 7e 00 00         70 02 00 00 624
  05 7e 00 00                  ff .end (operand)
  06 7e 00 00                  ff .end (operand)
  07 7e 00 00                  0b .case
  08 7e 00 00                  05 .group
  09 7e 00 00                  01 .literal
  0a 7e 00 00         01 00 00 00 1
  0e 7e 00 00                  ff .end (operand)
  0f 7e 00 00                  ff .end (operand)
  10 7e 00 00         2c 7e 00 00 .case-end-address
  14 7e 00 00               01 4e .exec VcTextNum
  16 7e 00 00                  01 .literal
  17 7e 00 00         b0 00 00 00 176
  1b 7e 00 00                  ff .end (operand)
  1c 7e 00 00                  01 .literal
  1d 7e 00 00         70 00 00 00 112
  21 7e 00 00                  ff .end (operand)
  22 7e 00 00               03 00 .var1 FLAGS
  24 7e 00 00                  01 .literal
  25 7e 00 00         69 02 00 00 617
  29 7e 00 00                  ff .end (operand)
  2a 7e 00 00                  ff .end (operand)
  2b 7e 00 00                  ff .end (block)
 :2c 7e 00 00                  0b .case
  2d 7e 00 00                  05 .group
  2e 7e 00 00                  01 .literal
  2f 7e 00 00         02 00 00 00 2
  33 7e 00 00                  ff .end (operand)
  34 7e 00 00                  ff .end (operand)
  35 7e 00 00         51 7e 00 00 .case-end-address
  39 7e 00 00               01 4e .exec VcTextNum
  3b 7e 00 00                  01 .literal
  3c 7e 00 00         d0 00 00 00 208
  40 7e 00 00                  ff .end (operand)
  41 7e 00 00                  01 .literal
  42 7e 00 00         80 00 00 00 128
  46 7e 00 00                  ff .end (operand)
  47 7e 00 00               03 00 .var1 FLAGS
  49 7e 00 00                  01 .literal
  4a 7e 00 00         69 02 00 00 617
  4e 7e 00 00                  ff .end (operand)
  4f 7e 00 00                  ff .end (operand)
  50 7e 00 00                  ff .end (block)
 :51 7e 00 00                  0b .case
  52 7e 00 00                  05 .group
  53 7e 00 00                  01 .literal
  54 7e 00 00         03 00 00 00 3
  58 7e 00 00                  ff .end (operand)
  59 7e 00 00                  ff .end (operand)
  5a 7e 00 00         76 7e 00 00 .case-end-address
  5e 7e 00 00               01 4e .exec VcTextNum
  60 7e 00 00                  01 .literal
  61 7e 00 00         b0 00 00 00 176
  65 7e 00 00                  ff .end (operand)
  66 7e 00 00                  01 .literal
  67 7e 00 00         90 00 00 00 144
  6b 7e 00 00                  ff .end (operand)
  6c 7e 00 00               03 00 .var1 FLAGS
  6e 7e 00 00                  01 .literal
  6f 7e 00 00         69 02 00 00 617
  73 7e 00 00                  ff .end (operand)
  74 7e 00 00                  ff .end (operand)
  75 7e 00 00                  ff .end (block)
 :76 7e 00 00                  0b .case
  77 7e 00 00                  05 .group
  78 7e 00 00                  01 .literal
  79 7e 00 00         04 00 00 00 4
  7d 7e 00 00                  ff .end (operand)
  7e 7e 00 00                  ff .end (operand)
  7f 7e 00 00         9b 7e 00 00 .case-end-address
  83 7e 00 00               01 4e .exec VcTextNum
  85 7e 00 00                  01 .literal
  86 7e 00 00         b0 00 00 00 176
  8a 7e 00 00                  ff .end (operand)
  8b 7e 00 00                  01 .literal
  8c 7e 00 00         50 00 00 00 80
  90 7e 00 00                  ff .end (operand)
  91 7e 00 00               03 00 .var1 FLAGS
  93 7e 00 00                  01 .literal
  94 7e 00 00         69 02 00 00 617
  98 7e 00 00                  ff .end (operand)
  99 7e 00 00                  ff .end (operand)
  9a 7e 00 00                  ff .end (block)
 :9b 7e 00 00                  0b .case
  9c 7e 00 00                  05 .group
  9d 7e 00 00                  01 .literal
  9e 7e 00 00         05 00 00 00 5
  a2 7e 00 00                  ff .end (operand)
  a3 7e 00 00                  ff .end (operand)
  a4 7e 00 00         c0 7e 00 00 .case-end-address
  a8 7e 00 00               01 4e .exec VcTextNum
  aa 7e 00 00                  01 .literal
  ab 7e 00 00         d0 00 00 00 208
  af 7e 00 00                  ff .end (operand)
  b0 7e 00 00                  01 .literal
  b1 7e 00 00         60 00 00 00 96
  b5 7e 00 00                  ff .end (operand)
  b6 7e 00 00               03 00 .var1 FLAGS
  b8 7e 00 00                  01 .literal
  b9 7e 00 00         69 02 00 00 617
  bd 7e 00 00                  ff .end (operand)
  be 7e 00 00                  ff .end (operand)
  bf 7e 00 00                  ff .end (block)
 :c0 7e 00 00                  0b .case
  c1 7e 00 00                  05 .group
  c2 7e 00 00                  01 .literal
  c3 7e 00 00         06 00 00 00 6
  c7 7e 00 00                  ff .end (operand)
  c8 7e 00 00                  ff .end (operand)
  c9 7e 00 00         e5 7e 00 00 .case-end-address
  cd 7e 00 00               01 4e .exec VcTextNum
  cf 7e 00 00                  01 .literal
  d0 7e 00 00         e0 00 00 00 224
  d4 7e 00 00                  ff .end (operand)
  d5 7e 00 00                  01 .literal
  d6 7e 00 00         70 00 00 00 112
  da 7e 00 00                  ff .end (operand)
  db 7e 00 00               03 00 .var1 FLAGS
  dd 7e 00 00                  01 .literal
  de 7e 00 00         69 02 00 00 617
  e2 7e 00 00                  ff .end (operand)
  e3 7e 00 00                  ff .end (operand)
  e4 7e 00 00                  ff .end (block)
 :e5 7e 00 00                  0b .case
  e6 7e 00 00                  05 .group
  e7 7e 00 00                  01 .literal
  e8 7e 00 00         07 00 00 00 7
  ec 7e 00 00                  ff .end (operand)
  ed 7e 00 00                  ff .end (operand)
  ee 7e 00 00         0a 7f 00 00 .case-end-address
  f2 7e 00 00               01 4e .exec VcTextNum
  f4 7e 00 00                  01 .literal
  f5 7e 00 00         c0 00 00 00 192
  f9 7e 00 00                  ff .end (operand)
  fa 7e 00 00                  01 .literal
  fb 7e 00 00         a0 00 00 00 160
  ff 7e 00 00                  ff .end (operand)
  00 7f 00 00               03 00 .var1 FLAGS
  02 7f 00 00                  01 .literal
  03 7f 00 00         69 02 00 00 617
  07 7f 00 00                  ff .end (operand)
  08 7f 00 00                  ff .end (operand)
  09 7f 00 00                  ff .end (block)
 :0a 7f 00 00                  0b .case
  0b 7f 00 00                  05 .group
  0c 7f 00 00                  01 .literal
  0d 7f 00 00         08 00 00 00 8
  11 7f 00 00                  ff .end (operand)
  12 7f 00 00                  ff .end (operand)
  13 7f 00 00         2f 7f 00 00 .case-end-address
  17 7f 00 00               01 4e .exec VcTextNum
  19 7f 00 00                  01 .literal
  1a 7f 00 00         c0 00 00 00 192
  1e 7f 00 00                  ff .end (operand)
  1f 7f 00 00                  01 .literal
  20 7f 00 00         40 00 00 00 64
  24 7f 00 00                  ff .end (operand)
  25 7f 00 00               03 00 .var1 FLAGS
  27 7f 00 00                  01 .literal
  28 7f 00 00         69 02 00 00 617
  2c 7f 00 00                  ff .end (operand)
  2d 7f 00 00                  ff .end (operand)
  2e 7f 00 00                  ff .end (block)
 :2f 7f 00 00                  0b .case
  30 7f 00 00                  05 .group
  31 7f 00 00                  01 .literal
  32 7f 00 00         09 00 00 00 9
  36 7f 00 00                  ff .end (operand)
  37 7f 00 00                  ff .end (operand)
  38 7f 00 00         75 80 00 00 .case-end-address
if301
 :3c 7f 00 00               05 01 .if [terms=1]
  3e 7f 00 00         63 7f 00 00 .else
  42 7f 00 00               03 02 .var1 CHAR
  44 7f 00 00                  01 .literal
  45 7f 00 00         01 00 00 00 1
  49 7f 00 00                  ff .end (operand)
  4a 7f 00 00                  ff .end (operand)
  4c 7f 00 00                  01 .if-sign-nonzero
  4c 7f 00 00               01 4e .exec VcTextNum
  4e 7f 00 00                  01 .literal
  4f 7f 00 00         b0 00 00 00 176
  53 7f 00 00                  ff .end (operand)
  54 7f 00 00                  01 .literal
  55 7f 00 00         70 00 00 00 112
  59 7f 00 00                  ff .end (operand)
  5a 7f 00 00               03 00 .var1 FLAGS
  5c 7f 00 00                  01 .literal
  5d 7f 00 00         69 02 00 00 617
  61 7f 00 00                  ff .end (operand)
  62 7f 00 00                  ff .end (operand)
if302
::63 7f 00 00               05 01 .if [terms=1]
  65 7f 00 00         8a 7f 00 00 .else
  69 7f 00 00               03 02 .var1 CHAR
  6b 7f 00 00                  01 .literal
  6c 7f 00 00         02 00 00 00 2
  70 7f 00 00                  ff .end (operand)
  71 7f 00 00                  ff .end (operand)
  73 7f 00 00                  01 .if-sign-nonzero
  73 7f 00 00               01 4e .exec VcTextNum
  75 7f 00 00                  01 .literal
  76 7f 00 00         d0 00 00 00 208
  7a 7f 00 00                  ff .end (operand)
  7b 7f 00 00                  01 .literal
  7c 7f 00 00         80 00 00 00 128
  80 7f 00 00                  ff .end (operand)
  81 7f 00 00               03 00 .var1 FLAGS
  83 7f 00 00                  01 .literal
  84 7f 00 00         69 02 00 00 617
  88 7f 00 00                  ff .end (operand)
  89 7f 00 00                  ff .end (operand)
if303
::8a 7f 00 00               05 01 .if [terms=1]
  8c 7f 00 00         b1 7f 00 00 .else
  90 7f 00 00               03 02 .var1 CHAR
  92 7f 00 00                  01 .literal
  93 7f 00 00         03 00 00 00 3
  97 7f 00 00                  ff .end (operand)
  98 7f 00 00                  ff .end (operand)
  9a 7f 00 00                  01 .if-sign-nonzero
  9a 7f 00 00               01 4e .exec VcTextNum
  9c 7f 00 00                  01 .literal
  9d 7f 00 00         b0 00 00 00 176
  a1 7f 00 00                  ff .end (operand)
  a2 7f 00 00                  01 .literal
  a3 7f 00 00         90 00 00 00 144
  a7 7f 00 00                  ff .end (operand)
  a8 7f 00 00               03 00 .var1 FLAGS
  aa 7f 00 00                  01 .literal
  ab 7f 00 00         69 02 00 00 617
  af 7f 00 00                  ff .end (operand)
  b0 7f 00 00                  ff .end (operand)
if304
::b1 7f 00 00               05 01 .if [terms=1]
  b3 7f 00 00         d8 7f 00 00 .else
  b7 7f 00 00               03 02 .var1 CHAR
  b9 7f 00 00                  01 .literal
  ba 7f 00 00         04 00 00 00 4
  be 7f 00 00                  ff .end (operand)
  bf 7f 00 00                  ff .end (operand)
  c1 7f 00 00                  01 .if-sign-nonzero
  c1 7f 00 00               01 4e .exec VcTextNum
  c3 7f 00 00                  01 .literal
  c4 7f 00 00         b0 00 00 00 176
  c8 7f 00 00                  ff .end (operand)
  c9 7f 00 00                  01 .literal
  ca 7f 00 00         50 00 00 00 80
  ce 7f 00 00                  ff .end (operand)
  cf 7f 00 00               03 00 .var1 FLAGS
  d1 7f 00 00                  01 .literal
  d2 7f 00 00         69 02 00 00 617
  d6 7f 00 00                  ff .end (operand)
  d7 7f 00 00                  ff .end (operand)
if305
::d8 7f 00 00               05 01 .if [terms=1]
  da 7f 00 00         ff 7f 00 00 .else
  de 7f 00 00               03 02 .var1 CHAR
  e0 7f 00 00                  01 .literal
  e1 7f 00 00         05 00 00 00 5
  e5 7f 00 00                  ff .end (operand)
  e6 7f 00 00                  ff .end (operand)
  e8 7f 00 00                  01 .if-sign-nonzero
  e8 7f 00 00               01 4e .exec VcTextNum
  ea 7f 00 00                  01 .literal
  eb 7f 00 00         d0 00 00 00 208
  ef 7f 00 00                  ff .end (operand)
  f0 7f 00 00                  01 .literal
  f1 7f 00 00         60 00 00 00 96
  f5 7f 00 00                  ff .end (operand)
  f6 7f 00 00               03 00 .var1 FLAGS
  f8 7f 00 00                  01 .literal
  f9 7f 00 00         69 02 00 00 617
  fd 7f 00 00                  ff .end (operand)
  fe 7f 00 00                  ff .end (operand)
if306
::ff 7f 00 00               05 01 .if [terms=1]
  01 80 00 00         26 80 00 00 .else
  05 80 00 00               03 02 .var1 CHAR
  07 80 00 00                  01 .literal
  08 80 00 00         06 00 00 00 6
  0c 80 00 00                  ff .end (operand)
  0d 80 00 00                  ff .end (operand)
  0f 80 00 00                  01 .if-sign-nonzero
  0f 80 00 00               01 4e .exec VcTextNum
  11 80 00 00                  01 .literal
  12 80 00 00         e0 00 00 00 224
  16 80 00 00                  ff .end (operand)
  17 80 00 00                  01 .literal
  18 80 00 00         70 00 00 00 112
  1c 80 00 00                  ff .end (operand)
  1d 80 00 00               03 00 .var1 FLAGS
  1f 80 00 00                  01 .literal
  20 80 00 00         69 02 00 00 617
  24 80 00 00                  ff .end (operand)
  25 80 00 00                  ff .end (operand)
if307
::26 80 00 00               05 01 .if [terms=1]
  28 80 00 00         4d 80 00 00 .else
  2c 80 00 00               03 02 .var1 CHAR
  2e 80 00 00                  01 .literal
  2f 80 00 00         07 00 00 00 7
  33 80 00 00                  ff .end (operand)
  34 80 00 00                  ff .end (operand)
  36 80 00 00                  01 .if-sign-nonzero
  36 80 00 00               01 4e .exec VcTextNum
  38 80 00 00                  01 .literal
  39 80 00 00         c0 00 00 00 192
  3d 80 00 00                  ff .end (operand)
  3e 80 00 00                  01 .literal
  3f 80 00 00         a0 00 00 00 160
  43 80 00 00                  ff .end (operand)
  44 80 00 00               03 00 .var1 FLAGS
  46 80 00 00                  01 .literal
  47 80 00 00         69 02 00 00 617
  4b 80 00 00                  ff .end (operand)
  4c 80 00 00                  ff .end (operand)
if308
::4d 80 00 00               05 01 .if [terms=1]
  4f 80 00 00         74 80 00 00 .else
  53 80 00 00               03 02 .var1 CHAR
  55 80 00 00                  01 .literal
  56 80 00 00         08 00 00 00 8
  5a 80 00 00                  ff .end (operand)
  5b 80 00 00                  ff .end (operand)
  5d 80 00 00                  01 .if-sign-nonzero
  5d 80 00 00               01 4e .exec VcTextNum
  5f 80 00 00                  01 .literal
  60 80 00 00         c0 00 00 00 192
  64 80 00 00                  ff .end (operand)
  65 80 00 00                  01 .literal
  66 80 00 00         40 00 00 00 64
  6a 80 00 00                  ff .end (operand)
  6b 80 00 00               03 00 .var1 FLAGS
  6d 80 00 00                  01 .literal
  6e 80 00 00         69 02 00 00 617
  72 80 00 00                  ff .end (operand)
  73 80 00 00                  ff .end (operand)
 :74 80 00 00                  ff .end (block)
 :75 80 00 00                  ff .end (switch)
  76 80 00 00                  ff .end (block)
 :77 80 00 00                  0b .case
  78 80 00 00                  05 .group
  79 80 00 00                  01 .literal
  7a 80 00 00         02 00 00 00 2
  7e 80 00 00                  ff .end (operand)
  7f 80 00 00                  ff .end (operand)
  80 80 00 00         fe 82 00 00 .case-end-address
  84 80 00 00                  0a .switch
  85 80 00 00               03 00 .var1 FLAGS
  87 80 00 00                  01 .literal
  88 80 00 00         72 02 00 00 626
  8c 80 00 00                  ff .end (operand)
  8d 80 00 00                  ff .end (operand)
  8e 80 00 00                  0b .case
  8f 80 00 00                  05 .group
  90 80 00 00                  01 .literal
  91 80 00 00         01 00 00 00 1
  95 80 00 00                  ff .end (operand)
  96 80 00 00                  ff .end (operand)
  97 80 00 00         b3 80 00 00 .case-end-address
  9b 80 00 00               01 4e .exec VcTextNum
  9d 80 00 00                  01 .literal
  9e 80 00 00         b0 00 00 00 176
  a2 80 00 00                  ff .end (operand)
  a3 80 00 00                  01 .literal
  a4 80 00 00         70 00 00 00 112
  a8 80 00 00                  ff .end (operand)
  a9 80 00 00               03 00 .var1 FLAGS
  ab 80 00 00                  01 .literal
  ac 80 00 00         6b 02 00 00 619
  b0 80 00 00                  ff .end (operand)
  b1 80 00 00                  ff .end (operand)
  b2 80 00 00                  ff .end (block)
 :b3 80 00 00                  0b .case
  b4 80 00 00                  05 .group
  b5 80 00 00                  01 .literal
  b6 80 00 00         02 00 00 00 2
  ba 80 00 00                  ff .end (operand)
  bb 80 00 00                  ff .end (operand)
  bc 80 00 00         d8 80 00 00 .case-end-address
  c0 80 00 00               01 4e .exec VcTextNum
  c2 80 00 00                  01 .literal
  c3 80 00 00         d0 00 00 00 208
  c7 80 00 00                  ff .end (operand)
  c8 80 00 00                  01 .literal
  c9 80 00 00         80 00 00 00 128
  cd 80 00 00                  ff .end (operand)
  ce 80 00 00               03 00 .var1 FLAGS
  d0 80 00 00                  01 .literal
  d1 80 00 00         6b 02 00 00 619
  d5 80 00 00                  ff .end (operand)
  d6 80 00 00                  ff .end (operand)
  d7 80 00 00                  ff .end (block)
 :d8 80 00 00                  0b .case
  d9 80 00 00                  05 .group
  da 80 00 00                  01 .literal
  db 80 00 00         03 00 00 00 3
  df 80 00 00                  ff .end (operand)
  e0 80 00 00                  ff .end (operand)
  e1 80 00 00         fd 80 00 00 .case-end-address
  e5 80 00 00               01 4e .exec VcTextNum
  e7 80 00 00                  01 .literal
  e8 80 00 00         b0 00 00 00 176
  ec 80 00 00                  ff .end (operand)
  ed 80 00 00                  01 .literal
  ee 80 00 00         90 00 00 00 144
  f2 80 00 00                  ff .end (operand)
  f3 80 00 00               03 00 .var1 FLAGS
  f5 80 00 00                  01 .literal
  f6 80 00 00         6b 02 00 00 619
  fa 80 00 00                  ff .end (operand)
  fb 80 00 00                  ff .end (operand)
  fc 80 00 00                  ff .end (block)
 :fd 80 00 00                  0b .case
  fe 80 00 00                  05 .group
  ff 80 00 00                  01 .literal
  00 81 00 00         04 00 00 00 4
  04 81 00 00                  ff .end (operand)
  05 81 00 00                  ff .end (operand)
  06 81 00 00         22 81 00 00 .case-end-address
  0a 81 00 00               01 4e .exec VcTextNum
  0c 81 00 00                  01 .literal
  0d 81 00 00         b0 00 00 00 176
  11 81 00 00                  ff .end (operand)
  12 81 00 00                  01 .literal
  13 81 00 00         50 00 00 00 80
  17 81 00 00                  ff .end (operand)
  18 81 00 00               03 00 .var1 FLAGS
  1a 81 00 00                  01 .literal
  1b 81 00 00         6b 02 00 00 619
  1f 81 00 00                  ff .end (operand)
  20 81 00 00                  ff .end (operand)
  21 81 00 00                  ff .end (block)
 :22 81 00 00                  0b .case
  23 81 00 00                  05 .group
  24 81 00 00                  01 .literal
  25 81 00 00         05 00 00 00 5
  29 81 00 00                  ff .end (operand)
  2a 81 00 00                  ff .end (operand)
  2b 81 00 00         47 81 00 00 .case-end-address
  2f 81 00 00               01 4e .exec VcTextNum
  31 81 00 00                  01 .literal
  32 81 00 00         d0 00 00 00 208
  36 81 00 00                  ff .end (operand)
  37 81 00 00                  01 .literal
  38 81 00 00         60 00 00 00 96
  3c 81 00 00                  ff .end (operand)
  3d 81 00 00               03 00 .var1 FLAGS
  3f 81 00 00                  01 .literal
  40 81 00 00         6b 02 00 00 619
  44 81 00 00                  ff .end (operand)
  45 81 00 00                  ff .end (operand)
  46 81 00 00                  ff .end (block)
 :47 81 00 00                  0b .case
  48 81 00 00                  05 .group
  49 81 00 00                  01 .literal
  4a 81 00 00         06 00 00 00 6
  4e 81 00 00                  ff .end (operand)
  4f 81 00 00                  ff .end (operand)
  50 81 00 00         6c 81 00 00 .case-end-address
  54 81 00 00               01 4e .exec VcTextNum
  56 81 00 00                  01 .literal
  57 81 00 00         e0 00 00 00 224
  5b 81 00 00                  ff .end (operand)
  5c 81 00 00                  01 .literal
  5d 81 00 00         70 00 00 00 112
  61 81 00 00                  ff .end (operand)
  62 81 00 00               03 00 .var1 FLAGS
  64 81 00 00                  01 .literal
  65 81 00 00         6b 02 00 00 619
  69 81 00 00                  ff .end (operand)
  6a 81 00 00                  ff .end (operand)
  6b 81 00 00                  ff .end (block)
 :6c 81 00 00                  0b .case
  6d 81 00 00                  05 .group
  6e 81 00 00                  01 .literal
  6f 81 00 00         07 00 00 00 7
  73 81 00 00                  ff .end (operand)
  74 81 00 00                  ff .end (operand)
  75 81 00 00         91 81 00 00 .case-end-address
  79 81 00 00               01 4e .exec VcTextNum
  7b 81 00 00                  01 .literal
  7c 81 00 00         c0 00 00 00 192
  80 81 00 00                  ff .end (operand)
  81 81 00 00                  01 .literal
  82 81 00 00         a0 00 00 00 160
  86 81 00 00                  ff .end (operand)
  87 81 00 00               03 00 .var1 FLAGS
  89 81 00 00                  01 .literal
  8a 81 00 00         6b 02 00 00 619
  8e 81 00 00                  ff .end (operand)
  8f 81 00 00                  ff .end (operand)
  90 81 00 00                  ff .end (block)
 :91 81 00 00                  0b .case
  92 81 00 00                  05 .group
  93 81 00 00                  01 .literal
  94 81 00 00         08 00 00 00 8
  98 81 00 00                  ff .end (operand)
  99 81 00 00                  ff .end (operand)
  9a 81 00 00         b6 81 00 00 .case-end-address
  9e 81 00 00               01 4e .exec VcTextNum
  a0 81 00 00                  01 .literal
  a1 81 00 00         c0 00 00 00 192
  a5 81 00 00                  ff .end (operand)
  a6 81 00 00                  01 .literal
  a7 81 00 00         40 00 00 00 64
  ab 81 00 00                  ff .end (operand)
  ac 81 00 00               03 00 .var1 FLAGS
  ae 81 00 00                  01 .literal
  af 81 00 00         6b 02 00 00 619
  b3 81 00 00                  ff .end (operand)
  b4 81 00 00                  ff .end (operand)
  b5 81 00 00                  ff .end (block)
 :b6 81 00 00                  0b .case
  b7 81 00 00                  05 .group
  b8 81 00 00                  01 .literal
  b9 81 00 00         09 00 00 00 9
  bd 81 00 00                  ff .end (operand)
  be 81 00 00                  ff .end (operand)
  bf 81 00 00         fc 82 00 00 .case-end-address
if309
 :c3 81 00 00               05 01 .if [terms=1]
  c5 81 00 00         ea 81 00 00 .else
  c9 81 00 00               03 02 .var1 CHAR
  cb 81 00 00                  01 .literal
  cc 81 00 00         01 00 00 00 1
  d0 81 00 00                  ff .end (operand)
  d1 81 00 00                  ff .end (operand)
  d3 81 00 00                  01 .if-sign-nonzero
  d3 81 00 00               01 4e .exec VcTextNum
  d5 81 00 00                  01 .literal
  d6 81 00 00         b0 00 00 00 176
  da 81 00 00                  ff .end (operand)
  db 81 00 00                  01 .literal
  dc 81 00 00         70 00 00 00 112
  e0 81 00 00                  ff .end (operand)
  e1 81 00 00               03 00 .var1 FLAGS
  e3 81 00 00                  01 .literal
  e4 81 00 00         6b 02 00 00 619
  e8 81 00 00                  ff .end (operand)
  e9 81 00 00                  ff .end (operand)
if310
::ea 81 00 00               05 01 .if [terms=1]
  ec 81 00 00         11 82 00 00 .else
  f0 81 00 00               03 02 .var1 CHAR
  f2 81 00 00                  01 .literal
  f3 81 00 00         02 00 00 00 2
  f7 81 00 00                  ff .end (operand)
  f8 81 00 00                  ff .end (operand)
  fa 81 00 00                  01 .if-sign-nonzero
  fa 81 00 00               01 4e .exec VcTextNum
  fc 81 00 00                  01 .literal
  fd 81 00 00         d0 00 00 00 208
  01 82 00 00                  ff .end (operand)
  02 82 00 00                  01 .literal
  03 82 00 00         80 00 00 00 128
  07 82 00 00                  ff .end (operand)
  08 82 00 00               03 00 .var1 FLAGS
  0a 82 00 00                  01 .literal
  0b 82 00 00         6b 02 00 00 619
  0f 82 00 00                  ff .end (operand)
  10 82 00 00                  ff .end (operand)
if311
::11 82 00 00               05 01 .if [terms=1]
  13 82 00 00         38 82 00 00 .else
  17 82 00 00               03 02 .var1 CHAR
  19 82 00 00                  01 .literal
  1a 82 00 00         03 00 00 00 3
  1e 82 00 00                  ff .end (operand)
  1f 82 00 00                  ff .end (operand)
  21 82 00 00                  01 .if-sign-nonzero
  21 82 00 00               01 4e .exec VcTextNum
  23 82 00 00                  01 .literal
  24 82 00 00         b0 00 00 00 176
  28 82 00 00                  ff .end (operand)
  29 82 00 00                  01 .literal
  2a 82 00 00         90 00 00 00 144
  2e 82 00 00                  ff .end (operand)
  2f 82 00 00               03 00 .var1 FLAGS
  31 82 00 00                  01 .literal
  32 82 00 00         6b 02 00 00 619
  36 82 00 00                  ff .end (operand)
  37 82 00 00                  ff .end (operand)
if312
::38 82 00 00               05 01 .if [terms=1]
  3a 82 00 00         5f 82 00 00 .else
  3e 82 00 00               03 02 .var1 CHAR
  40 82 00 00                  01 .literal
  41 82 00 00         04 00 00 00 4
  45 82 00 00                  ff .end (operand)
  46 82 00 00                  ff .end (operand)
  48 82 00 00                  01 .if-sign-nonzero
  48 82 00 00               01 4e .exec VcTextNum
  4a 82 00 00                  01 .literal
  4b 82 00 00         b0 00 00 00 176
  4f 82 00 00                  ff .end (operand)
  50 82 00 00                  01 .literal
  51 82 00 00         50 00 00 00 80
  55 82 00 00                  ff .end (operand)
  56 82 00 00               03 00 .var1 FLAGS
  58 82 00 00                  01 .literal
  59 82 00 00         6b 02 00 00 619
  5d 82 00 00                  ff .end (operand)
  5e 82 00 00                  ff .end (operand)
if313
::5f 82 00 00               05 01 .if [terms=1]
  61 82 00 00         86 82 00 00 .else
  65 82 00 00               03 02 .var1 CHAR
  67 82 00 00                  01 .literal
  68 82 00 00         05 00 00 00 5
  6c 82 00 00                  ff .end (operand)
  6d 82 00 00                  ff .end (operand)
  6f 82 00 00                  01 .if-sign-nonzero
  6f 82 00 00               01 4e .exec VcTextNum
  71 82 00 00                  01 .literal
  72 82 00 00         d0 00 00 00 208
  76 82 00 00                  ff .end (operand)
  77 82 00 00                  01 .literal
  78 82 00 00         60 00 00 00 96
  7c 82 00 00                  ff .end (operand)
  7d 82 00 00               03 00 .var1 FLAGS
  7f 82 00 00                  01 .literal
  80 82 00 00         6b 02 00 00 619
  84 82 00 00                  ff .end (operand)
  85 82 00 00                  ff .end (operand)
if314
::86 82 00 00               05 01 .if [terms=1]
  88 82 00 00         ad 82 00 00 .else
  8c 82 00 00               03 02 .var1 CHAR
  8e 82 00 00                  01 .literal
  8f 82 00 00         06 00 00 00 6
  93 82 00 00                  ff .end (operand)
  94 82 00 00                  ff .end (operand)
  96 82 00 00                  01 .if-sign-nonzero
  96 82 00 00               01 4e .exec VcTextNum
  98 82 00 00                  01 .literal
  99 82 00 00         e0 00 00 00 224
  9d 82 00 00                  ff .end (operand)
  9e 82 00 00                  01 .literal
  9f 82 00 00         70 00 00 00 112
  a3 82 00 00                  ff .end (operand)
  a4 82 00 00               03 00 .var1 FLAGS
  a6 82 00 00                  01 .literal
  a7 82 00 00         6b 02 00 00 619
  ab 82 00 00                  ff .end (operand)
  ac 82 00 00                  ff .end (operand)
if315
::ad 82 00 00               05 01 .if [terms=1]
  af 82 00 00         d4 82 00 00 .else
  b3 82 00 00               03 02 .var1 CHAR
  b5 82 00 00                  01 .literal
  b6 82 00 00         07 00 00 00 7
  ba 82 00 00                  ff .end (operand)
  bb 82 00 00                  ff .end (operand)
  bd 82 00 00                  01 .if-sign-nonzero
  bd 82 00 00               01 4e .exec VcTextNum
  bf 82 00 00                  01 .literal
  c0 82 00 00         c0 00 00 00 192
  c4 82 00 00                  ff .end (operand)
  c5 82 00 00                  01 .literal
  c6 82 00 00         a0 00 00 00 160
  ca 82 00 00                  ff .end (operand)
  cb 82 00 00               03 00 .var1 FLAGS
  cd 82 00 00                  01 .literal
  ce 82 00 00         6b 02 00 00 619
  d2 82 00 00                  ff .end (operand)
  d3 82 00 00                  ff .end (operand)
if316
::d4 82 00 00               05 01 .if [terms=1]
  d6 82 00 00         fb 82 00 00 .else
  da 82 00 00               03 02 .var1 CHAR
  dc 82 00 00                  01 .literal
  dd 82 00 00         08 00 00 00 8
  e1 82 00 00                  ff .end (operand)
  e2 82 00 00                  ff .end (operand)
  e4 82 00 00                  01 .if-sign-nonzero
  e4 82 00 00               01 4e .exec VcTextNum
  e6 82 00 00                  01 .literal
  e7 82 00 00         c0 00 00 00 192
  eb 82 00 00                  ff .end (operand)
  ec 82 00 00                  01 .literal
  ed 82 00 00         40 00 00 00 64
  f1 82 00 00                  ff .end (operand)
  f2 82 00 00               03 00 .var1 FLAGS
  f4 82 00 00                  01 .literal
  f5 82 00 00         6b 02 00 00 619
  f9 82 00 00                  ff .end (operand)
  fa 82 00 00                  ff .end (operand)
 :fb 82 00 00                  ff .end (block)
 :fc 82 00 00                  ff .end (switch)
  fd 82 00 00                  ff .end (block)
 :fe 82 00 00                  0b .case
  ff 82 00 00                  05 .group
  00 83 00 00                  01 .literal
  01 83 00 00         03 00 00 00 3
  05 83 00 00                  ff .end (operand)
  06 83 00 00                  ff .end (operand)
  07 83 00 00         85 85 00 00 .case-end-address
  0b 83 00 00                  0a .switch
  0c 83 00 00               03 00 .var1 FLAGS
  0e 83 00 00                  01 .literal
  0f 83 00 00         74 02 00 00 628
  13 83 00 00                  ff .end (operand)
  14 83 00 00                  ff .end (operand)
  15 83 00 00                  0b .case
  16 83 00 00                  05 .group
  17 83 00 00                  01 .literal
  18 83 00 00         01 00 00 00 1
  1c 83 00 00                  ff .end (operand)
  1d 83 00 00                  ff .end (operand)
  1e 83 00 00         3a 83 00 00 .case-end-address
  22 83 00 00               01 4e .exec VcTextNum
  24 83 00 00                  01 .literal
  25 83 00 00         b0 00 00 00 176
  29 83 00 00                  ff .end (operand)
  2a 83 00 00                  01 .literal
  2b 83 00 00         70 00 00 00 112
  2f 83 00 00                  ff .end (operand)
  30 83 00 00               03 00 .var1 FLAGS
  32 83 00 00                  01 .literal
  33 83 00 00         6d 02 00 00 621
  37 83 00 00                  ff .end (operand)
  38 83 00 00                  ff .end (operand)
  39 83 00 00                  ff .end (block)
 :3a 83 00 00                  0b .case
  3b 83 00 00                  05 .group
  3c 83 00 00                  01 .literal
  3d 83 00 00         02 00 00 00 2
  41 83 00 00                  ff .end (operand)
  42 83 00 00                  ff .end (operand)
  43 83 00 00         5f 83 00 00 .case-end-address
  47 83 00 00               01 4e .exec VcTextNum
  49 83 00 00                  01 .literal
  4a 83 00 00         d0 00 00 00 208
  4e 83 00 00                  ff .end (operand)
  4f 83 00 00                  01 .literal
  50 83 00 00         80 00 00 00 128
  54 83 00 00                  ff .end (operand)
  55 83 00 00               03 00 .var1 FLAGS
  57 83 00 00                  01 .literal
  58 83 00 00         6d 02 00 00 621
  5c 83 00 00                  ff .end (operand)
  5d 83 00 00                  ff .end (operand)
  5e 83 00 00                  ff .end (block)
 :5f 83 00 00                  0b .case
  60 83 00 00                  05 .group
  61 83 00 00                  01 .literal
  62 83 00 00         03 00 00 00 3
  66 83 00 00                  ff .end (operand)
  67 83 00 00                  ff .end (operand)
  68 83 00 00         84 83 00 00 .case-end-address
  6c 83 00 00               01 4e .exec VcTextNum
  6e 83 00 00                  01 .literal
  6f 83 00 00         b0 00 00 00 176
  73 83 00 00                  ff .end (operand)
  74 83 00 00                  01 .literal
  75 83 00 00         90 00 00 00 144
  79 83 00 00                  ff .end (operand)
  7a 83 00 00               03 00 .var1 FLAGS
  7c 83 00 00                  01 .literal
  7d 83 00 00         6d 02 00 00 621
  81 83 00 00                  ff .end (operand)
  82 83 00 00                  ff .end (operand)
  83 83 00 00                  ff .end (block)
 :84 83 00 00                  0b .case
  85 83 00 00                  05 .group
  86 83 00 00                  01 .literal
  87 83 00 00         04 00 00 00 4
  8b 83 00 00                  ff .end (operand)
  8c 83 00 00                  ff .end (operand)
  8d 83 00 00         a9 83 00 00 .case-end-address
  91 83 00 00               01 4e .exec VcTextNum
  93 83 00 00                  01 .literal
  94 83 00 00         b0 00 00 00 176
  98 83 00 00                  ff .end (operand)
  99 83 00 00                  01 .literal
  9a 83 00 00         50 00 00 00 80
  9e 83 00 00                  ff .end (operand)
  9f 83 00 00               03 00 .var1 FLAGS
  a1 83 00 00                  01 .literal
  a2 83 00 00         6d 02 00 00 621
  a6 83 00 00                  ff .end (operand)
  a7 83 00 00                  ff .end (operand)
  a8 83 00 00                  ff .end (block)
 :a9 83 00 00                  0b .case
  aa 83 00 00                  05 .group
  ab 83 00 00                  01 .literal
  ac 83 00 00         05 00 00 00 5
  b0 83 00 00                  ff .end (operand)
  b1 83 00 00                  ff .end (operand)
  b2 83 00 00         ce 83 00 00 .case-end-address
  b6 83 00 00               01 4e .exec VcTextNum
  b8 83 00 00                  01 .literal
  b9 83 00 00         d0 00 00 00 208
  bd 83 00 00                  ff .end (operand)
  be 83 00 00                  01 .literal
  bf 83 00 00         60 00 00 00 96
  c3 83 00 00                  ff .end (operand)
  c4 83 00 00               03 00 .var1 FLAGS
  c6 83 00 00                  01 .literal
  c7 83 00 00         6d 02 00 00 621
  cb 83 00 00                  ff .end (operand)
  cc 83 00 00                  ff .end (operand)
  cd 83 00 00                  ff .end (block)
 :ce 83 00 00                  0b .case
  cf 83 00 00                  05 .group
  d0 83 00 00                  01 .literal
  d1 83 00 00         06 00 00 00 6
  d5 83 00 00                  ff .end (operand)
  d6 83 00 00                  ff .end (operand)
  d7 83 00 00         f3 83 00 00 .case-end-address
  db 83 00 00               01 4e .exec VcTextNum
  dd 83 00 00                  01 .literal
  de 83 00 00         e0 00 00 00 224
  e2 83 00 00                  ff .end (operand)
  e3 83 00 00                  01 .literal
  e4 83 00 00         70 00 00 00 112
  e8 83 00 00                  ff .end (operand)
  e9 83 00 00               03 00 .var1 FLAGS
  eb 83 00 00                  01 .literal
  ec 83 00 00         6d 02 00 00 621
  f0 83 00 00                  ff .end (operand)
  f1 83 00 00                  ff .end (operand)
  f2 83 00 00                  ff .end (block)
 :f3 83 00 00                  0b .case
  f4 83 00 00                  05 .group
  f5 83 00 00                  01 .literal
  f6 83 00 00         07 00 00 00 7
  fa 83 00 00                  ff .end (operand)
  fb 83 00 00                  ff .end (operand)
  fc 83 00 00         18 84 00 00 .case-end-address
  00 84 00 00               01 4e .exec VcTextNum
  02 84 00 00                  01 .literal
  03 84 00 00         c0 00 00 00 192
  07 84 00 00                  ff .end (operand)
  08 84 00 00                  01 .literal
  09 84 00 00         a0 00 00 00 160
  0d 84 00 00                  ff .end (operand)
  0e 84 00 00               03 00 .var1 FLAGS
  10 84 00 00                  01 .literal
  11 84 00 00         6d 02 00 00 621
  15 84 00 00                  ff .end (operand)
  16 84 00 00                  ff .end (operand)
  17 84 00 00                  ff .end (block)
 :18 84 00 00                  0b .case
  19 84 00 00                  05 .group
  1a 84 00 00                  01 .literal
  1b 84 00 00         08 00 00 00 8
  1f 84 00 00                  ff .end (operand)
  20 84 00 00                  ff .end (operand)
  21 84 00 00         3d 84 00 00 .case-end-address
  25 84 00 00               01 4e .exec VcTextNum
  27 84 00 00                  01 .literal
  28 84 00 00         c0 00 00 00 192
  2c 84 00 00                  ff .end (operand)
  2d 84 00 00                  01 .literal
  2e 84 00 00         40 00 00 00 64
  32 84 00 00                  ff .end (operand)
  33 84 00 00               03 00 .var1 FLAGS
  35 84 00 00                  01 .literal
  36 84 00 00         6d 02 00 00 621
  3a 84 00 00                  ff .end (operand)
  3b 84 00 00                  ff .end (operand)
  3c 84 00 00                  ff .end (block)
 :3d 84 00 00                  0b .case
  3e 84 00 00                  05 .group
  3f 84 00 00                  01 .literal
  40 84 00 00         09 00 00 00 9
  44 84 00 00                  ff .end (operand)
  45 84 00 00                  ff .end (operand)
  46 84 00 00         83 85 00 00 .case-end-address
if317
 :4a 84 00 00               05 01 .if [terms=1]
  4c 84 00 00         71 84 00 00 .else
  50 84 00 00               03 02 .var1 CHAR
  52 84 00 00                  01 .literal
  53 84 00 00         01 00 00 00 1
  57 84 00 00                  ff .end (operand)
  58 84 00 00                  ff .end (operand)
  5a 84 00 00                  01 .if-sign-nonzero
  5a 84 00 00               01 4e .exec VcTextNum
  5c 84 00 00                  01 .literal
  5d 84 00 00         b0 00 00 00 176
  61 84 00 00                  ff .end (operand)
  62 84 00 00                  01 .literal
  63 84 00 00         70 00 00 00 112
  67 84 00 00                  ff .end (operand)
  68 84 00 00               03 00 .var1 FLAGS
  6a 84 00 00                  01 .literal
  6b 84 00 00         6d 02 00 00 621
  6f 84 00 00                  ff .end (operand)
  70 84 00 00                  ff .end (operand)
if318
::71 84 00 00               05 01 .if [terms=1]
  73 84 00 00         98 84 00 00 .else
  77 84 00 00               03 02 .var1 CHAR
  79 84 00 00                  01 .literal
  7a 84 00 00         02 00 00 00 2
  7e 84 00 00                  ff .end (operand)
  7f 84 00 00                  ff .end (operand)
  81 84 00 00                  01 .if-sign-nonzero
  81 84 00 00               01 4e .exec VcTextNum
  83 84 00 00                  01 .literal
  84 84 00 00         d0 00 00 00 208
  88 84 00 00                  ff .end (operand)
  89 84 00 00                  01 .literal
  8a 84 00 00         80 00 00 00 128
  8e 84 00 00                  ff .end (operand)
  8f 84 00 00               03 00 .var1 FLAGS
  91 84 00 00                  01 .literal
  92 84 00 00         6d 02 00 00 621
  96 84 00 00                  ff .end (operand)
  97 84 00 00                  ff .end (operand)
if319
::98 84 00 00               05 01 .if [terms=1]
  9a 84 00 00         bf 84 00 00 .else
  9e 84 00 00               03 02 .var1 CHAR
  a0 84 00 00                  01 .literal
  a1 84 00 00         03 00 00 00 3
  a5 84 00 00                  ff .end (operand)
  a6 84 00 00                  ff .end (operand)
  a8 84 00 00                  01 .if-sign-nonzero
  a8 84 00 00               01 4e .exec VcTextNum
  aa 84 00 00                  01 .literal
  ab 84 00 00         b0 00 00 00 176
  af 84 00 00                  ff .end (operand)
  b0 84 00 00                  01 .literal
  b1 84 00 00         90 00 00 00 144
  b5 84 00 00                  ff .end (operand)
  b6 84 00 00               03 00 .var1 FLAGS
  b8 84 00 00                  01 .literal
  b9 84 00 00         6d 02 00 00 621
  bd 84 00 00                  ff .end (operand)
  be 84 00 00                  ff .end (operand)
if320
::bf 84 00 00               05 01 .if [terms=1]
  c1 84 00 00         e6 84 00 00 .else
  c5 84 00 00               03 02 .var1 CHAR
  c7 84 00 00                  01 .literal
  c8 84 00 00         04 00 00 00 4
  cc 84 00 00                  ff .end (operand)
  cd 84 00 00                  ff .end (operand)
  cf 84 00 00                  01 .if-sign-nonzero
  cf 84 00 00               01 4e .exec VcTextNum
  d1 84 00 00                  01 .literal
  d2 84 00 00         b0 00 00 00 176
  d6 84 00 00                  ff .end (operand)
  d7 84 00 00                  01 .literal
  d8 84 00 00         50 00 00 00 80
  dc 84 00 00                  ff .end (operand)
  dd 84 00 00               03 00 .var1 FLAGS
  df 84 00 00                  01 .literal
  e0 84 00 00         6d 02 00 00 621
  e4 84 00 00                  ff .end (operand)
  e5 84 00 00                  ff .end (operand)
if321
::e6 84 00 00               05 01 .if [terms=1]
  e8 84 00 00         0d 85 00 00 .else
  ec 84 00 00               03 02 .var1 CHAR
  ee 84 00 00                  01 .literal
  ef 84 00 00         05 00 00 00 5
  f3 84 00 00                  ff .end (operand)
  f4 84 00 00                  ff .end (operand)
  f6 84 00 00                  01 .if-sign-nonzero
  f6 84 00 00               01 4e .exec VcTextNum
  f8 84 00 00                  01 .literal
  f9 84 00 00         d0 00 00 00 208
  fd 84 00 00                  ff .end (operand)
  fe 84 00 00                  01 .literal
  ff 84 00 00         60 00 00 00 96
  03 85 00 00                  ff .end (operand)
  04 85 00 00               03 00 .var1 FLAGS
  06 85 00 00                  01 .literal
  07 85 00 00         6d 02 00 00 621
  0b 85 00 00                  ff .end (operand)
  0c 85 00 00                  ff .end (operand)
if322
::0d 85 00 00               05 01 .if [terms=1]
  0f 85 00 00         34 85 00 00 .else
  13 85 00 00               03 02 .var1 CHAR
  15 85 00 00                  01 .literal
  16 85 00 00         06 00 00 00 6
  1a 85 00 00                  ff .end (operand)
  1b 85 00 00                  ff .end (operand)
  1d 85 00 00                  01 .if-sign-nonzero
  1d 85 00 00               01 4e .exec VcTextNum
  1f 85 00 00                  01 .literal
  20 85 00 00         e0 00 00 00 224
  24 85 00 00                  ff .end (operand)
  25 85 00 00                  01 .literal
  26 85 00 00         70 00 00 00 112
  2a 85 00 00                  ff .end (operand)
  2b 85 00 00               03 00 .var1 FLAGS
  2d 85 00 00                  01 .literal
  2e 85 00 00         6d 02 00 00 621
  32 85 00 00                  ff .end (operand)
  33 85 00 00                  ff .end (operand)
if323
::34 85 00 00               05 01 .if [terms=1]
  36 85 00 00         5b 85 00 00 .else
  3a 85 00 00               03 02 .var1 CHAR
  3c 85 00 00                  01 .literal
  3d 85 00 00         07 00 00 00 7
  41 85 00 00                  ff .end (operand)
  42 85 00 00                  ff .end (operand)
  44 85 00 00                  01 .if-sign-nonzero
  44 85 00 00               01 4e .exec VcTextNum
  46 85 00 00                  01 .literal
  47 85 00 00         c0 00 00 00 192
  4b 85 00 00                  ff .end (operand)
  4c 85 00 00                  01 .literal
  4d 85 00 00         a0 00 00 00 160
  51 85 00 00                  ff .end (operand)
  52 85 00 00               03 00 .var1 FLAGS
  54 85 00 00                  01 .literal
  55 85 00 00         6d 02 00 00 621
  59 85 00 00                  ff .end (operand)
  5a 85 00 00                  ff .end (operand)
if324
::5b 85 00 00               05 01 .if [terms=1]
  5d 85 00 00         82 85 00 00 .else
  61 85 00 00               03 02 .var1 CHAR
  63 85 00 00                  01 .literal
  64 85 00 00         08 00 00 00 8
  68 85 00 00                  ff .end (operand)
  69 85 00 00                  ff .end (operand)
  6b 85 00 00                  01 .if-sign-nonzero
  6b 85 00 00               01 4e .exec VcTextNum
  6d 85 00 00                  01 .literal
  6e 85 00 00         c0 00 00 00 192
  72 85 00 00                  ff .end (operand)
  73 85 00 00                  01 .literal
  74 85 00 00         40 00 00 00 64
  78 85 00 00                  ff .end (operand)
  79 85 00 00               03 00 .var1 FLAGS
  7b 85 00 00                  01 .literal
  7c 85 00 00         6d 02 00 00 621
  80 85 00 00                  ff .end (operand)
  81 85 00 00                  ff .end (operand)
 :82 85 00 00                  ff .end (block)
 :83 85 00 00                  ff .end (switch)
  84 85 00 00                  ff .end (block)
 :85 85 00 00                  ff .end (switch)
  86 85 00 00               01 24 .exec Wait
  88 85 00 00                  01 .literal
  89 85 00 00         64 00 00 00 100
  8d 85 00 00                  ff .end (operand)
if325
 :8e 85 00 00               05 02 .if [terms=2]
  90 85 00 00         bd 85 00 00 .else
  94 85 00 00               03 02 .var1 CHAR
  96 85 00 00                  01 .literal
  97 85 00 00         01 00 00 00 1
  9b 85 00 00                  ff .end (operand)
  9c 85 00 00                  ff .end (operand)
  9e 85 00 00                  01 .if-sign-nonzero
  9e 85 00 00               03 07 .var1 CURHP
  a0 85 00 00                  01 .literal
  a1 85 00 00         01 00 00 00 1
  a5 85 00 00                  ff .end (operand)
  a6 85 00 00                  ff .end (operand)
  a8 85 00 00                  02 .if-sign-nonzero
  a8 85 00 00                  01 .literal
  a9 85 00 00         00 00 00 00 0
  ad 85 00 00                  ff .end (operand)
  ae 85 00 00               03 0d .var1 SPECIALFRAME
  b0 85 00 00                  01 .literal
  b1 85 00 00         08 00 00 00 8
  b5 85 00 00                  ff .end (operand)
  b6 85 00 00                  01 .set
  b7 85 00 00                  01 .literal
  b8 85 00 00         1d 00 00 00 29
  bc 85 00 00                  ff .end (operand)
if326
::bd 85 00 00               05 02 .if [terms=2]
  bf 85 00 00         ec 85 00 00 .else
  c3 85 00 00               03 02 .var1 CHAR
  c5 85 00 00                  01 .literal
  c6 85 00 00         02 00 00 00 2
  ca 85 00 00                  ff .end (operand)
  cb 85 00 00                  ff .end (operand)
  cd 85 00 00                  01 .if-sign-nonzero
  cd 85 00 00               03 07 .var1 CURHP
  cf 85 00 00                  01 .literal
  d0 85 00 00         02 00 00 00 2
  d4 85 00 00                  ff .end (operand)
  d5 85 00 00                  ff .end (operand)
  d7 85 00 00                  02 .if-sign-nonzero
  d7 85 00 00                  01 .literal
  d8 85 00 00         00 00 00 00 0
  dc 85 00 00                  ff .end (operand)
  dd 85 00 00               03 0d .var1 SPECIALFRAME
  df 85 00 00                  01 .literal
  e0 85 00 00         0d 00 00 00 13
  e4 85 00 00                  ff .end (operand)
  e5 85 00 00                  01 .set
  e6 85 00 00                  01 .literal
  e7 85 00 00         1d 00 00 00 29
  eb 85 00 00                  ff .end (operand)
if327
::ec 85 00 00               05 02 .if [terms=2]
  ee 85 00 00         1b 86 00 00 .else
  f2 85 00 00               03 02 .var1 CHAR
  f4 85 00 00                  01 .literal
  f5 85 00 00         03 00 00 00 3
  f9 85 00 00                  ff .end (operand)
  fa 85 00 00                  ff .end (operand)
  fc 85 00 00                  01 .if-sign-nonzero
  fc 85 00 00               03 07 .var1 CURHP
  fe 85 00 00                  01 .literal
  ff 85 00 00         03 00 00 00 3
  03 86 00 00                  ff .end (operand)
  04 86 00 00                  ff .end (operand)
  06 86 00 00                  02 .if-sign-nonzero
  06 86 00 00                  01 .literal
  07 86 00 00         00 00 00 00 0
  0b 86 00 00                  ff .end (operand)
  0c 86 00 00               03 0d .var1 SPECIALFRAME
  0e 86 00 00                  01 .literal
  0f 86 00 00         0a 00 00 00 10
  13 86 00 00                  ff .end (operand)
  14 86 00 00                  01 .set
  15 86 00 00                  01 .literal
  16 86 00 00         1d 00 00 00 29
  1a 86 00 00                  ff .end (operand)
if328
::1b 86 00 00               05 02 .if [terms=2]
  1d 86 00 00         4a 86 00 00 .else
  21 86 00 00               03 02 .var1 CHAR
  23 86 00 00                  01 .literal
  24 86 00 00         04 00 00 00 4
  28 86 00 00                  ff .end (operand)
  29 86 00 00                  ff .end (operand)
  2b 86 00 00                  01 .if-sign-nonzero
  2b 86 00 00               03 07 .var1 CURHP
  2d 86 00 00                  01 .literal
  2e 86 00 00         04 00 00 00 4
  32 86 00 00                  ff .end (operand)
  33 86 00 00                  ff .end (operand)
  35 86 00 00                  02 .if-sign-nonzero
  35 86 00 00                  01 .literal
  36 86 00 00         00 00 00 00 0
  3a 86 00 00                  ff .end (operand)
  3b 86 00 00               03 0d .var1 SPECIALFRAME
  3d 86 00 00                  01 .literal
  3e 86 00 00         09 00 00 00 9
  42 86 00 00                  ff .end (operand)
  43 86 00 00                  01 .set
  44 86 00 00                  01 .literal
  45 86 00 00         1d 00 00 00 29
  49 86 00 00                  ff .end (operand)
if329
::4a 86 00 00               05 02 .if [terms=2]
  4c 86 00 00         79 86 00 00 .else
  50 86 00 00               03 02 .var1 CHAR
  52 86 00 00                  01 .literal
  53 86 00 00         05 00 00 00 5
  57 86 00 00                  ff .end (operand)
  58 86 00 00                  ff .end (operand)
  5a 86 00 00                  01 .if-sign-nonzero
  5a 86 00 00               03 07 .var1 CURHP
  5c 86 00 00                  01 .literal
  5d 86 00 00         05 00 00 00 5
  61 86 00 00                  ff .end (operand)
  62 86 00 00                  ff .end (operand)
  64 86 00 00                  02 .if-sign-nonzero
  64 86 00 00                  01 .literal
  65 86 00 00         00 00 00 00 0
  69 86 00 00                  ff .end (operand)
  6a 86 00 00               03 0d .var1 SPECIALFRAME
  6c 86 00 00                  01 .literal
  6d 86 00 00         0e 00 00 00 14
  71 86 00 00                  ff .end (operand)
  72 86 00 00                  01 .set
  73 86 00 00                  01 .literal
  74 86 00 00         1d 00 00 00 29
  78 86 00 00                  ff .end (operand)
if330
::79 86 00 00               05 02 .if [terms=2]
  7b 86 00 00         a8 86 00 00 .else
  7f 86 00 00               03 02 .var1 CHAR
  81 86 00 00                  01 .literal
  82 86 00 00         06 00 00 00 6
  86 86 00 00                  ff .end (operand)
  87 86 00 00                  ff .end (operand)
  89 86 00 00                  01 .if-sign-nonzero
  89 86 00 00               03 07 .var1 CURHP
  8b 86 00 00                  01 .literal
  8c 86 00 00         06 00 00 00 6
  90 86 00 00                  ff .end (operand)
  91 86 00 00                  ff .end (operand)
  93 86 00 00                  02 .if-sign-nonzero
  93 86 00 00                  01 .literal
  94 86 00 00         00 00 00 00 0
  98 86 00 00                  ff .end (operand)
  99 86 00 00               03 0d .var1 SPECIALFRAME
  9b 86 00 00                  01 .literal
  9c 86 00 00         0f 00 00 00 15
  a0 86 00 00                  ff .end (operand)
  a1 86 00 00                  01 .set
  a2 86 00 00                  01 .literal
  a3 86 00 00         1d 00 00 00 29
  a7 86 00 00                  ff .end (operand)
if331
::a8 86 00 00               05 02 .if [terms=2]
  aa 86 00 00         d7 86 00 00 .else
  ae 86 00 00               03 02 .var1 CHAR
  b0 86 00 00                  01 .literal
  b1 86 00 00         07 00 00 00 7
  b5 86 00 00                  ff .end (operand)
  b6 86 00 00                  ff .end (operand)
  b8 86 00 00                  01 .if-sign-nonzero
  b8 86 00 00               03 07 .var1 CURHP
  ba 86 00 00                  01 .literal
  bb 86 00 00         07 00 00 00 7
  bf 86 00 00                  ff .end (operand)
  c0 86 00 00                  ff .end (operand)
  c2 86 00 00                  02 .if-sign-nonzero
  c2 86 00 00                  01 .literal
  c3 86 00 00         00 00 00 00 0
  c7 86 00 00                  ff .end (operand)
  c8 86 00 00               03 0d .var1 SPECIALFRAME
  ca 86 00 00                  01 .literal
  cb 86 00 00         0c 00 00 00 12
  cf 86 00 00                  ff .end (operand)
  d0 86 00 00                  01 .set
  d1 86 00 00                  01 .literal
  d2 86 00 00         1d 00 00 00 29
  d6 86 00 00                  ff .end (operand)
if332
::d7 86 00 00               05 02 .if [terms=2]
  d9 86 00 00         06 87 00 00 .else
  dd 86 00 00               03 02 .var1 CHAR
  df 86 00 00                  01 .literal
  e0 86 00 00         08 00 00 00 8
  e4 86 00 00                  ff .end (operand)
  e5 86 00 00                  ff .end (operand)
  e7 86 00 00                  01 .if-sign-nonzero
  e7 86 00 00               03 07 .var1 CURHP
  e9 86 00 00                  01 .literal
  ea 86 00 00         08 00 00 00 8
  ee 86 00 00                  ff .end (operand)
  ef 86 00 00                  ff .end (operand)
  f1 86 00 00                  02 .if-sign-nonzero
  f1 86 00 00                  01 .literal
  f2 86 00 00         00 00 00 00 0
  f6 86 00 00                  ff .end (operand)
  f7 86 00 00               03 0d .var1 SPECIALFRAME
  f9 86 00 00                  01 .literal
  fa 86 00 00         0b 00 00 00 11
  fe 86 00 00                  ff .end (operand)
  ff 86 00 00                  01 .set
  00 87 00 00                  01 .literal
  01 87 00 00         1d 00 00 00 29
  05 87 00 00                  ff .end (operand)
::06 87 00 00               01 39 .exec VcClear
  08 87 00 00               01 50 .exec VcBox
  0a 87 00 00                  01 .literal
  0b 87 00 00         f0 00 00 00 240
  0f 87 00 00                  ff .end (operand)
  10 87 00 00                  01 .literal
  11 87 00 00         0a 00 00 00 10
  15 87 00 00                  ff .end (operand)
  16 87 00 00                  01 .literal
  17 87 00 00         3a 01 00 00 314
  1b 87 00 00                  ff .end (operand)
  1c 87 00 00                  01 .literal
  1d 87 00 00         c6 00 00 00 198
  21 87 00 00                  ff .end (operand)
  22 87 00 00               03 00 .var1 FLAGS
  24 87 00 00                  01 .literal
  25 87 00 00         53 02 00 00 595
  29 87 00 00                  ff .end (operand)
  2a 87 00 00                  01 .set
  2b 87 00 00                  01 .literal
  2c 87 00 00         0d 00 00 00 13
  30 87 00 00                  ff .end (operand)
if333
 :31 87 00 00               05 01 .if [terms=1]
  33 87 00 00         11 88 00 00 .else
  37 87 00 00               03 02 .var1 CHAR
  39 87 00 00                  01 .literal
  3a 87 00 00         01 00 00 00 1
  3e 87 00 00                  ff .end (operand)
  3f 87 00 00                  ff .end (operand)
  41 87 00 00                  01 .if-sign-nonzero
  41 87 00 00               03 00 .var1 FLAGS
  43 87 00 00                  01 .literal
  44 87 00 00         53 02 00 00 595
  48 87 00 00                  ff .end (operand)
  49 87 00 00                  04 .incset
  4a 87 00 00                  01 .literal
  4b 87 00 00         0a 00 00 00 10
  4f 87 00 00                  ff .end (operand)
  50 87 00 00               01 3b .exec VcText
  52 87 00 00                  01 .literal
  53 87 00 00         f5 00 00 00 245
  57 87 00 00                  ff .end (operand)
  58 87 00 00               03 00 .var1 FLAGS
  5a 87 00 00                  01 .literal
  5b 87 00 00         53 02 00 00 595
  5f 87 00 00                  ff .end (operand)
  60 87 00 00                  ff .end (operand)
  61 87 00 00                     "Sam"

              53 61 6d 00 
  65 87 00 00               03 00 .var1 FLAGS
  67 87 00 00                  01 .literal
  68 87 00 00         53 02 00 00 595
  6c 87 00 00                  ff .end (operand)
  6d 87 00 00                  04 .incset
  6e 87 00 00                  01 .literal
  6f 87 00 00         0a 00 00 00 10
  73 87 00 00                  ff .end (operand)
  74 87 00 00               01 4e .exec VcTextNum
  76 87 00 00                  01 .literal
  77 87 00 00         f5 00 00 00 245
  7b 87 00 00                  ff .end (operand)
  7c 87 00 00               03 00 .var1 FLAGS
  7e 87 00 00                  01 .literal
  7f 87 00 00         53 02 00 00 595
  83 87 00 00                  ff .end (operand)
  84 87 00 00                  ff .end (operand)
  85 87 00 00               03 07 .var1 CURHP
  87 87 00 00                  01 .literal
  88 87 00 00         01 00 00 00 1
  8c 87 00 00                  ff .end (operand)
  8d 87 00 00                  ff .end (operand)
  8e 87 00 00               01 3b .exec VcText
  90 87 00 00                  01 .literal
  91 87 00 00         09 01 00 00 265
  95 87 00 00                  ff .end (operand)
  96 87 00 00               03 00 .var1 FLAGS
  98 87 00 00                  01 .literal
  99 87 00 00         53 02 00 00 595
  9d 87 00 00                  ff .end (operand)
  9e 87 00 00                  ff .end (operand)
  9f 87 00 00                     "/"

              2f 00 
  a1 87 00 00               01 4e .exec VcTextNum
  a3 87 00 00                  01 .literal
  a4 87 00 00         13 01 00 00 275
  a8 87 00 00                  ff .end (operand)
  a9 87 00 00               03 00 .var1 FLAGS
  ab 87 00 00                  01 .literal
  ac 87 00 00         53 02 00 00 595
  b0 87 00 00                  ff .end (operand)
  b1 87 00 00                  ff .end (operand)
  b2 87 00 00               03 08 .var1 MAXHP
  b4 87 00 00                  01 .literal
  b5 87 00 00         01 00 00 00 1
  b9 87 00 00                  ff .end (operand)
  ba 87 00 00                  ff .end (operand)
  bb 87 00 00               03 00 .var1 FLAGS
  bd 87 00 00                  01 .literal
  be 87 00 00         53 02 00 00 595
  c2 87 00 00                  ff .end (operand)
  c3 87 00 00                  04 .incset
  c4 87 00 00                  01 .literal
  c5 87 00 00         0a 00 00 00 10
  c9 87 00 00                  ff .end (operand)
  ca 87 00 00               01 4e .exec VcTextNum
  cc 87 00 00                  01 .literal
  cd 87 00 00         f5 00 00 00 245
  d1 87 00 00                  ff .end (operand)
  d2 87 00 00               03 00 .var1 FLAGS
  d4 87 00 00                  01 .literal
  d5 87 00 00         53 02 00 00 595
  d9 87 00 00                  ff .end (operand)
  da 87 00 00                  ff .end (operand)
  db 87 00 00               03 09 .var1 CURMP
  dd 87 00 00                  01 .literal
  de 87 00 00         01 00 00 00 1
  e2 87 00 00                  ff .end (operand)
  e3 87 00 00                  ff .end (operand)
  e4 87 00 00               01 3b .exec VcText
  e6 87 00 00                  01 .literal
  e7 87 00 00         09 01 00 00 265
  eb 87 00 00                  ff .end (operand)
  ec 87 00 00               03 00 .var1 FLAGS
  ee 87 00 00                  01 .literal
  ef 87 00 00         53 02 00 00 595
  f3 87 00 00                  ff .end (operand)
  f4 87 00 00                  ff .end (operand)
  f5 87 00 00                     "/"

              2f 00 
  f7 87 00 00               01 4e .exec VcTextNum
  f9 87 00 00                  01 .literal
  fa 87 00 00         13 01 00 00 275
  fe 87 00 00                  ff .end (operand)
  ff 87 00 00               03 00 .var1 FLAGS
  01 88 00 00                  01 .literal
  02 88 00 00         53 02 00 00 595
  06 88 00 00                  ff .end (operand)
  07 88 00 00                  ff .end (operand)
  08 88 00 00               03 0a .var1 MAXMP
  0a 88 00 00                  01 .literal
  0b 88 00 00         01 00 00 00 1
  0f 88 00 00                  ff .end (operand)
  10 88 00 00                  ff .end (operand)
if334
::11 88 00 00               05 01 .if [terms=1]
  13 88 00 00         f2 88 00 00 .else
  17 88 00 00               03 02 .var1 CHAR
  19 88 00 00                  01 .literal
  1a 88 00 00         02 00 00 00 2
  1e 88 00 00                  ff .end (operand)
  1f 88 00 00                  ff .end (operand)
  21 88 00 00                  01 .if-sign-nonzero
  21 88 00 00               03 00 .var1 FLAGS
  23 88 00 00                  01 .literal
  24 88 00 00         53 02 00 00 595
  28 88 00 00                  ff .end (operand)
  29 88 00 00                  04 .incset
  2a 88 00 00                  01 .literal
  2b 88 00 00         0a 00 00 00 10
  2f 88 00 00                  ff .end (operand)
  30 88 00 00               01 3b .exec VcText
  32 88 00 00                  01 .literal
  33 88 00 00         f5 00 00 00 245
  37 88 00 00                  ff .end (operand)
  38 88 00 00               03 00 .var1 FLAGS
  3a 88 00 00                  01 .literal
  3b 88 00 00         53 02 00 00 595
  3f 88 00 00                  ff .end (operand)
  40 88 00 00                  ff .end (operand)
  41 88 00 00                     "Webb"

              57 65 62 62 00 
  46 88 00 00               03 00 .var1 FLAGS
  48 88 00 00                  01 .literal
  49 88 00 00         53 02 00 00 595
  4d 88 00 00                  ff .end (operand)
  4e 88 00 00                  04 .incset
  4f 88 00 00                  01 .literal
  50 88 00 00         0a 00 00 00 10
  54 88 00 00                  ff .end (operand)
  55 88 00 00               01 4e .exec VcTextNum
  57 88 00 00                  01 .literal
  58 88 00 00         f5 00 00 00 245
  5c 88 00 00                  ff .end (operand)
  5d 88 00 00               03 00 .var1 FLAGS
  5f 88 00 00                  01 .literal
  60 88 00 00         53 02 00 00 595
  64 88 00 00                  ff .end (operand)
  65 88 00 00                  ff .end (operand)
  66 88 00 00               03 07 .var1 CURHP
  68 88 00 00                  01 .literal
  69 88 00 00         02 00 00 00 2
  6d 88 00 00                  ff .end (operand)
  6e 88 00 00                  ff .end (operand)
  6f 88 00 00               01 3b .exec VcText
  71 88 00 00                  01 .literal
  72 88 00 00         09 01 00 00 265
  76 88 00 00                  ff .end (operand)
  77 88 00 00               03 00 .var1 FLAGS
  79 88 00 00                  01 .literal
  7a 88 00 00         53 02 00 00 595
  7e 88 00 00                  ff .end (operand)
  7f 88 00 00                  ff .end (operand)
  80 88 00 00                     "/"

              2f 00 
  82 88 00 00               01 4e .exec VcTextNum
  84 88 00 00                  01 .literal
  85 88 00 00         13 01 00 00 275
  89 88 00 00                  ff .end (operand)
  8a 88 00 00               03 00 .var1 FLAGS
  8c 88 00 00                  01 .literal
  8d 88 00 00         53 02 00 00 595
  91 88 00 00                  ff .end (operand)
  92 88 00 00                  ff .end (operand)
  93 88 00 00               03 08 .var1 MAXHP
  95 88 00 00                  01 .literal
  96 88 00 00         02 00 00 00 2
  9a 88 00 00                  ff .end (operand)
  9b 88 00 00                  ff .end (operand)
  9c 88 00 00               03 00 .var1 FLAGS
  9e 88 00 00                  01 .literal
  9f 88 00 00         53 02 00 00 595
  a3 88 00 00                  ff .end (operand)
  a4 88 00 00                  04 .incset
  a5 88 00 00                  01 .literal
  a6 88 00 00         0a 00 00 00 10
  aa 88 00 00                  ff .end (operand)
  ab 88 00 00               01 4e .exec VcTextNum
  ad 88 00 00                  01 .literal
  ae 88 00 00         f5 00 00 00 245
  b2 88 00 00                  ff .end (operand)
  b3 88 00 00               03 00 .var1 FLAGS
  b5 88 00 00                  01 .literal
  b6 88 00 00         53 02 00 00 595
  ba 88 00 00                  ff .end (operand)
  bb 88 00 00                  ff .end (operand)
  bc 88 00 00               03 09 .var1 CURMP
  be 88 00 00                  01 .literal
  bf 88 00 00         02 00 00 00 2
  c3 88 00 00                  ff .end (operand)
  c4 88 00 00                  ff .end (operand)
  c5 88 00 00               01 3b .exec VcText
  c7 88 00 00                  01 .literal
  c8 88 00 00         09 01 00 00 265
  cc 88 00 00                  ff .end (operand)
  cd 88 00 00               03 00 .var1 FLAGS
  cf 88 00 00                  01 .literal
  d0 88 00 00         53 02 00 00 595
  d4 88 00 00                  ff .end (operand)
  d5 88 00 00                  ff .end (operand)
  d6 88 00 00                     "/"

              2f 00 
  d8 88 00 00               01 4e .exec VcTextNum
  da 88 00 00                  01 .literal
  db 88 00 00         13 01 00 00 275
  df 88 00 00                  ff .end (operand)
  e0 88 00 00               03 00 .var1 FLAGS
  e2 88 00 00                  01 .literal
  e3 88 00 00         53 02 00 00 595
  e7 88 00 00                  ff .end (operand)
  e8 88 00 00                  ff .end (operand)
  e9 88 00 00               03 0a .var1 MAXMP
  eb 88 00 00                  01 .literal
  ec 88 00 00         02 00 00 00 2
  f0 88 00 00                  ff .end (operand)
  f1 88 00 00                  ff .end (operand)
if335
::f2 88 00 00               05 01 .if [terms=1]
  f4 88 00 00         d3 89 00 00 .else
  f8 88 00 00               03 02 .var1 CHAR
  fa 88 00 00                  01 .literal
  fb 88 00 00         03 00 00 00 3
  ff 88 00 00                  ff .end (operand)
  00 89 00 00                  ff .end (operand)
  02 89 00 00                  01 .if-sign-nonzero
  02 89 00 00               03 00 .var1 FLAGS
  04 89 00 00                  01 .literal
  05 89 00 00         53 02 00 00 595
  09 89 00 00                  ff .end (operand)
  0a 89 00 00                  04 .incset
  0b 89 00 00                  01 .literal
  0c 89 00 00         0a 00 00 00 10
  10 89 00 00                  ff .end (operand)
  11 89 00 00               01 3b .exec VcText
  13 89 00 00                  01 .literal
  14 89 00 00         f5 00 00 00 245
  18 89 00 00                  ff .end (operand)
  19 89 00 00               03 00 .var1 FLAGS
  1b 89 00 00                  01 .literal
  1c 89 00 00         53 02 00 00 595
  20 89 00 00                  ff .end (operand)
  21 89 00 00                  ff .end (operand)
  22 89 00 00                     "Feng"

              46 65 6e 67 00 
  27 89 00 00               03 00 .var1 FLAGS
  29 89 00 00                  01 .literal
  2a 89 00 00         53 02 00 00 595
  2e 89 00 00                  ff .end (operand)
  2f 89 00 00                  04 .incset
  30 89 00 00                  01 .literal
  31 89 00 00         0a 00 00 00 10
  35 89 00 00                  ff .end (operand)
  36 89 00 00               01 4e .exec VcTextNum
  38 89 00 00                  01 .literal
  39 89 00 00         f5 00 00 00 245
  3d 89 00 00                  ff .end (operand)
  3e 89 00 00               03 00 .var1 FLAGS
  40 89 00 00                  01 .literal
  41 89 00 00         53 02 00 00 595
  45 89 00 00                  ff .end (operand)
  46 89 00 00                  ff .end (operand)
  47 89 00 00               03 07 .var1 CURHP
  49 89 00 00                  01 .literal
  4a 89 00 00         03 00 00 00 3
  4e 89 00 00                  ff .end (operand)
  4f 89 00 00                  ff .end (operand)
  50 89 00 00               01 3b .exec VcText
  52 89 00 00                  01 .literal
  53 89 00 00         09 01 00 00 265
  57 89 00 00                  ff .end (operand)
  58 89 00 00               03 00 .var1 FLAGS
  5a 89 00 00                  01 .literal
  5b 89 00 00         53 02 00 00 595
  5f 89 00 00                  ff .end (operand)
  60 89 00 00                  ff .end (operand)
  61 89 00 00                     "/"

              2f 00 
  63 89 00 00               01 4e .exec VcTextNum
  65 89 00 00                  01 .literal
  66 89 00 00         13 01 00 00 275
  6a 89 00 00                  ff .end (operand)
  6b 89 00 00               03 00 .var1 FLAGS
  6d 89 00 00                  01 .literal
  6e 89 00 00         53 02 00 00 595
  72 89 00 00                  ff .end (operand)
  73 89 00 00                  ff .end (operand)
  74 89 00 00               03 08 .var1 MAXHP
  76 89 00 00                  01 .literal
  77 89 00 00         03 00 00 00 3
  7b 89 00 00                  ff .end (operand)
  7c 89 00 00                  ff .end (operand)
  7d 89 00 00               03 00 .var1 FLAGS
  7f 89 00 00                  01 .literal
  80 89 00 00         53 02 00 00 595
  84 89 00 00                  ff .end (operand)
  85 89 00 00                  04 .incset
  86 89 00 00                  01 .literal
  87 89 00 00         0a 00 00 00 10
  8b 89 00 00                  ff .end (operand)
  8c 89 00 00               01 4e .exec VcTextNum
  8e 89 00 00                  01 .literal
  8f 89 00 00         f5 00 00 00 245
  93 89 00 00                  ff .end (operand)
  94 89 00 00               03 00 .var1 FLAGS
  96 89 00 00                  01 .literal
  97 89 00 00         53 02 00 00 595
  9b 89 00 00                  ff .end (operand)
  9c 89 00 00                  ff .end (operand)
  9d 89 00 00               03 09 .var1 CURMP
  9f 89 00 00                  01 .literal
  a0 89 00 00         03 00 00 00 3
  a4 89 00 00                  ff .end (operand)
  a5 89 00 00                  ff .end (operand)
  a6 89 00 00               01 3b .exec VcText
  a8 89 00 00                  01 .literal
  a9 89 00 00         09 01 00 00 265
  ad 89 00 00                  ff .end (operand)
  ae 89 00 00               03 00 .var1 FLAGS
  b0 89 00 00                  01 .literal
  b1 89 00 00         53 02 00 00 595
  b5 89 00 00                  ff .end (operand)
  b6 89 00 00                  ff .end (operand)
  b7 89 00 00                     "/"

              2f 00 
  b9 89 00 00               01 4e .exec VcTextNum
  bb 89 00 00                  01 .literal
  bc 89 00 00         13 01 00 00 275
  c0 89 00 00                  ff .end (operand)
  c1 89 00 00               03 00 .var1 FLAGS
  c3 89 00 00                  01 .literal
  c4 89 00 00         53 02 00 00 595
  c8 89 00 00                  ff .end (operand)
  c9 89 00 00                  ff .end (operand)
  ca 89 00 00               03 0a .var1 MAXMP
  cc 89 00 00                  01 .literal
  cd 89 00 00         03 00 00 00 3
  d1 89 00 00                  ff .end (operand)
  d2 89 00 00                  ff .end (operand)
if336
::d3 89 00 00               05 01 .if [terms=1]
  d5 89 00 00         b4 8a 00 00 .else
  d9 89 00 00               03 02 .var1 CHAR
  db 89 00 00                  01 .literal
  dc 89 00 00         04 00 00 00 4
  e0 89 00 00                  ff .end (operand)
  e1 89 00 00                  ff .end (operand)
  e3 89 00 00                  01 .if-sign-nonzero
  e3 89 00 00               03 00 .var1 FLAGS
  e5 89 00 00                  01 .literal
  e6 89 00 00         53 02 00 00 595
  ea 89 00 00                  ff .end (operand)
  eb 89 00 00                  04 .incset
  ec 89 00 00                  01 .literal
  ed 89 00 00         0a 00 00 00 10
  f1 89 00 00                  ff .end (operand)
  f2 89 00 00               01 3b .exec VcText
  f4 89 00 00                  01 .literal
  f5 89 00 00         f5 00 00 00 245
  f9 89 00 00                  ff .end (operand)
  fa 89 00 00               03 00 .var1 FLAGS
  fc 89 00 00                  01 .literal
  fd 89 00 00         53 02 00 00 595
  01 8a 00 00                  ff .end (operand)
  02 8a 00 00                  ff .end (operand)
  03 8a 00 00                     "Rikk"

              52 69 6b 6b 00 
  08 8a 00 00               03 00 .var1 FLAGS
  0a 8a 00 00                  01 .literal
  0b 8a 00 00         53 02 00 00 595
  0f 8a 00 00                  ff .end (operand)
  10 8a 00 00                  04 .incset
  11 8a 00 00                  01 .literal
  12 8a 00 00         0a 00 00 00 10
  16 8a 00 00                  ff .end (operand)
  17 8a 00 00               01 4e .exec VcTextNum
  19 8a 00 00                  01 .literal
  1a 8a 00 00         f5 00 00 00 245
  1e 8a 00 00                  ff .end (operand)
  1f 8a 00 00               03 00 .var1 FLAGS
  21 8a 00 00                  01 .literal
  22 8a 00 00         53 02 00 00 595
  26 8a 00 00                  ff .end (operand)
  27 8a 00 00                  ff .end (operand)
  28 8a 00 00               03 07 .var1 CURHP
  2a 8a 00 00                  01 .literal
  2b 8a 00 00         04 00 00 00 4
  2f 8a 00 00                  ff .end (operand)
  30 8a 00 00                  ff .end (operand)
  31 8a 00 00               01 3b .exec VcText
  33 8a 00 00                  01 .literal
  34 8a 00 00         09 01 00 00 265
  38 8a 00 00                  ff .end (operand)
  39 8a 00 00               03 00 .var1 FLAGS
  3b 8a 00 00                  01 .literal
  3c 8a 00 00         53 02 00 00 595
  40 8a 00 00                  ff .end (operand)
  41 8a 00 00                  ff .end (operand)
  42 8a 00 00                     "/"

              2f 00 
  44 8a 00 00               01 4e .exec VcTextNum
  46 8a 00 00                  01 .literal
  47 8a 00 00         13 01 00 00 275
  4b 8a 00 00                  ff .end (operand)
  4c 8a 00 00               03 00 .var1 FLAGS
  4e 8a 00 00                  01 .literal
  4f 8a 00 00         53 02 00 00 595
  53 8a 00 00                  ff .end (operand)
  54 8a 00 00                  ff .end (operand)
  55 8a 00 00               03 08 .var1 MAXHP
  57 8a 00 00                  01 .literal
  58 8a 00 00         04 00 00 00 4
  5c 8a 00 00                  ff .end (operand)
  5d 8a 00 00                  ff .end (operand)
  5e 8a 00 00               03 00 .var1 FLAGS
  60 8a 00 00                  01 .literal
  61 8a 00 00         53 02 00 00 595
  65 8a 00 00                  ff .end (operand)
  66 8a 00 00                  04 .incset
  67 8a 00 00                  01 .literal
  68 8a 00 00         0a 00 00 00 10
  6c 8a 00 00                  ff .end (operand)
  6d 8a 00 00               01 4e .exec VcTextNum
  6f 8a 00 00                  01 .literal
  70 8a 00 00         f5 00 00 00 245
  74 8a 00 00                  ff .end (operand)
  75 8a 00 00               03 00 .var1 FLAGS
  77 8a 00 00                  01 .literal
  78 8a 00 00         53 02 00 00 595
  7c 8a 00 00                  ff .end (operand)
  7d 8a 00 00                  ff .end (operand)
  7e 8a 00 00               03 09 .var1 CURMP
  80 8a 00 00                  01 .literal
  81 8a 00 00         04 00 00 00 4
  85 8a 00 00                  ff .end (operand)
  86 8a 00 00                  ff .end (operand)
  87 8a 00 00               01 3b .exec VcText
  89 8a 00 00                  01 .literal
  8a 8a 00 00         09 01 00 00 265
  8e 8a 00 00                  ff .end (operand)
  8f 8a 00 00               03 00 .var1 FLAGS
  91 8a 00 00                  01 .literal
  92 8a 00 00         53 02 00 00 595
  96 8a 00 00                  ff .end (operand)
  97 8a 00 00                  ff .end (operand)
  98 8a 00 00                     "/"

              2f 00 
  9a 8a 00 00               01 4e .exec VcTextNum
  9c 8a 00 00                  01 .literal
  9d 8a 00 00         13 01 00 00 275
  a1 8a 00 00                  ff .end (operand)
  a2 8a 00 00               03 00 .var1 FLAGS
  a4 8a 00 00                  01 .literal
  a5 8a 00 00         53 02 00 00 595
  a9 8a 00 00                  ff .end (operand)
  aa 8a 00 00                  ff .end (operand)
  ab 8a 00 00               03 0a .var1 MAXMP
  ad 8a 00 00                  01 .literal
  ae 8a 00 00         04 00 00 00 4
  b2 8a 00 00                  ff .end (operand)
  b3 8a 00 00                  ff .end (operand)
if337
::b4 8a 00 00               05 01 .if [terms=1]
  b6 8a 00 00         96 8b 00 00 .else
  ba 8a 00 00               03 02 .var1 CHAR
  bc 8a 00 00                  01 .literal
  bd 8a 00 00         05 00 00 00 5
  c1 8a 00 00                  ff .end (operand)
  c2 8a 00 00                  ff .end (operand)
  c4 8a 00 00                  01 .if-sign-nonzero
  c4 8a 00 00               03 00 .var1 FLAGS
  c6 8a 00 00                  01 .literal
  c7 8a 00 00         53 02 00 00 595
  cb 8a 00 00                  ff .end (operand)
  cc 8a 00 00                  04 .incset
  cd 8a 00 00                  01 .literal
  ce 8a 00 00         0a 00 00 00 10
  d2 8a 00 00                  ff .end (operand)
  d3 8a 00 00               01 3b .exec VcText
  d5 8a 00 00                  01 .literal
  d6 8a 00 00         f5 00 00 00 245
  da 8a 00 00                  ff .end (operand)
  db 8a 00 00               03 00 .var1 FLAGS
  dd 8a 00 00                  01 .literal
  de 8a 00 00         53 02 00 00 595
  e2 8a 00 00                  ff .end (operand)
  e3 8a 00 00                  ff .end (operand)
  e4 8a 00 00                     "Dingo"

              44 69 6e 67 6f 00 
  ea 8a 00 00               03 00 .var1 FLAGS
  ec 8a 00 00                  01 .literal
  ed 8a 00 00         53 02 00 00 595
  f1 8a 00 00                  ff .end (operand)
  f2 8a 00 00                  04 .incset
  f3 8a 00 00                  01 .literal
  f4 8a 00 00         0a 00 00 00 10
  f8 8a 00 00                  ff .end (operand)
  f9 8a 00 00               01 4e .exec VcTextNum
  fb 8a 00 00                  01 .literal
  fc 8a 00 00         f5 00 00 00 245
  00 8b 00 00                  ff .end (operand)
  01 8b 00 00               03 00 .var1 FLAGS
  03 8b 00 00                  01 .literal
  04 8b 00 00         53 02 00 00 595
  08 8b 00 00                  ff .end (operand)
  09 8b 00 00                  ff .end (operand)
  0a 8b 00 00               03 07 .var1 CURHP
  0c 8b 00 00                  01 .literal
  0d 8b 00 00         05 00 00 00 5
  11 8b 00 00                  ff .end (operand)
  12 8b 00 00                  ff .end (operand)
  13 8b 00 00               01 3b .exec VcText
  15 8b 00 00                  01 .literal
  16 8b 00 00         09 01 00 00 265
  1a 8b 00 00                  ff .end (operand)
  1b 8b 00 00               03 00 .var1 FLAGS
  1d 8b 00 00                  01 .literal
  1e 8b 00 00         53 02 00 00 595
  22 8b 00 00                  ff .end (operand)
  23 8b 00 00                  ff .end (operand)
  24 8b 00 00                     "/"

              2f 00 
  26 8b 00 00               01 4e .exec VcTextNum
  28 8b 00 00                  01 .literal
  29 8b 00 00         13 01 00 00 275
  2d 8b 00 00                  ff .end (operand)
  2e 8b 00 00               03 00 .var1 FLAGS
  30 8b 00 00                  01 .literal
  31 8b 00 00         53 02 00 00 595
  35 8b 00 00                  ff .end (operand)
  36 8b 00 00                  ff .end (operand)
  37 8b 00 00               03 08 .var1 MAXHP
  39 8b 00 00                  01 .literal
  3a 8b 00 00         05 00 00 00 5
  3e 8b 00 00                  ff .end (operand)
  3f 8b 00 00                  ff .end (operand)
  40 8b 00 00               03 00 .var1 FLAGS
  42 8b 00 00                  01 .literal
  43 8b 00 00         53 02 00 00 595
  47 8b 00 00                  ff .end (operand)
  48 8b 00 00                  04 .incset
  49 8b 00 00                  01 .literal
  4a 8b 00 00         0a 00 00 00 10
  4e 8b 00 00                  ff .end (operand)
  4f 8b 00 00               01 4e .exec VcTextNum
  51 8b 00 00                  01 .literal
  52 8b 00 00         f5 00 00 00 245
  56 8b 00 00                  ff .end (operand)
  57 8b 00 00               03 00 .var1 FLAGS
  59 8b 00 00                  01 .literal
  5a 8b 00 00         53 02 00 00 595
  5e 8b 00 00                  ff .end (operand)
  5f 8b 00 00                  ff .end (operand)
  60 8b 00 00               03 09 .var1 CURMP
  62 8b 00 00                  01 .literal
  63 8b 00 00         05 00 00 00 5
  67 8b 00 00                  ff .end (operand)
  68 8b 00 00                  ff .end (operand)
  69 8b 00 00               01 3b .exec VcText
  6b 8b 00 00                  01 .literal
  6c 8b 00 00         09 01 00 00 265
  70 8b 00 00                  ff .end (operand)
  71 8b 00 00               03 00 .var1 FLAGS
  73 8b 00 00                  01 .literal
  74 8b 00 00         53 02 00 00 595
  78 8b 00 00                  ff .end (operand)
  79 8b 00 00                  ff .end (operand)
  7a 8b 00 00                     "/"

              2f 00 
  7c 8b 00 00               01 4e .exec VcTextNum
  7e 8b 00 00                  01 .literal
  7f 8b 00 00         13 01 00 00 275
  83 8b 00 00                  ff .end (operand)
  84 8b 00 00               03 00 .var1 FLAGS
  86 8b 00 00                  01 .literal
  87 8b 00 00         53 02 00 00 595
  8b 8b 00 00                  ff .end (operand)
  8c 8b 00 00                  ff .end (operand)
  8d 8b 00 00               03 0a .var1 MAXMP
  8f 8b 00 00                  01 .literal
  90 8b 00 00         05 00 00 00 5
  94 8b 00 00                  ff .end (operand)
  95 8b 00 00                  ff .end (operand)
if338
::96 8b 00 00               05 01 .if [terms=1]
  98 8b 00 00         7a 8c 00 00 .else
  9c 8b 00 00               03 02 .var1 CHAR
  9e 8b 00 00                  01 .literal
  9f 8b 00 00         06 00 00 00 6
  a3 8b 00 00                  ff .end (operand)
  a4 8b 00 00                  ff .end (operand)
  a6 8b 00 00                  01 .if-sign-nonzero
  a6 8b 00 00               03 00 .var1 FLAGS
  a8 8b 00 00                  01 .literal
  a9 8b 00 00         53 02 00 00 595
  ad 8b 00 00                  ff .end (operand)
  ae 8b 00 00                  04 .incset
  af 8b 00 00                  01 .literal
  b0 8b 00 00         0a 00 00 00 10
  b4 8b 00 00                  ff .end (operand)
  b5 8b 00 00               01 3b .exec VcText
  b7 8b 00 00                  01 .literal
  b8 8b 00 00         f5 00 00 00 245
  bc 8b 00 00                  ff .end (operand)
  bd 8b 00 00               03 00 .var1 FLAGS
  bf 8b 00 00                  01 .literal
  c0 8b 00 00         53 02 00 00 595
  c4 8b 00 00                  ff .end (operand)
  c5 8b 00 00                  ff .end (operand)
  c6 8b 00 00                     "Jeemdub"

              4a 65 65 6d 64 75 62 00 
  ce 8b 00 00               03 00 .var1 FLAGS
  d0 8b 00 00                  01 .literal
  d1 8b 00 00         53 02 00 00 595
  d5 8b 00 00                  ff .end (operand)
  d6 8b 00 00                  04 .incset
  d7 8b 00 00                  01 .literal
  d8 8b 00 00         0a 00 00 00 10
  dc 8b 00 00                  ff .end (operand)
  dd 8b 00 00               01 4e .exec VcTextNum
  df 8b 00 00                  01 .literal
  e0 8b 00 00         f5 00 00 00 245
  e4 8b 00 00                  ff .end (operand)
  e5 8b 00 00               03 00 .var1 FLAGS
  e7 8b 00 00                  01 .literal
  e8 8b 00 00         53 02 00 00 595
  ec 8b 00 00                  ff .end (operand)
  ed 8b 00 00                  ff .end (operand)
  ee 8b 00 00               03 07 .var1 CURHP
  f0 8b 00 00                  01 .literal
  f1 8b 00 00         06 00 00 00 6
  f5 8b 00 00                  ff .end (operand)
  f6 8b 00 00                  ff .end (operand)
  f7 8b 00 00               01 3b .exec VcText
  f9 8b 00 00                  01 .literal
  fa 8b 00 00         09 01 00 00 265
  fe 8b 00 00                  ff .end (operand)
  ff 8b 00 00               03 00 .var1 FLAGS
  01 8c 00 00                  01 .literal
  02 8c 00 00         53 02 00 00 595
  06 8c 00 00                  ff .end (operand)
  07 8c 00 00                  ff .end (operand)
  08 8c 00 00                     "/"

              2f 00 
  0a 8c 00 00               01 4e .exec VcTextNum
  0c 8c 00 00                  01 .literal
  0d 8c 00 00         13 01 00 00 275
  11 8c 00 00                  ff .end (operand)
  12 8c 00 00               03 00 .var1 FLAGS
  14 8c 00 00                  01 .literal
  15 8c 00 00         53 02 00 00 595
  19 8c 00 00                  ff .end (operand)
  1a 8c 00 00                  ff .end (operand)
  1b 8c 00 00               03 08 .var1 MAXHP
  1d 8c 00 00                  01 .literal
  1e 8c 00 00         06 00 00 00 6
  22 8c 00 00                  ff .end (operand)
  23 8c 00 00                  ff .end (operand)
  24 8c 00 00               03 00 .var1 FLAGS
  26 8c 00 00                  01 .literal
  27 8c 00 00         53 02 00 00 595
  2b 8c 00 00                  ff .end (operand)
  2c 8c 00 00                  04 .incset
  2d 8c 00 00                  01 .literal
  2e 8c 00 00         0a 00 00 00 10
  32 8c 00 00                  ff .end (operand)
  33 8c 00 00               01 4e .exec VcTextNum
  35 8c 00 00                  01 .literal
  36 8c 00 00         f5 00 00 00 245
  3a 8c 00 00                  ff .end (operand)
  3b 8c 00 00               03 00 .var1 FLAGS
  3d 8c 00 00                  01 .literal
  3e 8c 00 00         53 02 00 00 595
  42 8c 00 00                  ff .end (operand)
  43 8c 00 00                  ff .end (operand)
  44 8c 00 00               03 09 .var1 CURMP
  46 8c 00 00                  01 .literal
  47 8c 00 00         06 00 00 00 6
  4b 8c 00 00                  ff .end (operand)
  4c 8c 00 00                  ff .end (operand)
  4d 8c 00 00               01 3b .exec VcText
  4f 8c 00 00                  01 .literal
  50 8c 00 00         09 01 00 00 265
  54 8c 00 00                  ff .end (operand)
  55 8c 00 00               03 00 .var1 FLAGS
  57 8c 00 00                  01 .literal
  58 8c 00 00         53 02 00 00 595
  5c 8c 00 00                  ff .end (operand)
  5d 8c 00 00                  ff .end (operand)
  5e 8c 00 00                     "/"

              2f 00 
  60 8c 00 00               01 4e .exec VcTextNum
  62 8c 00 00                  01 .literal
  63 8c 00 00         13 01 00 00 275
  67 8c 00 00                  ff .end (operand)
  68 8c 00 00               03 00 .var1 FLAGS
  6a 8c 00 00                  01 .literal
  6b 8c 00 00         53 02 00 00 595
  6f 8c 00 00                  ff .end (operand)
  70 8c 00 00                  ff .end (operand)
  71 8c 00 00               03 0a .var1 MAXMP
  73 8c 00 00                  01 .literal
  74 8c 00 00         06 00 00 00 6
  78 8c 00 00                  ff .end (operand)
  79 8c 00 00                  ff .end (operand)
if339
::7a 8c 00 00               05 01 .if [terms=1]
  7c 8c 00 00         5b 8d 00 00 .else
  80 8c 00 00               03 02 .var1 CHAR
  82 8c 00 00                  01 .literal
  83 8c 00 00         07 00 00 00 7
  87 8c 00 00                  ff .end (operand)
  88 8c 00 00                  ff .end (operand)
  8a 8c 00 00                  01 .if-sign-nonzero
  8a 8c 00 00               03 00 .var1 FLAGS
  8c 8c 00 00                  01 .literal
  8d 8c 00 00         53 02 00 00 595
  91 8c 00 00                  ff .end (operand)
  92 8c 00 00                  04 .incset
  93 8c 00 00                  01 .literal
  94 8c 00 00         0a 00 00 00 10
  98 8c 00 00                  ff .end (operand)
  99 8c 00 00               01 3b .exec VcText
  9b 8c 00 00                  01 .literal
  9c 8c 00 00         f5 00 00 00 245
  a0 8c 00 00                  ff .end (operand)
  a1 8c 00 00               03 00 .var1 FLAGS
  a3 8c 00 00                  01 .literal
  a4 8c 00 00         53 02 00 00 595
  a8 8c 00 00                  ff .end (operand)
  a9 8c 00 00                  ff .end (operand)
  aa 8c 00 00                     "Bull"

              42 75 6c 6c 00 
  af 8c 00 00               03 00 .var1 FLAGS
  b1 8c 00 00                  01 .literal
  b2 8c 00 00         53 02 00 00 595
  b6 8c 00 00                  ff .end (operand)
  b7 8c 00 00                  04 .incset
  b8 8c 00 00                  01 .literal
  b9 8c 00 00         0a 00 00 00 10
  bd 8c 00 00                  ff .end (operand)
  be 8c 00 00               01 4e .exec VcTextNum
  c0 8c 00 00                  01 .literal
  c1 8c 00 00         f5 00 00 00 245
  c5 8c 00 00                  ff .end (operand)
  c6 8c 00 00               03 00 .var1 FLAGS
  c8 8c 00 00                  01 .literal
  c9 8c 00 00         53 02 00 00 595
  cd 8c 00 00                  ff .end (operand)
  ce 8c 00 00                  ff .end (operand)
  cf 8c 00 00               03 07 .var1 CURHP
  d1 8c 00 00                  01 .literal
  d2 8c 00 00         07 00 00 00 7
  d6 8c 00 00                  ff .end (operand)
  d7 8c 00 00                  ff .end (operand)
  d8 8c 00 00               01 3b .exec VcText
  da 8c 00 00                  01 .literal
  db 8c 00 00         09 01 00 00 265
  df 8c 00 00                  ff .end (operand)
  e0 8c 00 00               03 00 .var1 FLAGS
  e2 8c 00 00                  01 .literal
  e3 8c 00 00         53 02 00 00 595
  e7 8c 00 00                  ff .end (operand)
  e8 8c 00 00                  ff .end (operand)
  e9 8c 00 00                     "/"

              2f 00 
  eb 8c 00 00               01 4e .exec VcTextNum
  ed 8c 00 00                  01 .literal
  ee 8c 00 00         13 01 00 00 275
  f2 8c 00 00                  ff .end (operand)
  f3 8c 00 00               03 00 .var1 FLAGS
  f5 8c 00 00                  01 .literal
  f6 8c 00 00         53 02 00 00 595
  fa 8c 00 00                  ff .end (operand)
  fb 8c 00 00                  ff .end (operand)
  fc 8c 00 00               03 08 .var1 MAXHP
  fe 8c 00 00                  01 .literal
  ff 8c 00 00         07 00 00 00 7
  03 8d 00 00                  ff .end (operand)
  04 8d 00 00                  ff .end (operand)
  05 8d 00 00               03 00 .var1 FLAGS
  07 8d 00 00                  01 .literal
  08 8d 00 00         53 02 00 00 595
  0c 8d 00 00                  ff .end (operand)
  0d 8d 00 00                  04 .incset
  0e 8d 00 00                  01 .literal
  0f 8d 00 00         0a 00 00 00 10
  13 8d 00 00                  ff .end (operand)
  14 8d 00 00               01 4e .exec VcTextNum
  16 8d 00 00                  01 .literal
  17 8d 00 00         f5 00 00 00 245
  1b 8d 00 00                  ff .end (operand)
  1c 8d 00 00               03 00 .var1 FLAGS
  1e 8d 00 00                  01 .literal
  1f 8d 00 00         53 02 00 00 595
  23 8d 00 00                  ff .end (operand)
  24 8d 00 00                  ff .end (operand)
  25 8d 00 00               03 09 .var1 CURMP
  27 8d 00 00                  01 .literal
  28 8d 00 00         07 00 00 00 7
  2c 8d 00 00                  ff .end (operand)
  2d 8d 00 00                  ff .end (operand)
  2e 8d 00 00               01 3b .exec VcText
  30 8d 00 00                  01 .literal
  31 8d 00 00         09 01 00 00 265
  35 8d 00 00                  ff .end (operand)
  36 8d 00 00               03 00 .var1 FLAGS
  38 8d 00 00                  01 .literal
  39 8d 00 00         53 02 00 00 595
  3d 8d 00 00                  ff .end (operand)
  3e 8d 00 00                  ff .end (operand)
  3f 8d 00 00                     "/"

              2f 00 
  41 8d 00 00               01 4e .exec VcTextNum
  43 8d 00 00                  01 .literal
  44 8d 00 00         13 01 00 00 275
  48 8d 00 00                  ff .end (operand)
  49 8d 00 00               03 00 .var1 FLAGS
  4b 8d 00 00                  01 .literal
  4c 8d 00 00         53 02 00 00 595
  50 8d 00 00                  ff .end (operand)
  51 8d 00 00                  ff .end (operand)
  52 8d 00 00               03 0a .var1 MAXMP
  54 8d 00 00                  01 .literal
  55 8d 00 00         07 00 00 00 7
  59 8d 00 00                  ff .end (operand)
  5a 8d 00 00                  ff .end (operand)
if340
::5b 8d 00 00               05 01 .if [terms=1]
  5d 8d 00 00         3d 8e 00 00 .else
  61 8d 00 00               03 02 .var1 CHAR
  63 8d 00 00                  01 .literal
  64 8d 00 00         08 00 00 00 8
  68 8d 00 00                  ff .end (operand)
  69 8d 00 00                  ff .end (operand)
  6b 8d 00 00                  01 .if-sign-nonzero
  6b 8d 00 00               03 00 .var1 FLAGS
  6d 8d 00 00                  01 .literal
  6e 8d 00 00         53 02 00 00 595
  72 8d 00 00                  ff .end (operand)
  73 8d 00 00                  04 .incset
  74 8d 00 00                  01 .literal
  75 8d 00 00         0a 00 00 00 10
  79 8d 00 00                  ff .end (operand)
  7a 8d 00 00               01 3b .exec VcText
  7c 8d 00 00                  01 .literal
  7d 8d 00 00         f5 00 00 00 245
  81 8d 00 00                  ff .end (operand)
  82 8d 00 00               03 00 .var1 FLAGS
  84 8d 00 00                  01 .literal
  85 8d 00 00         53 02 00 00 595
  89 8d 00 00                  ff .end (operand)
  8a 8d 00 00                  ff .end (operand)
  8b 8d 00 00                     "Lumin"

              4c 75 6d 69 6e 00 
  91 8d 00 00               03 00 .var1 FLAGS
  93 8d 00 00                  01 .literal
  94 8d 00 00         53 02 00 00 595
  98 8d 00 00                  ff .end (operand)
  99 8d 00 00                  04 .incset
  9a 8d 00 00                  01 .literal
  9b 8d 00 00         0a 00 00 00 10
  9f 8d 00 00                  ff .end (operand)
  a0 8d 00 00               01 4e .exec VcTextNum
  a2 8d 00 00                  01 .literal
  a3 8d 00 00         f5 00 00 00 245
  a7 8d 00 00                  ff .end (operand)
  a8 8d 00 00               03 00 .var1 FLAGS
  aa 8d 00 00                  01 .literal
  ab 8d 00 00         53 02 00 00 595
  af 8d 00 00                  ff .end (operand)
  b0 8d 00 00                  ff .end (operand)
  b1 8d 00 00               03 07 .var1 CURHP
  b3 8d 00 00                  01 .literal
  b4 8d 00 00         08 00 00 00 8
  b8 8d 00 00                  ff .end (operand)
  b9 8d 00 00                  ff .end (operand)
  ba 8d 00 00               01 3b .exec VcText
  bc 8d 00 00                  01 .literal
  bd 8d 00 00         09 01 00 00 265
  c1 8d 00 00                  ff .end (operand)
  c2 8d 00 00               03 00 .var1 FLAGS
  c4 8d 00 00                  01 .literal
  c5 8d 00 00         53 02 00 00 595
  c9 8d 00 00                  ff .end (operand)
  ca 8d 00 00                  ff .end (operand)
  cb 8d 00 00                     "/"

              2f 00 
  cd 8d 00 00               01 4e .exec VcTextNum
  cf 8d 00 00                  01 .literal
  d0 8d 00 00         13 01 00 00 275
  d4 8d 00 00                  ff .end (operand)
  d5 8d 00 00               03 00 .var1 FLAGS
  d7 8d 00 00                  01 .literal
  d8 8d 00 00         53 02 00 00 595
  dc 8d 00 00                  ff .end (operand)
  dd 8d 00 00                  ff .end (operand)
  de 8d 00 00               03 08 .var1 MAXHP
  e0 8d 00 00                  01 .literal
  e1 8d 00 00         08 00 00 00 8
  e5 8d 00 00                  ff .end (operand)
  e6 8d 00 00                  ff .end (operand)
  e7 8d 00 00               03 00 .var1 FLAGS
  e9 8d 00 00                  01 .literal
  ea 8d 00 00         53 02 00 00 595
  ee 8d 00 00                  ff .end (operand)
  ef 8d 00 00                  04 .incset
  f0 8d 00 00                  01 .literal
  f1 8d 00 00         0a 00 00 00 10
  f5 8d 00 00                  ff .end (operand)
  f6 8d 00 00               01 4e .exec VcTextNum
  f8 8d 00 00                  01 .literal
  f9 8d 00 00         f5 00 00 00 245
  fd 8d 00 00                  ff .end (operand)
  fe 8d 00 00               03 00 .var1 FLAGS
  00 8e 00 00                  01 .literal
  01 8e 00 00         53 02 00 00 595
  05 8e 00 00                  ff .end (operand)
  06 8e 00 00                  ff .end (operand)
  07 8e 00 00               03 09 .var1 CURMP
  09 8e 00 00                  01 .literal
  0a 8e 00 00         08 00 00 00 8
  0e 8e 00 00                  ff .end (operand)
  0f 8e 00 00                  ff .end (operand)
  10 8e 00 00               01 3b .exec VcText
  12 8e 00 00                  01 .literal
  13 8e 00 00         09 01 00 00 265
  17 8e 00 00                  ff .end (operand)
  18 8e 00 00               03 00 .var1 FLAGS
  1a 8e 00 00                  01 .literal
  1b 8e 00 00         53 02 00 00 595
  1f 8e 00 00                  ff .end (operand)
  20 8e 00 00                  ff .end (operand)
  21 8e 00 00                     "/"

              2f 00 
  23 8e 00 00               01 4e .exec VcTextNum
  25 8e 00 00                  01 .literal
  26 8e 00 00         13 01 00 00 275
  2a 8e 00 00                  ff .end (operand)
  2b 8e 00 00               03 00 .var1 FLAGS
  2d 8e 00 00                  01 .literal
  2e 8e 00 00         53 02 00 00 595
  32 8e 00 00                  ff .end (operand)
  33 8e 00 00                  ff .end (operand)
  34 8e 00 00               03 0a .var1 MAXMP
  36 8e 00 00                  01 .literal
  37 8e 00 00         08 00 00 00 8
  3b 8e 00 00                  ff .end (operand)
  3c 8e 00 00                  ff .end (operand)
::3d 8e 00 00               01 3b .exec VcText
  3f 8e 00 00                  01 .literal
  40 8e 00 00         f5 00 00 00 245
  44 8e 00 00                  ff .end (operand)
  45 8e 00 00                  01 .literal
  46 8e 00 00         ad 00 00 00 173
  4a 8e 00 00                  ff .end (operand)
  4b 8e 00 00                     "SP"

              53 50 00 
  4e 8e 00 00               01 4e .exec VcTextNum
  50 8e 00 00                  01 .literal
  51 8e 00 00         f5 00 00 00 245
  55 8e 00 00                  ff .end (operand)
  56 8e 00 00                  01 .literal
  57 8e 00 00         b7 00 00 00 183
  5b 8e 00 00                  ff .end (operand)
  5c 8e 00 00               03 00 .var1 FLAGS
  5e 8e 00 00                  01 .literal
  5f 8e 00 00         bf 02 00 00 703
  63 8e 00 00                  ff .end (operand)
  64 8e 00 00                  ff .end (operand)
  65 8e 00 00               01 20 .exec Redraw
  67 8e 00 00                  ff .end (block)

.event 17
* 68 8e 00 00                  0a .switch
  69 8e 00 00               03 00 .var1 FLAGS
  6b 8e 00 00                  01 .literal
  6c 8e 00 00         e4 02 00 00 740
  70 8e 00 00                  ff .end (operand)
  71 8e 00 00                  ff .end (operand)
  72 8e 00 00                  0b .case
  73 8e 00 00                  05 .group
  74 8e 00 00                  01 .literal
  75 8e 00 00         01 00 00 00 1
  79 8e 00 00                  ff .end (operand)
  7a 8e 00 00                  ff .end (operand)
  7b 8e 00 00         8f 8e 00 00 .case-end-address
  7f 8e 00 00               03 11 .var1 ENTITY.CHRINDEX
  81 8e 00 00                  01 .literal
  82 8e 00 00         08 00 00 00 8
  86 8e 00 00                  ff .end (operand)
  87 8e 00 00                  01 .set
  88 8e 00 00                  01 .literal
  89 8e 00 00         11 00 00 00 17
  8d 8e 00 00                  ff .end (operand)
  8e 8e 00 00                  ff .end (block)
 :8f 8e 00 00                  0b .case
  90 8e 00 00                  05 .group
  91 8e 00 00                  01 .literal
  92 8e 00 00         02 00 00 00 2
  96 8e 00 00                  ff .end (operand)
  97 8e 00 00                  ff .end (operand)
  98 8e 00 00         ac 8e 00 00 .case-end-address
  9c 8e 00 00               03 11 .var1 ENTITY.CHRINDEX
  9e 8e 00 00                  01 .literal
  9f 8e 00 00         0d 00 00 00 13
  a3 8e 00 00                  ff .end (operand)
  a4 8e 00 00                  01 .set
  a5 8e 00 00                  01 .literal
  a6 8e 00 00         11 00 00 00 17
  aa 8e 00 00                  ff .end (operand)
  ab 8e 00 00                  ff .end (block)
 :ac 8e 00 00                  0b .case
  ad 8e 00 00                  05 .group
  ae 8e 00 00                  01 .literal
  af 8e 00 00         03 00 00 00 3
  b3 8e 00 00                  ff .end (operand)
  b4 8e 00 00                  ff .end (operand)
  b5 8e 00 00         c9 8e 00 00 .case-end-address
  b9 8e 00 00               03 11 .var1 ENTITY.CHRINDEX
  bb 8e 00 00                  01 .literal
  bc 8e 00 00         0a 00 00 00 10
  c0 8e 00 00                  ff .end (operand)
  c1 8e 00 00                  01 .set
  c2 8e 00 00                  01 .literal
  c3 8e 00 00         11 00 00 00 17
  c7 8e 00 00                  ff .end (operand)
  c8 8e 00 00                  ff .end (block)
 :c9 8e 00 00                  0b .case
  ca 8e 00 00                  05 .group
  cb 8e 00 00                  01 .literal
  cc 8e 00 00         04 00 00 00 4
  d0 8e 00 00                  ff .end (operand)
  d1 8e 00 00                  ff .end (operand)
  d2 8e 00 00         e6 8e 00 00 .case-end-address
  d6 8e 00 00               03 11 .var1 ENTITY.CHRINDEX
  d8 8e 00 00                  01 .literal
  d9 8e 00 00         09 00 00 00 9
  dd 8e 00 00                  ff .end (operand)
  de 8e 00 00                  01 .set
  df 8e 00 00                  01 .literal
  e0 8e 00 00         11 00 00 00 17
  e4 8e 00 00                  ff .end (operand)
  e5 8e 00 00                  ff .end (block)
 :e6 8e 00 00                  0b .case
  e7 8e 00 00                  05 .group
  e8 8e 00 00                  01 .literal
  e9 8e 00 00         05 00 00 00 5
  ed 8e 00 00                  ff .end (operand)
  ee 8e 00 00                  ff .end (operand)
  ef 8e 00 00         03 8f 00 00 .case-end-address
  f3 8e 00 00               03 11 .var1 ENTITY.CHRINDEX
  f5 8e 00 00                  01 .literal
  f6 8e 00 00         0e 00 00 00 14
  fa 8e 00 00                  ff .end (operand)
  fb 8e 00 00                  01 .set
  fc 8e 00 00                  01 .literal
  fd 8e 00 00         11 00 00 00 17
  01 8f 00 00                  ff .end (operand)
  02 8f 00 00                  ff .end (block)
 :03 8f 00 00                  0b .case
  04 8f 00 00                  05 .group
  05 8f 00 00                  01 .literal
  06 8f 00 00         06 00 00 00 6
  0a 8f 00 00                  ff .end (operand)
  0b 8f 00 00                  ff .end (operand)
  0c 8f 00 00         20 8f 00 00 .case-end-address
  10 8f 00 00               03 11 .var1 ENTITY.CHRINDEX
  12 8f 00 00                  01 .literal
  13 8f 00 00         0f 00 00 00 15
  17 8f 00 00                  ff .end (operand)
  18 8f 00 00                  01 .set
  19 8f 00 00                  01 .literal
  1a 8f 00 00         11 00 00 00 17
  1e 8f 00 00                  ff .end (operand)
  1f 8f 00 00                  ff .end (block)
 :20 8f 00 00                  0b .case
  21 8f 00 00                  05 .group
  22 8f 00 00                  01 .literal
  23 8f 00 00         07 00 00 00 7
  27 8f 00 00                  ff .end (operand)
  28 8f 00 00                  ff .end (operand)
  29 8f 00 00         3d 8f 00 00 .case-end-address
  2d 8f 00 00               03 11 .var1 ENTITY.CHRINDEX
  2f 8f 00 00                  01 .literal
  30 8f 00 00         0c 00 00 00 12
  34 8f 00 00                  ff .end (operand)
  35 8f 00 00                  01 .set
  36 8f 00 00                  01 .literal
  37 8f 00 00         11 00 00 00 17
  3b 8f 00 00                  ff .end (operand)
  3c 8f 00 00                  ff .end (block)
 :3d 8f 00 00                  0b .case
  3e 8f 00 00                  05 .group
  3f 8f 00 00                  01 .literal
  40 8f 00 00         08 00 00 00 8
  44 8f 00 00                  ff .end (operand)
  45 8f 00 00                  ff .end (operand)
  46 8f 00 00         5a 8f 00 00 .case-end-address
  4a 8f 00 00               03 11 .var1 ENTITY.CHRINDEX
  4c 8f 00 00                  01 .literal
  4d 8f 00 00         0b 00 00 00 11
  51 8f 00 00                  ff .end (operand)
  52 8f 00 00                  01 .set
  53 8f 00 00                  01 .literal
  54 8f 00 00         11 00 00 00 17
  58 8f 00 00                  ff .end (operand)
  59 8f 00 00                  ff .end (block)
 :5a 8f 00 00                  ff .end (switch)
  5b 8f 00 00                  ff .end (block)

.event 18
* 5c 8f 00 00               01 39 .exec VcClear
  5e 8f 00 00               01 50 .exec VcBox
  60 8f 00 00                  01 .literal
  61 8f 00 00         f0 00 00 00 240
  65 8f 00 00                  ff .end (operand)
  66 8f 00 00                  01 .literal
  67 8f 00 00         0a 00 00 00 10
  6b 8f 00 00                  ff .end (operand)
  6c 8f 00 00                  01 .literal
  6d 8f 00 00         3a 01 00 00 314
  71 8f 00 00                  ff .end (operand)
  72 8f 00 00                  01 .literal
  73 8f 00 00         c6 00 00 00 198
  77 8f 00 00                  ff .end (operand)
  78 8f 00 00               03 00 .var1 FLAGS
  7a 8f 00 00                  01 .literal
  7b 8f 00 00         53 02 00 00 595
  7f 8f 00 00                  ff .end (operand)
  80 8f 00 00                  01 .set
  81 8f 00 00                  01 .literal
  82 8f 00 00         0d 00 00 00 13
  86 8f 00 00                  ff .end (operand)
if341
 :87 8f 00 00               05 01 .if [terms=1]
  89 8f 00 00         67 90 00 00 .else
  8d 8f 00 00               03 02 .var1 CHAR
  8f 8f 00 00                  01 .literal
  90 8f 00 00         01 00 00 00 1
  94 8f 00 00                  ff .end (operand)
  95 8f 00 00                  ff .end (operand)
  97 8f 00 00                  01 .if-sign-nonzero
  97 8f 00 00               03 00 .var1 FLAGS
  99 8f 00 00                  01 .literal
  9a 8f 00 00         53 02 00 00 595
  9e 8f 00 00                  ff .end (operand)
  9f 8f 00 00                  04 .incset
  a0 8f 00 00                  01 .literal
  a1 8f 00 00         0a 00 00 00 10
  a5 8f 00 00                  ff .end (operand)
  a6 8f 00 00               01 3b .exec VcText
  a8 8f 00 00                  01 .literal
  a9 8f 00 00         f5 00 00 00 245
  ad 8f 00 00                  ff .end (operand)
  ae 8f 00 00               03 00 .var1 FLAGS
  b0 8f 00 00                  01 .literal
  b1 8f 00 00         53 02 00 00 595
  b5 8f 00 00                  ff .end (operand)
  b6 8f 00 00                  ff .end (operand)
  b7 8f 00 00                     "Sam"

              53 61 6d 00 
  bb 8f 00 00               03 00 .var1 FLAGS
  bd 8f 00 00                  01 .literal
  be 8f 00 00         53 02 00 00 595
  c2 8f 00 00                  ff .end (operand)
  c3 8f 00 00                  04 .incset
  c4 8f 00 00                  01 .literal
  c5 8f 00 00         0a 00 00 00 10
  c9 8f 00 00                  ff .end (operand)
  ca 8f 00 00               01 4e .exec VcTextNum
  cc 8f 00 00                  01 .literal
  cd 8f 00 00         f5 00 00 00 245
  d1 8f 00 00                  ff .end (operand)
  d2 8f 00 00               03 00 .var1 FLAGS
  d4 8f 00 00                  01 .literal
  d5 8f 00 00         53 02 00 00 595
  d9 8f 00 00                  ff .end (operand)
  da 8f 00 00                  ff .end (operand)
  db 8f 00 00               03 07 .var1 CURHP
  dd 8f 00 00                  01 .literal
  de 8f 00 00         01 00 00 00 1
  e2 8f 00 00                  ff .end (operand)
  e3 8f 00 00                  ff .end (operand)
  e4 8f 00 00               01 3b .exec VcText
  e6 8f 00 00                  01 .literal
  e7 8f 00 00         09 01 00 00 265
  eb 8f 00 00                  ff .end (operand)
  ec 8f 00 00               03 00 .var1 FLAGS
  ee 8f 00 00                  01 .literal
  ef 8f 00 00         53 02 00 00 595
  f3 8f 00 00                  ff .end (operand)
  f4 8f 00 00                  ff .end (operand)
  f5 8f 00 00                     "/"

              2f 00 
  f7 8f 00 00               01 4e .exec VcTextNum
  f9 8f 00 00                  01 .literal
  fa 8f 00 00         13 01 00 00 275
  fe 8f 00 00                  ff .end (operand)
  ff 8f 00 00               03 00 .var1 FLAGS
  01 90 00 00                  01 .literal
  02 90 00 00         53 02 00 00 595
  06 90 00 00                  ff .end (operand)
  07 90 00 00                  ff .end (operand)
  08 90 00 00               03 08 .var1 MAXHP
  0a 90 00 00                  01 .literal
  0b 90 00 00         01 00 00 00 1
  0f 90 00 00                  ff .end (operand)
  10 90 00 00                  ff .end (operand)
  11 90 00 00               03 00 .var1 FLAGS
  13 90 00 00                  01 .literal
  14 90 00 00         53 02 00 00 595
  18 90 00 00                  ff .end (operand)
  19 90 00 00                  04 .incset
  1a 90 00 00                  01 .literal
  1b 90 00 00         0a 00 00 00 10
  1f 90 00 00                  ff .end (operand)
  20 90 00 00               01 4e .exec VcTextNum
  22 90 00 00                  01 .literal
  23 90 00 00         f5 00 00 00 245
  27 90 00 00                  ff .end (operand)
  28 90 00 00               03 00 .var1 FLAGS
  2a 90 00 00                  01 .literal
  2b 90 00 00         53 02 00 00 595
  2f 90 00 00                  ff .end (operand)
  30 90 00 00                  ff .end (operand)
  31 90 00 00               03 09 .var1 CURMP
  33 90 00 00                  01 .literal
  34 90 00 00         01 00 00 00 1
  38 90 00 00                  ff .end (operand)
  39 90 00 00                  ff .end (operand)
  3a 90 00 00               01 3b .exec VcText
  3c 90 00 00                  01 .literal
  3d 90 00 00         09 01 00 00 265
  41 90 00 00                  ff .end (operand)
  42 90 00 00               03 00 .var1 FLAGS
  44 90 00 00                  01 .literal
  45 90 00 00         53 02 00 00 595
  49 90 00 00                  ff .end (operand)
  4a 90 00 00                  ff .end (operand)
  4b 90 00 00                     "/"

              2f 00 
  4d 90 00 00               01 4e .exec VcTextNum
  4f 90 00 00                  01 .literal
  50 90 00 00         13 01 00 00 275
  54 90 00 00                  ff .end (operand)
  55 90 00 00               03 00 .var1 FLAGS
  57 90 00 00                  01 .literal
  58 90 00 00         53 02 00 00 595
  5c 90 00 00                  ff .end (operand)
  5d 90 00 00                  ff .end (operand)
  5e 90 00 00               03 0a .var1 MAXMP
  60 90 00 00                  01 .literal
  61 90 00 00         01 00 00 00 1
  65 90 00 00                  ff .end (operand)
  66 90 00 00                  ff .end (operand)
if342
::67 90 00 00               05 01 .if [terms=1]
  69 90 00 00         48 91 00 00 .else
  6d 90 00 00               03 02 .var1 CHAR
  6f 90 00 00                  01 .literal
  70 90 00 00         02 00 00 00 2
  74 90 00 00                  ff .end (operand)
  75 90 00 00                  ff .end (operand)
  77 90 00 00                  01 .if-sign-nonzero
  77 90 00 00               03 00 .var1 FLAGS
  79 90 00 00                  01 .literal
  7a 90 00 00         53 02 00 00 595
  7e 90 00 00                  ff .end (operand)
  7f 90 00 00                  04 .incset
  80 90 00 00                  01 .literal
  81 90 00 00         0a 00 00 00 10
  85 90 00 00                  ff .end (operand)
  86 90 00 00               01 3b .exec VcText
  88 90 00 00                  01 .literal
  89 90 00 00         f5 00 00 00 245
  8d 90 00 00                  ff .end (operand)
  8e 90 00 00               03 00 .var1 FLAGS
  90 90 00 00                  01 .literal
  91 90 00 00         53 02 00 00 595
  95 90 00 00                  ff .end (operand)
  96 90 00 00                  ff .end (operand)
  97 90 00 00                     "Webb"

              57 65 62 62 00 
  9c 90 00 00               03 00 .var1 FLAGS
  9e 90 00 00                  01 .literal
  9f 90 00 00         53 02 00 00 595
  a3 90 00 00                  ff .end (operand)
  a4 90 00 00                  04 .incset
  a5 90 00 00                  01 .literal
  a6 90 00 00         0a 00 00 00 10
  aa 90 00 00                  ff .end (operand)
  ab 90 00 00               01 4e .exec VcTextNum
  ad 90 00 00                  01 .literal
  ae 90 00 00         f5 00 00 00 245
  b2 90 00 00                  ff .end (operand)
  b3 90 00 00               03 00 .var1 FLAGS
  b5 90 00 00                  01 .literal
  b6 90 00 00         53 02 00 00 595
  ba 90 00 00                  ff .end (operand)
  bb 90 00 00                  ff .end (operand)
  bc 90 00 00               03 07 .var1 CURHP
  be 90 00 00                  01 .literal
  bf 90 00 00         02 00 00 00 2
  c3 90 00 00                  ff .end (operand)
  c4 90 00 00                  ff .end (operand)
  c5 90 00 00               01 3b .exec VcText
  c7 90 00 00                  01 .literal
  c8 90 00 00         09 01 00 00 265
  cc 90 00 00                  ff .end (operand)
  cd 90 00 00               03 00 .var1 FLAGS
  cf 90 00 00                  01 .literal
  d0 90 00 00         53 02 00 00 595
  d4 90 00 00                  ff .end (operand)
  d5 90 00 00                  ff .end (operand)
  d6 90 00 00                     "/"

              2f 00 
  d8 90 00 00               01 4e .exec VcTextNum
  da 90 00 00                  01 .literal
  db 90 00 00         13 01 00 00 275
  df 90 00 00                  ff .end (operand)
  e0 90 00 00               03 00 .var1 FLAGS
  e2 90 00 00                  01 .literal
  e3 90 00 00         53 02 00 00 595
  e7 90 00 00                  ff .end (operand)
  e8 90 00 00                  ff .end (operand)
  e9 90 00 00               03 08 .var1 MAXHP
  eb 90 00 00                  01 .literal
  ec 90 00 00         02 00 00 00 2
  f0 90 00 00                  ff .end (operand)
  f1 90 00 00                  ff .end (operand)
  f2 90 00 00               03 00 .var1 FLAGS
  f4 90 00 00                  01 .literal
  f5 90 00 00         53 02 00 00 595
  f9 90 00 00                  ff .end (operand)
  fa 90 00 00                  04 .incset
  fb 90 00 00                  01 .literal
  fc 90 00 00         0a 00 00 00 10
  00 91 00 00                  ff .end (operand)
  01 91 00 00               01 4e .exec VcTextNum
  03 91 00 00                  01 .literal
  04 91 00 00         f5 00 00 00 245
  08 91 00 00                  ff .end (operand)
  09 91 00 00               03 00 .var1 FLAGS
  0b 91 00 00                  01 .literal
  0c 91 00 00         53 02 00 00 595
  10 91 00 00                  ff .end (operand)
  11 91 00 00                  ff .end (operand)
  12 91 00 00               03 09 .var1 CURMP
  14 91 00 00                  01 .literal
  15 91 00 00         02 00 00 00 2
  19 91 00 00                  ff .end (operand)
  1a 91 00 00                  ff .end (operand)
  1b 91 00 00               01 3b .exec VcText
  1d 91 00 00                  01 .literal
  1e 91 00 00         09 01 00 00 265
  22 91 00 00                  ff .end (operand)
  23 91 00 00               03 00 .var1 FLAGS
  25 91 00 00                  01 .literal
  26 91 00 00         53 02 00 00 595
  2a 91 00 00                  ff .end (operand)
  2b 91 00 00                  ff .end (operand)
  2c 91 00 00                     "/"

              2f 00 
  2e 91 00 00               01 4e .exec VcTextNum
  30 91 00 00                  01 .literal
  31 91 00 00         13 01 00 00 275
  35 91 00 00                  ff .end (operand)
  36 91 00 00               03 00 .var1 FLAGS
  38 91 00 00                  01 .literal
  39 91 00 00         53 02 00 00 595
  3d 91 00 00                  ff .end (operand)
  3e 91 00 00                  ff .end (operand)
  3f 91 00 00               03 0a .var1 MAXMP
  41 91 00 00                  01 .literal
  42 91 00 00         02 00 00 00 2
  46 91 00 00                  ff .end (operand)
  47 91 00 00                  ff .end (operand)
if343
::48 91 00 00               05 01 .if [terms=1]
  4a 91 00 00         29 92 00 00 .else
  4e 91 00 00               03 02 .var1 CHAR
  50 91 00 00                  01 .literal
  51 91 00 00         03 00 00 00 3
  55 91 00 00                  ff .end (operand)
  56 91 00 00                  ff .end (operand)
  58 91 00 00                  01 .if-sign-nonzero
  58 91 00 00               03 00 .var1 FLAGS
  5a 91 00 00                  01 .literal
  5b 91 00 00         53 02 00 00 595
  5f 91 00 00                  ff .end (operand)
  60 91 00 00                  04 .incset
  61 91 00 00                  01 .literal
  62 91 00 00         0a 00 00 00 10
  66 91 00 00                  ff .end (operand)
  67 91 00 00               01 3b .exec VcText
  69 91 00 00                  01 .literal
  6a 91 00 00         f5 00 00 00 245
  6e 91 00 00                  ff .end (operand)
  6f 91 00 00               03 00 .var1 FLAGS
  71 91 00 00                  01 .literal
  72 91 00 00         53 02 00 00 595
  76 91 00 00                  ff .end (operand)
  77 91 00 00                  ff .end (operand)
  78 91 00 00                     "Feng"

              46 65 6e 67 00 
  7d 91 00 00               03 00 .var1 FLAGS
  7f 91 00 00                  01 .literal
  80 91 00 00         53 02 00 00 595
  84 91 00 00                  ff .end (operand)
  85 91 00 00                  04 .incset
  86 91 00 00                  01 .literal
  87 91 00 00         0a 00 00 00 10
  8b 91 00 00                  ff .end (operand)
  8c 91 00 00               01 4e .exec VcTextNum
  8e 91 00 00                  01 .literal
  8f 91 00 00         f5 00 00 00 245
  93 91 00 00                  ff .end (operand)
  94 91 00 00               03 00 .var1 FLAGS
  96 91 00 00                  01 .literal
  97 91 00 00         53 02 00 00 595
  9b 91 00 00                  ff .end (operand)
  9c 91 00 00                  ff .end (operand)
  9d 91 00 00               03 07 .var1 CURHP
  9f 91 00 00                  01 .literal
  a0 91 00 00         03 00 00 00 3
  a4 91 00 00                  ff .end (operand)
  a5 91 00 00                  ff .end (operand)
  a6 91 00 00               01 3b .exec VcText
  a8 91 00 00                  01 .literal
  a9 91 00 00         09 01 00 00 265
  ad 91 00 00                  ff .end (operand)
  ae 91 00 00               03 00 .var1 FLAGS
  b0 91 00 00                  01 .literal
  b1 91 00 00         53 02 00 00 595
  b5 91 00 00                  ff .end (operand)
  b6 91 00 00                  ff .end (operand)
  b7 91 00 00                     "/"

              2f 00 
  b9 91 00 00               01 4e .exec VcTextNum
  bb 91 00 00                  01 .literal
  bc 91 00 00         13 01 00 00 275
  c0 91 00 00                  ff .end (operand)
  c1 91 00 00               03 00 .var1 FLAGS
  c3 91 00 00                  01 .literal
  c4 91 00 00         53 02 00 00 595
  c8 91 00 00                  ff .end (operand)
  c9 91 00 00                  ff .end (operand)
  ca 91 00 00               03 08 .var1 MAXHP
  cc 91 00 00                  01 .literal
  cd 91 00 00         03 00 00 00 3
  d1 91 00 00                  ff .end (operand)
  d2 91 00 00                  ff .end (operand)
  d3 91 00 00               03 00 .var1 FLAGS
  d5 91 00 00                  01 .literal
  d6 91 00 00         53 02 00 00 595
  da 91 00 00                  ff .end (operand)
  db 91 00 00                  04 .incset
  dc 91 00 00                  01 .literal
  dd 91 00 00         0a 00 00 00 10
  e1 91 00 00                  ff .end (operand)
  e2 91 00 00               01 4e .exec VcTextNum
  e4 91 00 00                  01 .literal
  e5 91 00 00         f5 00 00 00 245
  e9 91 00 00                  ff .end (operand)
  ea 91 00 00               03 00 .var1 FLAGS
  ec 91 00 00                  01 .literal
  ed 91 00 00         53 02 00 00 595
  f1 91 00 00                  ff .end (operand)
  f2 91 00 00                  ff .end (operand)
  f3 91 00 00               03 09 .var1 CURMP
  f5 91 00 00                  01 .literal
  f6 91 00 00         03 00 00 00 3
  fa 91 00 00                  ff .end (operand)
  fb 91 00 00                  ff .end (operand)
  fc 91 00 00               01 3b .exec VcText
  fe 91 00 00                  01 .literal
  ff 91 00 00         09 01 00 00 265
  03 92 00 00                  ff .end (operand)
  04 92 00 00               03 00 .var1 FLAGS
  06 92 00 00                  01 .literal
  07 92 00 00         53 02 00 00 595
  0b 92 00 00                  ff .end (operand)
  0c 92 00 00                  ff .end (operand)
  0d 92 00 00                     "/"

              2f 00 
  0f 92 00 00               01 4e .exec VcTextNum
  11 92 00 00                  01 .literal
  12 92 00 00         13 01 00 00 275
  16 92 00 00                  ff .end (operand)
  17 92 00 00               03 00 .var1 FLAGS
  19 92 00 00                  01 .literal
  1a 92 00 00         53 02 00 00 595
  1e 92 00 00                  ff .end (operand)
  1f 92 00 00                  ff .end (operand)
  20 92 00 00               03 0a .var1 MAXMP
  22 92 00 00                  01 .literal
  23 92 00 00         03 00 00 00 3
  27 92 00 00                  ff .end (operand)
  28 92 00 00                  ff .end (operand)
if344
::29 92 00 00               05 01 .if [terms=1]
  2b 92 00 00         0a 93 00 00 .else
  2f 92 00 00               03 02 .var1 CHAR
  31 92 00 00                  01 .literal
  32 92 00 00         04 00 00 00 4
  36 92 00 00                  ff .end (operand)
  37 92 00 00                  ff .end (operand)
  39 92 00 00                  01 .if-sign-nonzero
  39 92 00 00               03 00 .var1 FLAGS
  3b 92 00 00                  01 .literal
  3c 92 00 00         53 02 00 00 595
  40 92 00 00                  ff .end (operand)
  41 92 00 00                  04 .incset
  42 92 00 00                  01 .literal
  43 92 00 00         0a 00 00 00 10
  47 92 00 00                  ff .end (operand)
  48 92 00 00               01 3b .exec VcText
  4a 92 00 00                  01 .literal
  4b 92 00 00         f5 00 00 00 245
  4f 92 00 00                  ff .end (operand)
  50 92 00 00               03 00 .var1 FLAGS
  52 92 00 00                  01 .literal
  53 92 00 00         53 02 00 00 595
  57 92 00 00                  ff .end (operand)
  58 92 00 00                  ff .end (operand)
  59 92 00 00                     "Rikk"

              52 69 6b 6b 00 
  5e 92 00 00               03 00 .var1 FLAGS
  60 92 00 00                  01 .literal
  61 92 00 00         53 02 00 00 595
  65 92 00 00                  ff .end (operand)
  66 92 00 00                  04 .incset
  67 92 00 00                  01 .literal
  68 92 00 00         0a 00 00 00 10
  6c 92 00 00                  ff .end (operand)
  6d 92 00 00               01 4e .exec VcTextNum
  6f 92 00 00                  01 .literal
  70 92 00 00         f5 00 00 00 245
  74 92 00 00                  ff .end (operand)
  75 92 00 00               03 00 .var1 FLAGS
  77 92 00 00                  01 .literal
  78 92 00 00         53 02 00 00 595
  7c 92 00 00                  ff .end (operand)
  7d 92 00 00                  ff .end (operand)
  7e 92 00 00               03 07 .var1 CURHP
  80 92 00 00                  01 .literal
  81 92 00 00         04 00 00 00 4
  85 92 00 00                  ff .end (operand)
  86 92 00 00                  ff .end (operand)
  87 92 00 00               01 3b .exec VcText
  89 92 00 00                  01 .literal
  8a 92 00 00         09 01 00 00 265
  8e 92 00 00                  ff .end (operand)
  8f 92 00 00               03 00 .var1 FLAGS
  91 92 00 00                  01 .literal
  92 92 00 00         53 02 00 00 595
  96 92 00 00                  ff .end (operand)
  97 92 00 00                  ff .end (operand)
  98 92 00 00                     "/"

              2f 00 
  9a 92 00 00               01 4e .exec VcTextNum
  9c 92 00 00                  01 .literal
  9d 92 00 00         13 01 00 00 275
  a1 92 00 00                  ff .end (operand)
  a2 92 00 00               03 00 .var1 FLAGS
  a4 92 00 00                  01 .literal
  a5 92 00 00         53 02 00 00 595
  a9 92 00 00                  ff .end (operand)
  aa 92 00 00                  ff .end (operand)
  ab 92 00 00               03 08 .var1 MAXHP
  ad 92 00 00                  01 .literal
  ae 92 00 00         04 00 00 00 4
  b2 92 00 00                  ff .end (operand)
  b3 92 00 00                  ff .end (operand)
  b4 92 00 00               03 00 .var1 FLAGS
  b6 92 00 00                  01 .literal
  b7 92 00 00         53 02 00 00 595
  bb 92 00 00                  ff .end (operand)
  bc 92 00 00                  04 .incset
  bd 92 00 00                  01 .literal
  be 92 00 00         0a 00 00 00 10
  c2 92 00 00                  ff .end (operand)
  c3 92 00 00               01 4e .exec VcTextNum
  c5 92 00 00                  01 .literal
  c6 92 00 00         f5 00 00 00 245
  ca 92 00 00                  ff .end (operand)
  cb 92 00 00               03 00 .var1 FLAGS
  cd 92 00 00                  01 .literal
  ce 92 00 00         53 02 00 00 595
  d2 92 00 00                  ff .end (operand)
  d3 92 00 00                  ff .end (operand)
  d4 92 00 00               03 09 .var1 CURMP
  d6 92 00 00                  01 .literal
  d7 92 00 00         04 00 00 00 4
  db 92 00 00                  ff .end (operand)
  dc 92 00 00                  ff .end (operand)
  dd 92 00 00               01 3b .exec VcText
  df 92 00 00                  01 .literal
  e0 92 00 00         09 01 00 00 265
  e4 92 00 00                  ff .end (operand)
  e5 92 00 00               03 00 .var1 FLAGS
  e7 92 00 00                  01 .literal
  e8 92 00 00         53 02 00 00 595
  ec 92 00 00                  ff .end (operand)
  ed 92 00 00                  ff .end (operand)
  ee 92 00 00                     "/"

              2f 00 
  f0 92 00 00               01 4e .exec VcTextNum
  f2 92 00 00                  01 .literal
  f3 92 00 00         13 01 00 00 275
  f7 92 00 00                  ff .end (operand)
  f8 92 00 00               03 00 .var1 FLAGS
  fa 92 00 00                  01 .literal
  fb 92 00 00         53 02 00 00 595
  ff 92 00 00                  ff .end (operand)
  00 93 00 00                  ff .end (operand)
  01 93 00 00               03 0a .var1 MAXMP
  03 93 00 00                  01 .literal
  04 93 00 00         04 00 00 00 4
  08 93 00 00                  ff .end (operand)
  09 93 00 00                  ff .end (operand)
if345
::0a 93 00 00               05 01 .if [terms=1]
  0c 93 00 00         ec 93 00 00 .else
  10 93 00 00               03 02 .var1 CHAR
  12 93 00 00                  01 .literal
  13 93 00 00         05 00 00 00 5
  17 93 00 00                  ff .end (operand)
  18 93 00 00                  ff .end (operand)
  1a 93 00 00                  01 .if-sign-nonzero
  1a 93 00 00               03 00 .var1 FLAGS
  1c 93 00 00                  01 .literal
  1d 93 00 00         53 02 00 00 595
  21 93 00 00                  ff .end (operand)
  22 93 00 00                  04 .incset
  23 93 00 00                  01 .literal
  24 93 00 00         0a 00 00 00 10
  28 93 00 00                  ff .end (operand)
  29 93 00 00               01 3b .exec VcText
  2b 93 00 00                  01 .literal
  2c 93 00 00         f5 00 00 00 245
  30 93 00 00                  ff .end (operand)
  31 93 00 00               03 00 .var1 FLAGS
  33 93 00 00                  01 .literal
  34 93 00 00         53 02 00 00 595
  38 93 00 00                  ff .end (operand)
  39 93 00 00                  ff .end (operand)
  3a 93 00 00                     "Dingo"

              44 69 6e 67 6f 00 
  40 93 00 00               03 00 .var1 FLAGS
  42 93 00 00                  01 .literal
  43 93 00 00         53 02 00 00 595
  47 93 00 00                  ff .end (operand)
  48 93 00 00                  04 .incset
  49 93 00 00                  01 .literal
  4a 93 00 00         0a 00 00 00 10
  4e 93 00 00                  ff .end (operand)
  4f 93 00 00               01 4e .exec VcTextNum
  51 93 00 00                  01 .literal
  52 93 00 00         f5 00 00 00 245
  56 93 00 00                  ff .end (operand)
  57 93 00 00               03 00 .var1 FLAGS
  59 93 00 00                  01 .literal
  5a 93 00 00         53 02 00 00 595
  5e 93 00 00                  ff .end (operand)
  5f 93 00 00                  ff .end (operand)
  60 93 00 00               03 07 .var1 CURHP
  62 93 00 00                  01 .literal
  63 93 00 00         05 00 00 00 5
  67 93 00 00                  ff .end (operand)
  68 93 00 00                  ff .end (operand)
  69 93 00 00               01 3b .exec VcText
  6b 93 00 00                  01 .literal
  6c 93 00 00         09 01 00 00 265
  70 93 00 00                  ff .end (operand)
  71 93 00 00               03 00 .var1 FLAGS
  73 93 00 00                  01 .literal
  74 93 00 00         53 02 00 00 595
  78 93 00 00                  ff .end (operand)
  79 93 00 00                  ff .end (operand)
  7a 93 00 00                     "/"

              2f 00 
  7c 93 00 00               01 4e .exec VcTextNum
  7e 93 00 00                  01 .literal
  7f 93 00 00         13 01 00 00 275
  83 93 00 00                  ff .end (operand)
  84 93 00 00               03 00 .var1 FLAGS
  86 93 00 00                  01 .literal
  87 93 00 00         53 02 00 00 595
  8b 93 00 00                  ff .end (operand)
  8c 93 00 00                  ff .end (operand)
  8d 93 00 00               03 08 .var1 MAXHP
  8f 93 00 00                  01 .literal
  90 93 00 00         05 00 00 00 5
  94 93 00 00                  ff .end (operand)
  95 93 00 00                  ff .end (operand)
  96 93 00 00               03 00 .var1 FLAGS
  98 93 00 00                  01 .literal
  99 93 00 00         53 02 00 00 595
  9d 93 00 00                  ff .end (operand)
  9e 93 00 00                  04 .incset
  9f 93 00 00                  01 .literal
  a0 93 00 00         0a 00 00 00 10
  a4 93 00 00                  ff .end (operand)
  a5 93 00 00               01 4e .exec VcTextNum
  a7 93 00 00                  01 .literal
  a8 93 00 00         f5 00 00 00 245
  ac 93 00 00                  ff .end (operand)
  ad 93 00 00               03 00 .var1 FLAGS
  af 93 00 00                  01 .literal
  b0 93 00 00         53 02 00 00 595
  b4 93 00 00                  ff .end (operand)
  b5 93 00 00                  ff .end (operand)
  b6 93 00 00               03 09 .var1 CURMP
  b8 93 00 00                  01 .literal
  b9 93 00 00         05 00 00 00 5
  bd 93 00 00                  ff .end (operand)
  be 93 00 00                  ff .end (operand)
  bf 93 00 00               01 3b .exec VcText
  c1 93 00 00                  01 .literal
  c2 93 00 00         09 01 00 00 265
  c6 93 00 00                  ff .end (operand)
  c7 93 00 00               03 00 .var1 FLAGS
  c9 93 00 00                  01 .literal
  ca 93 00 00         53 02 00 00 595
  ce 93 00 00                  ff .end (operand)
  cf 93 00 00                  ff .end (operand)
  d0 93 00 00                     "/"

              2f 00 
  d2 93 00 00               01 4e .exec VcTextNum
  d4 93 00 00                  01 .literal
  d5 93 00 00         13 01 00 00 275
  d9 93 00 00                  ff .end (operand)
  da 93 00 00               03 00 .var1 FLAGS
  dc 93 00 00                  01 .literal
  dd 93 00 00         53 02 00 00 595
  e1 93 00 00                  ff .end (operand)
  e2 93 00 00                  ff .end (operand)
  e3 93 00 00               03 0a .var1 MAXMP
  e5 93 00 00                  01 .literal
  e6 93 00 00         05 00 00 00 5
  ea 93 00 00                  ff .end (operand)
  eb 93 00 00                  ff .end (operand)
if346
::ec 93 00 00               05 01 .if [terms=1]
  ee 93 00 00         d0 94 00 00 .else
  f2 93 00 00               03 02 .var1 CHAR
  f4 93 00 00                  01 .literal
  f5 93 00 00         06 00 00 00 6
  f9 93 00 00                  ff .end (operand)
  fa 93 00 00                  ff .end (operand)
  fc 93 00 00                  01 .if-sign-nonzero
  fc 93 00 00               03 00 .var1 FLAGS
  fe 93 00 00                  01 .literal
  ff 93 00 00         53 02 00 00 595
  03 94 00 00                  ff .end (operand)
  04 94 00 00                  04 .incset
  05 94 00 00                  01 .literal
  06 94 00 00         0a 00 00 00 10
  0a 94 00 00                  ff .end (operand)
  0b 94 00 00               01 3b .exec VcText
  0d 94 00 00                  01 .literal
  0e 94 00 00         f5 00 00 00 245
  12 94 00 00                  ff .end (operand)
  13 94 00 00               03 00 .var1 FLAGS
  15 94 00 00                  01 .literal
  16 94 00 00         53 02 00 00 595
  1a 94 00 00                  ff .end (operand)
  1b 94 00 00                  ff .end (operand)
  1c 94 00 00                     "Jeemdub"

              4a 65 65 6d 64 75 62 00 
  24 94 00 00               03 00 .var1 FLAGS
  26 94 00 00                  01 .literal
  27 94 00 00         53 02 00 00 595
  2b 94 00 00                  ff .end (operand)
  2c 94 00 00                  04 .incset
  2d 94 00 00                  01 .literal
  2e 94 00 00         0a 00 00 00 10
  32 94 00 00                  ff .end (operand)
  33 94 00 00               01 4e .exec VcTextNum
  35 94 00 00                  01 .literal
  36 94 00 00         f5 00 00 00 245
  3a 94 00 00                  ff .end (operand)
  3b 94 00 00               03 00 .var1 FLAGS
  3d 94 00 00                  01 .literal
  3e 94 00 00         53 02 00 00 595
  42 94 00 00                  ff .end (operand)
  43 94 00 00                  ff .end (operand)
  44 94 00 00               03 07 .var1 CURHP
  46 94 00 00                  01 .literal
  47 94 00 00         06 00 00 00 6
  4b 94 00 00                  ff .end (operand)
  4c 94 00 00                  ff .end (operand)
  4d 94 00 00               01 3b .exec VcText
  4f 94 00 00                  01 .literal
  50 94 00 00         09 01 00 00 265
  54 94 00 00                  ff .end (operand)
  55 94 00 00               03 00 .var1 FLAGS
  57 94 00 00                  01 .literal
  58 94 00 00         53 02 00 00 595
  5c 94 00 00                  ff .end (operand)
  5d 94 00 00                  ff .end (operand)
  5e 94 00 00                     "/"

              2f 00 
  60 94 00 00               01 4e .exec VcTextNum
  62 94 00 00                  01 .literal
  63 94 00 00         13 01 00 00 275
  67 94 00 00                  ff .end (operand)
  68 94 00 00               03 00 .var1 FLAGS
  6a 94 00 00                  01 .literal
  6b 94 00 00         53 02 00 00 595
  6f 94 00 00                  ff .end (operand)
  70 94 00 00                  ff .end (operand)
  71 94 00 00               03 08 .var1 MAXHP
  73 94 00 00                  01 .literal
  74 94 00 00         06 00 00 00 6
  78 94 00 00                  ff .end (operand)
  79 94 00 00                  ff .end (operand)
  7a 94 00 00               03 00 .var1 FLAGS
  7c 94 00 00                  01 .literal
  7d 94 00 00         53 02 00 00 595
  81 94 00 00                  ff .end (operand)
  82 94 00 00                  04 .incset
  83 94 00 00                  01 .literal
  84 94 00 00         0a 00 00 00 10
  88 94 00 00                  ff .end (operand)
  89 94 00 00               01 4e .exec VcTextNum
  8b 94 00 00                  01 .literal
  8c 94 00 00         f5 00 00 00 245
  90 94 00 00                  ff .end (operand)
  91 94 00 00               03 00 .var1 FLAGS
  93 94 00 00                  01 .literal
  94 94 00 00         53 02 00 00 595
  98 94 00 00                  ff .end (operand)
  99 94 00 00                  ff .end (operand)
  9a 94 00 00               03 09 .var1 CURMP
  9c 94 00 00                  01 .literal
  9d 94 00 00         06 00 00 00 6
  a1 94 00 00                  ff .end (operand)
  a2 94 00 00                  ff .end (operand)
  a3 94 00 00               01 3b .exec VcText
  a5 94 00 00                  01 .literal
  a6 94 00 00         09 01 00 00 265
  aa 94 00 00                  ff .end (operand)
  ab 94 00 00               03 00 .var1 FLAGS
  ad 94 00 00                  01 .literal
  ae 94 00 00         53 02 00 00 595
  b2 94 00 00                  ff .end (operand)
  b3 94 00 00                  ff .end (operand)
  b4 94 00 00                     "/"

              2f 00 
  b6 94 00 00               01 4e .exec VcTextNum
  b8 94 00 00                  01 .literal
  b9 94 00 00         13 01 00 00 275
  bd 94 00 00                  ff .end (operand)
  be 94 00 00               03 00 .var1 FLAGS
  c0 94 00 00                  01 .literal
  c1 94 00 00         53 02 00 00 595
  c5 94 00 00                  ff .end (operand)
  c6 94 00 00                  ff .end (operand)
  c7 94 00 00               03 0a .var1 MAXMP
  c9 94 00 00                  01 .literal
  ca 94 00 00         06 00 00 00 6
  ce 94 00 00                  ff .end (operand)
  cf 94 00 00                  ff .end (operand)
if347
::d0 94 00 00               05 01 .if [terms=1]
  d2 94 00 00         b1 95 00 00 .else
  d6 94 00 00               03 02 .var1 CHAR
  d8 94 00 00                  01 .literal
  d9 94 00 00         07 00 00 00 7
  dd 94 00 00                  ff .end (operand)
  de 94 00 00                  ff .end (operand)
  e0 94 00 00                  01 .if-sign-nonzero
  e0 94 00 00               03 00 .var1 FLAGS
  e2 94 00 00                  01 .literal
  e3 94 00 00         53 02 00 00 595
  e7 94 00 00                  ff .end (operand)
  e8 94 00 00                  04 .incset
  e9 94 00 00                  01 .literal
  ea 94 00 00         0a 00 00 00 10
  ee 94 00 00                  ff .end (operand)
  ef 94 00 00               01 3b .exec VcText
  f1 94 00 00                  01 .literal
  f2 94 00 00         f5 00 00 00 245
  f6 94 00 00                  ff .end (operand)
  f7 94 00 00               03 00 .var1 FLAGS
  f9 94 00 00                  01 .literal
  fa 94 00 00         53 02 00 00 595
  fe 94 00 00                  ff .end (operand)
  ff 94 00 00                  ff .end (operand)
  00 95 00 00                     "Bull"

              42 75 6c 6c 00 
  05 95 00 00               03 00 .var1 FLAGS
  07 95 00 00                  01 .literal
  08 95 00 00         53 02 00 00 595
  0c 95 00 00                  ff .end (operand)
  0d 95 00 00                  04 .incset
  0e 95 00 00                  01 .literal
  0f 95 00 00         0a 00 00 00 10
  13 95 00 00                  ff .end (operand)
  14 95 00 00               01 4e .exec VcTextNum
  16 95 00 00                  01 .literal
  17 95 00 00         f5 00 00 00 245
  1b 95 00 00                  ff .end (operand)
  1c 95 00 00               03 00 .var1 FLAGS
  1e 95 00 00                  01 .literal
  1f 95 00 00         53 02 00 00 595
  23 95 00 00                  ff .end (operand)
  24 95 00 00                  ff .end (operand)
  25 95 00 00               03 07 .var1 CURHP
  27 95 00 00                  01 .literal
  28 95 00 00         07 00 00 00 7
  2c 95 00 00                  ff .end (operand)
  2d 95 00 00                  ff .end (operand)
  2e 95 00 00               01 3b .exec VcText
  30 95 00 00                  01 .literal
  31 95 00 00         09 01 00 00 265
  35 95 00 00                  ff .end (operand)
  36 95 00 00               03 00 .var1 FLAGS
  38 95 00 00                  01 .literal
  39 95 00 00         53 02 00 00 595
  3d 95 00 00                  ff .end (operand)
  3e 95 00 00                  ff .end (operand)
  3f 95 00 00                     "/"

              2f 00 
  41 95 00 00               01 4e .exec VcTextNum
  43 95 00 00                  01 .literal
  44 95 00 00         13 01 00 00 275
  48 95 00 00                  ff .end (operand)
  49 95 00 00               03 00 .var1 FLAGS
  4b 95 00 00                  01 .literal
  4c 95 00 00         53 02 00 00 595
  50 95 00 00                  ff .end (operand)
  51 95 00 00                  ff .end (operand)
  52 95 00 00               03 08 .var1 MAXHP
  54 95 00 00                  01 .literal
  55 95 00 00         07 00 00 00 7
  59 95 00 00                  ff .end (operand)
  5a 95 00 00                  ff .end (operand)
  5b 95 00 00               03 00 .var1 FLAGS
  5d 95 00 00                  01 .literal
  5e 95 00 00         53 02 00 00 595
  62 95 00 00                  ff .end (operand)
  63 95 00 00                  04 .incset
  64 95 00 00                  01 .literal
  65 95 00 00         0a 00 00 00 10
  69 95 00 00                  ff .end (operand)
  6a 95 00 00               01 4e .exec VcTextNum
  6c 95 00 00                  01 .literal
  6d 95 00 00         f5 00 00 00 245
  71 95 00 00                  ff .end (operand)
  72 95 00 00               03 00 .var1 FLAGS
  74 95 00 00                  01 .literal
  75 95 00 00         53 02 00 00 595
  79 95 00 00                  ff .end (operand)
  7a 95 00 00                  ff .end (operand)
  7b 95 00 00               03 09 .var1 CURMP
  7d 95 00 00                  01 .literal
  7e 95 00 00         07 00 00 00 7
  82 95 00 00                  ff .end (operand)
  83 95 00 00                  ff .end (operand)
  84 95 00 00               01 3b .exec VcText
  86 95 00 00                  01 .literal
  87 95 00 00         09 01 00 00 265
  8b 95 00 00                  ff .end (operand)
  8c 95 00 00               03 00 .var1 FLAGS
  8e 95 00 00                  01 .literal
  8f 95 00 00         53 02 00 00 595
  93 95 00 00                  ff .end (operand)
  94 95 00 00                  ff .end (operand)
  95 95 00 00                     "/"

              2f 00 
  97 95 00 00               01 4e .exec VcTextNum
  99 95 00 00                  01 .literal
  9a 95 00 00         13 01 00 00 275
  9e 95 00 00                  ff .end (operand)
  9f 95 00 00               03 00 .var1 FLAGS
  a1 95 00 00                  01 .literal
  a2 95 00 00         53 02 00 00 595
  a6 95 00 00                  ff .end (operand)
  a7 95 00 00                  ff .end (operand)
  a8 95 00 00               03 0a .var1 MAXMP
  aa 95 00 00                  01 .literal
  ab 95 00 00         07 00 00 00 7
  af 95 00 00                  ff .end (operand)
  b0 95 00 00                  ff .end (operand)
if348
::b1 95 00 00               05 01 .if [terms=1]
  b3 95 00 00         93 96 00 00 .else
  b7 95 00 00               03 02 .var1 CHAR
  b9 95 00 00                  01 .literal
  ba 95 00 00         08 00 00 00 8
  be 95 00 00                  ff .end (operand)
  bf 95 00 00                  ff .end (operand)
  c1 95 00 00                  01 .if-sign-nonzero
  c1 95 00 00               03 00 .var1 FLAGS
  c3 95 00 00                  01 .literal
  c4 95 00 00         53 02 00 00 595
  c8 95 00 00                  ff .end (operand)
  c9 95 00 00                  04 .incset
  ca 95 00 00                  01 .literal
  cb 95 00 00         0a 00 00 00 10
  cf 95 00 00                  ff .end (operand)
  d0 95 00 00               01 3b .exec VcText
  d2 95 00 00                  01 .literal
  d3 95 00 00         f5 00 00 00 245
  d7 95 00 00                  ff .end (operand)
  d8 95 00 00               03 00 .var1 FLAGS
  da 95 00 00                  01 .literal
  db 95 00 00         53 02 00 00 595
  df 95 00 00                  ff .end (operand)
  e0 95 00 00                  ff .end (operand)
  e1 95 00 00                     "Lumin"

              4c 75 6d 69 6e 00 
  e7 95 00 00               03 00 .var1 FLAGS
  e9 95 00 00                  01 .literal
  ea 95 00 00         53 02 00 00 595
  ee 95 00 00                  ff .end (operand)
  ef 95 00 00                  04 .incset
  f0 95 00 00                  01 .literal
  f1 95 00 00         0a 00 00 00 10
  f5 95 00 00                  ff .end (operand)
  f6 95 00 00               01 4e .exec VcTextNum
  f8 95 00 00                  01 .literal
  f9 95 00 00         f5 00 00 00 245
  fd 95 00 00                  ff .end (operand)
  fe 95 00 00               03 00 .var1 FLAGS
  00 96 00 00                  01 .literal
  01 96 00 00         53 02 00 00 595
  05 96 00 00                  ff .end (operand)
  06 96 00 00                  ff .end (operand)
  07 96 00 00               03 07 .var1 CURHP
  09 96 00 00                  01 .literal
  0a 96 00 00         08 00 00 00 8
  0e 96 00 00                  ff .end (operand)
  0f 96 00 00                  ff .end (operand)
  10 96 00 00               01 3b .exec VcText
  12 96 00 00                  01 .literal
  13 96 00 00         09 01 00 00 265
  17 96 00 00                  ff .end (operand)
  18 96 00 00               03 00 .var1 FLAGS
  1a 96 00 00                  01 .literal
  1b 96 00 00         53 02 00 00 595
  1f 96 00 00                  ff .end (operand)
  20 96 00 00                  ff .end (operand)
  21 96 00 00                     "/"

              2f 00 
  23 96 00 00               01 4e .exec VcTextNum
  25 96 00 00                  01 .literal
  26 96 00 00         13 01 00 00 275
  2a 96 00 00                  ff .end (operand)
  2b 96 00 00               03 00 .var1 FLAGS
  2d 96 00 00                  01 .literal
  2e 96 00 00         53 02 00 00 595
  32 96 00 00                  ff .end (operand)
  33 96 00 00                  ff .end (operand)
  34 96 00 00               03 08 .var1 MAXHP
  36 96 00 00                  01 .literal
  37 96 00 00         08 00 00 00 8
  3b 96 00 00                  ff .end (operand)
  3c 96 00 00                  ff .end (operand)
  3d 96 00 00               03 00 .var1 FLAGS
  3f 96 00 00                  01 .literal
  40 96 00 00         53 02 00 00 595
  44 96 00 00                  ff .end (operand)
  45 96 00 00                  04 .incset
  46 96 00 00                  01 .literal
  47 96 00 00         0a 00 00 00 10
  4b 96 00 00                  ff .end (operand)
  4c 96 00 00               01 4e .exec VcTextNum
  4e 96 00 00                  01 .literal
  4f 96 00 00         f5 00 00 00 245
  53 96 00 00                  ff .end (operand)
  54 96 00 00               03 00 .var1 FLAGS
  56 96 00 00                  01 .literal
  57 96 00 00         53 02 00 00 595
  5b 96 00 00                  ff .end (operand)
  5c 96 00 00                  ff .end (operand)
  5d 96 00 00               03 09 .var1 CURMP
  5f 96 00 00                  01 .literal
  60 96 00 00         08 00 00 00 8
  64 96 00 00                  ff .end (operand)
  65 96 00 00                  ff .end (operand)
  66 96 00 00               01 3b .exec VcText
  68 96 00 00                  01 .literal
  69 96 00 00         09 01 00 00 265
  6d 96 00 00                  ff .end (operand)
  6e 96 00 00               03 00 .var1 FLAGS
  70 96 00 00                  01 .literal
  71 96 00 00         53 02 00 00 595
  75 96 00 00                  ff .end (operand)
  76 96 00 00                  ff .end (operand)
  77 96 00 00                     "/"

              2f 00 
  79 96 00 00               01 4e .exec VcTextNum
  7b 96 00 00                  01 .literal
  7c 96 00 00         13 01 00 00 275
  80 96 00 00                  ff .end (operand)
  81 96 00 00               03 00 .var1 FLAGS
  83 96 00 00                  01 .literal
  84 96 00 00         53 02 00 00 595
  88 96 00 00                  ff .end (operand)
  89 96 00 00                  ff .end (operand)
  8a 96 00 00               03 0a .var1 MAXMP
  8c 96 00 00                  01 .literal
  8d 96 00 00         08 00 00 00 8
  91 96 00 00                  ff .end (operand)
  92 96 00 00                  ff .end (operand)
::93 96 00 00               01 3b .exec VcText
  95 96 00 00                  01 .literal
  96 96 00 00         f5 00 00 00 245
  9a 96 00 00                  ff .end (operand)
  9b 96 00 00                  01 .literal
  9c 96 00 00         ad 00 00 00 173
  a0 96 00 00                  ff .end (operand)
  a1 96 00 00                     "SP"

              53 50 00 
  a4 96 00 00               01 4e .exec VcTextNum
  a6 96 00 00                  01 .literal
  a7 96 00 00         f5 00 00 00 245
  ab 96 00 00                  ff .end (operand)
  ac 96 00 00                  01 .literal
  ad 96 00 00         b7 00 00 00 183
  b1 96 00 00                  ff .end (operand)
  b2 96 00 00               03 00 .var1 FLAGS
  b4 96 00 00                  01 .literal
  b5 96 00 00         bf 02 00 00 703
  b9 96 00 00                  ff .end (operand)
  ba 96 00 00                  ff .end (operand)
  bb 96 00 00               01 20 .exec Redraw
  bd 96 00 00                  ff .end (block)

.event 19
* be 96 00 00               01 5c .exec TextMenu
  c0 96 00 00                  01 .literal
  c1 96 00 00         04 00 00 00 4
  c5 96 00 00                  ff .end (operand)
  c6 96 00 00                  01 .literal
  c7 96 00 00         04 00 00 00 4
  cb 96 00 00                  ff .end (operand)
  cc 96 00 00                  01 .literal
  cd 96 00 00         70 00 00 00 112
  d1 96 00 00                  ff .end (operand)
  d2 96 00 00                  01 .literal
  d3 96 00 00         01 00 00 00 1
  d7 96 00 00                  ff .end (operand)
  d9 96 00 00                     "Fight"

              46 69 67 68 74 00 
  df 96 00 00                     "Run"

              52 75 6e 00 
if349
 :e3 96 00 00               05 02 .if [terms=2]
  e5 96 00 00         31 97 00 00 .else
  e9 96 00 00               03 00 .var1 FLAGS
  eb 96 00 00                  01 .literal
  ec 96 00 00         fb 00 00 00 251
  f0 96 00 00                  ff .end (operand)
  f1 96 00 00                  ff .end (operand)
  f3 96 00 00                  02 .if-sign-nonzero
  f3 96 00 00                  01 .literal
  f4 96 00 00         01 00 00 00 1
  f8 96 00 00                  ff .end (operand)
  f9 96 00 00               03 00 .var1 FLAGS
  fb 96 00 00                  01 .literal
  fc 96 00 00         70 00 00 00 112
  00 97 00 00                  ff .end (operand)
  01 97 00 00                  ff .end (operand)
  03 97 00 00                  02 .if-sign-nonzero
  03 97 00 00                  01 .literal
  04 97 00 00         02 00 00 00 2
  08 97 00 00                  ff .end (operand)
  09 97 00 00               01 21 .exec SText
  0b 97 00 00                  01 .literal
  0c 97 00 00         00 00 00 00 0
  10 97 00 00                  ff .end (operand)
  11 97 00 00                     "Can't run from Boss Battles!"

              43 61 6e 27 74 20 72 75 
              6e 20 66 72 6f 6d 20 42 
              6f 73 73 20 42 61 74 74 
              6c 65 73 21 00 
  2e 97 00 00                     ""

              00 
  2f 97 00 00                     ""

              00 
  30 97 00 00                  ff .end (return)
if350
::31 97 00 00               05 02 .if [terms=2]
  33 97 00 00         17 9a 00 00 .else
  37 97 00 00               03 00 .var1 FLAGS
  39 97 00 00                  01 .literal
  3a 97 00 00         fb 00 00 00 251
  3e 97 00 00                  ff .end (operand)
  3f 97 00 00                  ff .end (operand)
  41 97 00 00                  03 .if-sign-nonzero
  41 97 00 00                  01 .literal
  42 97 00 00         01 00 00 00 1
  46 97 00 00                  ff .end (operand)
  47 97 00 00               03 00 .var1 FLAGS
  49 97 00 00                  01 .literal
  4a 97 00 00         70 00 00 00 112
  4e 97 00 00                  ff .end (operand)
  4f 97 00 00                  ff .end (operand)
  51 97 00 00                  02 .if-sign-nonzero
  51 97 00 00                  01 .literal
  52 97 00 00         02 00 00 00 2
  56 97 00 00                  ff .end (operand)
  57 97 00 00               01 12 .exec Banner
  59 97 00 00                     "You ran!"

              59 6f 75 20 72 61 6e 21 
              00 
  62 97 00 00                  01 .literal
  63 97 00 00         01 00 00 00 1
  67 97 00 00                  ff .end (operand)
  68 97 00 00               01 39 .exec VcClear
  6a 97 00 00               02 2f .var0 LAYERVC
  6c 97 00 00                  01 .set
  6d 97 00 00                  01 .literal
  6e 97 00 00         00 00 00 00 0
  72 97 00 00                  ff .end (operand)
  73 97 00 00               03 00 .var1 FLAGS
  75 97 00 00                  01 .literal
  76 97 00 00         20 03 00 00 800
  7a 97 00 00                  ff .end (operand)
  7b 97 00 00                  01 .set
  7c 97 00 00                  01 .literal
  7d 97 00 00         00 00 00 00 0
  81 97 00 00                  ff .end (operand)
  82 97 00 00               03 00 .var1 FLAGS
  84 97 00 00                  01 .literal
  85 97 00 00         53 03 00 00 851
  89 97 00 00                  ff .end (operand)
  8a 97 00 00                  01 .set
  8b 97 00 00                  01 .literal
  8c 97 00 00         00 00 00 00 0
  90 97 00 00                  ff .end (operand)
  91 97 00 00               03 00 .var1 FLAGS
  93 97 00 00                  01 .literal
  94 97 00 00         54 03 00 00 852
  98 97 00 00                  ff .end (operand)
  99 97 00 00                  01 .set
  9a 97 00 00                  01 .literal
  9b 97 00 00         00 00 00 00 0
  9f 97 00 00                  ff .end (operand)
  a0 97 00 00               03 00 .var1 FLAGS
  a2 97 00 00                  01 .literal
  a3 97 00 00         55 03 00 00 853
  a7 97 00 00                  ff .end (operand)
  a8 97 00 00                  01 .set
  a9 97 00 00                  01 .literal
  aa 97 00 00         00 00 00 00 0
  ae 97 00 00                  ff .end (operand)
  af 97 00 00               03 00 .var1 FLAGS
  b1 97 00 00                  01 .literal
  b2 97 00 00         56 03 00 00 854
  b6 97 00 00                  ff .end (operand)
  b7 97 00 00                  01 .set
  b8 97 00 00                  01 .literal
  b9 97 00 00         00 00 00 00 0
  bd 97 00 00                  ff .end (operand)
  be 97 00 00               03 00 .var1 FLAGS
  c0 97 00 00                  01 .literal
  c1 97 00 00         57 03 00 00 855
  c5 97 00 00                  ff .end (operand)
  c6 97 00 00                  01 .set
  c7 97 00 00                  01 .literal
  c8 97 00 00         00 00 00 00 0
  cc 97 00 00                  ff .end (operand)
  cd 97 00 00               03 00 .var1 FLAGS
  cf 97 00 00                  01 .literal
  d0 97 00 00         58 03 00 00 856
  d4 97 00 00                  ff .end (operand)
  d5 97 00 00                  01 .set
  d6 97 00 00                  01 .literal
  d7 97 00 00         00 00 00 00 0
  db 97 00 00                  ff .end (operand)
  dc 97 00 00               03 00 .var1 FLAGS
  de 97 00 00                  01 .literal
  df 97 00 00         59 03 00 00 857
  e3 97 00 00                  ff .end (operand)
  e4 97 00 00                  01 .set
  e5 97 00 00                  01 .literal
  e6 97 00 00         00 00 00 00 0
  ea 97 00 00                  ff .end (operand)
  eb 97 00 00               03 00 .var1 FLAGS
  ed 97 00 00                  01 .literal
  ee 97 00 00         5a 03 00 00 858
  f2 97 00 00                  ff .end (operand)
  f3 97 00 00                  01 .set
  f4 97 00 00                  01 .literal
  f5 97 00 00         00 00 00 00 0
  f9 97 00 00                  ff .end (operand)
  fa 97 00 00               03 00 .var1 FLAGS
  fc 97 00 00                  01 .literal
  fd 97 00 00         5b 03 00 00 859
  01 98 00 00                  ff .end (operand)
  02 98 00 00                  01 .set
  03 98 00 00                  01 .literal
  04 98 00 00         00 00 00 00 0
  08 98 00 00                  ff .end (operand)
  09 98 00 00               03 00 .var1 FLAGS
  0b 98 00 00                  01 .literal
  0c 98 00 00         5c 03 00 00 860
  10 98 00 00                  ff .end (operand)
  11 98 00 00                  01 .set
  12 98 00 00                  01 .literal
  13 98 00 00         00 00 00 00 0
  17 98 00 00                  ff .end (operand)
  18 98 00 00               01 24 .exec Wait
  1a 98 00 00                  01 .literal
  1b 98 00 00         64 00 00 00 100
  1f 98 00 00                  ff .end (operand)
  20 98 00 00               02 1f .var0 DRAWPARTY
  22 98 00 00                  01 .set
  23 98 00 00                  01 .literal
  24 98 00 00         01 00 00 00 1
  28 98 00 00                  ff .end (operand)
  29 98 00 00               03 00 .var1 FLAGS
  2b 98 00 00                  01 .literal
  2c 98 00 00         be 00 00 00 190
  30 98 00 00                  ff .end (operand)
  31 98 00 00                  01 .set
  32 98 00 00                  01 .literal
  33 98 00 00         01 00 00 00 1
  37 98 00 00                  ff .end (operand)
if351
 :38 98 00 00               05 01 .if [terms=1]
  3a 98 00 00         73 98 00 00 .else
  3e 98 00 00               03 00 .var1 FLAGS
  40 98 00 00                  01 .literal
  41 98 00 00         21 03 00 00 801
  45 98 00 00                  ff .end (operand)
  46 98 00 00                  ff .end (operand)
  48 98 00 00                  02 .if-sign-nonzero
  48 98 00 00                  01 .literal
  49 98 00 00         01 00 00 00 1
  4d 98 00 00                  ff .end (operand)
  4e 98 00 00               01 01 .exec MapSwitch
  50 98 00 00                     "damfor.map"

              64 61 6d 66 6f 72 2e 6d 
              61 70 00 
  5b 98 00 00               03 00 .var1 FLAGS
  5d 98 00 00                  01 .literal
  5e 98 00 00         6d 00 00 00 109
  62 98 00 00                  ff .end (operand)
  63 98 00 00                  ff .end (operand)
  64 98 00 00               03 00 .var1 FLAGS
  66 98 00 00                  01 .literal
  67 98 00 00         6e 00 00 00 110
  6b 98 00 00                  ff .end (operand)
  6c 98 00 00                  ff .end (operand)
  6d 98 00 00                  01 .literal
  6e 98 00 00         00 00 00 00 0
  72 98 00 00                  ff .end (operand)
if352
 :73 98 00 00               05 01 .if [terms=1]
  75 98 00 00         b0 98 00 00 .else
  79 98 00 00               03 00 .var1 FLAGS
  7b 98 00 00                  01 .literal
  7c 98 00 00         21 03 00 00 801
  80 98 00 00                  ff .end (operand)
  81 98 00 00                  ff .end (operand)
  83 98 00 00                  02 .if-sign-nonzero
  83 98 00 00                  01 .literal
  84 98 00 00         02 00 00 00 2
  88 98 00 00                  ff .end (operand)
  89 98 00 00               01 01 .exec MapSwitch
  8b 98 00 00                     "packwood.map"

              70 61 63 6b 77 6f 6f 64 
              2e 6d 61 70 00 
  98 98 00 00               03 00 .var1 FLAGS
  9a 98 00 00                  01 .literal
  9b 98 00 00         6d 00 00 00 109
  9f 98 00 00                  ff .end (operand)
  a0 98 00 00                  ff .end (operand)
  a1 98 00 00               03 00 .var1 FLAGS
  a3 98 00 00                  01 .literal
  a4 98 00 00         6e 00 00 00 110
  a8 98 00 00                  ff .end (operand)
  a9 98 00 00                  ff .end (operand)
  aa 98 00 00                  01 .literal
  ab 98 00 00         00 00 00 00 0
  af 98 00 00                  ff .end (operand)
if353
 :b0 98 00 00               05 01 .if [terms=1]
  b2 98 00 00         ec 98 00 00 .else
  b6 98 00 00               03 00 .var1 FLAGS
  b8 98 00 00                  01 .literal
  b9 98 00 00         21 03 00 00 801
  bd 98 00 00                  ff .end (operand)
  be 98 00 00                  ff .end (operand)
  c0 98 00 00                  02 .if-sign-nonzero
  c0 98 00 00                  01 .literal
  c1 98 00 00         03 00 00 00 3
  c5 98 00 00                  ff .end (operand)
  c6 98 00 00               01 01 .exec MapSwitch
  c8 98 00 00                     "orchard.map"

              6f 72 63 68 61 72 64 2e 
              6d 61 70 00 
  d4 98 00 00               03 00 .var1 FLAGS
  d6 98 00 00                  01 .literal
  d7 98 00 00         6d 00 00 00 109
  db 98 00 00                  ff .end (operand)
  dc 98 00 00                  ff .end (operand)
  dd 98 00 00               03 00 .var1 FLAGS
  df 98 00 00                  01 .literal
  e0 98 00 00         6e 00 00 00 110
  e4 98 00 00                  ff .end (operand)
  e5 98 00 00                  ff .end (operand)
  e6 98 00 00                  01 .literal
  e7 98 00 00         00 00 00 00 0
  eb 98 00 00                  ff .end (operand)
if354
 :ec 98 00 00               05 01 .if [terms=1]
  ee 98 00 00         29 99 00 00 .else
  f2 98 00 00               03 00 .var1 FLAGS
  f4 98 00 00                  01 .literal
  f5 98 00 00         21 03 00 00 801
  f9 98 00 00                  ff .end (operand)
  fa 98 00 00                  ff .end (operand)
  fc 98 00 00                  02 .if-sign-nonzero
  fc 98 00 00                  01 .literal
  fd 98 00 00         04 00 00 00 4
  01 99 00 00                  ff .end (operand)
  02 99 00 00               01 01 .exec MapSwitch
  04 99 00 00                     "untrfarm.map"

              75 6e 74 72 66 61 72 6d 
              2e 6d 61 70 00 
  11 99 00 00               03 00 .var1 FLAGS
  13 99 00 00                  01 .literal
  14 99 00 00         6d 00 00 00 109
  18 99 00 00                  ff .end (operand)
  19 99 00 00                  ff .end (operand)
  1a 99 00 00               03 00 .var1 FLAGS
  1c 99 00 00                  01 .literal
  1d 99 00 00         6e 00 00 00 110
  21 99 00 00                  ff .end (operand)
  22 99 00 00                  ff .end (operand)
  23 99 00 00                  01 .literal
  24 99 00 00         00 00 00 00 0
  28 99 00 00                  ff .end (operand)
if355
 :29 99 00 00               05 01 .if [terms=1]
  2b 99 00 00         64 99 00 00 .else
  2f 99 00 00               03 00 .var1 FLAGS
  31 99 00 00                  01 .literal
  32 99 00 00         21 03 00 00 801
  36 99 00 00                  ff .end (operand)
  37 99 00 00                  ff .end (operand)
  39 99 00 00                  02 .if-sign-nonzero
  39 99 00 00                  01 .literal
  3a 99 00 00         05 00 00 00 5
  3e 99 00 00                  ff .end (operand)
  3f 99 00 00               01 01 .exec MapSwitch
  41 99 00 00                     "mtalon.map"

              6d 74 61 6c 6f 6e 2e 6d 
              61 70 00 
  4c 99 00 00               03 00 .var1 FLAGS
  4e 99 00 00                  01 .literal
  4f 99 00 00         6d 00 00 00 109
  53 99 00 00                  ff .end (operand)
  54 99 00 00                  ff .end (operand)
  55 99 00 00               03 00 .var1 FLAGS
  57 99 00 00                  01 .literal
  58 99 00 00         6e 00 00 00 110
  5c 99 00 00                  ff .end (operand)
  5d 99 00 00                  ff .end (operand)
  5e 99 00 00                  01 .literal
  5f 99 00 00         00 00 00 00 0
  63 99 00 00                  ff .end (operand)
if356
 :64 99 00 00               05 01 .if [terms=1]
  66 99 00 00         9e 99 00 00 .else
  6a 99 00 00               03 00 .var1 FLAGS
  6c 99 00 00                  01 .literal
  6d 99 00 00         21 03 00 00 801
  71 99 00 00                  ff .end (operand)
  72 99 00 00                  ff .end (operand)
  74 99 00 00                  02 .if-sign-nonzero
  74 99 00 00                  01 .literal
  75 99 00 00         06 00 00 00 6
  79 99 00 00                  ff .end (operand)
  7a 99 00 00               01 01 .exec MapSwitch
  7c 99 00 00                     "catac.map"

              63 61 74 61 63 2e 6d 61 
              70 00 
  86 99 00 00               03 00 .var1 FLAGS
  88 99 00 00                  01 .literal
  89 99 00 00         6d 00 00 00 109
  8d 99 00 00                  ff .end (operand)
  8e 99 00 00                  ff .end (operand)
  8f 99 00 00               03 00 .var1 FLAGS
  91 99 00 00                  01 .literal
  92 99 00 00         6e 00 00 00 110
  96 99 00 00                  ff .end (operand)
  97 99 00 00                  ff .end (operand)
  98 99 00 00                  01 .literal
  99 99 00 00         00 00 00 00 0
  9d 99 00 00                  ff .end (operand)
if357
 :9e 99 00 00               05 01 .if [terms=1]
  a0 99 00 00         db 99 00 00 .else
  a4 99 00 00               03 00 .var1 FLAGS
  a6 99 00 00                  01 .literal
  a7 99 00 00         21 03 00 00 801
  ab 99 00 00                  ff .end (operand)
  ac 99 00 00                  ff .end (operand)
  ae 99 00 00                  02 .if-sign-nonzero
  ae 99 00 00                  01 .literal
  af 99 00 00         07 00 00 00 7
  b3 99 00 00                  ff .end (operand)
  b4 99 00 00               01 01 .exec MapSwitch
  b6 99 00 00                     "packtown.map"

              70 61 63 6b 74 6f 77 6e 
              2e 6d 61 70 00 
  c3 99 00 00               03 00 .var1 FLAGS
  c5 99 00 00                  01 .literal
  c6 99 00 00         6d 00 00 00 109
  ca 99 00 00                  ff .end (operand)
  cb 99 00 00                  ff .end (operand)
  cc 99 00 00               03 00 .var1 FLAGS
  ce 99 00 00                  01 .literal
  cf 99 00 00         6e 00 00 00 110
  d3 99 00 00                  ff .end (operand)
  d4 99 00 00                  ff .end (operand)
  d5 99 00 00                  01 .literal
  d6 99 00 00         00 00 00 00 0
  da 99 00 00                  ff .end (operand)
if358
 :db 99 00 00               05 01 .if [terms=1]
  dd 99 00 00         17 9a 00 00 .else
  e1 99 00 00               03 00 .var1 FLAGS
  e3 99 00 00                  01 .literal
  e4 99 00 00         21 03 00 00 801
  e8 99 00 00                  ff .end (operand)
  e9 99 00 00                  ff .end (operand)
  eb 99 00 00                  02 .if-sign-nonzero
  eb 99 00 00                  01 .literal
  ec 99 00 00         08 00 00 00 8
  f0 99 00 00                  ff .end (operand)
  f1 99 00 00               01 01 .exec MapSwitch
  f3 99 00 00                     "kreegah.map"

              6b 72 65 65 67 61 68 2e 
              6d 61 70 00 
  ff 99 00 00               03 00 .var1 FLAGS
  01 9a 00 00                  01 .literal
  02 9a 00 00         6d 00 00 00 109
  06 9a 00 00                  ff .end (operand)
  07 9a 00 00                  ff .end (operand)
  08 9a 00 00               03 00 .var1 FLAGS
  0a 9a 00 00                  01 .literal
  0b 9a 00 00         6e 00 00 00 110
  0f 9a 00 00                  ff .end (operand)
  10 9a 00 00                  ff .end (operand)
  11 9a 00 00                  01 .literal
  12 9a 00 00         00 00 00 00 0
  16 9a 00 00                  ff .end (operand)
 :17 9a 00 00                  ff .end (block)

.event 20
* 18 9a 00 00                  0a .switch
  19 9a 00 00               03 00 .var1 FLAGS
  1b 9a 00 00                  01 .literal
  1c 9a 00 00         75 02 00 00 629
  20 9a 00 00                  ff .end (operand)
  21 9a 00 00                  ff .end (operand)
  22 9a 00 00                  0b .case
  23 9a 00 00                  05 .group
  24 9a 00 00                  01 .literal
  25 9a 00 00         01 00 00 00 1
  29 9a 00 00                  ff .end (operand)
  2a 9a 00 00                  ff .end (operand)
  2b 9a 00 00         a9 9c 00 00 .case-end-address
  2f 9a 00 00                  0a .switch
  30 9a 00 00               03 00 .var1 FLAGS
  32 9a 00 00                  01 .literal
  33 9a 00 00         70 02 00 00 624
  37 9a 00 00                  ff .end (operand)
  38 9a 00 00                  ff .end (operand)
  39 9a 00 00                  0b .case
  3a 9a 00 00                  05 .group
  3b 9a 00 00                  01 .literal
  3c 9a 00 00         01 00 00 00 1
  40 9a 00 00                  ff .end (operand)
  41 9a 00 00                  ff .end (operand)
  42 9a 00 00         5e 9a 00 00 .case-end-address
  46 9a 00 00               01 4e .exec VcTextNum
  48 9a 00 00                  01 .literal
  49 9a 00 00         b0 00 00 00 176
  4d 9a 00 00                  ff .end (operand)
  4e 9a 00 00                  01 .literal
  4f 9a 00 00         70 00 00 00 112
  53 9a 00 00                  ff .end (operand)
  54 9a 00 00               03 00 .var1 FLAGS
  56 9a 00 00                  01 .literal
  57 9a 00 00         c6 02 00 00 710
  5b 9a 00 00                  ff .end (operand)
  5c 9a 00 00                  ff .end (operand)
  5d 9a 00 00                  ff .end (block)
 :5e 9a 00 00                  0b .case
  5f 9a 00 00                  05 .group
  60 9a 00 00                  01 .literal
  61 9a 00 00         02 00 00 00 2
  65 9a 00 00                  ff .end (operand)
  66 9a 00 00                  ff .end (operand)
  67 9a 00 00         83 9a 00 00 .case-end-address
  6b 9a 00 00               01 4e .exec VcTextNum
  6d 9a 00 00                  01 .literal
  6e 9a 00 00         d0 00 00 00 208
  72 9a 00 00                  ff .end (operand)
  73 9a 00 00                  01 .literal
  74 9a 00 00         80 00 00 00 128
  78 9a 00 00                  ff .end (operand)
  79 9a 00 00               03 00 .var1 FLAGS
  7b 9a 00 00                  01 .literal
  7c 9a 00 00         c6 02 00 00 710
  80 9a 00 00                  ff .end (operand)
  81 9a 00 00                  ff .end (operand)
  82 9a 00 00                  ff .end (block)
 :83 9a 00 00                  0b .case
  84 9a 00 00                  05 .group
  85 9a 00 00                  01 .literal
  86 9a 00 00         03 00 00 00 3
  8a 9a 00 00                  ff .end (operand)
  8b 9a 00 00                  ff .end (operand)
  8c 9a 00 00         a8 9a 00 00 .case-end-address
  90 9a 00 00               01 4e .exec VcTextNum
  92 9a 00 00                  01 .literal
  93 9a 00 00         b0 00 00 00 176
  97 9a 00 00                  ff .end (operand)
  98 9a 00 00                  01 .literal
  99 9a 00 00         90 00 00 00 144
  9d 9a 00 00                  ff .end (operand)
  9e 9a 00 00               03 00 .var1 FLAGS
  a0 9a 00 00                  01 .literal
  a1 9a 00 00         c6 02 00 00 710
  a5 9a 00 00                  ff .end (operand)
  a6 9a 00 00                  ff .end (operand)
  a7 9a 00 00                  ff .end (block)
 :a8 9a 00 00                  0b .case
  a9 9a 00 00                  05 .group
  aa 9a 00 00                  01 .literal
  ab 9a 00 00         04 00 00 00 4
  af 9a 00 00                  ff .end (operand)
  b0 9a 00 00                  ff .end (operand)
  b1 9a 00 00         cd 9a 00 00 .case-end-address
  b5 9a 00 00               01 4e .exec VcTextNum
  b7 9a 00 00                  01 .literal
  b8 9a 00 00         b0 00 00 00 176
  bc 9a 00 00                  ff .end (operand)
  bd 9a 00 00                  01 .literal
  be 9a 00 00         50 00 00 00 80
  c2 9a 00 00                  ff .end (operand)
  c3 9a 00 00               03 00 .var1 FLAGS
  c5 9a 00 00                  01 .literal
  c6 9a 00 00         c6 02 00 00 710
  ca 9a 00 00                  ff .end (operand)
  cb 9a 00 00                  ff .end (operand)
  cc 9a 00 00                  ff .end (block)
 :cd 9a 00 00                  0b .case
  ce 9a 00 00                  05 .group
  cf 9a 00 00                  01 .literal
  d0 9a 00 00         05 00 00 00 5
  d4 9a 00 00                  ff .end (operand)
  d5 9a 00 00                  ff .end (operand)
  d6 9a 00 00         f2 9a 00 00 .case-end-address
  da 9a 00 00               01 4e .exec VcTextNum
  dc 9a 00 00                  01 .literal
  dd 9a 00 00         d0 00 00 00 208
  e1 9a 00 00                  ff .end (operand)
  e2 9a 00 00                  01 .literal
  e3 9a 00 00         60 00 00 00 96
  e7 9a 00 00                  ff .end (operand)
  e8 9a 00 00               03 00 .var1 FLAGS
  ea 9a 00 00                  01 .literal
  eb 9a 00 00         c6 02 00 00 710
  ef 9a 00 00                  ff .end (operand)
  f0 9a 00 00                  ff .end (operand)
  f1 9a 00 00                  ff .end (block)
 :f2 9a 00 00                  0b .case
  f3 9a 00 00                  05 .group
  f4 9a 00 00                  01 .literal
  f5 9a 00 00         06 00 00 00 6
  f9 9a 00 00                  ff .end (operand)
  fa 9a 00 00                  ff .end (operand)
  fb 9a 00 00         17 9b 00 00 .case-end-address
  ff 9a 00 00               01 4e .exec VcTextNum
  01 9b 00 00                  01 .literal
  02 9b 00 00         e0 00 00 00 224
  06 9b 00 00                  ff .end (operand)
  07 9b 00 00                  01 .literal
  08 9b 00 00         70 00 00 00 112
  0c 9b 00 00                  ff .end (operand)
  0d 9b 00 00               03 00 .var1 FLAGS
  0f 9b 00 00                  01 .literal
  10 9b 00 00         c6 02 00 00 710
  14 9b 00 00                  ff .end (operand)
  15 9b 00 00                  ff .end (operand)
  16 9b 00 00                  ff .end (block)
 :17 9b 00 00                  0b .case
  18 9b 00 00                  05 .group
  19 9b 00 00                  01 .literal
  1a 9b 00 00         07 00 00 00 7
  1e 9b 00 00                  ff .end (operand)
  1f 9b 00 00                  ff .end (operand)
  20 9b 00 00         3c 9b 00 00 .case-end-address
  24 9b 00 00               01 4e .exec VcTextNum
  26 9b 00 00                  01 .literal
  27 9b 00 00         c0 00 00 00 192
  2b 9b 00 00                  ff .end (operand)
  2c 9b 00 00                  01 .literal
  2d 9b 00 00         a0 00 00 00 160
  31 9b 00 00                  ff .end (operand)
  32 9b 00 00               03 00 .var1 FLAGS
  34 9b 00 00                  01 .literal
  35 9b 00 00         c6 02 00 00 710
  39 9b 00 00                  ff .end (operand)
  3a 9b 00 00                  ff .end (operand)
  3b 9b 00 00                  ff .end (block)
 :3c 9b 00 00                  0b .case
  3d 9b 00 00                  05 .group
  3e 9b 00 00                  01 .literal
  3f 9b 00 00         08 00 00 00 8
  43 9b 00 00                  ff .end (operand)
  44 9b 00 00                  ff .end (operand)
  45 9b 00 00         61 9b 00 00 .case-end-address
  49 9b 00 00               01 4e .exec VcTextNum
  4b 9b 00 00                  01 .literal
  4c 9b 00 00         c0 00 00 00 192
  50 9b 00 00                  ff .end (operand)
  51 9b 00 00                  01 .literal
  52 9b 00 00         40 00 00 00 64
  56 9b 00 00                  ff .end (operand)
  57 9b 00 00               03 00 .var1 FLAGS
  59 9b 00 00                  01 .literal
  5a 9b 00 00         c6 02 00 00 710
  5e 9b 00 00                  ff .end (operand)
  5f 9b 00 00                  ff .end (operand)
  60 9b 00 00                  ff .end (block)
 :61 9b 00 00                  0b .case
  62 9b 00 00                  05 .group
  63 9b 00 00                  01 .literal
  64 9b 00 00         09 00 00 00 9
  68 9b 00 00                  ff .end (operand)
  69 9b 00 00                  ff .end (operand)
  6a 9b 00 00         a7 9c 00 00 .case-end-address
if359
 :6e 9b 00 00               05 01 .if [terms=1]
  70 9b 00 00         95 9b 00 00 .else
  74 9b 00 00               03 02 .var1 CHAR
  76 9b 00 00                  01 .literal
  77 9b 00 00         01 00 00 00 1
  7b 9b 00 00                  ff .end (operand)
  7c 9b 00 00                  ff .end (operand)
  7e 9b 00 00                  01 .if-sign-nonzero
  7e 9b 00 00               01 4e .exec VcTextNum
  80 9b 00 00                  01 .literal
  81 9b 00 00         b0 00 00 00 176
  85 9b 00 00                  ff .end (operand)
  86 9b 00 00                  01 .literal
  87 9b 00 00         70 00 00 00 112
  8b 9b 00 00                  ff .end (operand)
  8c 9b 00 00               03 00 .var1 FLAGS
  8e 9b 00 00                  01 .literal
  8f 9b 00 00         c6 02 00 00 710
  93 9b 00 00                  ff .end (operand)
  94 9b 00 00                  ff .end (operand)
if360
::95 9b 00 00               05 01 .if [terms=1]
  97 9b 00 00         bc 9b 00 00 .else
  9b 9b 00 00               03 02 .var1 CHAR
  9d 9b 00 00                  01 .literal
  9e 9b 00 00         02 00 00 00 2
  a2 9b 00 00                  ff .end (operand)
  a3 9b 00 00                  ff .end (operand)
  a5 9b 00 00                  01 .if-sign-nonzero
  a5 9b 00 00               01 4e .exec VcTextNum
  a7 9b 00 00                  01 .literal
  a8 9b 00 00         d0 00 00 00 208
  ac 9b 00 00                  ff .end (operand)
  ad 9b 00 00                  01 .literal
  ae 9b 00 00         80 00 00 00 128
  b2 9b 00 00                  ff .end (operand)
  b3 9b 00 00               03 00 .var1 FLAGS
  b5 9b 00 00                  01 .literal
  b6 9b 00 00         c6 02 00 00 710
  ba 9b 00 00                  ff .end (operand)
  bb 9b 00 00                  ff .end (operand)
if361
::bc 9b 00 00               05 01 .if [terms=1]
  be 9b 00 00         e3 9b 00 00 .else
  c2 9b 00 00               03 02 .var1 CHAR
  c4 9b 00 00                  01 .literal
  c5 9b 00 00         03 00 00 00 3
  c9 9b 00 00                  ff .end (operand)
  ca 9b 00 00                  ff .end (operand)
  cc 9b 00 00                  01 .if-sign-nonzero
  cc 9b 00 00               01 4e .exec VcTextNum
  ce 9b 00 00                  01 .literal
  cf 9b 00 00         b0 00 00 00 176
  d3 9b 00 00                  ff .end (operand)
  d4 9b 00 00                  01 .literal
  d5 9b 00 00         90 00 00 00 144
  d9 9b 00 00                  ff .end (operand)
  da 9b 00 00               03 00 .var1 FLAGS
  dc 9b 00 00                  01 .literal
  dd 9b 00 00         c6 02 00 00 710
  e1 9b 00 00                  ff .end (operand)
  e2 9b 00 00                  ff .end (operand)
if362
::e3 9b 00 00               05 01 .if [terms=1]
  e5 9b 00 00         0a 9c 00 00 .else
  e9 9b 00 00               03 02 .var1 CHAR
  eb 9b 00 00                  01 .literal
  ec 9b 00 00         04 00 00 00 4
  f0 9b 00 00                  ff .end (operand)
  f1 9b 00 00                  ff .end (operand)
  f3 9b 00 00                  01 .if-sign-nonzero
  f3 9b 00 00               01 4e .exec VcTextNum
  f5 9b 00 00                  01 .literal
  f6 9b 00 00         b0 00 00 00 176
  fa 9b 00 00                  ff .end (operand)
  fb 9b 00 00                  01 .literal
  fc 9b 00 00         50 00 00 00 80
  00 9c 00 00                  ff .end (operand)
  01 9c 00 00               03 00 .var1 FLAGS
  03 9c 00 00                  01 .literal
  04 9c 00 00         c6 02 00 00 710
  08 9c 00 00                  ff .end (operand)
  09 9c 00 00                  ff .end (operand)
if363
::0a 9c 00 00               05 01 .if [terms=1]
  0c 9c 00 00         31 9c 00 00 .else
  10 9c 00 00               03 02 .var1 CHAR
  12 9c 00 00                  01 .literal
  13 9c 00 00         05 00 00 00 5
  17 9c 00 00                  ff .end (operand)
  18 9c 00 00                  ff .end (operand)
  1a 9c 00 00                  01 .if-sign-nonzero
  1a 9c 00 00               01 4e .exec VcTextNum
  1c 9c 00 00                  01 .literal
  1d 9c 00 00         d0 00 00 00 208
  21 9c 00 00                  ff .end (operand)
  22 9c 00 00                  01 .literal
  23 9c 00 00         60 00 00 00 96
  27 9c 00 00                  ff .end (operand)
  28 9c 00 00               03 00 .var1 FLAGS
  2a 9c 00 00                  01 .literal
  2b 9c 00 00         c6 02 00 00 710
  2f 9c 00 00                  ff .end (operand)
  30 9c 00 00                  ff .end (operand)
if364
::31 9c 00 00               05 01 .if [terms=1]
  33 9c 00 00         58 9c 00 00 .else
  37 9c 00 00               03 02 .var1 CHAR
  39 9c 00 00                  01 .literal
  3a 9c 00 00         06 00 00 00 6
  3e 9c 00 00                  ff .end (operand)
  3f 9c 00 00                  ff .end (operand)
  41 9c 00 00                  01 .if-sign-nonzero
  41 9c 00 00               01 4e .exec VcTextNum
  43 9c 00 00                  01 .literal
  44 9c 00 00         e0 00 00 00 224
  48 9c 00 00                  ff .end (operand)
  49 9c 00 00                  01 .literal
  4a 9c 00 00         70 00 00 00 112
  4e 9c 00 00                  ff .end (operand)
  4f 9c 00 00               03 00 .var1 FLAGS
  51 9c 00 00                  01 .literal
  52 9c 00 00         c6 02 00 00 710
  56 9c 00 00                  ff .end (operand)
  57 9c 00 00                  ff .end (operand)
if365
::58 9c 00 00               05 01 .if [terms=1]
  5a 9c 00 00         7f 9c 00 00 .else
  5e 9c 00 00               03 02 .var1 CHAR
  60 9c 00 00                  01 .literal
  61 9c 00 00         07 00 00 00 7
  65 9c 00 00                  ff .end (operand)
  66 9c 00 00                  ff .end (operand)
  68 9c 00 00                  01 .if-sign-nonzero
  68 9c 00 00               01 4e .exec VcTextNum
  6a 9c 00 00                  01 .literal
  6b 9c 00 00         c0 00 00 00 192
  6f 9c 00 00                  ff .end (operand)
  70 9c 00 00                  01 .literal
  71 9c 00 00         a0 00 00 00 160
  75 9c 00 00                  ff .end (operand)
  76 9c 00 00               03 00 .var1 FLAGS
  78 9c 00 00                  01 .literal
  79 9c 00 00         c6 02 00 00 710
  7d 9c 00 00                  ff .end (operand)
  7e 9c 00 00                  ff .end (operand)
if366
::7f 9c 00 00               05 01 .if [terms=1]
  81 9c 00 00         a6 9c 00 00 .else
  85 9c 00 00               03 02 .var1 CHAR
  87 9c 00 00                  01 .literal
  88 9c 00 00         08 00 00 00 8
  8c 9c 00 00                  ff .end (operand)
  8d 9c 00 00                  ff .end (operand)
  8f 9c 00 00                  01 .if-sign-nonzero
  8f 9c 00 00               01 4e .exec VcTextNum
  91 9c 00 00                  01 .literal
  92 9c 00 00         c0 00 00 00 192
  96 9c 00 00                  ff .end (operand)
  97 9c 00 00                  01 .literal
  98 9c 00 00         40 00 00 00 64
  9c 9c 00 00                  ff .end (operand)
  9d 9c 00 00               03 00 .var1 FLAGS
  9f 9c 00 00                  01 .literal
  a0 9c 00 00         c6 02 00 00 710
  a4 9c 00 00                  ff .end (operand)
  a5 9c 00 00                  ff .end (operand)
 :a6 9c 00 00                  ff .end (block)
 :a7 9c 00 00                  ff .end (switch)
  a8 9c 00 00                  ff .end (block)
 :a9 9c 00 00                  0b .case
  aa 9c 00 00                  05 .group
  ab 9c 00 00                  01 .literal
  ac 9c 00 00         02 00 00 00 2
  b0 9c 00 00                  ff .end (operand)
  b1 9c 00 00                  ff .end (operand)
  b2 9c 00 00         30 9f 00 00 .case-end-address
  b6 9c 00 00                  0a .switch
  b7 9c 00 00               03 00 .var1 FLAGS
  b9 9c 00 00                  01 .literal
  ba 9c 00 00         72 02 00 00 626
  be 9c 00 00                  ff .end (operand)
  bf 9c 00 00                  ff .end (operand)
  c0 9c 00 00                  0b .case
  c1 9c 00 00                  05 .group
  c2 9c 00 00                  01 .literal
  c3 9c 00 00         01 00 00 00 1
  c7 9c 00 00                  ff .end (operand)
  c8 9c 00 00                  ff .end (operand)
  c9 9c 00 00         e5 9c 00 00 .case-end-address
  cd 9c 00 00               01 4e .exec VcTextNum
  cf 9c 00 00                  01 .literal
  d0 9c 00 00         b0 00 00 00 176
  d4 9c 00 00                  ff .end (operand)
  d5 9c 00 00                  01 .literal
  d6 9c 00 00         70 00 00 00 112
  da 9c 00 00                  ff .end (operand)
  db 9c 00 00               03 00 .var1 FLAGS
  dd 9c 00 00                  01 .literal
  de 9c 00 00         c8 02 00 00 712
  e2 9c 00 00                  ff .end (operand)
  e3 9c 00 00                  ff .end (operand)
  e4 9c 00 00                  ff .end (block)
 :e5 9c 00 00                  0b .case
  e6 9c 00 00                  05 .group
  e7 9c 00 00                  01 .literal
  e8 9c 00 00         02 00 00 00 2
  ec 9c 00 00                  ff .end (operand)
  ed 9c 00 00                  ff .end (operand)
  ee 9c 00 00         0a 9d 00 00 .case-end-address
  f2 9c 00 00               01 4e .exec VcTextNum
  f4 9c 00 00                  01 .literal
  f5 9c 00 00         d0 00 00 00 208
  f9 9c 00 00                  ff .end (operand)
  fa 9c 00 00                  01 .literal
  fb 9c 00 00         80 00 00 00 128
  ff 9c 00 00                  ff .end (operand)
  00 9d 00 00               03 00 .var1 FLAGS
  02 9d 00 00                  01 .literal
  03 9d 00 00         c8 02 00 00 712
  07 9d 00 00                  ff .end (operand)
  08 9d 00 00                  ff .end (operand)
  09 9d 00 00                  ff .end (block)
 :0a 9d 00 00                  0b .case
  0b 9d 00 00                  05 .group
  0c 9d 00 00                  01 .literal
  0d 9d 00 00         03 00 00 00 3
  11 9d 00 00                  ff .end (operand)
  12 9d 00 00                  ff .end (operand)
  13 9d 00 00         2f 9d 00 00 .case-end-address
  17 9d 00 00               01 4e .exec VcTextNum
  19 9d 00 00                  01 .literal
  1a 9d 00 00         b0 00 00 00 176
  1e 9d 00 00                  ff .end (operand)
  1f 9d 00 00                  01 .literal
  20 9d 00 00         90 00 00 00 144
  24 9d 00 00                  ff .end (operand)
  25 9d 00 00               03 00 .var1 FLAGS
  27 9d 00 00                  01 .literal
  28 9d 00 00         c8 02 00 00 712
  2c 9d 00 00                  ff .end (operand)
  2d 9d 00 00                  ff .end (operand)
  2e 9d 00 00                  ff .end (block)
 :2f 9d 00 00                  0b .case
  30 9d 00 00                  05 .group
  31 9d 00 00                  01 .literal
  32 9d 00 00         04 00 00 00 4
  36 9d 00 00                  ff .end (operand)
  37 9d 00 00                  ff .end (operand)
  38 9d 00 00         54 9d 00 00 .case-end-address
  3c 9d 00 00               01 4e .exec VcTextNum
  3e 9d 00 00                  01 .literal
  3f 9d 00 00         b0 00 00 00 176
  43 9d 00 00                  ff .end (operand)
  44 9d 00 00                  01 .literal
  45 9d 00 00         50 00 00 00 80
  49 9d 00 00                  ff .end (operand)
  4a 9d 00 00               03 00 .var1 FLAGS
  4c 9d 00 00                  01 .literal
  4d 9d 00 00         c8 02 00 00 712
  51 9d 00 00                  ff .end (operand)
  52 9d 00 00                  ff .end (operand)
  53 9d 00 00                  ff .end (block)
 :54 9d 00 00                  0b .case
  55 9d 00 00                  05 .group
  56 9d 00 00                  01 .literal
  57 9d 00 00         05 00 00 00 5
  5b 9d 00 00                  ff .end (operand)
  5c 9d 00 00                  ff .end (operand)
  5d 9d 00 00         79 9d 00 00 .case-end-address
  61 9d 00 00               01 4e .exec VcTextNum
  63 9d 00 00                  01 .literal
  64 9d 00 00         d0 00 00 00 208
  68 9d 00 00                  ff .end (operand)
  69 9d 00 00                  01 .literal
  6a 9d 00 00         60 00 00 00 96
  6e 9d 00 00                  ff .end (operand)
  6f 9d 00 00               03 00 .var1 FLAGS
  71 9d 00 00                  01 .literal
  72 9d 00 00         c8 02 00 00 712
  76 9d 00 00                  ff .end (operand)
  77 9d 00 00                  ff .end (operand)
  78 9d 00 00                  ff .end (block)
 :79 9d 00 00                  0b .case
  7a 9d 00 00                  05 .group
  7b 9d 00 00                  01 .literal
  7c 9d 00 00         06 00 00 00 6
  80 9d 00 00                  ff .end (operand)
  81 9d 00 00                  ff .end (operand)
  82 9d 00 00         9e 9d 00 00 .case-end-address
  86 9d 00 00               01 4e .exec VcTextNum
  88 9d 00 00                  01 .literal
  89 9d 00 00         e0 00 00 00 224
  8d 9d 00 00                  ff .end (operand)
  8e 9d 00 00                  01 .literal
  8f 9d 00 00         70 00 00 00 112
  93 9d 00 00                  ff .end (operand)
  94 9d 00 00               03 00 .var1 FLAGS
  96 9d 00 00                  01 .literal
  97 9d 00 00         c8 02 00 00 712
  9b 9d 00 00                  ff .end (operand)
  9c 9d 00 00                  ff .end (operand)
  9d 9d 00 00                  ff .end (block)
 :9e 9d 00 00                  0b .case
  9f 9d 00 00                  05 .group
  a0 9d 00 00                  01 .literal
  a1 9d 00 00         07 00 00 00 7
  a5 9d 00 00                  ff .end (operand)
  a6 9d 00 00                  ff .end (operand)
  a7 9d 00 00         c3 9d 00 00 .case-end-address
  ab 9d 00 00               01 4e .exec VcTextNum
  ad 9d 00 00                  01 .literal
  ae 9d 00 00         c0 00 00 00 192
  b2 9d 00 00                  ff .end (operand)
  b3 9d 00 00                  01 .literal
  b4 9d 00 00         a0 00 00 00 160
  b8 9d 00 00                  ff .end (operand)
  b9 9d 00 00               03 00 .var1 FLAGS
  bb 9d 00 00                  01 .literal
  bc 9d 00 00         c8 02 00 00 712
  c0 9d 00 00                  ff .end (operand)
  c1 9d 00 00                  ff .end (operand)
  c2 9d 00 00                  ff .end (block)
 :c3 9d 00 00                  0b .case
  c4 9d 00 00                  05 .group
  c5 9d 00 00                  01 .literal
  c6 9d 00 00         08 00 00 00 8
  ca 9d 00 00                  ff .end (operand)
  cb 9d 00 00                  ff .end (operand)
  cc 9d 00 00         e8 9d 00 00 .case-end-address
  d0 9d 00 00               01 4e .exec VcTextNum
  d2 9d 00 00                  01 .literal
  d3 9d 00 00         c0 00 00 00 192
  d7 9d 00 00                  ff .end (operand)
  d8 9d 00 00                  01 .literal
  d9 9d 00 00         40 00 00 00 64
  dd 9d 00 00                  ff .end (operand)
  de 9d 00 00               03 00 .var1 FLAGS
  e0 9d 00 00                  01 .literal
  e1 9d 00 00         c8 02 00 00 712
  e5 9d 00 00                  ff .end (operand)
  e6 9d 00 00                  ff .end (operand)
  e7 9d 00 00                  ff .end (block)
 :e8 9d 00 00                  0b .case
  e9 9d 00 00                  05 .group
  ea 9d 00 00                  01 .literal
  eb 9d 00 00         09 00 00 00 9
  ef 9d 00 00                  ff .end (operand)
  f0 9d 00 00                  ff .end (operand)
  f1 9d 00 00         2e 9f 00 00 .case-end-address
if367
 :f5 9d 00 00               05 01 .if [terms=1]
  f7 9d 00 00         1c 9e 00 00 .else
  fb 9d 00 00               03 02 .var1 CHAR
  fd 9d 00 00                  01 .literal
  fe 9d 00 00         01 00 00 00 1
  02 9e 00 00                  ff .end (operand)
  03 9e 00 00                  ff .end (operand)
  05 9e 00 00                  01 .if-sign-nonzero
  05 9e 00 00               01 4e .exec VcTextNum
  07 9e 00 00                  01 .literal
  08 9e 00 00         b0 00 00 00 176
  0c 9e 00 00                  ff .end (operand)
  0d 9e 00 00                  01 .literal
  0e 9e 00 00         70 00 00 00 112
  12 9e 00 00                  ff .end (operand)
  13 9e 00 00               03 00 .var1 FLAGS
  15 9e 00 00                  01 .literal
  16 9e 00 00         c8 02 00 00 712
  1a 9e 00 00                  ff .end (operand)
  1b 9e 00 00                  ff .end (operand)
if368
::1c 9e 00 00               05 01 .if [terms=1]
  1e 9e 00 00         43 9e 00 00 .else
  22 9e 00 00               03 02 .var1 CHAR
  24 9e 00 00                  01 .literal
  25 9e 00 00         02 00 00 00 2
  29 9e 00 00                  ff .end (operand)
  2a 9e 00 00                  ff .end (operand)
  2c 9e 00 00                  01 .if-sign-nonzero
  2c 9e 00 00               01 4e .exec VcTextNum
  2e 9e 00 00                  01 .literal
  2f 9e 00 00         d0 00 00 00 208
  33 9e 00 00                  ff .end (operand)
  34 9e 00 00                  01 .literal
  35 9e 00 00         80 00 00 00 128
  39 9e 00 00                  ff .end (operand)
  3a 9e 00 00               03 00 .var1 FLAGS
  3c 9e 00 00                  01 .literal
  3d 9e 00 00         c8 02 00 00 712
  41 9e 00 00                  ff .end (operand)
  42 9e 00 00                  ff .end (operand)
if369
::43 9e 00 00               05 01 .if [terms=1]
  45 9e 00 00         6a 9e 00 00 .else
  49 9e 00 00               03 02 .var1 CHAR
  4b 9e 00 00                  01 .literal
  4c 9e 00 00         03 00 00 00 3
  50 9e 00 00                  ff .end (operand)
  51 9e 00 00                  ff .end (operand)
  53 9e 00 00                  01 .if-sign-nonzero
  53 9e 00 00               01 4e .exec VcTextNum
  55 9e 00 00                  01 .literal
  56 9e 00 00         b0 00 00 00 176
  5a 9e 00 00                  ff .end (operand)
  5b 9e 00 00                  01 .literal
  5c 9e 00 00         90 00 00 00 144
  60 9e 00 00                  ff .end (operand)
  61 9e 00 00               03 00 .var1 FLAGS
  63 9e 00 00                  01 .literal
  64 9e 00 00         c8 02 00 00 712
  68 9e 00 00                  ff .end (operand)
  69 9e 00 00                  ff .end (operand)
if370
::6a 9e 00 00               05 01 .if [terms=1]
  6c 9e 00 00         91 9e 00 00 .else
  70 9e 00 00               03 02 .var1 CHAR
  72 9e 00 00                  01 .literal
  73 9e 00 00         04 00 00 00 4
  77 9e 00 00                  ff .end (operand)
  78 9e 00 00                  ff .end (operand)
  7a 9e 00 00                  01 .if-sign-nonzero
  7a 9e 00 00               01 4e .exec VcTextNum
  7c 9e 00 00                  01 .literal
  7d 9e 00 00         b0 00 00 00 176
  81 9e 00 00                  ff .end (operand)
  82 9e 00 00                  01 .literal
  83 9e 00 00         50 00 00 00 80
  87 9e 00 00                  ff .end (operand)
  88 9e 00 00               03 00 .var1 FLAGS
  8a 9e 00 00                  01 .literal
  8b 9e 00 00         c8 02 00 00 712
  8f 9e 00 00                  ff .end (operand)
  90 9e 00 00                  ff .end (operand)
if371
::91 9e 00 00               05 01 .if [terms=1]
  93 9e 00 00         b8 9e 00 00 .else
  97 9e 00 00               03 02 .var1 CHAR
  99 9e 00 00                  01 .literal
  9a 9e 00 00         05 00 00 00 5
  9e 9e 00 00                  ff .end (operand)
  9f 9e 00 00                  ff .end (operand)
  a1 9e 00 00                  01 .if-sign-nonzero
  a1 9e 00 00               01 4e .exec VcTextNum
  a3 9e 00 00                  01 .literal
  a4 9e 00 00         d0 00 00 00 208
  a8 9e 00 00                  ff .end (operand)
  a9 9e 00 00                  01 .literal
  aa 9e 00 00         60 00 00 00 96
  ae 9e 00 00                  ff .end (operand)
  af 9e 00 00               03 00 .var1 FLAGS
  b1 9e 00 00                  01 .literal
  b2 9e 00 00         c8 02 00 00 712
  b6 9e 00 00                  ff .end (operand)
  b7 9e 00 00                  ff .end (operand)
if372
::b8 9e 00 00               05 01 .if [terms=1]
  ba 9e 00 00         df 9e 00 00 .else
  be 9e 00 00               03 02 .var1 CHAR
  c0 9e 00 00                  01 .literal
  c1 9e 00 00         06 00 00 00 6
  c5 9e 00 00                  ff .end (operand)
  c6 9e 00 00                  ff .end (operand)
  c8 9e 00 00                  01 .if-sign-nonzero
  c8 9e 00 00               01 4e .exec VcTextNum
  ca 9e 00 00                  01 .literal
  cb 9e 00 00         e0 00 00 00 224
  cf 9e 00 00                  ff .end (operand)
  d0 9e 00 00                  01 .literal
  d1 9e 00 00         70 00 00 00 112
  d5 9e 00 00                  ff .end (operand)
  d6 9e 00 00               03 00 .var1 FLAGS
  d8 9e 00 00                  01 .literal
  d9 9e 00 00         c8 02 00 00 712
  dd 9e 00 00                  ff .end (operand)
  de 9e 00 00                  ff .end (operand)
if373
::df 9e 00 00               05 01 .if [terms=1]
  e1 9e 00 00         06 9f 00 00 .else
  e5 9e 00 00               03 02 .var1 CHAR
  e7 9e 00 00                  01 .literal
  e8 9e 00 00         07 00 00 00 7
  ec 9e 00 00                  ff .end (operand)
  ed 9e 00 00                  ff .end (operand)
  ef 9e 00 00                  01 .if-sign-nonzero
  ef 9e 00 00               01 4e .exec VcTextNum
  f1 9e 00 00                  01 .literal
  f2 9e 00 00         c0 00 00 00 192
  f6 9e 00 00                  ff .end (operand)
  f7 9e 00 00                  01 .literal
  f8 9e 00 00         a0 00 00 00 160
  fc 9e 00 00                  ff .end (operand)
  fd 9e 00 00               03 00 .var1 FLAGS
  ff 9e 00 00                  01 .literal
  00 9f 00 00         c8 02 00 00 712
  04 9f 00 00                  ff .end (operand)
  05 9f 00 00                  ff .end (operand)
if374
::06 9f 00 00               05 01 .if [terms=1]
  08 9f 00 00         2d 9f 00 00 .else
  0c 9f 00 00               03 02 .var1 CHAR
  0e 9f 00 00                  01 .literal
  0f 9f 00 00         08 00 00 00 8
  13 9f 00 00                  ff .end (operand)
  14 9f 00 00                  ff .end (operand)
  16 9f 00 00                  01 .if-sign-nonzero
  16 9f 00 00               01 4e .exec VcTextNum
  18 9f 00 00                  01 .literal
  19 9f 00 00         c0 00 00 00 192
  1d 9f 00 00                  ff .end (operand)
  1e 9f 00 00                  01 .literal
  1f 9f 00 00         40 00 00 00 64
  23 9f 00 00                  ff .end (operand)
  24 9f 00 00               03 00 .var1 FLAGS
  26 9f 00 00                  01 .literal
  27 9f 00 00         c8 02 00 00 712
  2b 9f 00 00                  ff .end (operand)
  2c 9f 00 00                  ff .end (operand)
 :2d 9f 00 00                  ff .end (block)
 :2e 9f 00 00                  ff .end (switch)
  2f 9f 00 00                  ff .end (block)
 :30 9f 00 00                  0b .case
  31 9f 00 00                  05 .group
  32 9f 00 00                  01 .literal
  33 9f 00 00         03 00 00 00 3
  37 9f 00 00                  ff .end (operand)
  38 9f 00 00                  ff .end (operand)
  39 9f 00 00         b7 a1 00 00 .case-end-address
  3d 9f 00 00                  0a .switch
  3e 9f 00 00               03 00 .var1 FLAGS
  40 9f 00 00                  01 .literal
  41 9f 00 00         74 02 00 00 628
  45 9f 00 00                  ff .end (operand)
  46 9f 00 00                  ff .end (operand)
  47 9f 00 00                  0b .case
  48 9f 00 00                  05 .group
  49 9f 00 00                  01 .literal
  4a 9f 00 00         01 00 00 00 1
  4e 9f 00 00                  ff .end (operand)
  4f 9f 00 00                  ff .end (operand)
  50 9f 00 00         6c 9f 00 00 .case-end-address
  54 9f 00 00               01 4e .exec VcTextNum
  56 9f 00 00                  01 .literal
  57 9f 00 00         b0 00 00 00 176
  5b 9f 00 00                  ff .end (operand)
  5c 9f 00 00                  01 .literal
  5d 9f 00 00         70 00 00 00 112
  61 9f 00 00                  ff .end (operand)
  62 9f 00 00               03 00 .var1 FLAGS
  64 9f 00 00                  01 .literal
  65 9f 00 00         ca 02 00 00 714
  69 9f 00 00                  ff .end (operand)
  6a 9f 00 00                  ff .end (operand)
  6b 9f 00 00                  ff .end (block)
 :6c 9f 00 00                  0b .case
  6d 9f 00 00                  05 .group
  6e 9f 00 00                  01 .literal
  6f 9f 00 00         02 00 00 00 2
  73 9f 00 00                  ff .end (operand)
  74 9f 00 00                  ff .end (operand)
  75 9f 00 00         91 9f 00 00 .case-end-address
  79 9f 00 00               01 4e .exec VcTextNum
  7b 9f 00 00                  01 .literal
  7c 9f 00 00         d0 00 00 00 208
  80 9f 00 00                  ff .end (operand)
  81 9f 00 00                  01 .literal
  82 9f 00 00         80 00 00 00 128
  86 9f 00 00                  ff .end (operand)
  87 9f 00 00               03 00 .var1 FLAGS
  89 9f 00 00                  01 .literal
  8a 9f 00 00         ca 02 00 00 714
  8e 9f 00 00                  ff .end (operand)
  8f 9f 00 00                  ff .end (operand)
  90 9f 00 00                  ff .end (block)
 :91 9f 00 00                  0b .case
  92 9f 00 00                  05 .group
  93 9f 00 00                  01 .literal
  94 9f 00 00         03 00 00 00 3
  98 9f 00 00                  ff .end (operand)
  99 9f 00 00                  ff .end (operand)
  9a 9f 00 00         b6 9f 00 00 .case-end-address
  9e 9f 00 00               01 4e .exec VcTextNum
  a0 9f 00 00                  01 .literal
  a1 9f 00 00         b0 00 00 00 176
  a5 9f 00 00                  ff .end (operand)
  a6 9f 00 00                  01 .literal
  a7 9f 00 00         90 00 00 00 144
  ab 9f 00 00                  ff .end (operand)
  ac 9f 00 00               03 00 .var1 FLAGS
  ae 9f 00 00                  01 .literal
  af 9f 00 00         ca 02 00 00 714
  b3 9f 00 00                  ff .end (operand)
  b4 9f 00 00                  ff .end (operand)
  b5 9f 00 00                  ff .end (block)
 :b6 9f 00 00                  0b .case
  b7 9f 00 00                  05 .group
  b8 9f 00 00                  01 .literal
  b9 9f 00 00         04 00 00 00 4
  bd 9f 00 00                  ff .end (operand)
  be 9f 00 00                  ff .end (operand)
  bf 9f 00 00         db 9f 00 00 .case-end-address
  c3 9f 00 00               01 4e .exec VcTextNum
  c5 9f 00 00                  01 .literal
  c6 9f 00 00         b0 00 00 00 176
  ca 9f 00 00                  ff .end (operand)
  cb 9f 00 00                  01 .literal
  cc 9f 00 00         50 00 00 00 80
  d0 9f 00 00                  ff .end (operand)
  d1 9f 00 00               03 00 .var1 FLAGS
  d3 9f 00 00                  01 .literal
  d4 9f 00 00         ca 02 00 00 714
  d8 9f 00 00                  ff .end (operand)
  d9 9f 00 00                  ff .end (operand)
  da 9f 00 00                  ff .end (block)
 :db 9f 00 00                  0b .case
  dc 9f 00 00                  05 .group
  dd 9f 00 00                  01 .literal
  de 9f 00 00         05 00 00 00 5
  e2 9f 00 00                  ff .end (operand)
  e3 9f 00 00                  ff .end (operand)
  e4 9f 00 00         00 a0 00 00 .case-end-address
  e8 9f 00 00               01 4e .exec VcTextNum
  ea 9f 00 00                  01 .literal
  eb 9f 00 00         d0 00 00 00 208
  ef 9f 00 00                  ff .end (operand)
  f0 9f 00 00                  01 .literal
  f1 9f 00 00         60 00 00 00 96
  f5 9f 00 00                  ff .end (operand)
  f6 9f 00 00               03 00 .var1 FLAGS
  f8 9f 00 00                  01 .literal
  f9 9f 00 00         ca 02 00 00 714
  fd 9f 00 00                  ff .end (operand)
  fe 9f 00 00                  ff .end (operand)
  ff 9f 00 00                  ff .end (block)
 :00 a0 00 00                  0b .case
  01 a0 00 00                  05 .group
  02 a0 00 00                  01 .literal
  03 a0 00 00         06 00 00 00 6
  07 a0 00 00                  ff .end (operand)
  08 a0 00 00                  ff .end (operand)
  09 a0 00 00         25 a0 00 00 .case-end-address
  0d a0 00 00               01 4e .exec VcTextNum
  0f a0 00 00                  01 .literal
  10 a0 00 00         e0 00 00 00 224
  14 a0 00 00                  ff .end (operand)
  15 a0 00 00                  01 .literal
  16 a0 00 00         70 00 00 00 112
  1a a0 00 00                  ff .end (operand)
  1b a0 00 00               03 00 .var1 FLAGS
  1d a0 00 00                  01 .literal
  1e a0 00 00         ca 02 00 00 714
  22 a0 00 00                  ff .end (operand)
  23 a0 00 00                  ff .end (operand)
  24 a0 00 00                  ff .end (block)
 :25 a0 00 00                  0b .case
  26 a0 00 00                  05 .group
  27 a0 00 00                  01 .literal
  28 a0 00 00         07 00 00 00 7
  2c a0 00 00                  ff .end (operand)
  2d a0 00 00                  ff .end (operand)
  2e a0 00 00         4a a0 00 00 .case-end-address
  32 a0 00 00               01 4e .exec VcTextNum
  34 a0 00 00                  01 .literal
  35 a0 00 00         c0 00 00 00 192
  39 a0 00 00                  ff .end (operand)
  3a a0 00 00                  01 .literal
  3b a0 00 00         a0 00 00 00 160
  3f a0 00 00                  ff .end (operand)
  40 a0 00 00               03 00 .var1 FLAGS
  42 a0 00 00                  01 .literal
  43 a0 00 00         ca 02 00 00 714
  47 a0 00 00                  ff .end (operand)
  48 a0 00 00                  ff .end (operand)
  49 a0 00 00                  ff .end (block)
 :4a a0 00 00                  0b .case
  4b a0 00 00                  05 .group
  4c a0 00 00                  01 .literal
  4d a0 00 00         08 00 00 00 8
  51 a0 00 00                  ff .end (operand)
  52 a0 00 00                  ff .end (operand)
  53 a0 00 00         6f a0 00 00 .case-end-address
  57 a0 00 00               01 4e .exec VcTextNum
  59 a0 00 00                  01 .literal
  5a a0 00 00         c0 00 00 00 192
  5e a0 00 00                  ff .end (operand)
  5f a0 00 00                  01 .literal
  60 a0 00 00         40 00 00 00 64
  64 a0 00 00                  ff .end (operand)
  65 a0 00 00               03 00 .var1 FLAGS
  67 a0 00 00                  01 .literal
  68 a0 00 00         ca 02 00 00 714
  6c a0 00 00                  ff .end (operand)
  6d a0 00 00                  ff .end (operand)
  6e a0 00 00                  ff .end (block)
 :6f a0 00 00                  0b .case
  70 a0 00 00                  05 .group
  71 a0 00 00                  01 .literal
  72 a0 00 00         09 00 00 00 9
  76 a0 00 00                  ff .end (operand)
  77 a0 00 00                  ff .end (operand)
  78 a0 00 00         b5 a1 00 00 .case-end-address
if375
 :7c a0 00 00               05 01 .if [terms=1]
  7e a0 00 00         a3 a0 00 00 .else
  82 a0 00 00               03 02 .var1 CHAR
  84 a0 00 00                  01 .literal
  85 a0 00 00         01 00 00 00 1
  89 a0 00 00                  ff .end (operand)
  8a a0 00 00                  ff .end (operand)
  8c a0 00 00                  01 .if-sign-nonzero
  8c a0 00 00               01 4e .exec VcTextNum
  8e a0 00 00                  01 .literal
  8f a0 00 00         b0 00 00 00 176
  93 a0 00 00                  ff .end (operand)
  94 a0 00 00                  01 .literal
  95 a0 00 00         70 00 00 00 112
  99 a0 00 00                  ff .end (operand)
  9a a0 00 00               03 00 .var1 FLAGS
  9c a0 00 00                  01 .literal
  9d a0 00 00         ca 02 00 00 714
  a1 a0 00 00                  ff .end (operand)
  a2 a0 00 00                  ff .end (operand)
if376
::a3 a0 00 00               05 01 .if [terms=1]
  a5 a0 00 00         ca a0 00 00 .else
  a9 a0 00 00               03 02 .var1 CHAR
  ab a0 00 00                  01 .literal
  ac a0 00 00         02 00 00 00 2
  b0 a0 00 00                  ff .end (operand)
  b1 a0 00 00                  ff .end (operand)
  b3 a0 00 00                  01 .if-sign-nonzero
  b3 a0 00 00               01 4e .exec VcTextNum
  b5 a0 00 00                  01 .literal
  b6 a0 00 00         d0 00 00 00 208
  ba a0 00 00                  ff .end (operand)
  bb a0 00 00                  01 .literal
  bc a0 00 00         80 00 00 00 128
  c0 a0 00 00                  ff .end (operand)
  c1 a0 00 00               03 00 .var1 FLAGS
  c3 a0 00 00                  01 .literal
  c4 a0 00 00         ca 02 00 00 714
  c8 a0 00 00                  ff .end (operand)
  c9 a0 00 00                  ff .end (operand)
if377
::ca a0 00 00               05 01 .if [terms=1]
  cc a0 00 00         f1 a0 00 00 .else
  d0 a0 00 00               03 02 .var1 CHAR
  d2 a0 00 00                  01 .literal
  d3 a0 00 00         03 00 00 00 3
  d7 a0 00 00                  ff .end (operand)
  d8 a0 00 00                  ff .end (operand)
  da a0 00 00                  01 .if-sign-nonzero
  da a0 00 00               01 4e .exec VcTextNum
  dc a0 00 00                  01 .literal
  dd a0 00 00         b0 00 00 00 176
  e1 a0 00 00                  ff .end (operand)
  e2 a0 00 00                  01 .literal
  e3 a0 00 00         90 00 00 00 144
  e7 a0 00 00                  ff .end (operand)
  e8 a0 00 00               03 00 .var1 FLAGS
  ea a0 00 00                  01 .literal
  eb a0 00 00         ca 02 00 00 714
  ef a0 00 00                  ff .end (operand)
  f0 a0 00 00                  ff .end (operand)
if378
::f1 a0 00 00               05 01 .if [terms=1]
  f3 a0 00 00         18 a1 00 00 .else
  f7 a0 00 00               03 02 .var1 CHAR
  f9 a0 00 00                  01 .literal
  fa a0 00 00         04 00 00 00 4
  fe a0 00 00                  ff .end (operand)
  ff a0 00 00                  ff .end (operand)
  01 a1 00 00                  01 .if-sign-nonzero
  01 a1 00 00               01 4e .exec VcTextNum
  03 a1 00 00                  01 .literal
  04 a1 00 00         b0 00 00 00 176
  08 a1 00 00                  ff .end (operand)
  09 a1 00 00                  01 .literal
  0a a1 00 00         50 00 00 00 80
  0e a1 00 00                  ff .end (operand)
  0f a1 00 00               03 00 .var1 FLAGS
  11 a1 00 00                  01 .literal
  12 a1 00 00         ca 02 00 00 714
  16 a1 00 00                  ff .end (operand)
  17 a1 00 00                  ff .end (operand)
if379
::18 a1 00 00               05 01 .if [terms=1]
  1a a1 00 00         3f a1 00 00 .else
  1e a1 00 00               03 02 .var1 CHAR
  20 a1 00 00                  01 .literal
  21 a1 00 00         05 00 00 00 5
  25 a1 00 00                  ff .end (operand)
  26 a1 00 00                  ff .end (operand)
  28 a1 00 00                  01 .if-sign-nonzero
  28 a1 00 00               01 4e .exec VcTextNum
  2a a1 00 00                  01 .literal
  2b a1 00 00         d0 00 00 00 208
  2f a1 00 00                  ff .end (operand)
  30 a1 00 00                  01 .literal
  31 a1 00 00         60 00 00 00 96
  35 a1 00 00                  ff .end (operand)
  36 a1 00 00               03 00 .var1 FLAGS
  38 a1 00 00                  01 .literal
  39 a1 00 00         ca 02 00 00 714
  3d a1 00 00                  ff .end (operand)
  3e a1 00 00                  ff .end (operand)
if380
::3f a1 00 00               05 01 .if [terms=1]
  41 a1 00 00         66 a1 00 00 .else
  45 a1 00 00               03 02 .var1 CHAR
  47 a1 00 00                  01 .literal
  48 a1 00 00         06 00 00 00 6
  4c a1 00 00                  ff .end (operand)
  4d a1 00 00                  ff .end (operand)
  4f a1 00 00                  01 .if-sign-nonzero
  4f a1 00 00               01 4e .exec VcTextNum
  51 a1 00 00                  01 .literal
  52 a1 00 00         e0 00 00 00 224
  56 a1 00 00                  ff .end (operand)
  57 a1 00 00                  01 .literal
  58 a1 00 00         70 00 00 00 112
  5c a1 00 00                  ff .end (operand)
  5d a1 00 00               03 00 .var1 FLAGS
  5f a1 00 00                  01 .literal
  60 a1 00 00         ca 02 00 00 714
  64 a1 00 00                  ff .end (operand)
  65 a1 00 00                  ff .end (operand)
if381
::66 a1 00 00               05 01 .if [terms=1]
  68 a1 00 00         8d a1 00 00 .else
  6c a1 00 00               03 02 .var1 CHAR
  6e a1 00 00                  01 .literal
  6f a1 00 00         07 00 00 00 7
  73 a1 00 00                  ff .end (operand)
  74 a1 00 00                  ff .end (operand)
  76 a1 00 00                  01 .if-sign-nonzero
  76 a1 00 00               01 4e .exec VcTextNum
  78 a1 00 00                  01 .literal
  79 a1 00 00         c0 00 00 00 192
  7d a1 00 00                  ff .end (operand)
  7e a1 00 00                  01 .literal
  7f a1 00 00         a0 00 00 00 160
  83 a1 00 00                  ff .end (operand)
  84 a1 00 00               03 00 .var1 FLAGS
  86 a1 00 00                  01 .literal
  87 a1 00 00         ca 02 00 00 714
  8b a1 00 00                  ff .end (operand)
  8c a1 00 00                  ff .end (operand)
if382
::8d a1 00 00               05 01 .if [terms=1]
  8f a1 00 00         b4 a1 00 00 .else
  93 a1 00 00               03 02 .var1 CHAR
  95 a1 00 00                  01 .literal
  96 a1 00 00         08 00 00 00 8
  9a a1 00 00                  ff .end (operand)
  9b a1 00 00                  ff .end (operand)
  9d a1 00 00                  01 .if-sign-nonzero
  9d a1 00 00               01 4e .exec VcTextNum
  9f a1 00 00                  01 .literal
  a0 a1 00 00         c0 00 00 00 192
  a4 a1 00 00                  ff .end (operand)
  a5 a1 00 00                  01 .literal
  a6 a1 00 00         40 00 00 00 64
  aa a1 00 00                  ff .end (operand)
  ab a1 00 00               03 00 .var1 FLAGS
  ad a1 00 00                  01 .literal
  ae a1 00 00         ca 02 00 00 714
  b2 a1 00 00                  ff .end (operand)
  b3 a1 00 00                  ff .end (operand)
 :b4 a1 00 00                  ff .end (block)
 :b5 a1 00 00                  ff .end (switch)
  b6 a1 00 00                  ff .end (block)
 :b7 a1 00 00                  ff .end (switch)
  b8 a1 00 00               01 24 .exec Wait
  ba a1 00 00                  01 .literal
  bb a1 00 00         64 00 00 00 100
  bf a1 00 00                  ff .end (operand)
if383
 :c0 a1 00 00               05 02 .if [terms=2]
  c2 a1 00 00         ef a1 00 00 .else
  c6 a1 00 00               03 02 .var1 CHAR
  c8 a1 00 00                  01 .literal
  c9 a1 00 00         01 00 00 00 1
  cd a1 00 00                  ff .end (operand)
  ce a1 00 00                  ff .end (operand)
  d0 a1 00 00                  01 .if-sign-nonzero
  d0 a1 00 00               03 07 .var1 CURHP
  d2 a1 00 00                  01 .literal
  d3 a1 00 00         01 00 00 00 1
  d7 a1 00 00                  ff .end (operand)
  d8 a1 00 00                  ff .end (operand)
  da a1 00 00                  02 .if-sign-nonzero
  da a1 00 00                  01 .literal
  db a1 00 00         00 00 00 00 0
  df a1 00 00                  ff .end (operand)
  e0 a1 00 00               03 0d .var1 SPECIALFRAME
  e2 a1 00 00                  01 .literal
  e3 a1 00 00         08 00 00 00 8
  e7 a1 00 00                  ff .end (operand)
  e8 a1 00 00                  01 .set
  e9 a1 00 00                  01 .literal
  ea a1 00 00         1d 00 00 00 29
  ee a1 00 00                  ff .end (operand)
if384
::ef a1 00 00               05 02 .if [terms=2]
  f1 a1 00 00         1e a2 00 00 .else
  f5 a1 00 00               03 02 .var1 CHAR
  f7 a1 00 00                  01 .literal
  f8 a1 00 00         02 00 00 00 2
  fc a1 00 00                  ff .end (operand)
  fd a1 00 00                  ff .end (operand)
  ff a1 00 00                  01 .if-sign-nonzero
  ff a1 00 00               03 07 .var1 CURHP
  01 a2 00 00                  01 .literal
  02 a2 00 00         02 00 00 00 2
  06 a2 00 00                  ff .end (operand)
  07 a2 00 00                  ff .end (operand)
  09 a2 00 00                  02 .if-sign-nonzero
  09 a2 00 00                  01 .literal
  0a a2 00 00         00 00 00 00 0
  0e a2 00 00                  ff .end (operand)
  0f a2 00 00               03 0d .var1 SPECIALFRAME
  11 a2 00 00                  01 .literal
  12 a2 00 00         0d 00 00 00 13
  16 a2 00 00                  ff .end (operand)
  17 a2 00 00                  01 .set
  18 a2 00 00                  01 .literal
  19 a2 00 00         1d 00 00 00 29
  1d a2 00 00                  ff .end (operand)
if385
::1e a2 00 00               05 02 .if [terms=2]
  20 a2 00 00         4d a2 00 00 .else
  24 a2 00 00               03 02 .var1 CHAR
  26 a2 00 00                  01 .literal
  27 a2 00 00         03 00 00 00 3
  2b a2 00 00                  ff .end (operand)
  2c a2 00 00                  ff .end (operand)
  2e a2 00 00                  01 .if-sign-nonzero
  2e a2 00 00               03 07 .var1 CURHP
  30 a2 00 00                  01 .literal
  31 a2 00 00         03 00 00 00 3
  35 a2 00 00                  ff .end (operand)
  36 a2 00 00                  ff .end (operand)
  38 a2 00 00                  02 .if-sign-nonzero
  38 a2 00 00                  01 .literal
  39 a2 00 00         00 00 00 00 0
  3d a2 00 00                  ff .end (operand)
  3e a2 00 00               03 0d .var1 SPECIALFRAME
  40 a2 00 00                  01 .literal
  41 a2 00 00         0a 00 00 00 10
  45 a2 00 00                  ff .end (operand)
  46 a2 00 00                  01 .set
  47 a2 00 00                  01 .literal
  48 a2 00 00         1d 00 00 00 29
  4c a2 00 00                  ff .end (operand)
if386
::4d a2 00 00               05 02 .if [terms=2]
  4f a2 00 00         7c a2 00 00 .else
  53 a2 00 00               03 02 .var1 CHAR
  55 a2 00 00                  01 .literal
  56 a2 00 00         04 00 00 00 4
  5a a2 00 00                  ff .end (operand)
  5b a2 00 00                  ff .end (operand)
  5d a2 00 00                  01 .if-sign-nonzero
  5d a2 00 00               03 07 .var1 CURHP
  5f a2 00 00                  01 .literal
  60 a2 00 00         04 00 00 00 4
  64 a2 00 00                  ff .end (operand)
  65 a2 00 00                  ff .end (operand)
  67 a2 00 00                  02 .if-sign-nonzero
  67 a2 00 00                  01 .literal
  68 a2 00 00         00 00 00 00 0
  6c a2 00 00                  ff .end (operand)
  6d a2 00 00               03 0d .var1 SPECIALFRAME
  6f a2 00 00                  01 .literal
  70 a2 00 00         09 00 00 00 9
  74 a2 00 00                  ff .end (operand)
  75 a2 00 00                  01 .set
  76 a2 00 00                  01 .literal
  77 a2 00 00         1d 00 00 00 29
  7b a2 00 00                  ff .end (operand)
if387
::7c a2 00 00               05 02 .if [terms=2]
  7e a2 00 00         ab a2 00 00 .else
  82 a2 00 00               03 02 .var1 CHAR
  84 a2 00 00                  01 .literal
  85 a2 00 00         05 00 00 00 5
  89 a2 00 00                  ff .end (operand)
  8a a2 00 00                  ff .end (operand)
  8c a2 00 00                  01 .if-sign-nonzero
  8c a2 00 00               03 07 .var1 CURHP
  8e a2 00 00                  01 .literal
  8f a2 00 00         05 00 00 00 5
  93 a2 00 00                  ff .end (operand)
  94 a2 00 00                  ff .end (operand)
  96 a2 00 00                  02 .if-sign-nonzero
  96 a2 00 00                  01 .literal
  97 a2 00 00         00 00 00 00 0
  9b a2 00 00                  ff .end (operand)
  9c a2 00 00               03 0d .var1 SPECIALFRAME
  9e a2 00 00                  01 .literal
  9f a2 00 00         0e 00 00 00 14
  a3 a2 00 00                  ff .end (operand)
  a4 a2 00 00                  01 .set
  a5 a2 00 00                  01 .literal
  a6 a2 00 00         1d 00 00 00 29
  aa a2 00 00                  ff .end (operand)
if388
::ab a2 00 00               05 02 .if [terms=2]
  ad a2 00 00         da a2 00 00 .else
  b1 a2 00 00               03 02 .var1 CHAR
  b3 a2 00 00                  01 .literal
  b4 a2 00 00         06 00 00 00 6
  b8 a2 00 00                  ff .end (operand)
  b9 a2 00 00                  ff .end (operand)
  bb a2 00 00                  01 .if-sign-nonzero
  bb a2 00 00               03 07 .var1 CURHP
  bd a2 00 00                  01 .literal
  be a2 00 00         06 00 00 00 6
  c2 a2 00 00                  ff .end (operand)
  c3 a2 00 00                  ff .end (operand)
  c5 a2 00 00                  02 .if-sign-nonzero
  c5 a2 00 00                  01 .literal
  c6 a2 00 00         00 00 00 00 0
  ca a2 00 00                  ff .end (operand)
  cb a2 00 00               03 0d .var1 SPECIALFRAME
  cd a2 00 00                  01 .literal
  ce a2 00 00         0f 00 00 00 15
  d2 a2 00 00                  ff .end (operand)
  d3 a2 00 00                  01 .set
  d4 a2 00 00                  01 .literal
  d5 a2 00 00         1d 00 00 00 29
  d9 a2 00 00                  ff .end (operand)
if389
::da a2 00 00               05 02 .if [terms=2]
  dc a2 00 00         09 a3 00 00 .else
  e0 a2 00 00               03 02 .var1 CHAR
  e2 a2 00 00                  01 .literal
  e3 a2 00 00         07 00 00 00 7
  e7 a2 00 00                  ff .end (operand)
  e8 a2 00 00                  ff .end (operand)
  ea a2 00 00                  01 .if-sign-nonzero
  ea a2 00 00               03 07 .var1 CURHP
  ec a2 00 00                  01 .literal
  ed a2 00 00         07 00 00 00 7
  f1 a2 00 00                  ff .end (operand)
  f2 a2 00 00                  ff .end (operand)
  f4 a2 00 00                  02 .if-sign-nonzero
  f4 a2 00 00                  01 .literal
  f5 a2 00 00         00 00 00 00 0
  f9 a2 00 00                  ff .end (operand)
  fa a2 00 00               03 0d .var1 SPECIALFRAME
  fc a2 00 00                  01 .literal
  fd a2 00 00         0c 00 00 00 12
  01 a3 00 00                  ff .end (operand)
  02 a3 00 00                  01 .set
  03 a3 00 00                  01 .literal
  04 a3 00 00         1d 00 00 00 29
  08 a3 00 00                  ff .end (operand)
if390
::09 a3 00 00               05 02 .if [terms=2]
  0b a3 00 00         38 a3 00 00 .else
  0f a3 00 00               03 02 .var1 CHAR
  11 a3 00 00                  01 .literal
  12 a3 00 00         08 00 00 00 8
  16 a3 00 00                  ff .end (operand)
  17 a3 00 00                  ff .end (operand)
  19 a3 00 00                  01 .if-sign-nonzero
  19 a3 00 00               03 07 .var1 CURHP
  1b a3 00 00                  01 .literal
  1c a3 00 00         08 00 00 00 8
  20 a3 00 00                  ff .end (operand)
  21 a3 00 00                  ff .end (operand)
  23 a3 00 00                  02 .if-sign-nonzero
  23 a3 00 00                  01 .literal
  24 a3 00 00         00 00 00 00 0
  28 a3 00 00                  ff .end (operand)
  29 a3 00 00               03 0d .var1 SPECIALFRAME
  2b a3 00 00                  01 .literal
  2c a3 00 00         0b 00 00 00 11
  30 a3 00 00                  ff .end (operand)
  31 a3 00 00                  01 .set
  32 a3 00 00                  01 .literal
  33 a3 00 00         1d 00 00 00 29
  37 a3 00 00                  ff .end (operand)
::38 a3 00 00               01 39 .exec VcClear
  3a a3 00 00               01 50 .exec VcBox
  3c a3 00 00                  01 .literal
  3d a3 00 00         f0 00 00 00 240
  41 a3 00 00                  ff .end (operand)
  42 a3 00 00                  01 .literal
  43 a3 00 00         0a 00 00 00 10
  47 a3 00 00                  ff .end (operand)
  48 a3 00 00                  01 .literal
  49 a3 00 00         3a 01 00 00 314
  4d a3 00 00                  ff .end (operand)
  4e a3 00 00                  01 .literal
  4f a3 00 00         c6 00 00 00 198
  53 a3 00 00                  ff .end (operand)
  54 a3 00 00               03 00 .var1 FLAGS
  56 a3 00 00                  01 .literal
  57 a3 00 00         53 02 00 00 595
  5b a3 00 00                  ff .end (operand)
  5c a3 00 00                  01 .set
  5d a3 00 00                  01 .literal
  5e a3 00 00         0d 00 00 00 13
  62 a3 00 00                  ff .end (operand)
if391
 :63 a3 00 00               05 01 .if [terms=1]
  65 a3 00 00         43 a4 00 00 .else
  69 a3 00 00               03 02 .var1 CHAR
  6b a3 00 00                  01 .literal
  6c a3 00 00         01 00 00 00 1
  70 a3 00 00                  ff .end (operand)
  71 a3 00 00                  ff .end (operand)
  73 a3 00 00                  01 .if-sign-nonzero
  73 a3 00 00               03 00 .var1 FLAGS
  75 a3 00 00                  01 .literal
  76 a3 00 00         53 02 00 00 595
  7a a3 00 00                  ff .end (operand)
  7b a3 00 00                  04 .incset
  7c a3 00 00                  01 .literal
  7d a3 00 00         0a 00 00 00 10
  81 a3 00 00                  ff .end (operand)
  82 a3 00 00               01 3b .exec VcText
  84 a3 00 00                  01 .literal
  85 a3 00 00         f5 00 00 00 245
  89 a3 00 00                  ff .end (operand)
  8a a3 00 00               03 00 .var1 FLAGS
  8c a3 00 00                  01 .literal
  8d a3 00 00         53 02 00 00 595
  91 a3 00 00                  ff .end (operand)
  92 a3 00 00                  ff .end (operand)
  93 a3 00 00                     "Sam"

              53 61 6d 00 
  97 a3 00 00               03 00 .var1 FLAGS
  99 a3 00 00                  01 .literal
  9a a3 00 00         53 02 00 00 595
  9e a3 00 00                  ff .end (operand)
  9f a3 00 00                  04 .incset
  a0 a3 00 00                  01 .literal
  a1 a3 00 00         0a 00 00 00 10
  a5 a3 00 00                  ff .end (operand)
  a6 a3 00 00               01 4e .exec VcTextNum
  a8 a3 00 00                  01 .literal
  a9 a3 00 00         f5 00 00 00 245
  ad a3 00 00                  ff .end (operand)
  ae a3 00 00               03 00 .var1 FLAGS
  b0 a3 00 00                  01 .literal
  b1 a3 00 00         53 02 00 00 595
  b5 a3 00 00                  ff .end (operand)
  b6 a3 00 00                  ff .end (operand)
  b7 a3 00 00               03 07 .var1 CURHP
  b9 a3 00 00                  01 .literal
  ba a3 00 00         01 00 00 00 1
  be a3 00 00                  ff .end (operand)
  bf a3 00 00                  ff .end (operand)
  c0 a3 00 00               01 3b .exec VcText
  c2 a3 00 00                  01 .literal
  c3 a3 00 00         09 01 00 00 265
  c7 a3 00 00                  ff .end (operand)
  c8 a3 00 00               03 00 .var1 FLAGS
  ca a3 00 00                  01 .literal
  cb a3 00 00         53 02 00 00 595
  cf a3 00 00                  ff .end (operand)
  d0 a3 00 00                  ff .end (operand)
  d1 a3 00 00                     "/"

              2f 00 
  d3 a3 00 00               01 4e .exec VcTextNum
  d5 a3 00 00                  01 .literal
  d6 a3 00 00         13 01 00 00 275
  da a3 00 00                  ff .end (operand)
  db a3 00 00               03 00 .var1 FLAGS
  dd a3 00 00                  01 .literal
  de a3 00 00         53 02 00 00 595
  e2 a3 00 00                  ff .end (operand)
  e3 a3 00 00                  ff .end (operand)
  e4 a3 00 00               03 08 .var1 MAXHP
  e6 a3 00 00                  01 .literal
  e7 a3 00 00         01 00 00 00 1
  eb a3 00 00                  ff .end (operand)
  ec a3 00 00                  ff .end (operand)
  ed a3 00 00               03 00 .var1 FLAGS
  ef a3 00 00                  01 .literal
  f0 a3 00 00         53 02 00 00 595
  f4 a3 00 00                  ff .end (operand)
  f5 a3 00 00                  04 .incset
  f6 a3 00 00                  01 .literal
  f7 a3 00 00         0a 00 00 00 10
  fb a3 00 00                  ff .end (operand)
  fc a3 00 00               01 4e .exec VcTextNum
  fe a3 00 00                  01 .literal
  ff a3 00 00         f5 00 00 00 245
  03 a4 00 00                  ff .end (operand)
  04 a4 00 00               03 00 .var1 FLAGS
  06 a4 00 00                  01 .literal
  07 a4 00 00         53 02 00 00 595
  0b a4 00 00                  ff .end (operand)
  0c a4 00 00                  ff .end (operand)
  0d a4 00 00               03 09 .var1 CURMP
  0f a4 00 00                  01 .literal
  10 a4 00 00         01 00 00 00 1
  14 a4 00 00                  ff .end (operand)
  15 a4 00 00                  ff .end (operand)
  16 a4 00 00               01 3b .exec VcText
  18 a4 00 00                  01 .literal
  19 a4 00 00         09 01 00 00 265
  1d a4 00 00                  ff .end (operand)
  1e a4 00 00               03 00 .var1 FLAGS
  20 a4 00 00                  01 .literal
  21 a4 00 00         53 02 00 00 595
  25 a4 00 00                  ff .end (operand)
  26 a4 00 00                  ff .end (operand)
  27 a4 00 00                     "/"

              2f 00 
  29 a4 00 00               01 4e .exec VcTextNum
  2b a4 00 00                  01 .literal
  2c a4 00 00         13 01 00 00 275
  30 a4 00 00                  ff .end (operand)
  31 a4 00 00               03 00 .var1 FLAGS
  33 a4 00 00                  01 .literal
  34 a4 00 00         53 02 00 00 595
  38 a4 00 00                  ff .end (operand)
  39 a4 00 00                  ff .end (operand)
  3a a4 00 00               03 0a .var1 MAXMP
  3c a4 00 00                  01 .literal
  3d a4 00 00         01 00 00 00 1
  41 a4 00 00                  ff .end (operand)
  42 a4 00 00                  ff .end (operand)
if392
::43 a4 00 00               05 01 .if [terms=1]
  45 a4 00 00         24 a5 00 00 .else
  49 a4 00 00               03 02 .var1 CHAR
  4b a4 00 00                  01 .literal
  4c a4 00 00         02 00 00 00 2
  50 a4 00 00                  ff .end (operand)
  51 a4 00 00                  ff .end (operand)
  53 a4 00 00                  01 .if-sign-nonzero
  53 a4 00 00               03 00 .var1 FLAGS
  55 a4 00 00                  01 .literal
  56 a4 00 00         53 02 00 00 595
  5a a4 00 00                  ff .end (operand)
  5b a4 00 00                  04 .incset
  5c a4 00 00                  01 .literal
  5d a4 00 00         0a 00 00 00 10
  61 a4 00 00                  ff .end (operand)
  62 a4 00 00               01 3b .exec VcText
  64 a4 00 00                  01 .literal
  65 a4 00 00         f5 00 00 00 245
  69 a4 00 00                  ff .end (operand)
  6a a4 00 00               03 00 .var1 FLAGS
  6c a4 00 00                  01 .literal
  6d a4 00 00         53 02 00 00 595
  71 a4 00 00                  ff .end (operand)
  72 a4 00 00                  ff .end (operand)
  73 a4 00 00                     "Webb"

              57 65 62 62 00 
  78 a4 00 00               03 00 .var1 FLAGS
  7a a4 00 00                  01 .literal
  7b a4 00 00         53 02 00 00 595
  7f a4 00 00                  ff .end (operand)
  80 a4 00 00                  04 .incset
  81 a4 00 00                  01 .literal
  82 a4 00 00         0a 00 00 00 10
  86 a4 00 00                  ff .end (operand)
  87 a4 00 00               01 4e .exec VcTextNum
  89 a4 00 00                  01 .literal
  8a a4 00 00         f5 00 00 00 245
  8e a4 00 00                  ff .end (operand)
  8f a4 00 00               03 00 .var1 FLAGS
  91 a4 00 00                  01 .literal
  92 a4 00 00         53 02 00 00 595
  96 a4 00 00                  ff .end (operand)
  97 a4 00 00                  ff .end (operand)
  98 a4 00 00               03 07 .var1 CURHP
  9a a4 00 00                  01 .literal
  9b a4 00 00         02 00 00 00 2
  9f a4 00 00                  ff .end (operand)
  a0 a4 00 00                  ff .end (operand)
  a1 a4 00 00               01 3b .exec VcText
  a3 a4 00 00                  01 .literal
  a4 a4 00 00         09 01 00 00 265
  a8 a4 00 00                  ff .end (operand)
  a9 a4 00 00               03 00 .var1 FLAGS
  ab a4 00 00                  01 .literal
  ac a4 00 00         53 02 00 00 595
  b0 a4 00 00                  ff .end (operand)
  b1 a4 00 00                  ff .end (operand)
  b2 a4 00 00                     "/"

              2f 00 
  b4 a4 00 00               01 4e .exec VcTextNum
  b6 a4 00 00                  01 .literal
  b7 a4 00 00         13 01 00 00 275
  bb a4 00 00                  ff .end (operand)
  bc a4 00 00               03 00 .var1 FLAGS
  be a4 00 00                  01 .literal
  bf a4 00 00         53 02 00 00 595
  c3 a4 00 00                  ff .end (operand)
  c4 a4 00 00                  ff .end (operand)
  c5 a4 00 00               03 08 .var1 MAXHP
  c7 a4 00 00                  01 .literal
  c8 a4 00 00         02 00 00 00 2
  cc a4 00 00                  ff .end (operand)
  cd a4 00 00                  ff .end (operand)
  ce a4 00 00               03 00 .var1 FLAGS
  d0 a4 00 00                  01 .literal
  d1 a4 00 00         53 02 00 00 595
  d5 a4 00 00                  ff .end (operand)
  d6 a4 00 00                  04 .incset
  d7 a4 00 00                  01 .literal
  d8 a4 00 00         0a 00 00 00 10
  dc a4 00 00                  ff .end (operand)
  dd a4 00 00               01 4e .exec VcTextNum
  df a4 00 00                  01 .literal
  e0 a4 00 00         f5 00 00 00 245
  e4 a4 00 00                  ff .end (operand)
  e5 a4 00 00               03 00 .var1 FLAGS
  e7 a4 00 00                  01 .literal
  e8 a4 00 00         53 02 00 00 595
  ec a4 00 00                  ff .end (operand)
  ed a4 00 00                  ff .end (operand)
  ee a4 00 00               03 09 .var1 CURMP
  f0 a4 00 00                  01 .literal
  f1 a4 00 00         02 00 00 00 2
  f5 a4 00 00                  ff .end (operand)
  f6 a4 00 00                  ff .end (operand)
  f7 a4 00 00               01 3b .exec VcText
  f9 a4 00 00                  01 .literal
  fa a4 00 00         09 01 00 00 265
  fe a4 00 00                  ff .end (operand)
  ff a4 00 00               03 00 .var1 FLAGS
  01 a5 00 00                  01 .literal
  02 a5 00 00         53 02 00 00 595
  06 a5 00 00                  ff .end (operand)
  07 a5 00 00                  ff .end (operand)
  08 a5 00 00                     "/"

              2f 00 
  0a a5 00 00               01 4e .exec VcTextNum
  0c a5 00 00                  01 .literal
  0d a5 00 00         13 01 00 00 275
  11 a5 00 00                  ff .end (operand)
  12 a5 00 00               03 00 .var1 FLAGS
  14 a5 00 00                  01 .literal
  15 a5 00 00         53 02 00 00 595
  19 a5 00 00                  ff .end (operand)
  1a a5 00 00                  ff .end (operand)
  1b a5 00 00               03 0a .var1 MAXMP
  1d a5 00 00                  01 .literal
  1e a5 00 00         02 00 00 00 2
  22 a5 00 00                  ff .end (operand)
  23 a5 00 00                  ff .end (operand)
if393
::24 a5 00 00               05 01 .if [terms=1]
  26 a5 00 00         05 a6 00 00 .else
  2a a5 00 00               03 02 .var1 CHAR
  2c a5 00 00                  01 .literal
  2d a5 00 00         03 00 00 00 3
  31 a5 00 00                  ff .end (operand)
  32 a5 00 00                  ff .end (operand)
  34 a5 00 00                  01 .if-sign-nonzero
  34 a5 00 00               03 00 .var1 FLAGS
  36 a5 00 00                  01 .literal
  37 a5 00 00         53 02 00 00 595
  3b a5 00 00                  ff .end (operand)
  3c a5 00 00                  04 .incset
  3d a5 00 00                  01 .literal
  3e a5 00 00         0a 00 00 00 10
  42 a5 00 00                  ff .end (operand)
  43 a5 00 00               01 3b .exec VcText
  45 a5 00 00                  01 .literal
  46 a5 00 00         f5 00 00 00 245
  4a a5 00 00                  ff .end (operand)
  4b a5 00 00               03 00 .var1 FLAGS
  4d a5 00 00                  01 .literal
  4e a5 00 00         53 02 00 00 595
  52 a5 00 00                  ff .end (operand)
  53 a5 00 00                  ff .end (operand)
  54 a5 00 00                     "Feng"

              46 65 6e 67 00 
  59 a5 00 00               03 00 .var1 FLAGS
  5b a5 00 00                  01 .literal
  5c a5 00 00         53 02 00 00 595
  60 a5 00 00                  ff .end (operand)
  61 a5 00 00                  04 .incset
  62 a5 00 00                  01 .literal
  63 a5 00 00         0a 00 00 00 10
  67 a5 00 00                  ff .end (operand)
  68 a5 00 00               01 4e .exec VcTextNum
  6a a5 00 00                  01 .literal
  6b a5 00 00         f5 00 00 00 245
  6f a5 00 00                  ff .end (operand)
  70 a5 00 00               03 00 .var1 FLAGS
  72 a5 00 00                  01 .literal
  73 a5 00 00         53 02 00 00 595
  77 a5 00 00                  ff .end (operand)
  78 a5 00 00                  ff .end (operand)
  79 a5 00 00               03 07 .var1 CURHP
  7b a5 00 00                  01 .literal
  7c a5 00 00         03 00 00 00 3
  80 a5 00 00                  ff .end (operand)
  81 a5 00 00                  ff .end (operand)
  82 a5 00 00               01 3b .exec VcText
  84 a5 00 00                  01 .literal
  85 a5 00 00         09 01 00 00 265
  89 a5 00 00                  ff .end (operand)
  8a a5 00 00               03 00 .var1 FLAGS
  8c a5 00 00                  01 .literal
  8d a5 00 00         53 02 00 00 595
  91 a5 00 00                  ff .end (operand)
  92 a5 00 00                  ff .end (operand)
  93 a5 00 00                     "/"

              2f 00 
  95 a5 00 00               01 4e .exec VcTextNum
  97 a5 00 00                  01 .literal
  98 a5 00 00         13 01 00 00 275
  9c a5 00 00                  ff .end (operand)
  9d a5 00 00               03 00 .var1 FLAGS
  9f a5 00 00                  01 .literal
  a0 a5 00 00         53 02 00 00 595
  a4 a5 00 00                  ff .end (operand)
  a5 a5 00 00                  ff .end (operand)
  a6 a5 00 00               03 08 .var1 MAXHP
  a8 a5 00 00                  01 .literal
  a9 a5 00 00         03 00 00 00 3
  ad a5 00 00                  ff .end (operand)
  ae a5 00 00                  ff .end (operand)
  af a5 00 00               03 00 .var1 FLAGS
  b1 a5 00 00                  01 .literal
  b2 a5 00 00         53 02 00 00 595
  b6 a5 00 00                  ff .end (operand)
  b7 a5 00 00                  04 .incset
  b8 a5 00 00                  01 .literal
  b9 a5 00 00         0a 00 00 00 10
  bd a5 00 00                  ff .end (operand)
  be a5 00 00               01 4e .exec VcTextNum
  c0 a5 00 00                  01 .literal
  c1 a5 00 00         f5 00 00 00 245
  c5 a5 00 00                  ff .end (operand)
  c6 a5 00 00               03 00 .var1 FLAGS
  c8 a5 00 00                  01 .literal
  c9 a5 00 00         53 02 00 00 595
  cd a5 00 00                  ff .end (operand)
  ce a5 00 00                  ff .end (operand)
  cf a5 00 00               03 09 .var1 CURMP
  d1 a5 00 00                  01 .literal
  d2 a5 00 00         03 00 00 00 3
  d6 a5 00 00                  ff .end (operand)
  d7 a5 00 00                  ff .end (operand)
  d8 a5 00 00               01 3b .exec VcText
  da a5 00 00                  01 .literal
  db a5 00 00         09 01 00 00 265
  df a5 00 00                  ff .end (operand)
  e0 a5 00 00               03 00 .var1 FLAGS
  e2 a5 00 00                  01 .literal
  e3 a5 00 00         53 02 00 00 595
  e7 a5 00 00                  ff .end (operand)
  e8 a5 00 00                  ff .end (operand)
  e9 a5 00 00                     "/"

              2f 00 
  eb a5 00 00               01 4e .exec VcTextNum
  ed a5 00 00                  01 .literal
  ee a5 00 00         13 01 00 00 275
  f2 a5 00 00                  ff .end (operand)
  f3 a5 00 00               03 00 .var1 FLAGS
  f5 a5 00 00                  01 .literal
  f6 a5 00 00         53 02 00 00 595
  fa a5 00 00                  ff .end (operand)
  fb a5 00 00                  ff .end (operand)
  fc a5 00 00               03 0a .var1 MAXMP
  fe a5 00 00                  01 .literal
  ff a5 00 00         03 00 00 00 3
  03 a6 00 00                  ff .end (operand)
  04 a6 00 00                  ff .end (operand)
if394
::05 a6 00 00               05 01 .if [terms=1]
  07 a6 00 00         e6 a6 00 00 .else
  0b a6 00 00               03 02 .var1 CHAR
  0d a6 00 00                  01 .literal
  0e a6 00 00         04 00 00 00 4
  12 a6 00 00                  ff .end (operand)
  13 a6 00 00                  ff .end (operand)
  15 a6 00 00                  01 .if-sign-nonzero
  15 a6 00 00               03 00 .var1 FLAGS
  17 a6 00 00                  01 .literal
  18 a6 00 00         53 02 00 00 595
  1c a6 00 00                  ff .end (operand)
  1d a6 00 00                  04 .incset
  1e a6 00 00                  01 .literal
  1f a6 00 00         0a 00 00 00 10
  23 a6 00 00                  ff .end (operand)
  24 a6 00 00               01 3b .exec VcText
  26 a6 00 00                  01 .literal
  27 a6 00 00         f5 00 00 00 245
  2b a6 00 00                  ff .end (operand)
  2c a6 00 00               03 00 .var1 FLAGS
  2e a6 00 00                  01 .literal
  2f a6 00 00         53 02 00 00 595
  33 a6 00 00                  ff .end (operand)
  34 a6 00 00                  ff .end (operand)
  35 a6 00 00                     "Rikk"

              52 69 6b 6b 00 
  3a a6 00 00               03 00 .var1 FLAGS
  3c a6 00 00                  01 .literal
  3d a6 00 00         53 02 00 00 595
  41 a6 00 00                  ff .end (operand)
  42 a6 00 00                  04 .incset
  43 a6 00 00                  01 .literal
  44 a6 00 00         0a 00 00 00 10
  48 a6 00 00                  ff .end (operand)
  49 a6 00 00               01 4e .exec VcTextNum
  4b a6 00 00                  01 .literal
  4c a6 00 00         f5 00 00 00 245
  50 a6 00 00                  ff .end (operand)
  51 a6 00 00               03 00 .var1 FLAGS
  53 a6 00 00                  01 .literal
  54 a6 00 00         53 02 00 00 595
  58 a6 00 00                  ff .end (operand)
  59 a6 00 00                  ff .end (operand)
  5a a6 00 00               03 07 .var1 CURHP
  5c a6 00 00                  01 .literal
  5d a6 00 00         04 00 00 00 4
  61 a6 00 00                  ff .end (operand)
  62 a6 00 00                  ff .end (operand)
  63 a6 00 00               01 3b .exec VcText
  65 a6 00 00                  01 .literal
  66 a6 00 00         09 01 00 00 265
  6a a6 00 00                  ff .end (operand)
  6b a6 00 00               03 00 .var1 FLAGS
  6d a6 00 00                  01 .literal
  6e a6 00 00         53 02 00 00 595
  72 a6 00 00                  ff .end (operand)
  73 a6 00 00                  ff .end (operand)
  74 a6 00 00                     "/"

              2f 00 
  76 a6 00 00               01 4e .exec VcTextNum
  78 a6 00 00                  01 .literal
  79 a6 00 00         13 01 00 00 275
  7d a6 00 00                  ff .end (operand)
  7e a6 00 00               03 00 .var1 FLAGS
  80 a6 00 00                  01 .literal
  81 a6 00 00         53 02 00 00 595
  85 a6 00 00                  ff .end (operand)
  86 a6 00 00                  ff .end (operand)
  87 a6 00 00               03 08 .var1 MAXHP
  89 a6 00 00                  01 .literal
  8a a6 00 00         04 00 00 00 4
  8e a6 00 00                  ff .end (operand)
  8f a6 00 00                  ff .end (operand)
  90 a6 00 00               03 00 .var1 FLAGS
  92 a6 00 00                  01 .literal
  93 a6 00 00         53 02 00 00 595
  97 a6 00 00                  ff .end (operand)
  98 a6 00 00                  04 .incset
  99 a6 00 00                  01 .literal
  9a a6 00 00         0a 00 00 00 10
  9e a6 00 00                  ff .end (operand)
  9f a6 00 00               01 4e .exec VcTextNum
  a1 a6 00 00                  01 .literal
  a2 a6 00 00         f5 00 00 00 245
  a6 a6 00 00                  ff .end (operand)
  a7 a6 00 00               03 00 .var1 FLAGS
  a9 a6 00 00                  01 .literal
  aa a6 00 00         53 02 00 00 595
  ae a6 00 00                  ff .end (operand)
  af a6 00 00                  ff .end (operand)
  b0 a6 00 00               03 09 .var1 CURMP
  b2 a6 00 00                  01 .literal
  b3 a6 00 00         04 00 00 00 4
  b7 a6 00 00                  ff .end (operand)
  b8 a6 00 00                  ff .end (operand)
  b9 a6 00 00               01 3b .exec VcText
  bb a6 00 00                  01 .literal
  bc a6 00 00         09 01 00 00 265
  c0 a6 00 00                  ff .end (operand)
  c1 a6 00 00               03 00 .var1 FLAGS
  c3 a6 00 00                  01 .literal
  c4 a6 00 00         53 02 00 00 595
  c8 a6 00 00                  ff .end (operand)
  c9 a6 00 00                  ff .end (operand)
  ca a6 00 00                     "/"

              2f 00 
  cc a6 00 00               01 4e .exec VcTextNum
  ce a6 00 00                  01 .literal
  cf a6 00 00         13 01 00 00 275
  d3 a6 00 00                  ff .end (operand)
  d4 a6 00 00               03 00 .var1 FLAGS
  d6 a6 00 00                  01 .literal
  d7 a6 00 00         53 02 00 00 595
  db a6 00 00                  ff .end (operand)
  dc a6 00 00                  ff .end (operand)
  dd a6 00 00               03 0a .var1 MAXMP
  df a6 00 00                  01 .literal
  e0 a6 00 00         04 00 00 00 4
  e4 a6 00 00                  ff .end (operand)
  e5 a6 00 00                  ff .end (operand)
if395
::e6 a6 00 00               05 01 .if [terms=1]
  e8 a6 00 00         c8 a7 00 00 .else
  ec a6 00 00               03 02 .var1 CHAR
  ee a6 00 00                  01 .literal
  ef a6 00 00         05 00 00 00 5
  f3 a6 00 00                  ff .end (operand)
  f4 a6 00 00                  ff .end (operand)
  f6 a6 00 00                  01 .if-sign-nonzero
  f6 a6 00 00               03 00 .var1 FLAGS
  f8 a6 00 00                  01 .literal
  f9 a6 00 00         53 02 00 00 595
  fd a6 00 00                  ff .end (operand)
  fe a6 00 00                  04 .incset
  ff a6 00 00                  01 .literal
  00 a7 00 00         0a 00 00 00 10
  04 a7 00 00                  ff .end (operand)
  05 a7 00 00               01 3b .exec VcText
  07 a7 00 00                  01 .literal
  08 a7 00 00         f5 00 00 00 245
  0c a7 00 00                  ff .end (operand)
  0d a7 00 00               03 00 .var1 FLAGS
  0f a7 00 00                  01 .literal
  10 a7 00 00         53 02 00 00 595
  14 a7 00 00                  ff .end (operand)
  15 a7 00 00                  ff .end (operand)
  16 a7 00 00                     "Dingo"

              44 69 6e 67 6f 00 
  1c a7 00 00               03 00 .var1 FLAGS
  1e a7 00 00                  01 .literal
  1f a7 00 00         53 02 00 00 595
  23 a7 00 00                  ff .end (operand)
  24 a7 00 00                  04 .incset
  25 a7 00 00                  01 .literal
  26 a7 00 00         0a 00 00 00 10
  2a a7 00 00                  ff .end (operand)
  2b a7 00 00               01 4e .exec VcTextNum
  2d a7 00 00                  01 .literal
  2e a7 00 00         f5 00 00 00 245
  32 a7 00 00                  ff .end (operand)
  33 a7 00 00               03 00 .var1 FLAGS
  35 a7 00 00                  01 .literal
  36 a7 00 00         53 02 00 00 595
  3a a7 00 00                  ff .end (operand)
  3b a7 00 00                  ff .end (operand)
  3c a7 00 00               03 07 .var1 CURHP
  3e a7 00 00                  01 .literal
  3f a7 00 00         05 00 00 00 5
  43 a7 00 00                  ff .end (operand)
  44 a7 00 00                  ff .end (operand)
  45 a7 00 00               01 3b .exec VcText
  47 a7 00 00                  01 .literal
  48 a7 00 00         09 01 00 00 265
  4c a7 00 00                  ff .end (operand)
  4d a7 00 00               03 00 .var1 FLAGS
  4f a7 00 00                  01 .literal
  50 a7 00 00         53 02 00 00 595
  54 a7 00 00                  ff .end (operand)
  55 a7 00 00                  ff .end (operand)
  56 a7 00 00                     "/"

              2f 00 
  58 a7 00 00               01 4e .exec VcTextNum
  5a a7 00 00                  01 .literal
  5b a7 00 00         13 01 00 00 275
  5f a7 00 00                  ff .end (operand)
  60 a7 00 00               03 00 .var1 FLAGS
  62 a7 00 00                  01 .literal
  63 a7 00 00         53 02 00 00 595
  67 a7 00 00                  ff .end (operand)
  68 a7 00 00                  ff .end (operand)
  69 a7 00 00               03 08 .var1 MAXHP
  6b a7 00 00                  01 .literal
  6c a7 00 00         05 00 00 00 5
  70 a7 00 00                  ff .end (operand)
  71 a7 00 00                  ff .end (operand)
  72 a7 00 00               03 00 .var1 FLAGS
  74 a7 00 00                  01 .literal
  75 a7 00 00         53 02 00 00 595
  79 a7 00 00                  ff .end (operand)
  7a a7 00 00                  04 .incset
  7b a7 00 00                  01 .literal
  7c a7 00 00         0a 00 00 00 10
  80 a7 00 00                  ff .end (operand)
  81 a7 00 00               01 4e .exec VcTextNum
  83 a7 00 00                  01 .literal
  84 a7 00 00         f5 00 00 00 245
  88 a7 00 00                  ff .end (operand)
  89 a7 00 00               03 00 .var1 FLAGS
  8b a7 00 00                  01 .literal
  8c a7 00 00         53 02 00 00 595
  90 a7 00 00                  ff .end (operand)
  91 a7 00 00                  ff .end (operand)
  92 a7 00 00               03 09 .var1 CURMP
  94 a7 00 00                  01 .literal
  95 a7 00 00         05 00 00 00 5
  99 a7 00 00                  ff .end (operand)
  9a a7 00 00                  ff .end (operand)
  9b a7 00 00               01 3b .exec VcText
  9d a7 00 00                  01 .literal
  9e a7 00 00         09 01 00 00 265
  a2 a7 00 00                  ff .end (operand)
  a3 a7 00 00               03 00 .var1 FLAGS
  a5 a7 00 00                  01 .literal
  a6 a7 00 00         53 02 00 00 595
  aa a7 00 00                  ff .end (operand)
  ab a7 00 00                  ff .end (operand)
  ac a7 00 00                     "/"

              2f 00 
  ae a7 00 00               01 4e .exec VcTextNum
  b0 a7 00 00                  01 .literal
  b1 a7 00 00         13 01 00 00 275
  b5 a7 00 00                  ff .end (operand)
  b6 a7 00 00               03 00 .var1 FLAGS
  b8 a7 00 00                  01 .literal
  b9 a7 00 00         53 02 00 00 595
  bd a7 00 00                  ff .end (operand)
  be a7 00 00                  ff .end (operand)
  bf a7 00 00               03 0a .var1 MAXMP
  c1 a7 00 00                  01 .literal
  c2 a7 00 00         05 00 00 00 5
  c6 a7 00 00                  ff .end (operand)
  c7 a7 00 00                  ff .end (operand)
if396
::c8 a7 00 00               05 01 .if [terms=1]
  ca a7 00 00         ac a8 00 00 .else
  ce a7 00 00               03 02 .var1 CHAR
  d0 a7 00 00                  01 .literal
  d1 a7 00 00         06 00 00 00 6
  d5 a7 00 00                  ff .end (operand)
  d6 a7 00 00                  ff .end (operand)
  d8 a7 00 00                  01 .if-sign-nonzero
  d8 a7 00 00               03 00 .var1 FLAGS
  da a7 00 00                  01 .literal
  db a7 00 00         53 02 00 00 595
  df a7 00 00                  ff .end (operand)
  e0 a7 00 00                  04 .incset
  e1 a7 00 00                  01 .literal
  e2 a7 00 00         0a 00 00 00 10
  e6 a7 00 00                  ff .end (operand)
  e7 a7 00 00               01 3b .exec VcText
  e9 a7 00 00                  01 .literal
  ea a7 00 00         f5 00 00 00 245
  ee a7 00 00                  ff .end (operand)
  ef a7 00 00               03 00 .var1 FLAGS
  f1 a7 00 00                  01 .literal
  f2 a7 00 00         53 02 00 00 595
  f6 a7 00 00                  ff .end (operand)
  f7 a7 00 00                  ff .end (operand)
  f8 a7 00 00                     "Jeemdub"

              4a 65 65 6d 64 75 62 00 
  00 a8 00 00               03 00 .var1 FLAGS
  02 a8 00 00                  01 .literal
  03 a8 00 00         53 02 00 00 595
  07 a8 00 00                  ff .end (operand)
  08 a8 00 00                  04 .incset
  09 a8 00 00                  01 .literal
  0a a8 00 00         0a 00 00 00 10
  0e a8 00 00                  ff .end (operand)
  0f a8 00 00               01 4e .exec VcTextNum
  11 a8 00 00                  01 .literal
  12 a8 00 00         f5 00 00 00 245
  16 a8 00 00                  ff .end (operand)
  17 a8 00 00               03 00 .var1 FLAGS
  19 a8 00 00                  01 .literal
  1a a8 00 00         53 02 00 00 595
  1e a8 00 00                  ff .end (operand)
  1f a8 00 00                  ff .end (operand)
  20 a8 00 00               03 07 .var1 CURHP
  22 a8 00 00                  01 .literal
  23 a8 00 00         06 00 00 00 6
  27 a8 00 00                  ff .end (operand)
  28 a8 00 00                  ff .end (operand)
  29 a8 00 00               01 3b .exec VcText
  2b a8 00 00                  01 .literal
  2c a8 00 00         09 01 00 00 265
  30 a8 00 00                  ff .end (operand)
  31 a8 00 00               03 00 .var1 FLAGS
  33 a8 00 00                  01 .literal
  34 a8 00 00         53 02 00 00 595
  38 a8 00 00                  ff .end (operand)
  39 a8 00 00                  ff .end (operand)
  3a a8 00 00                     "/"

              2f 00 
  3c a8 00 00               01 4e .exec VcTextNum
  3e a8 00 00                  01 .literal
  3f a8 00 00         13 01 00 00 275
  43 a8 00 00                  ff .end (operand)
  44 a8 00 00               03 00 .var1 FLAGS
  46 a8 00 00                  01 .literal
  47 a8 00 00         53 02 00 00 595
  4b a8 00 00                  ff .end (operand)
  4c a8 00 00                  ff .end (operand)
  4d a8 00 00               03 08 .var1 MAXHP
  4f a8 00 00                  01 .literal
  50 a8 00 00         06 00 00 00 6
  54 a8 00 00                  ff .end (operand)
  55 a8 00 00                  ff .end (operand)
  56 a8 00 00               03 00 .var1 FLAGS
  58 a8 00 00                  01 .literal
  59 a8 00 00         53 02 00 00 595
  5d a8 00 00                  ff .end (operand)
  5e a8 00 00                  04 .incset
  5f a8 00 00                  01 .literal
  60 a8 00 00         0a 00 00 00 10
  64 a8 00 00                  ff .end (operand)
  65 a8 00 00               01 4e .exec VcTextNum
  67 a8 00 00                  01 .literal
  68 a8 00 00         f5 00 00 00 245
  6c a8 00 00                  ff .end (operand)
  6d a8 00 00               03 00 .var1 FLAGS
  6f a8 00 00                  01 .literal
  70 a8 00 00         53 02 00 00 595
  74 a8 00 00                  ff .end (operand)
  75 a8 00 00                  ff .end (operand)
  76 a8 00 00               03 09 .var1 CURMP
  78 a8 00 00                  01 .literal
  79 a8 00 00         06 00 00 00 6
  7d a8 00 00                  ff .end (operand)
  7e a8 00 00                  ff .end (operand)
  7f a8 00 00               01 3b .exec VcText
  81 a8 00 00                  01 .literal
  82 a8 00 00         09 01 00 00 265
  86 a8 00 00                  ff .end (operand)
  87 a8 00 00               03 00 .var1 FLAGS
  89 a8 00 00                  01 .literal
  8a a8 00 00         53 02 00 00 595
  8e a8 00 00                  ff .end (operand)
  8f a8 00 00                  ff .end (operand)
  90 a8 00 00                     "/"

              2f 00 
  92 a8 00 00               01 4e .exec VcTextNum
  94 a8 00 00                  01 .literal
  95 a8 00 00         13 01 00 00 275
  99 a8 00 00                  ff .end (operand)
  9a a8 00 00               03 00 .var1 FLAGS
  9c a8 00 00                  01 .literal
  9d a8 00 00         53 02 00 00 595
  a1 a8 00 00                  ff .end (operand)
  a2 a8 00 00                  ff .end (operand)
  a3 a8 00 00               03 0a .var1 MAXMP
  a5 a8 00 00                  01 .literal
  a6 a8 00 00         06 00 00 00 6
  aa a8 00 00                  ff .end (operand)
  ab a8 00 00                  ff .end (operand)
if397
::ac a8 00 00               05 01 .if [terms=1]
  ae a8 00 00         8d a9 00 00 .else
  b2 a8 00 00               03 02 .var1 CHAR
  b4 a8 00 00                  01 .literal
  b5 a8 00 00         07 00 00 00 7
  b9 a8 00 00                  ff .end (operand)
  ba a8 00 00                  ff .end (operand)
  bc a8 00 00                  01 .if-sign-nonzero
  bc a8 00 00               03 00 .var1 FLAGS
  be a8 00 00                  01 .literal
  bf a8 00 00         53 02 00 00 595
  c3 a8 00 00                  ff .end (operand)
  c4 a8 00 00                  04 .incset
  c5 a8 00 00                  01 .literal
  c6 a8 00 00         0a 00 00 00 10
  ca a8 00 00                  ff .end (operand)
  cb a8 00 00               01 3b .exec VcText
  cd a8 00 00                  01 .literal
  ce a8 00 00         f5 00 00 00 245
  d2 a8 00 00                  ff .end (operand)
  d3 a8 00 00               03 00 .var1 FLAGS
  d5 a8 00 00                  01 .literal
  d6 a8 00 00         53 02 00 00 595
  da a8 00 00                  ff .end (operand)
  db a8 00 00                  ff .end (operand)
  dc a8 00 00                     "Bull"

              42 75 6c 6c 00 
  e1 a8 00 00               03 00 .var1 FLAGS
  e3 a8 00 00                  01 .literal
  e4 a8 00 00         53 02 00 00 595
  e8 a8 00 00                  ff .end (operand)
  e9 a8 00 00                  04 .incset
  ea a8 00 00                  01 .literal
  eb a8 00 00         0a 00 00 00 10
  ef a8 00 00                  ff .end (operand)
  f0 a8 00 00               01 4e .exec VcTextNum
  f2 a8 00 00                  01 .literal
  f3 a8 00 00         f5 00 00 00 245
  f7 a8 00 00                  ff .end (operand)
  f8 a8 00 00               03 00 .var1 FLAGS
  fa a8 00 00                  01 .literal
  fb a8 00 00         53 02 00 00 595
  ff a8 00 00                  ff .end (operand)
  00 a9 00 00                  ff .end (operand)
  01 a9 00 00               03 07 .var1 CURHP
  03 a9 00 00                  01 .literal
  04 a9 00 00         07 00 00 00 7
  08 a9 00 00                  ff .end (operand)
  09 a9 00 00                  ff .end (operand)
  0a a9 00 00               01 3b .exec VcText
  0c a9 00 00                  01 .literal
  0d a9 00 00         09 01 00 00 265
  11 a9 00 00                  ff .end (operand)
  12 a9 00 00               03 00 .var1 FLAGS
  14 a9 00 00                  01 .literal
  15 a9 00 00         53 02 00 00 595
  19 a9 00 00                  ff .end (operand)
  1a a9 00 00                  ff .end (operand)
  1b a9 00 00                     "/"

              2f 00 
  1d a9 00 00               01 4e .exec VcTextNum
  1f a9 00 00                  01 .literal
  20 a9 00 00         13 01 00 00 275
  24 a9 00 00                  ff .end (operand)
  25 a9 00 00               03 00 .var1 FLAGS
  27 a9 00 00                  01 .literal
  28 a9 00 00         53 02 00 00 595
  2c a9 00 00                  ff .end (operand)
  2d a9 00 00                  ff .end (operand)
  2e a9 00 00               03 08 .var1 MAXHP
  30 a9 00 00                  01 .literal
  31 a9 00 00         07 00 00 00 7
  35 a9 00 00                  ff .end (operand)
  36 a9 00 00                  ff .end (operand)
  37 a9 00 00               03 00 .var1 FLAGS
  39 a9 00 00                  01 .literal
  3a a9 00 00         53 02 00 00 595
  3e a9 00 00                  ff .end (operand)
  3f a9 00 00                  04 .incset
  40 a9 00 00                  01 .literal
  41 a9 00 00         0a 00 00 00 10
  45 a9 00 00                  ff .end (operand)
  46 a9 00 00               01 4e .exec VcTextNum
  48 a9 00 00                  01 .literal
  49 a9 00 00         f5 00 00 00 245
  4d a9 00 00                  ff .end (operand)
  4e a9 00 00               03 00 .var1 FLAGS
  50 a9 00 00                  01 .literal
  51 a9 00 00         53 02 00 00 595
  55 a9 00 00                  ff .end (operand)
  56 a9 00 00                  ff .end (operand)
  57 a9 00 00               03 09 .var1 CURMP
  59 a9 00 00                  01 .literal
  5a a9 00 00         07 00 00 00 7
  5e a9 00 00                  ff .end (operand)
  5f a9 00 00                  ff .end (operand)
  60 a9 00 00               01 3b .exec VcText
  62 a9 00 00                  01 .literal
  63 a9 00 00         09 01 00 00 265
  67 a9 00 00                  ff .end (operand)
  68 a9 00 00               03 00 .var1 FLAGS
  6a a9 00 00                  01 .literal
  6b a9 00 00         53 02 00 00 595
  6f a9 00 00                  ff .end (operand)
  70 a9 00 00                  ff .end (operand)
  71 a9 00 00                     "/"

              2f 00 
  73 a9 00 00               01 4e .exec VcTextNum
  75 a9 00 00                  01 .literal
  76 a9 00 00         13 01 00 00 275
  7a a9 00 00                  ff .end (operand)
  7b a9 00 00               03 00 .var1 FLAGS
  7d a9 00 00                  01 .literal
  7e a9 00 00         53 02 00 00 595
  82 a9 00 00                  ff .end (operand)
  83 a9 00 00                  ff .end (operand)
  84 a9 00 00               03 0a .var1 MAXMP
  86 a9 00 00                  01 .literal
  87 a9 00 00         07 00 00 00 7
  8b a9 00 00                  ff .end (operand)
  8c a9 00 00                  ff .end (operand)
if398
::8d a9 00 00               05 01 .if [terms=1]
  8f a9 00 00         6f aa 00 00 .else
  93 a9 00 00               03 02 .var1 CHAR
  95 a9 00 00                  01 .literal
  96 a9 00 00         08 00 00 00 8
  9a a9 00 00                  ff .end (operand)
  9b a9 00 00                  ff .end (operand)
  9d a9 00 00                  01 .if-sign-nonzero
  9d a9 00 00               03 00 .var1 FLAGS
  9f a9 00 00                  01 .literal
  a0 a9 00 00         53 02 00 00 595
  a4 a9 00 00                  ff .end (operand)
  a5 a9 00 00                  04 .incset
  a6 a9 00 00                  01 .literal
  a7 a9 00 00         0a 00 00 00 10
  ab a9 00 00                  ff .end (operand)
  ac a9 00 00               01 3b .exec VcText
  ae a9 00 00                  01 .literal
  af a9 00 00         f5 00 00 00 245
  b3 a9 00 00                  ff .end (operand)
  b4 a9 00 00               03 00 .var1 FLAGS
  b6 a9 00 00                  01 .literal
  b7 a9 00 00         53 02 00 00 595
  bb a9 00 00                  ff .end (operand)
  bc a9 00 00                  ff .end (operand)
  bd a9 00 00                     "Lumin"

              4c 75 6d 69 6e 00 
  c3 a9 00 00               03 00 .var1 FLAGS
  c5 a9 00 00                  01 .literal
  c6 a9 00 00         53 02 00 00 595
  ca a9 00 00                  ff .end (operand)
  cb a9 00 00                  04 .incset
  cc a9 00 00                  01 .literal
  cd a9 00 00         0a 00 00 00 10
  d1 a9 00 00                  ff .end (operand)
  d2 a9 00 00               01 4e .exec VcTextNum
  d4 a9 00 00                  01 .literal
  d5 a9 00 00         f5 00 00 00 245
  d9 a9 00 00                  ff .end (operand)
  da a9 00 00               03 00 .var1 FLAGS
  dc a9 00 00                  01 .literal
  dd a9 00 00         53 02 00 00 595
  e1 a9 00 00                  ff .end (operand)
  e2 a9 00 00                  ff .end (operand)
  e3 a9 00 00               03 07 .var1 CURHP
  e5 a9 00 00                  01 .literal
  e6 a9 00 00         08 00 00 00 8
  ea a9 00 00                  ff .end (operand)
  eb a9 00 00                  ff .end (operand)
  ec a9 00 00               01 3b .exec VcText
  ee a9 00 00                  01 .literal
  ef a9 00 00         09 01 00 00 265
  f3 a9 00 00                  ff .end (operand)
  f4 a9 00 00               03 00 .var1 FLAGS
  f6 a9 00 00                  01 .literal
  f7 a9 00 00         53 02 00 00 595
  fb a9 00 00                  ff .end (operand)
  fc a9 00 00                  ff .end (operand)
  fd a9 00 00                     "/"

              2f 00 
  ff a9 00 00               01 4e .exec VcTextNum
  01 aa 00 00                  01 .literal
  02 aa 00 00         13 01 00 00 275
  06 aa 00 00                  ff .end (operand)
  07 aa 00 00               03 00 .var1 FLAGS
  09 aa 00 00                  01 .literal
  0a aa 00 00         53 02 00 00 595
  0e aa 00 00                  ff .end (operand)
  0f aa 00 00                  ff .end (operand)
  10 aa 00 00               03 08 .var1 MAXHP
  12 aa 00 00                  01 .literal
  13 aa 00 00         08 00 00 00 8
  17 aa 00 00                  ff .end (operand)
  18 aa 00 00                  ff .end (operand)
  19 aa 00 00               03 00 .var1 FLAGS
  1b aa 00 00                  01 .literal
  1c aa 00 00         53 02 00 00 595
  20 aa 00 00                  ff .end (operand)
  21 aa 00 00                  04 .incset
  22 aa 00 00                  01 .literal
  23 aa 00 00         0a 00 00 00 10
  27 aa 00 00                  ff .end (operand)
  28 aa 00 00               01 4e .exec VcTextNum
  2a aa 00 00                  01 .literal
  2b aa 00 00         f5 00 00 00 245
  2f aa 00 00                  ff .end (operand)
  30 aa 00 00               03 00 .var1 FLAGS
  32 aa 00 00                  01 .literal
  33 aa 00 00         53 02 00 00 595
  37 aa 00 00                  ff .end (operand)
  38 aa 00 00                  ff .end (operand)
  39 aa 00 00               03 09 .var1 CURMP
  3b aa 00 00                  01 .literal
  3c aa 00 00         08 00 00 00 8
  40 aa 00 00                  ff .end (operand)
  41 aa 00 00                  ff .end (operand)
  42 aa 00 00               01 3b .exec VcText
  44 aa 00 00                  01 .literal
  45 aa 00 00         09 01 00 00 265
  49 aa 00 00                  ff .end (operand)
  4a aa 00 00               03 00 .var1 FLAGS
  4c aa 00 00                  01 .literal
  4d aa 00 00         53 02 00 00 595
  51 aa 00 00                  ff .end (operand)
  52 aa 00 00                  ff .end (operand)
  53 aa 00 00                     "/"

              2f 00 
  55 aa 00 00               01 4e .exec VcTextNum
  57 aa 00 00                  01 .literal
  58 aa 00 00         13 01 00 00 275
  5c aa 00 00                  ff .end (operand)
  5d aa 00 00               03 00 .var1 FLAGS
  5f aa 00 00                  01 .literal
  60 aa 00 00         53 02 00 00 595
  64 aa 00 00                  ff .end (operand)
  65 aa 00 00                  ff .end (operand)
  66 aa 00 00               03 0a .var1 MAXMP
  68 aa 00 00                  01 .literal
  69 aa 00 00         08 00 00 00 8
  6d aa 00 00                  ff .end (operand)
  6e aa 00 00                  ff .end (operand)
::6f aa 00 00               01 3b .exec VcText
  71 aa 00 00                  01 .literal
  72 aa 00 00         f5 00 00 00 245
  76 aa 00 00                  ff .end (operand)
  77 aa 00 00                  01 .literal
  78 aa 00 00         ad 00 00 00 173
  7c aa 00 00                  ff .end (operand)
  7d aa 00 00                     "SP"

              53 50 00 
  80 aa 00 00               01 4e .exec VcTextNum
  82 aa 00 00                  01 .literal
  83 aa 00 00         f5 00 00 00 245
  87 aa 00 00                  ff .end (operand)
  88 aa 00 00                  01 .literal
  89 aa 00 00         b7 00 00 00 183
  8d aa 00 00                  ff .end (operand)
  8e aa 00 00               03 00 .var1 FLAGS
  90 aa 00 00                  01 .literal
  91 aa 00 00         bf 02 00 00 703
  95 aa 00 00                  ff .end (operand)
  96 aa 00 00                  ff .end (operand)
  97 aa 00 00               01 20 .exec Redraw
  99 aa 00 00                  ff .end (block)

.event 21
* 9a aa 00 00                  0a .switch
  9b aa 00 00               03 00 .var1 FLAGS
  9d aa 00 00                  01 .literal
  9e aa 00 00         7e 02 00 00 638
  a2 aa 00 00                  ff .end (operand)
  a3 aa 00 00                  ff .end (operand)
  a4 aa 00 00                  0b .case
  a5 aa 00 00                  05 .group
  a6 aa 00 00                  01 .literal
  a7 aa 00 00         01 00 00 00 1
  ab aa 00 00                  ff .end (operand)
  ac aa 00 00                  ff .end (operand)
  ad aa 00 00         c1 ab 00 00 .case-end-address
  b1 aa 00 00                  0a .switch
  b2 aa 00 00               03 00 .var1 FLAGS
  b4 aa 00 00                  01 .literal
  b5 aa 00 00         80 02 00 00 640
  b9 aa 00 00                  ff .end (operand)
  ba aa 00 00                  ff .end (operand)
  bb aa 00 00                  0b .case
  bc aa 00 00                  05 .group
  bd aa 00 00                  01 .literal
  be aa 00 00         01 00 00 00 1
  c2 aa 00 00                  ff .end (operand)
  c3 aa 00 00                  ff .end (operand)
  c4 aa 00 00         e0 aa 00 00 .case-end-address
  c8 aa 00 00               01 4e .exec VcTextNum
  ca aa 00 00                  01 .literal
  cb aa 00 00         30 00 00 00 48
  cf aa 00 00                  ff .end (operand)
  d0 aa 00 00                  01 .literal
  d1 aa 00 00         50 00 00 00 80
  d5 aa 00 00                  ff .end (operand)
  d6 aa 00 00               03 00 .var1 FLAGS
  d8 aa 00 00                  01 .literal
  d9 aa 00 00         cc 02 00 00 716
  dd aa 00 00                  ff .end (operand)
  de aa 00 00                  ff .end (operand)
  df aa 00 00                  ff .end (block)
 :e0 aa 00 00                  0b .case
  e1 aa 00 00                  05 .group
  e2 aa 00 00                  01 .literal
  e3 aa 00 00         02 00 00 00 2
  e7 aa 00 00                  ff .end (operand)
  e8 aa 00 00                  ff .end (operand)
  e9 aa 00 00         05 ab 00 00 .case-end-address
  ed aa 00 00               01 4e .exec VcTextNum
  ef aa 00 00                  01 .literal
  f0 aa 00 00         30 00 00 00 48
  f4 aa 00 00                  ff .end (operand)
  f5 aa 00 00                  01 .literal
  f6 aa 00 00         70 00 00 00 112
  fa aa 00 00                  ff .end (operand)
  fb aa 00 00               03 00 .var1 FLAGS
  fd aa 00 00                  01 .literal
  fe aa 00 00         cc 02 00 00 716
  02 ab 00 00                  ff .end (operand)
  03 ab 00 00                  ff .end (operand)
  04 ab 00 00                  ff .end (block)
 :05 ab 00 00                  0b .case
  06 ab 00 00                  05 .group
  07 ab 00 00                  01 .literal
  08 ab 00 00         03 00 00 00 3
  0c ab 00 00                  ff .end (operand)
  0d ab 00 00                  ff .end (operand)
  0e ab 00 00         2a ab 00 00 .case-end-address
  12 ab 00 00               01 4e .exec VcTextNum
  14 ab 00 00                  01 .literal
  15 ab 00 00         30 00 00 00 48
  19 ab 00 00                  ff .end (operand)
  1a ab 00 00                  01 .literal
  1b ab 00 00         90 00 00 00 144
  1f ab 00 00                  ff .end (operand)
  20 ab 00 00               03 00 .var1 FLAGS
  22 ab 00 00                  01 .literal
  23 ab 00 00         cc 02 00 00 716
  27 ab 00 00                  ff .end (operand)
  28 ab 00 00                  ff .end (operand)
  29 ab 00 00                  ff .end (block)
 :2a ab 00 00                  0b .case
  2b ab 00 00                  05 .group
  2c ab 00 00                  01 .literal
  2d ab 00 00         07 00 00 00 7
  31 ab 00 00                  ff .end (operand)
  32 ab 00 00                  ff .end (operand)
  33 ab 00 00         bf ab 00 00 .case-end-address
if399
 :37 ab 00 00               05 01 .if [terms=1]
  39 ab 00 00         64 ab 00 00 .else
  3d ab 00 00               03 00 .var1 FLAGS
  3f ab 00 00                  01 .literal
  40 ab 00 00         56 02 00 00 598
  44 ab 00 00                  ff .end (operand)
  45 ab 00 00                  ff .end (operand)
  47 ab 00 00                  03 .if-sign-nonzero
  47 ab 00 00                  01 .literal
  48 ab 00 00         00 00 00 00 0
  4c ab 00 00                  ff .end (operand)
  4d ab 00 00               01 4e .exec VcTextNum
  4f ab 00 00                  01 .literal
  50 ab 00 00         30 00 00 00 48
  54 ab 00 00                  ff .end (operand)
  55 ab 00 00                  01 .literal
  56 ab 00 00         50 00 00 00 80
  5a ab 00 00                  ff .end (operand)
  5b ab 00 00               03 00 .var1 FLAGS
  5d ab 00 00                  01 .literal
  5e ab 00 00         cc 02 00 00 716
  62 ab 00 00                  ff .end (operand)
  63 ab 00 00                  ff .end (operand)
if400
::64 ab 00 00               05 01 .if [terms=1]
  66 ab 00 00         91 ab 00 00 .else
  6a ab 00 00               03 00 .var1 FLAGS
  6c ab 00 00                  01 .literal
  6d ab 00 00         57 02 00 00 599
  71 ab 00 00                  ff .end (operand)
  72 ab 00 00                  ff .end (operand)
  74 ab 00 00                  03 .if-sign-nonzero
  74 ab 00 00                  01 .literal
  75 ab 00 00         00 00 00 00 0
  79 ab 00 00                  ff .end (operand)
  7a ab 00 00               01 4e .exec VcTextNum
  7c ab 00 00                  01 .literal
  7d ab 00 00         30 00 00 00 48
  81 ab 00 00                  ff .end (operand)
  82 ab 00 00                  01 .literal
  83 ab 00 00         70 00 00 00 112
  87 ab 00 00                  ff .end (operand)
  88 ab 00 00               03 00 .var1 FLAGS
  8a ab 00 00                  01 .literal
  8b ab 00 00         cc 02 00 00 716
  8f ab 00 00                  ff .end (operand)
  90 ab 00 00                  ff .end (operand)
if401
::91 ab 00 00               05 01 .if [terms=1]
  93 ab 00 00         be ab 00 00 .else
  97 ab 00 00               03 00 .var1 FLAGS
  99 ab 00 00                  01 .literal
  9a ab 00 00         58 02 00 00 600
  9e ab 00 00                  ff .end (operand)
  9f ab 00 00                  ff .end (operand)
  a1 ab 00 00                  03 .if-sign-nonzero
  a1 ab 00 00                  01 .literal
  a2 ab 00 00         00 00 00 00 0
  a6 ab 00 00                  ff .end (operand)
  a7 ab 00 00               01 4e .exec VcTextNum
  a9 ab 00 00                  01 .literal
  aa ab 00 00         30 00 00 00 48
  ae ab 00 00                  ff .end (operand)
  af ab 00 00                  01 .literal
  b0 ab 00 00         90 00 00 00 144
  b4 ab 00 00                  ff .end (operand)
  b5 ab 00 00               03 00 .var1 FLAGS
  b7 ab 00 00                  01 .literal
  b8 ab 00 00         cc 02 00 00 716
  bc ab 00 00                  ff .end (operand)
  bd ab 00 00                  ff .end (operand)
 :be ab 00 00                  ff .end (block)
 :bf ab 00 00                  ff .end (switch)
  c0 ab 00 00                  ff .end (block)
 :c1 ab 00 00                  0b .case
  c2 ab 00 00                  05 .group
  c3 ab 00 00                  01 .literal
  c4 ab 00 00         02 00 00 00 2
  c8 ab 00 00                  ff .end (operand)
  c9 ab 00 00                  ff .end (operand)
  ca ab 00 00         de ac 00 00 .case-end-address
  ce ab 00 00                  0a .switch
  cf ab 00 00               03 00 .var1 FLAGS
  d1 ab 00 00                  01 .literal
  d2 ab 00 00         81 02 00 00 641
  d6 ab 00 00                  ff .end (operand)
  d7 ab 00 00                  ff .end (operand)
  d8 ab 00 00                  0b .case
  d9 ab 00 00                  05 .group
  da ab 00 00                  01 .literal
  db ab 00 00         01 00 00 00 1
  df ab 00 00                  ff .end (operand)
  e0 ab 00 00                  ff .end (operand)
  e1 ab 00 00         fd ab 00 00 .case-end-address
  e5 ab 00 00               01 4e .exec VcTextNum
  e7 ab 00 00                  01 .literal
  e8 ab 00 00         30 00 00 00 48
  ec ab 00 00                  ff .end (operand)
  ed ab 00 00                  01 .literal
  ee ab 00 00         50 00 00 00 80
  f2 ab 00 00                  ff .end (operand)
  f3 ab 00 00               03 00 .var1 FLAGS
  f5 ab 00 00                  01 .literal
  f6 ab 00 00         ce 02 00 00 718
  fa ab 00 00                  ff .end (operand)
  fb ab 00 00                  ff .end (operand)
  fc ab 00 00                  ff .end (block)
 :fd ab 00 00                  0b .case
  fe ab 00 00                  05 .group
  ff ab 00 00                  01 .literal
  00 ac 00 00         02 00 00 00 2
  04 ac 00 00                  ff .end (operand)
  05 ac 00 00                  ff .end (operand)
  06 ac 00 00         22 ac 00 00 .case-end-address
  0a ac 00 00               01 4e .exec VcTextNum
  0c ac 00 00                  01 .literal
  0d ac 00 00         30 00 00 00 48
  11 ac 00 00                  ff .end (operand)
  12 ac 00 00                  01 .literal
  13 ac 00 00         70 00 00 00 112
  17 ac 00 00                  ff .end (operand)
  18 ac 00 00               03 00 .var1 FLAGS
  1a ac 00 00                  01 .literal
  1b ac 00 00         ce 02 00 00 718
  1f ac 00 00                  ff .end (operand)
  20 ac 00 00                  ff .end (operand)
  21 ac 00 00                  ff .end (block)
 :22 ac 00 00                  0b .case
  23 ac 00 00                  05 .group
  24 ac 00 00                  01 .literal
  25 ac 00 00         03 00 00 00 3
  29 ac 00 00                  ff .end (operand)
  2a ac 00 00                  ff .end (operand)
  2b ac 00 00         47 ac 00 00 .case-end-address
  2f ac 00 00               01 4e .exec VcTextNum
  31 ac 00 00                  01 .literal
  32 ac 00 00         30 00 00 00 48
  36 ac 00 00                  ff .end (operand)
  37 ac 00 00                  01 .literal
  38 ac 00 00         90 00 00 00 144
  3c ac 00 00                  ff .end (operand)
  3d ac 00 00               03 00 .var1 FLAGS
  3f ac 00 00                  01 .literal
  40 ac 00 00         ce 02 00 00 718
  44 ac 00 00                  ff .end (operand)
  45 ac 00 00                  ff .end (operand)
  46 ac 00 00                  ff .end (block)
 :47 ac 00 00                  0b .case
  48 ac 00 00                  05 .group
  49 ac 00 00                  01 .literal
  4a ac 00 00         07 00 00 00 7
  4e ac 00 00                  ff .end (operand)
  4f ac 00 00                  ff .end (operand)
  50 ac 00 00         dc ac 00 00 .case-end-address
if402
 :54 ac 00 00               05 01 .if [terms=1]
  56 ac 00 00         81 ac 00 00 .else
  5a ac 00 00               03 00 .var1 FLAGS
  5c ac 00 00                  01 .literal
  5d ac 00 00         56 02 00 00 598
  61 ac 00 00                  ff .end (operand)
  62 ac 00 00                  ff .end (operand)
  64 ac 00 00                  03 .if-sign-nonzero
  64 ac 00 00                  01 .literal
  65 ac 00 00         00 00 00 00 0
  69 ac 00 00                  ff .end (operand)
  6a ac 00 00               01 4e .exec VcTextNum
  6c ac 00 00                  01 .literal
  6d ac 00 00         30 00 00 00 48
  71 ac 00 00                  ff .end (operand)
  72 ac 00 00                  01 .literal
  73 ac 00 00         50 00 00 00 80
  77 ac 00 00                  ff .end (operand)
  78 ac 00 00               03 00 .var1 FLAGS
  7a ac 00 00                  01 .literal
  7b ac 00 00         ce 02 00 00 718
  7f ac 00 00                  ff .end (operand)
  80 ac 00 00                  ff .end (operand)
if403
::81 ac 00 00               05 01 .if [terms=1]
  83 ac 00 00         ae ac 00 00 .else
  87 ac 00 00               03 00 .var1 FLAGS
  89 ac 00 00                  01 .literal
  8a ac 00 00         57 02 00 00 599
  8e ac 00 00                  ff .end (operand)
  8f ac 00 00                  ff .end (operand)
  91 ac 00 00                  03 .if-sign-nonzero
  91 ac 00 00                  01 .literal
  92 ac 00 00         00 00 00 00 0
  96 ac 00 00                  ff .end (operand)
  97 ac 00 00               01 4e .exec VcTextNum
  99 ac 00 00                  01 .literal
  9a ac 00 00         30 00 00 00 48
  9e ac 00 00                  ff .end (operand)
  9f ac 00 00                  01 .literal
  a0 ac 00 00         70 00 00 00 112
  a4 ac 00 00                  ff .end (operand)
  a5 ac 00 00               03 00 .var1 FLAGS
  a7 ac 00 00                  01 .literal
  a8 ac 00 00         ce 02 00 00 718
  ac ac 00 00                  ff .end (operand)
  ad ac 00 00                  ff .end (operand)
if404
::ae ac 00 00               05 01 .if [terms=1]
  b0 ac 00 00         db ac 00 00 .else
  b4 ac 00 00               03 00 .var1 FLAGS
  b6 ac 00 00                  01 .literal
  b7 ac 00 00         58 02 00 00 600
  bb ac 00 00                  ff .end (operand)
  bc ac 00 00                  ff .end (operand)
  be ac 00 00                  03 .if-sign-nonzero
  be ac 00 00                  01 .literal
  bf ac 00 00         00 00 00 00 0
  c3 ac 00 00                  ff .end (operand)
  c4 ac 00 00               01 4e .exec VcTextNum
  c6 ac 00 00                  01 .literal
  c7 ac 00 00         30 00 00 00 48
  cb ac 00 00                  ff .end (operand)
  cc ac 00 00                  01 .literal
  cd ac 00 00         90 00 00 00 144
  d1 ac 00 00                  ff .end (operand)
  d2 ac 00 00               03 00 .var1 FLAGS
  d4 ac 00 00                  01 .literal
  d5 ac 00 00         ce 02 00 00 718
  d9 ac 00 00                  ff .end (operand)
  da ac 00 00                  ff .end (operand)
 :db ac 00 00                  ff .end (block)
 :dc ac 00 00                  ff .end (switch)
  dd ac 00 00                  ff .end (block)
 :de ac 00 00                  0b .case
  df ac 00 00                  05 .group
  e0 ac 00 00                  01 .literal
  e1 ac 00 00         03 00 00 00 3
  e5 ac 00 00                  ff .end (operand)
  e6 ac 00 00                  ff .end (operand)
  e7 ac 00 00         fb ad 00 00 .case-end-address
  eb ac 00 00                  0a .switch
  ec ac 00 00               03 00 .var1 FLAGS
  ee ac 00 00                  01 .literal
  ef ac 00 00         82 02 00 00 642
  f3 ac 00 00                  ff .end (operand)
  f4 ac 00 00                  ff .end (operand)
  f5 ac 00 00                  0b .case
  f6 ac 00 00                  05 .group
  f7 ac 00 00                  01 .literal
  f8 ac 00 00         01 00 00 00 1
  fc ac 00 00                  ff .end (operand)
  fd ac 00 00                  ff .end (operand)
  fe ac 00 00         1a ad 00 00 .case-end-address
  02 ad 00 00               01 4e .exec VcTextNum
  04 ad 00 00                  01 .literal
  05 ad 00 00         30 00 00 00 48
  09 ad 00 00                  ff .end (operand)
  0a ad 00 00                  01 .literal
  0b ad 00 00         50 00 00 00 80
  0f ad 00 00                  ff .end (operand)
  10 ad 00 00               03 00 .var1 FLAGS
  12 ad 00 00                  01 .literal
  13 ad 00 00         d0 02 00 00 720
  17 ad 00 00                  ff .end (operand)
  18 ad 00 00                  ff .end (operand)
  19 ad 00 00                  ff .end (block)
 :1a ad 00 00                  0b .case
  1b ad 00 00                  05 .group
  1c ad 00 00                  01 .literal
  1d ad 00 00         02 00 00 00 2
  21 ad 00 00                  ff .end (operand)
  22 ad 00 00                  ff .end (operand)
  23 ad 00 00         3f ad 00 00 .case-end-address
  27 ad 00 00               01 4e .exec VcTextNum
  29 ad 00 00                  01 .literal
  2a ad 00 00         30 00 00 00 48
  2e ad 00 00                  ff .end (operand)
  2f ad 00 00                  01 .literal
  30 ad 00 00         70 00 00 00 112
  34 ad 00 00                  ff .end (operand)
  35 ad 00 00               03 00 .var1 FLAGS
  37 ad 00 00                  01 .literal
  38 ad 00 00         d0 02 00 00 720
  3c ad 00 00                  ff .end (operand)
  3d ad 00 00                  ff .end (operand)
  3e ad 00 00                  ff .end (block)
 :3f ad 00 00                  0b .case
  40 ad 00 00                  05 .group
  41 ad 00 00                  01 .literal
  42 ad 00 00         03 00 00 00 3
  46 ad 00 00                  ff .end (operand)
  47 ad 00 00                  ff .end (operand)
  48 ad 00 00         64 ad 00 00 .case-end-address
  4c ad 00 00               01 4e .exec VcTextNum
  4e ad 00 00                  01 .literal
  4f ad 00 00         30 00 00 00 48
  53 ad 00 00                  ff .end (operand)
  54 ad 00 00                  01 .literal
  55 ad 00 00         90 00 00 00 144
  59 ad 00 00                  ff .end (operand)
  5a ad 00 00               03 00 .var1 FLAGS
  5c ad 00 00                  01 .literal
  5d ad 00 00         d0 02 00 00 720
  61 ad 00 00                  ff .end (operand)
  62 ad 00 00                  ff .end (operand)
  63 ad 00 00                  ff .end (block)
 :64 ad 00 00                  0b .case
  65 ad 00 00                  05 .group
  66 ad 00 00                  01 .literal
  67 ad 00 00         07 00 00 00 7
  6b ad 00 00                  ff .end (operand)
  6c ad 00 00                  ff .end (operand)
  6d ad 00 00         f9 ad 00 00 .case-end-address
if405
 :71 ad 00 00               05 01 .if [terms=1]
  73 ad 00 00         9e ad 00 00 .else
  77 ad 00 00               03 00 .var1 FLAGS
  79 ad 00 00                  01 .literal
  7a ad 00 00         56 02 00 00 598
  7e ad 00 00                  ff .end (operand)
  7f ad 00 00                  ff .end (operand)
  81 ad 00 00                  03 .if-sign-nonzero
  81 ad 00 00                  01 .literal
  82 ad 00 00         00 00 00 00 0
  86 ad 00 00                  ff .end (operand)
  87 ad 00 00               01 4e .exec VcTextNum
  89 ad 00 00                  01 .literal
  8a ad 00 00         30 00 00 00 48
  8e ad 00 00                  ff .end (operand)
  8f ad 00 00                  01 .literal
  90 ad 00 00         50 00 00 00 80
  94 ad 00 00                  ff .end (operand)
  95 ad 00 00               03 00 .var1 FLAGS
  97 ad 00 00                  01 .literal
  98 ad 00 00         d0 02 00 00 720
  9c ad 00 00                  ff .end (operand)
  9d ad 00 00                  ff .end (operand)
if406
::9e ad 00 00               05 01 .if [terms=1]
  a0 ad 00 00         cb ad 00 00 .else
  a4 ad 00 00               03 00 .var1 FLAGS
  a6 ad 00 00                  01 .literal
  a7 ad 00 00         57 02 00 00 599
  ab ad 00 00                  ff .end (operand)
  ac ad 00 00                  ff .end (operand)
  ae ad 00 00                  03 .if-sign-nonzero
  ae ad 00 00                  01 .literal
  af ad 00 00         00 00 00 00 0
  b3 ad 00 00                  ff .end (operand)
  b4 ad 00 00               01 4e .exec VcTextNum
  b6 ad 00 00                  01 .literal
  b7 ad 00 00         30 00 00 00 48
  bb ad 00 00                  ff .end (operand)
  bc ad 00 00                  01 .literal
  bd ad 00 00         70 00 00 00 112
  c1 ad 00 00                  ff .end (operand)
  c2 ad 00 00               03 00 .var1 FLAGS
  c4 ad 00 00                  01 .literal
  c5 ad 00 00         d0 02 00 00 720
  c9 ad 00 00                  ff .end (operand)
  ca ad 00 00                  ff .end (operand)
if407
::cb ad 00 00               05 01 .if [terms=1]
  cd ad 00 00         f8 ad 00 00 .else
  d1 ad 00 00               03 00 .var1 FLAGS
  d3 ad 00 00                  01 .literal
  d4 ad 00 00         58 02 00 00 600
  d8 ad 00 00                  ff .end (operand)
  d9 ad 00 00                  ff .end (operand)
  db ad 00 00                  03 .if-sign-nonzero
  db ad 00 00                  01 .literal
  dc ad 00 00         00 00 00 00 0
  e0 ad 00 00                  ff .end (operand)
  e1 ad 00 00               01 4e .exec VcTextNum
  e3 ad 00 00                  01 .literal
  e4 ad 00 00         30 00 00 00 48
  e8 ad 00 00                  ff .end (operand)
  e9 ad 00 00                  01 .literal
  ea ad 00 00         90 00 00 00 144
  ee ad 00 00                  ff .end (operand)
  ef ad 00 00               03 00 .var1 FLAGS
  f1 ad 00 00                  01 .literal
  f2 ad 00 00         d0 02 00 00 720
  f6 ad 00 00                  ff .end (operand)
  f7 ad 00 00                  ff .end (operand)
 :f8 ad 00 00                  ff .end (block)
 :f9 ad 00 00                  ff .end (switch)
  fa ad 00 00                  ff .end (block)
 :fb ad 00 00                  0b .case
  fc ad 00 00                  05 .group
  fd ad 00 00                  01 .literal
  fe ad 00 00         04 00 00 00 4
  02 ae 00 00                  ff .end (operand)
  03 ae 00 00                  ff .end (operand)
  04 ae 00 00         18 af 00 00 .case-end-address
  08 ae 00 00                  0a .switch
  09 ae 00 00               03 00 .var1 FLAGS
  0b ae 00 00                  01 .literal
  0c ae 00 00         83 02 00 00 643
  10 ae 00 00                  ff .end (operand)
  11 ae 00 00                  ff .end (operand)
  12 ae 00 00                  0b .case
  13 ae 00 00                  05 .group
  14 ae 00 00                  01 .literal
  15 ae 00 00         01 00 00 00 1
  19 ae 00 00                  ff .end (operand)
  1a ae 00 00                  ff .end (operand)
  1b ae 00 00         37 ae 00 00 .case-end-address
  1f ae 00 00               01 4e .exec VcTextNum
  21 ae 00 00                  01 .literal
  22 ae 00 00         30 00 00 00 48
  26 ae 00 00                  ff .end (operand)
  27 ae 00 00                  01 .literal
  28 ae 00 00         50 00 00 00 80
  2c ae 00 00                  ff .end (operand)
  2d ae 00 00               03 00 .var1 FLAGS
  2f ae 00 00                  01 .literal
  30 ae 00 00         d2 02 00 00 722
  34 ae 00 00                  ff .end (operand)
  35 ae 00 00                  ff .end (operand)
  36 ae 00 00                  ff .end (block)
 :37 ae 00 00                  0b .case
  38 ae 00 00                  05 .group
  39 ae 00 00                  01 .literal
  3a ae 00 00         02 00 00 00 2
  3e ae 00 00                  ff .end (operand)
  3f ae 00 00                  ff .end (operand)
  40 ae 00 00         5c ae 00 00 .case-end-address
  44 ae 00 00               01 4e .exec VcTextNum
  46 ae 00 00                  01 .literal
  47 ae 00 00         30 00 00 00 48
  4b ae 00 00                  ff .end (operand)
  4c ae 00 00                  01 .literal
  4d ae 00 00         70 00 00 00 112
  51 ae 00 00                  ff .end (operand)
  52 ae 00 00               03 00 .var1 FLAGS
  54 ae 00 00                  01 .literal
  55 ae 00 00         d2 02 00 00 722
  59 ae 00 00                  ff .end (operand)
  5a ae 00 00                  ff .end (operand)
  5b ae 00 00                  ff .end (block)
 :5c ae 00 00                  0b .case
  5d ae 00 00                  05 .group
  5e ae 00 00                  01 .literal
  5f ae 00 00         03 00 00 00 3
  63 ae 00 00                  ff .end (operand)
  64 ae 00 00                  ff .end (operand)
  65 ae 00 00         81 ae 00 00 .case-end-address
  69 ae 00 00               01 4e .exec VcTextNum
  6b ae 00 00                  01 .literal
  6c ae 00 00         30 00 00 00 48
  70 ae 00 00                  ff .end (operand)
  71 ae 00 00                  01 .literal
  72 ae 00 00         90 00 00 00 144
  76 ae 00 00                  ff .end (operand)
  77 ae 00 00               03 00 .var1 FLAGS
  79 ae 00 00                  01 .literal
  7a ae 00 00         d2 02 00 00 722
  7e ae 00 00                  ff .end (operand)
  7f ae 00 00                  ff .end (operand)
  80 ae 00 00                  ff .end (block)
 :81 ae 00 00                  0b .case
  82 ae 00 00                  05 .group
  83 ae 00 00                  01 .literal
  84 ae 00 00         07 00 00 00 7
  88 ae 00 00                  ff .end (operand)
  89 ae 00 00                  ff .end (operand)
  8a ae 00 00         16 af 00 00 .case-end-address
if408
 :8e ae 00 00               05 01 .if [terms=1]
  90 ae 00 00         bb ae 00 00 .else
  94 ae 00 00               03 00 .var1 FLAGS
  96 ae 00 00                  01 .literal
  97 ae 00 00         56 02 00 00 598
  9b ae 00 00                  ff .end (operand)
  9c ae 00 00                  ff .end (operand)
  9e ae 00 00                  03 .if-sign-nonzero
  9e ae 00 00                  01 .literal
  9f ae 00 00         00 00 00 00 0
  a3 ae 00 00                  ff .end (operand)
  a4 ae 00 00               01 4e .exec VcTextNum
  a6 ae 00 00                  01 .literal
  a7 ae 00 00         30 00 00 00 48
  ab ae 00 00                  ff .end (operand)
  ac ae 00 00                  01 .literal
  ad ae 00 00         50 00 00 00 80
  b1 ae 00 00                  ff .end (operand)
  b2 ae 00 00               03 00 .var1 FLAGS
  b4 ae 00 00                  01 .literal
  b5 ae 00 00         d2 02 00 00 722
  b9 ae 00 00                  ff .end (operand)
  ba ae 00 00                  ff .end (operand)
if409
::bb ae 00 00               05 01 .if [terms=1]
  bd ae 00 00         e8 ae 00 00 .else
  c1 ae 00 00               03 00 .var1 FLAGS
  c3 ae 00 00                  01 .literal
  c4 ae 00 00         57 02 00 00 599
  c8 ae 00 00                  ff .end (operand)
  c9 ae 00 00                  ff .end (operand)
  cb ae 00 00                  03 .if-sign-nonzero
  cb ae 00 00                  01 .literal
  cc ae 00 00         00 00 00 00 0
  d0 ae 00 00                  ff .end (operand)
  d1 ae 00 00               01 4e .exec VcTextNum
  d3 ae 00 00                  01 .literal
  d4 ae 00 00         30 00 00 00 48
  d8 ae 00 00                  ff .end (operand)
  d9 ae 00 00                  01 .literal
  da ae 00 00         70 00 00 00 112
  de ae 00 00                  ff .end (operand)
  df ae 00 00               03 00 .var1 FLAGS
  e1 ae 00 00                  01 .literal
  e2 ae 00 00         d2 02 00 00 722
  e6 ae 00 00                  ff .end (operand)
  e7 ae 00 00                  ff .end (operand)
if410
::e8 ae 00 00               05 01 .if [terms=1]
  ea ae 00 00         15 af 00 00 .else
  ee ae 00 00               03 00 .var1 FLAGS
  f0 ae 00 00                  01 .literal
  f1 ae 00 00         58 02 00 00 600
  f5 ae 00 00                  ff .end (operand)
  f6 ae 00 00                  ff .end (operand)
  f8 ae 00 00                  03 .if-sign-nonzero
  f8 ae 00 00                  01 .literal
  f9 ae 00 00         00 00 00 00 0
  fd ae 00 00                  ff .end (operand)
  fe ae 00 00               01 4e .exec VcTextNum
  00 af 00 00                  01 .literal
  01 af 00 00         30 00 00 00 48
  05 af 00 00                  ff .end (operand)
  06 af 00 00                  01 .literal
  07 af 00 00         90 00 00 00 144
  0b af 00 00                  ff .end (operand)
  0c af 00 00               03 00 .var1 FLAGS
  0e af 00 00                  01 .literal
  0f af 00 00         d2 02 00 00 722
  13 af 00 00                  ff .end (operand)
  14 af 00 00                  ff .end (operand)
 :15 af 00 00                  ff .end (block)
 :16 af 00 00                  ff .end (switch)
  17 af 00 00                  ff .end (block)
 :18 af 00 00                  0b .case
  19 af 00 00                  05 .group
  1a af 00 00                  01 .literal
  1b af 00 00         05 00 00 00 5
  1f af 00 00                  ff .end (operand)
  20 af 00 00                  ff .end (operand)
  21 af 00 00         35 b0 00 00 .case-end-address
  25 af 00 00                  0a .switch
  26 af 00 00               03 00 .var1 FLAGS
  28 af 00 00                  01 .literal
  29 af 00 00         84 02 00 00 644
  2d af 00 00                  ff .end (operand)
  2e af 00 00                  ff .end (operand)
  2f af 00 00                  0b .case
  30 af 00 00                  05 .group
  31 af 00 00                  01 .literal
  32 af 00 00         01 00 00 00 1
  36 af 00 00                  ff .end (operand)
  37 af 00 00                  ff .end (operand)
  38 af 00 00         54 af 00 00 .case-end-address
  3c af 00 00               01 4e .exec VcTextNum
  3e af 00 00                  01 .literal
  3f af 00 00         30 00 00 00 48
  43 af 00 00                  ff .end (operand)
  44 af 00 00                  01 .literal
  45 af 00 00         50 00 00 00 80
  49 af 00 00                  ff .end (operand)
  4a af 00 00               03 00 .var1 FLAGS
  4c af 00 00                  01 .literal
  4d af 00 00         d4 02 00 00 724
  51 af 00 00                  ff .end (operand)
  52 af 00 00                  ff .end (operand)
  53 af 00 00                  ff .end (block)
 :54 af 00 00                  0b .case
  55 af 00 00                  05 .group
  56 af 00 00                  01 .literal
  57 af 00 00         02 00 00 00 2
  5b af 00 00                  ff .end (operand)
  5c af 00 00                  ff .end (operand)
  5d af 00 00         79 af 00 00 .case-end-address
  61 af 00 00               01 4e .exec VcTextNum
  63 af 00 00                  01 .literal
  64 af 00 00         30 00 00 00 48
  68 af 00 00                  ff .end (operand)
  69 af 00 00                  01 .literal
  6a af 00 00         70 00 00 00 112
  6e af 00 00                  ff .end (operand)
  6f af 00 00               03 00 .var1 FLAGS
  71 af 00 00                  01 .literal
  72 af 00 00         d4 02 00 00 724
  76 af 00 00                  ff .end (operand)
  77 af 00 00                  ff .end (operand)
  78 af 00 00                  ff .end (block)
 :79 af 00 00                  0b .case
  7a af 00 00                  05 .group
  7b af 00 00                  01 .literal
  7c af 00 00         03 00 00 00 3
  80 af 00 00                  ff .end (operand)
  81 af 00 00                  ff .end (operand)
  82 af 00 00         9e af 00 00 .case-end-address
  86 af 00 00               01 4e .exec VcTextNum
  88 af 00 00                  01 .literal
  89 af 00 00         30 00 00 00 48
  8d af 00 00                  ff .end (operand)
  8e af 00 00                  01 .literal
  8f af 00 00         90 00 00 00 144
  93 af 00 00                  ff .end (operand)
  94 af 00 00               03 00 .var1 FLAGS
  96 af 00 00                  01 .literal
  97 af 00 00         d4 02 00 00 724
  9b af 00 00                  ff .end (operand)
  9c af 00 00                  ff .end (operand)
  9d af 00 00                  ff .end (block)
 :9e af 00 00                  0b .case
  9f af 00 00                  05 .group
  a0 af 00 00                  01 .literal
  a1 af 00 00         07 00 00 00 7
  a5 af 00 00                  ff .end (operand)
  a6 af 00 00                  ff .end (operand)
  a7 af 00 00         33 b0 00 00 .case-end-address
if411
 :ab af 00 00               05 01 .if [terms=1]
  ad af 00 00         d8 af 00 00 .else
  b1 af 00 00               03 00 .var1 FLAGS
  b3 af 00 00                  01 .literal
  b4 af 00 00         56 02 00 00 598
  b8 af 00 00                  ff .end (operand)
  b9 af 00 00                  ff .end (operand)
  bb af 00 00                  03 .if-sign-nonzero
  bb af 00 00                  01 .literal
  bc af 00 00         00 00 00 00 0
  c0 af 00 00                  ff .end (operand)
  c1 af 00 00               01 4e .exec VcTextNum
  c3 af 00 00                  01 .literal
  c4 af 00 00         30 00 00 00 48
  c8 af 00 00                  ff .end (operand)
  c9 af 00 00                  01 .literal
  ca af 00 00         50 00 00 00 80
  ce af 00 00                  ff .end (operand)
  cf af 00 00               03 00 .var1 FLAGS
  d1 af 00 00                  01 .literal
  d2 af 00 00         d4 02 00 00 724
  d6 af 00 00                  ff .end (operand)
  d7 af 00 00                  ff .end (operand)
if412
::d8 af 00 00               05 01 .if [terms=1]
  da af 00 00         05 b0 00 00 .else
  de af 00 00               03 00 .var1 FLAGS
  e0 af 00 00                  01 .literal
  e1 af 00 00         57 02 00 00 599
  e5 af 00 00                  ff .end (operand)
  e6 af 00 00                  ff .end (operand)
  e8 af 00 00                  03 .if-sign-nonzero
  e8 af 00 00                  01 .literal
  e9 af 00 00         00 00 00 00 0
  ed af 00 00                  ff .end (operand)
  ee af 00 00               01 4e .exec VcTextNum
  f0 af 00 00                  01 .literal
  f1 af 00 00         30 00 00 00 48
  f5 af 00 00                  ff .end (operand)
  f6 af 00 00                  01 .literal
  f7 af 00 00         70 00 00 00 112
  fb af 00 00                  ff .end (operand)
  fc af 00 00               03 00 .var1 FLAGS
  fe af 00 00                  01 .literal
  ff af 00 00         d4 02 00 00 724
  03 b0 00 00                  ff .end (operand)
  04 b0 00 00                  ff .end (operand)
if413
::05 b0 00 00               05 01 .if [terms=1]
  07 b0 00 00         32 b0 00 00 .else
  0b b0 00 00               03 00 .var1 FLAGS
  0d b0 00 00                  01 .literal
  0e b0 00 00         58 02 00 00 600
  12 b0 00 00                  ff .end (operand)
  13 b0 00 00                  ff .end (operand)
  15 b0 00 00                  03 .if-sign-nonzero
  15 b0 00 00                  01 .literal
  16 b0 00 00         00 00 00 00 0
  1a b0 00 00                  ff .end (operand)
  1b b0 00 00               01 4e .exec VcTextNum
  1d b0 00 00                  01 .literal
  1e b0 00 00         30 00 00 00 48
  22 b0 00 00                  ff .end (operand)
  23 b0 00 00                  01 .literal
  24 b0 00 00         90 00 00 00 144
  28 b0 00 00                  ff .end (operand)
  29 b0 00 00               03 00 .var1 FLAGS
  2b b0 00 00                  01 .literal
  2c b0 00 00         d4 02 00 00 724
  30 b0 00 00                  ff .end (operand)
  31 b0 00 00                  ff .end (operand)
 :32 b0 00 00                  ff .end (block)
 :33 b0 00 00                  ff .end (switch)
  34 b0 00 00                  ff .end (block)
 :35 b0 00 00                  0b .case
  36 b0 00 00                  05 .group
  37 b0 00 00                  01 .literal
  38 b0 00 00         06 00 00 00 6
  3c b0 00 00                  ff .end (operand)
  3d b0 00 00                  ff .end (operand)
  3e b0 00 00         52 b1 00 00 .case-end-address
  42 b0 00 00                  0a .switch
  43 b0 00 00               03 00 .var1 FLAGS
  45 b0 00 00                  01 .literal
  46 b0 00 00         85 02 00 00 645
  4a b0 00 00                  ff .end (operand)
  4b b0 00 00                  ff .end (operand)
  4c b0 00 00                  0b .case
  4d b0 00 00                  05 .group
  4e b0 00 00                  01 .literal
  4f b0 00 00         01 00 00 00 1
  53 b0 00 00                  ff .end (operand)
  54 b0 00 00                  ff .end (operand)
  55 b0 00 00         71 b0 00 00 .case-end-address
  59 b0 00 00               01 4e .exec VcTextNum
  5b b0 00 00                  01 .literal
  5c b0 00 00         30 00 00 00 48
  60 b0 00 00                  ff .end (operand)
  61 b0 00 00                  01 .literal
  62 b0 00 00         50 00 00 00 80
  66 b0 00 00                  ff .end (operand)
  67 b0 00 00               03 00 .var1 FLAGS
  69 b0 00 00                  01 .literal
  6a b0 00 00         d6 02 00 00 726
  6e b0 00 00                  ff .end (operand)
  6f b0 00 00                  ff .end (operand)
  70 b0 00 00                  ff .end (block)
 :71 b0 00 00                  0b .case
  72 b0 00 00                  05 .group
  73 b0 00 00                  01 .literal
  74 b0 00 00         02 00 00 00 2
  78 b0 00 00                  ff .end (operand)
  79 b0 00 00                  ff .end (operand)
  7a b0 00 00         96 b0 00 00 .case-end-address
  7e b0 00 00               01 4e .exec VcTextNum
  80 b0 00 00                  01 .literal
  81 b0 00 00         30 00 00 00 48
  85 b0 00 00                  ff .end (operand)
  86 b0 00 00                  01 .literal
  87 b0 00 00         70 00 00 00 112
  8b b0 00 00                  ff .end (operand)
  8c b0 00 00               03 00 .var1 FLAGS
  8e b0 00 00                  01 .literal
  8f b0 00 00         d6 02 00 00 726
  93 b0 00 00                  ff .end (operand)
  94 b0 00 00                  ff .end (operand)
  95 b0 00 00                  ff .end (block)
 :96 b0 00 00                  0b .case
  97 b0 00 00                  05 .group
  98 b0 00 00                  01 .literal
  99 b0 00 00         03 00 00 00 3
  9d b0 00 00                  ff .end (operand)
  9e b0 00 00                  ff .end (operand)
  9f b0 00 00         bb b0 00 00 .case-end-address
  a3 b0 00 00               01 4e .exec VcTextNum
  a5 b0 00 00                  01 .literal
  a6 b0 00 00         30 00 00 00 48
  aa b0 00 00                  ff .end (operand)
  ab b0 00 00                  01 .literal
  ac b0 00 00         90 00 00 00 144
  b0 b0 00 00                  ff .end (operand)
  b1 b0 00 00               03 00 .var1 FLAGS
  b3 b0 00 00                  01 .literal
  b4 b0 00 00         d6 02 00 00 726
  b8 b0 00 00                  ff .end (operand)
  b9 b0 00 00                  ff .end (operand)
  ba b0 00 00                  ff .end (block)
 :bb b0 00 00                  0b .case
  bc b0 00 00                  05 .group
  bd b0 00 00                  01 .literal
  be b0 00 00         07 00 00 00 7
  c2 b0 00 00                  ff .end (operand)
  c3 b0 00 00                  ff .end (operand)
  c4 b0 00 00         50 b1 00 00 .case-end-address
if414
 :c8 b0 00 00               05 01 .if [terms=1]
  ca b0 00 00         f5 b0 00 00 .else
  ce b0 00 00               03 00 .var1 FLAGS
  d0 b0 00 00                  01 .literal
  d1 b0 00 00         56 02 00 00 598
  d5 b0 00 00                  ff .end (operand)
  d6 b0 00 00                  ff .end (operand)
  d8 b0 00 00                  03 .if-sign-nonzero
  d8 b0 00 00                  01 .literal
  d9 b0 00 00         00 00 00 00 0
  dd b0 00 00                  ff .end (operand)
  de b0 00 00               01 4e .exec VcTextNum
  e0 b0 00 00                  01 .literal
  e1 b0 00 00         30 00 00 00 48
  e5 b0 00 00                  ff .end (operand)
  e6 b0 00 00                  01 .literal
  e7 b0 00 00         50 00 00 00 80
  eb b0 00 00                  ff .end (operand)
  ec b0 00 00               03 00 .var1 FLAGS
  ee b0 00 00                  01 .literal
  ef b0 00 00         d6 02 00 00 726
  f3 b0 00 00                  ff .end (operand)
  f4 b0 00 00                  ff .end (operand)
if415
::f5 b0 00 00               05 01 .if [terms=1]
  f7 b0 00 00         22 b1 00 00 .else
  fb b0 00 00               03 00 .var1 FLAGS
  fd b0 00 00                  01 .literal
  fe b0 00 00         57 02 00 00 599
  02 b1 00 00                  ff .end (operand)
  03 b1 00 00                  ff .end (operand)
  05 b1 00 00                  03 .if-sign-nonzero
  05 b1 00 00                  01 .literal
  06 b1 00 00         00 00 00 00 0
  0a b1 00 00                  ff .end (operand)
  0b b1 00 00               01 4e .exec VcTextNum
  0d b1 00 00                  01 .literal
  0e b1 00 00         30 00 00 00 48
  12 b1 00 00                  ff .end (operand)
  13 b1 00 00                  01 .literal
  14 b1 00 00         70 00 00 00 112
  18 b1 00 00                  ff .end (operand)
  19 b1 00 00               03 00 .var1 FLAGS
  1b b1 00 00                  01 .literal
  1c b1 00 00         d6 02 00 00 726
  20 b1 00 00                  ff .end (operand)
  21 b1 00 00                  ff .end (operand)
if416
::22 b1 00 00               05 01 .if [terms=1]
  24 b1 00 00         4f b1 00 00 .else
  28 b1 00 00               03 00 .var1 FLAGS
  2a b1 00 00                  01 .literal
  2b b1 00 00         58 02 00 00 600
  2f b1 00 00                  ff .end (operand)
  30 b1 00 00                  ff .end (operand)
  32 b1 00 00                  03 .if-sign-nonzero
  32 b1 00 00                  01 .literal
  33 b1 00 00         00 00 00 00 0
  37 b1 00 00                  ff .end (operand)
  38 b1 00 00               01 4e .exec VcTextNum
  3a b1 00 00                  01 .literal
  3b b1 00 00         30 00 00 00 48
  3f b1 00 00                  ff .end (operand)
  40 b1 00 00                  01 .literal
  41 b1 00 00         90 00 00 00 144
  45 b1 00 00                  ff .end (operand)
  46 b1 00 00               03 00 .var1 FLAGS
  48 b1 00 00                  01 .literal
  49 b1 00 00         d6 02 00 00 726
  4d b1 00 00                  ff .end (operand)
  4e b1 00 00                  ff .end (operand)
 :4f b1 00 00                  ff .end (block)
 :50 b1 00 00                  ff .end (switch)
  51 b1 00 00                  ff .end (block)
 :52 b1 00 00                  0b .case
  53 b1 00 00                  05 .group
  54 b1 00 00                  01 .literal
  55 b1 00 00         07 00 00 00 7
  59 b1 00 00                  ff .end (operand)
  5a b1 00 00                  ff .end (operand)
  5b b1 00 00         6f b2 00 00 .case-end-address
  5f b1 00 00                  0a .switch
  60 b1 00 00               03 00 .var1 FLAGS
  62 b1 00 00                  01 .literal
  63 b1 00 00         86 02 00 00 646
  67 b1 00 00                  ff .end (operand)
  68 b1 00 00                  ff .end (operand)
  69 b1 00 00                  0b .case
  6a b1 00 00                  05 .group
  6b b1 00 00                  01 .literal
  6c b1 00 00         01 00 00 00 1
  70 b1 00 00                  ff .end (operand)
  71 b1 00 00                  ff .end (operand)
  72 b1 00 00         8e b1 00 00 .case-end-address
  76 b1 00 00               01 4e .exec VcTextNum
  78 b1 00 00                  01 .literal
  79 b1 00 00         30 00 00 00 48
  7d b1 00 00                  ff .end (operand)
  7e b1 00 00                  01 .literal
  7f b1 00 00         50 00 00 00 80
  83 b1 00 00                  ff .end (operand)
  84 b1 00 00               03 00 .var1 FLAGS
  86 b1 00 00                  01 .literal
  87 b1 00 00         d8 02 00 00 728
  8b b1 00 00                  ff .end (operand)
  8c b1 00 00                  ff .end (operand)
  8d b1 00 00                  ff .end (block)
 :8e b1 00 00                  0b .case
  8f b1 00 00                  05 .group
  90 b1 00 00                  01 .literal
  91 b1 00 00         02 00 00 00 2
  95 b1 00 00                  ff .end (operand)
  96 b1 00 00                  ff .end (operand)
  97 b1 00 00         b3 b1 00 00 .case-end-address
  9b b1 00 00               01 4e .exec VcTextNum
  9d b1 00 00                  01 .literal
  9e b1 00 00         30 00 00 00 48
  a2 b1 00 00                  ff .end (operand)
  a3 b1 00 00                  01 .literal
  a4 b1 00 00         70 00 00 00 112
  a8 b1 00 00                  ff .end (operand)
  a9 b1 00 00               03 00 .var1 FLAGS
  ab b1 00 00                  01 .literal
  ac b1 00 00         d8 02 00 00 728
  b0 b1 00 00                  ff .end (operand)
  b1 b1 00 00                  ff .end (operand)
  b2 b1 00 00                  ff .end (block)
 :b3 b1 00 00                  0b .case
  b4 b1 00 00                  05 .group
  b5 b1 00 00                  01 .literal
  b6 b1 00 00         03 00 00 00 3
  ba b1 00 00                  ff .end (operand)
  bb b1 00 00                  ff .end (operand)
  bc b1 00 00         d8 b1 00 00 .case-end-address
  c0 b1 00 00               01 4e .exec VcTextNum
  c2 b1 00 00                  01 .literal
  c3 b1 00 00         30 00 00 00 48
  c7 b1 00 00                  ff .end (operand)
  c8 b1 00 00                  01 .literal
  c9 b1 00 00         90 00 00 00 144
  cd b1 00 00                  ff .end (operand)
  ce b1 00 00               03 00 .var1 FLAGS
  d0 b1 00 00                  01 .literal
  d1 b1 00 00         d8 02 00 00 728
  d5 b1 00 00                  ff .end (operand)
  d6 b1 00 00                  ff .end (operand)
  d7 b1 00 00                  ff .end (block)
 :d8 b1 00 00                  0b .case
  d9 b1 00 00                  05 .group
  da b1 00 00                  01 .literal
  db b1 00 00         07 00 00 00 7
  df b1 00 00                  ff .end (operand)
  e0 b1 00 00                  ff .end (operand)
  e1 b1 00 00         6d b2 00 00 .case-end-address
if417
 :e5 b1 00 00               05 01 .if [terms=1]
  e7 b1 00 00         12 b2 00 00 .else
  eb b1 00 00               03 00 .var1 FLAGS
  ed b1 00 00                  01 .literal
  ee b1 00 00         56 02 00 00 598
  f2 b1 00 00                  ff .end (operand)
  f3 b1 00 00                  ff .end (operand)
  f5 b1 00 00                  03 .if-sign-nonzero
  f5 b1 00 00                  01 .literal
  f6 b1 00 00         00 00 00 00 0
  fa b1 00 00                  ff .end (operand)
  fb b1 00 00               01 4e .exec VcTextNum
  fd b1 00 00                  01 .literal
  fe b1 00 00         30 00 00 00 48
  02 b2 00 00                  ff .end (operand)
  03 b2 00 00                  01 .literal
  04 b2 00 00         50 00 00 00 80
  08 b2 00 00                  ff .end (operand)
  09 b2 00 00               03 00 .var1 FLAGS
  0b b2 00 00                  01 .literal
  0c b2 00 00         d8 02 00 00 728
  10 b2 00 00                  ff .end (operand)
  11 b2 00 00                  ff .end (operand)
if418
::12 b2 00 00               05 01 .if [terms=1]
  14 b2 00 00         3f b2 00 00 .else
  18 b2 00 00               03 00 .var1 FLAGS
  1a b2 00 00                  01 .literal
  1b b2 00 00         57 02 00 00 599
  1f b2 00 00                  ff .end (operand)
  20 b2 00 00                  ff .end (operand)
  22 b2 00 00                  03 .if-sign-nonzero
  22 b2 00 00                  01 .literal
  23 b2 00 00         00 00 00 00 0
  27 b2 00 00                  ff .end (operand)
  28 b2 00 00               01 4e .exec VcTextNum
  2a b2 00 00                  01 .literal
  2b b2 00 00         30 00 00 00 48
  2f b2 00 00                  ff .end (operand)
  30 b2 00 00                  01 .literal
  31 b2 00 00         70 00 00 00 112
  35 b2 00 00                  ff .end (operand)
  36 b2 00 00               03 00 .var1 FLAGS
  38 b2 00 00                  01 .literal
  39 b2 00 00         d8 02 00 00 728
  3d b2 00 00                  ff .end (operand)
  3e b2 00 00                  ff .end (operand)
if419
::3f b2 00 00               05 01 .if [terms=1]
  41 b2 00 00         6c b2 00 00 .else
  45 b2 00 00               03 00 .var1 FLAGS
  47 b2 00 00                  01 .literal
  48 b2 00 00         58 02 00 00 600
  4c b2 00 00                  ff .end (operand)
  4d b2 00 00                  ff .end (operand)
  4f b2 00 00                  03 .if-sign-nonzero
  4f b2 00 00                  01 .literal
  50 b2 00 00         00 00 00 00 0
  54 b2 00 00                  ff .end (operand)
  55 b2 00 00               01 4e .exec VcTextNum
  57 b2 00 00                  01 .literal
  58 b2 00 00         30 00 00 00 48
  5c b2 00 00                  ff .end (operand)
  5d b2 00 00                  01 .literal
  5e b2 00 00         90 00 00 00 144
  62 b2 00 00                  ff .end (operand)
  63 b2 00 00               03 00 .var1 FLAGS
  65 b2 00 00                  01 .literal
  66 b2 00 00         d8 02 00 00 728
  6a b2 00 00                  ff .end (operand)
  6b b2 00 00                  ff .end (operand)
 :6c b2 00 00                  ff .end (block)
 :6d b2 00 00                  ff .end (switch)
  6e b2 00 00                  ff .end (block)
 :6f b2 00 00                  0b .case
  70 b2 00 00                  05 .group
  71 b2 00 00                  01 .literal
  72 b2 00 00         08 00 00 00 8
  76 b2 00 00                  ff .end (operand)
  77 b2 00 00                  ff .end (operand)
  78 b2 00 00         8c b3 00 00 .case-end-address
  7c b2 00 00                  0a .switch
  7d b2 00 00               03 00 .var1 FLAGS
  7f b2 00 00                  01 .literal
  80 b2 00 00         87 02 00 00 647
  84 b2 00 00                  ff .end (operand)
  85 b2 00 00                  ff .end (operand)
  86 b2 00 00                  0b .case
  87 b2 00 00                  05 .group
  88 b2 00 00                  01 .literal
  89 b2 00 00         01 00 00 00 1
  8d b2 00 00                  ff .end (operand)
  8e b2 00 00                  ff .end (operand)
  8f b2 00 00         ab b2 00 00 .case-end-address
  93 b2 00 00               01 4e .exec VcTextNum
  95 b2 00 00                  01 .literal
  96 b2 00 00         30 00 00 00 48
  9a b2 00 00                  ff .end (operand)
  9b b2 00 00                  01 .literal
  9c b2 00 00         50 00 00 00 80
  a0 b2 00 00                  ff .end (operand)
  a1 b2 00 00               03 00 .var1 FLAGS
  a3 b2 00 00                  01 .literal
  a4 b2 00 00         da 02 00 00 730
  a8 b2 00 00                  ff .end (operand)
  a9 b2 00 00                  ff .end (operand)
  aa b2 00 00                  ff .end (block)
 :ab b2 00 00                  0b .case
  ac b2 00 00                  05 .group
  ad b2 00 00                  01 .literal
  ae b2 00 00         02 00 00 00 2
  b2 b2 00 00                  ff .end (operand)
  b3 b2 00 00                  ff .end (operand)
  b4 b2 00 00         d0 b2 00 00 .case-end-address
  b8 b2 00 00               01 4e .exec VcTextNum
  ba b2 00 00                  01 .literal
  bb b2 00 00         30 00 00 00 48
  bf b2 00 00                  ff .end (operand)
  c0 b2 00 00                  01 .literal
  c1 b2 00 00         70 00 00 00 112
  c5 b2 00 00                  ff .end (operand)
  c6 b2 00 00               03 00 .var1 FLAGS
  c8 b2 00 00                  01 .literal
  c9 b2 00 00         da 02 00 00 730
  cd b2 00 00                  ff .end (operand)
  ce b2 00 00                  ff .end (operand)
  cf b2 00 00                  ff .end (block)
 :d0 b2 00 00                  0b .case
  d1 b2 00 00                  05 .group
  d2 b2 00 00                  01 .literal
  d3 b2 00 00         03 00 00 00 3
  d7 b2 00 00                  ff .end (operand)
  d8 b2 00 00                  ff .end (operand)
  d9 b2 00 00         f5 b2 00 00 .case-end-address
  dd b2 00 00               01 4e .exec VcTextNum
  df b2 00 00                  01 .literal
  e0 b2 00 00         30 00 00 00 48
  e4 b2 00 00                  ff .end (operand)
  e5 b2 00 00                  01 .literal
  e6 b2 00 00         90 00 00 00 144
  ea b2 00 00                  ff .end (operand)
  eb b2 00 00               03 00 .var1 FLAGS
  ed b2 00 00                  01 .literal
  ee b2 00 00         da 02 00 00 730
  f2 b2 00 00                  ff .end (operand)
  f3 b2 00 00                  ff .end (operand)
  f4 b2 00 00                  ff .end (block)
 :f5 b2 00 00                  0b .case
  f6 b2 00 00                  05 .group
  f7 b2 00 00                  01 .literal
  f8 b2 00 00         07 00 00 00 7
  fc b2 00 00                  ff .end (operand)
  fd b2 00 00                  ff .end (operand)
  fe b2 00 00         8a b3 00 00 .case-end-address
if420
 :02 b3 00 00               05 01 .if [terms=1]
  04 b3 00 00         2f b3 00 00 .else
  08 b3 00 00               03 00 .var1 FLAGS
  0a b3 00 00                  01 .literal
  0b b3 00 00         56 02 00 00 598
  0f b3 00 00                  ff .end (operand)
  10 b3 00 00                  ff .end (operand)
  12 b3 00 00                  03 .if-sign-nonzero
  12 b3 00 00                  01 .literal
  13 b3 00 00         00 00 00 00 0
  17 b3 00 00                  ff .end (operand)
  18 b3 00 00               01 4e .exec VcTextNum
  1a b3 00 00                  01 .literal
  1b b3 00 00         30 00 00 00 48
  1f b3 00 00                  ff .end (operand)
  20 b3 00 00                  01 .literal
  21 b3 00 00         50 00 00 00 80
  25 b3 00 00                  ff .end (operand)
  26 b3 00 00               03 00 .var1 FLAGS
  28 b3 00 00                  01 .literal
  29 b3 00 00         da 02 00 00 730
  2d b3 00 00                  ff .end (operand)
  2e b3 00 00                  ff .end (operand)
if421
::2f b3 00 00               05 01 .if [terms=1]
  31 b3 00 00         5c b3 00 00 .else
  35 b3 00 00               03 00 .var1 FLAGS
  37 b3 00 00                  01 .literal
  38 b3 00 00         57 02 00 00 599
  3c b3 00 00                  ff .end (operand)
  3d b3 00 00                  ff .end (operand)
  3f b3 00 00                  03 .if-sign-nonzero
  3f b3 00 00                  01 .literal
  40 b3 00 00         00 00 00 00 0
  44 b3 00 00                  ff .end (operand)
  45 b3 00 00               01 4e .exec VcTextNum
  47 b3 00 00                  01 .literal
  48 b3 00 00         30 00 00 00 48
  4c b3 00 00                  ff .end (operand)
  4d b3 00 00                  01 .literal
  4e b3 00 00         70 00 00 00 112
  52 b3 00 00                  ff .end (operand)
  53 b3 00 00               03 00 .var1 FLAGS
  55 b3 00 00                  01 .literal
  56 b3 00 00         da 02 00 00 730
  5a b3 00 00                  ff .end (operand)
  5b b3 00 00                  ff .end (operand)
if422
::5c b3 00 00               05 01 .if [terms=1]
  5e b3 00 00         89 b3 00 00 .else
  62 b3 00 00               03 00 .var1 FLAGS
  64 b3 00 00                  01 .literal
  65 b3 00 00         58 02 00 00 600
  69 b3 00 00                  ff .end (operand)
  6a b3 00 00                  ff .end (operand)
  6c b3 00 00                  03 .if-sign-nonzero
  6c b3 00 00                  01 .literal
  6d b3 00 00         00 00 00 00 0
  71 b3 00 00                  ff .end (operand)
  72 b3 00 00               01 4e .exec VcTextNum
  74 b3 00 00                  01 .literal
  75 b3 00 00         30 00 00 00 48
  79 b3 00 00                  ff .end (operand)
  7a b3 00 00                  01 .literal
  7b b3 00 00         90 00 00 00 144
  7f b3 00 00                  ff .end (operand)
  80 b3 00 00               03 00 .var1 FLAGS
  82 b3 00 00                  01 .literal
  83 b3 00 00         da 02 00 00 730
  87 b3 00 00                  ff .end (operand)
  88 b3 00 00                  ff .end (operand)
 :89 b3 00 00                  ff .end (block)
 :8a b3 00 00                  ff .end (switch)
  8b b3 00 00                  ff .end (block)
 :8c b3 00 00                  ff .end (switch)
  8d b3 00 00               01 24 .exec Wait
  8f b3 00 00                  01 .literal
  90 b3 00 00         64 00 00 00 100
  94 b3 00 00                  ff .end (operand)
if423
 :95 b3 00 00               05 01 .if [terms=1]
  97 b3 00 00         ba b3 00 00 .else
  9b b3 00 00               03 00 .var1 FLAGS
  9d b3 00 00                  01 .literal
  9e b3 00 00         56 02 00 00 598
  a2 b3 00 00                  ff .end (operand)
  a3 b3 00 00                  ff .end (operand)
  a5 b3 00 00                  02 .if-sign-nonzero
  a5 b3 00 00                  01 .literal
  a6 b3 00 00         00 00 00 00 0
  aa b3 00 00                  ff .end (operand)
  ab b3 00 00               03 0d .var1 SPECIALFRAME
  ad b3 00 00                  01 .literal
  ae b3 00 00         07 00 00 00 7
  b2 b3 00 00                  ff .end (operand)
  b3 b3 00 00                  01 .set
  b4 b3 00 00                  01 .literal
  b5 b3 00 00         1d 00 00 00 29
  b9 b3 00 00                  ff .end (operand)
if424
::ba b3 00 00               05 01 .if [terms=1]
  bc b3 00 00         df b3 00 00 .else
  c0 b3 00 00               03 00 .var1 FLAGS
  c2 b3 00 00                  01 .literal
  c3 b3 00 00         57 02 00 00 599
  c7 b3 00 00                  ff .end (operand)
  c8 b3 00 00                  ff .end (operand)
  ca b3 00 00                  02 .if-sign-nonzero
  ca b3 00 00                  01 .literal
  cb b3 00 00         00 00 00 00 0
  cf b3 00 00                  ff .end (operand)
  d0 b3 00 00               03 0d .var1 SPECIALFRAME
  d2 b3 00 00                  01 .literal
  d3 b3 00 00         05 00 00 00 5
  d7 b3 00 00                  ff .end (operand)
  d8 b3 00 00                  01 .set
  d9 b3 00 00                  01 .literal
  da b3 00 00         1d 00 00 00 29
  de b3 00 00                  ff .end (operand)
if425
::df b3 00 00               05 01 .if [terms=1]
  e1 b3 00 00         04 b4 00 00 .else
  e5 b3 00 00               03 00 .var1 FLAGS
  e7 b3 00 00                  01 .literal
  e8 b3 00 00         58 02 00 00 600
  ec b3 00 00                  ff .end (operand)
  ed b3 00 00                  ff .end (operand)
  ef b3 00 00                  02 .if-sign-nonzero
  ef b3 00 00                  01 .literal
  f0 b3 00 00         00 00 00 00 0
  f4 b3 00 00                  ff .end (operand)
  f5 b3 00 00               03 0d .var1 SPECIALFRAME
  f7 b3 00 00                  01 .literal
  f8 b3 00 00         06 00 00 00 6
  fc b3 00 00                  ff .end (operand)
  fd b3 00 00                  01 .set
  fe b3 00 00                  01 .literal
  ff b3 00 00         1d 00 00 00 29
  03 b4 00 00                  ff .end (operand)
::04 b4 00 00               01 39 .exec VcClear
  06 b4 00 00               01 50 .exec VcBox
  08 b4 00 00                  01 .literal
  09 b4 00 00         f0 00 00 00 240
  0d b4 00 00                  ff .end (operand)
  0e b4 00 00                  01 .literal
  0f b4 00 00         0a 00 00 00 10
  13 b4 00 00                  ff .end (operand)
  14 b4 00 00                  01 .literal
  15 b4 00 00         3a 01 00 00 314
  19 b4 00 00                  ff .end (operand)
  1a b4 00 00                  01 .literal
  1b b4 00 00         c6 00 00 00 198
  1f b4 00 00                  ff .end (operand)
  20 b4 00 00               03 00 .var1 FLAGS
  22 b4 00 00                  01 .literal
  23 b4 00 00         53 02 00 00 595
  27 b4 00 00                  ff .end (operand)
  28 b4 00 00                  01 .set
  29 b4 00 00                  01 .literal
  2a b4 00 00         0d 00 00 00 13
  2e b4 00 00                  ff .end (operand)
if426
 :2f b4 00 00               05 01 .if [terms=1]
  31 b4 00 00         0f b5 00 00 .else
  35 b4 00 00               03 02 .var1 CHAR
  37 b4 00 00                  01 .literal
  38 b4 00 00         01 00 00 00 1
  3c b4 00 00                  ff .end (operand)
  3d b4 00 00                  ff .end (operand)
  3f b4 00 00                  01 .if-sign-nonzero
  3f b4 00 00               03 00 .var1 FLAGS
  41 b4 00 00                  01 .literal
  42 b4 00 00         53 02 00 00 595
  46 b4 00 00                  ff .end (operand)
  47 b4 00 00                  04 .incset
  48 b4 00 00                  01 .literal
  49 b4 00 00         0a 00 00 00 10
  4d b4 00 00                  ff .end (operand)
  4e b4 00 00               01 3b .exec VcText
  50 b4 00 00                  01 .literal
  51 b4 00 00         f5 00 00 00 245
  55 b4 00 00                  ff .end (operand)
  56 b4 00 00               03 00 .var1 FLAGS
  58 b4 00 00                  01 .literal
  59 b4 00 00         53 02 00 00 595
  5d b4 00 00                  ff .end (operand)
  5e b4 00 00                  ff .end (operand)
  5f b4 00 00                     "Sam"

              53 61 6d 00 
  63 b4 00 00               03 00 .var1 FLAGS
  65 b4 00 00                  01 .literal
  66 b4 00 00         53 02 00 00 595
  6a b4 00 00                  ff .end (operand)
  6b b4 00 00                  04 .incset
  6c b4 00 00                  01 .literal
  6d b4 00 00         0a 00 00 00 10
  71 b4 00 00                  ff .end (operand)
  72 b4 00 00               01 4e .exec VcTextNum
  74 b4 00 00                  01 .literal
  75 b4 00 00         f5 00 00 00 245
  79 b4 00 00                  ff .end (operand)
  7a b4 00 00               03 00 .var1 FLAGS
  7c b4 00 00                  01 .literal
  7d b4 00 00         53 02 00 00 595
  81 b4 00 00                  ff .end (operand)
  82 b4 00 00                  ff .end (operand)
  83 b4 00 00               03 07 .var1 CURHP
  85 b4 00 00                  01 .literal
  86 b4 00 00         01 00 00 00 1
  8a b4 00 00                  ff .end (operand)
  8b b4 00 00                  ff .end (operand)
  8c b4 00 00               01 3b .exec VcText
  8e b4 00 00                  01 .literal
  8f b4 00 00         09 01 00 00 265
  93 b4 00 00                  ff .end (operand)
  94 b4 00 00               03 00 .var1 FLAGS
  96 b4 00 00                  01 .literal
  97 b4 00 00         53 02 00 00 595
  9b b4 00 00                  ff .end (operand)
  9c b4 00 00                  ff .end (operand)
  9d b4 00 00                     "/"

              2f 00 
  9f b4 00 00               01 4e .exec VcTextNum
  a1 b4 00 00                  01 .literal
  a2 b4 00 00         13 01 00 00 275
  a6 b4 00 00                  ff .end (operand)
  a7 b4 00 00               03 00 .var1 FLAGS
  a9 b4 00 00                  01 .literal
  aa b4 00 00         53 02 00 00 595
  ae b4 00 00                  ff .end (operand)
  af b4 00 00                  ff .end (operand)
  b0 b4 00 00               03 08 .var1 MAXHP
  b2 b4 00 00                  01 .literal
  b3 b4 00 00         01 00 00 00 1
  b7 b4 00 00                  ff .end (operand)
  b8 b4 00 00                  ff .end (operand)
  b9 b4 00 00               03 00 .var1 FLAGS
  bb b4 00 00                  01 .literal
  bc b4 00 00         53 02 00 00 595
  c0 b4 00 00                  ff .end (operand)
  c1 b4 00 00                  04 .incset
  c2 b4 00 00                  01 .literal
  c3 b4 00 00         0a 00 00 00 10
  c7 b4 00 00                  ff .end (operand)
  c8 b4 00 00               01 4e .exec VcTextNum
  ca b4 00 00                  01 .literal
  cb b4 00 00         f5 00 00 00 245
  cf b4 00 00                  ff .end (operand)
  d0 b4 00 00               03 00 .var1 FLAGS
  d2 b4 00 00                  01 .literal
  d3 b4 00 00         53 02 00 00 595
  d7 b4 00 00                  ff .end (operand)
  d8 b4 00 00                  ff .end (operand)
  d9 b4 00 00               03 09 .var1 CURMP
  db b4 00 00                  01 .literal
  dc b4 00 00         01 00 00 00 1
  e0 b4 00 00                  ff .end (operand)
  e1 b4 00 00                  ff .end (operand)
  e2 b4 00 00               01 3b .exec VcText
  e4 b4 00 00                  01 .literal
  e5 b4 00 00         09 01 00 00 265
  e9 b4 00 00                  ff .end (operand)
  ea b4 00 00               03 00 .var1 FLAGS
  ec b4 00 00                  01 .literal
  ed b4 00 00         53 02 00 00 595
  f1 b4 00 00                  ff .end (operand)
  f2 b4 00 00                  ff .end (operand)
  f3 b4 00 00                     "/"

              2f 00 
  f5 b4 00 00               01 4e .exec VcTextNum
  f7 b4 00 00                  01 .literal
  f8 b4 00 00         13 01 00 00 275
  fc b4 00 00                  ff .end (operand)
  fd b4 00 00               03 00 .var1 FLAGS
  ff b4 00 00                  01 .literal
  00 b5 00 00         53 02 00 00 595
  04 b5 00 00                  ff .end (operand)
  05 b5 00 00                  ff .end (operand)
  06 b5 00 00               03 0a .var1 MAXMP
  08 b5 00 00                  01 .literal
  09 b5 00 00         01 00 00 00 1
  0d b5 00 00                  ff .end (operand)
  0e b5 00 00                  ff .end (operand)
if427
::0f b5 00 00               05 01 .if [terms=1]
  11 b5 00 00         f0 b5 00 00 .else
  15 b5 00 00               03 02 .var1 CHAR
  17 b5 00 00                  01 .literal
  18 b5 00 00         02 00 00 00 2
  1c b5 00 00                  ff .end (operand)
  1d b5 00 00                  ff .end (operand)
  1f b5 00 00                  01 .if-sign-nonzero
  1f b5 00 00               03 00 .var1 FLAGS
  21 b5 00 00                  01 .literal
  22 b5 00 00         53 02 00 00 595
  26 b5 00 00                  ff .end (operand)
  27 b5 00 00                  04 .incset
  28 b5 00 00                  01 .literal
  29 b5 00 00         0a 00 00 00 10
  2d b5 00 00                  ff .end (operand)
  2e b5 00 00               01 3b .exec VcText
  30 b5 00 00                  01 .literal
  31 b5 00 00         f5 00 00 00 245
  35 b5 00 00                  ff .end (operand)
  36 b5 00 00               03 00 .var1 FLAGS
  38 b5 00 00                  01 .literal
  39 b5 00 00         53 02 00 00 595
  3d b5 00 00                  ff .end (operand)
  3e b5 00 00                  ff .end (operand)
  3f b5 00 00                     "Webb"

              57 65 62 62 00 
  44 b5 00 00               03 00 .var1 FLAGS
  46 b5 00 00                  01 .literal
  47 b5 00 00         53 02 00 00 595
  4b b5 00 00                  ff .end (operand)
  4c b5 00 00                  04 .incset
  4d b5 00 00                  01 .literal
  4e b5 00 00         0a 00 00 00 10
  52 b5 00 00                  ff .end (operand)
  53 b5 00 00               01 4e .exec VcTextNum
  55 b5 00 00                  01 .literal
  56 b5 00 00         f5 00 00 00 245
  5a b5 00 00                  ff .end (operand)
  5b b5 00 00               03 00 .var1 FLAGS
  5d b5 00 00                  01 .literal
  5e b5 00 00         53 02 00 00 595
  62 b5 00 00                  ff .end (operand)
  63 b5 00 00                  ff .end (operand)
  64 b5 00 00               03 07 .var1 CURHP
  66 b5 00 00                  01 .literal
  67 b5 00 00         02 00 00 00 2
  6b b5 00 00                  ff .end (operand)
  6c b5 00 00                  ff .end (operand)
  6d b5 00 00               01 3b .exec VcText
  6f b5 00 00                  01 .literal
  70 b5 00 00         09 01 00 00 265
  74 b5 00 00                  ff .end (operand)
  75 b5 00 00               03 00 .var1 FLAGS
  77 b5 00 00                  01 .literal
  78 b5 00 00         53 02 00 00 595
  7c b5 00 00                  ff .end (operand)
  7d b5 00 00                  ff .end (operand)
  7e b5 00 00                     "/"

              2f 00 
  80 b5 00 00               01 4e .exec VcTextNum
  82 b5 00 00                  01 .literal
  83 b5 00 00         13 01 00 00 275
  87 b5 00 00                  ff .end (operand)
  88 b5 00 00               03 00 .var1 FLAGS
  8a b5 00 00                  01 .literal
  8b b5 00 00         53 02 00 00 595
  8f b5 00 00                  ff .end (operand)
  90 b5 00 00                  ff .end (operand)
  91 b5 00 00               03 08 .var1 MAXHP
  93 b5 00 00                  01 .literal
  94 b5 00 00         02 00 00 00 2
  98 b5 00 00                  ff .end (operand)
  99 b5 00 00                  ff .end (operand)
  9a b5 00 00               03 00 .var1 FLAGS
  9c b5 00 00                  01 .literal
  9d b5 00 00         53 02 00 00 595
  a1 b5 00 00                  ff .end (operand)
  a2 b5 00 00                  04 .incset
  a3 b5 00 00                  01 .literal
  a4 b5 00 00         0a 00 00 00 10
  a8 b5 00 00                  ff .end (operand)
  a9 b5 00 00               01 4e .exec VcTextNum
  ab b5 00 00                  01 .literal
  ac b5 00 00         f5 00 00 00 245
  b0 b5 00 00                  ff .end (operand)
  b1 b5 00 00               03 00 .var1 FLAGS
  b3 b5 00 00                  01 .literal
  b4 b5 00 00         53 02 00 00 595
  b8 b5 00 00                  ff .end (operand)
  b9 b5 00 00                  ff .end (operand)
  ba b5 00 00               03 09 .var1 CURMP
  bc b5 00 00                  01 .literal
  bd b5 00 00         02 00 00 00 2
  c1 b5 00 00                  ff .end (operand)
  c2 b5 00 00                  ff .end (operand)
  c3 b5 00 00               01 3b .exec VcText
  c5 b5 00 00                  01 .literal
  c6 b5 00 00         09 01 00 00 265
  ca b5 00 00                  ff .end (operand)
  cb b5 00 00               03 00 .var1 FLAGS
  cd b5 00 00                  01 .literal
  ce b5 00 00         53 02 00 00 595
  d2 b5 00 00                  ff .end (operand)
  d3 b5 00 00                  ff .end (operand)
  d4 b5 00 00                     "/"

              2f 00 
  d6 b5 00 00               01 4e .exec VcTextNum
  d8 b5 00 00                  01 .literal
  d9 b5 00 00         13 01 00 00 275
  dd b5 00 00                  ff .end (operand)
  de b5 00 00               03 00 .var1 FLAGS
  e0 b5 00 00                  01 .literal
  e1 b5 00 00         53 02 00 00 595
  e5 b5 00 00                  ff .end (operand)
  e6 b5 00 00                  ff .end (operand)
  e7 b5 00 00               03 0a .var1 MAXMP
  e9 b5 00 00                  01 .literal
  ea b5 00 00         02 00 00 00 2
  ee b5 00 00                  ff .end (operand)
  ef b5 00 00                  ff .end (operand)
if428
::f0 b5 00 00               05 01 .if [terms=1]
  f2 b5 00 00         d1 b6 00 00 .else
  f6 b5 00 00               03 02 .var1 CHAR
  f8 b5 00 00                  01 .literal
  f9 b5 00 00         03 00 00 00 3
  fd b5 00 00                  ff .end (operand)
  fe b5 00 00                  ff .end (operand)
  00 b6 00 00                  01 .if-sign-nonzero
  00 b6 00 00               03 00 .var1 FLAGS
  02 b6 00 00                  01 .literal
  03 b6 00 00         53 02 00 00 595
  07 b6 00 00                  ff .end (operand)
  08 b6 00 00                  04 .incset
  09 b6 00 00                  01 .literal
  0a b6 00 00         0a 00 00 00 10
  0e b6 00 00                  ff .end (operand)
  0f b6 00 00               01 3b .exec VcText
  11 b6 00 00                  01 .literal
  12 b6 00 00         f5 00 00 00 245
  16 b6 00 00                  ff .end (operand)
  17 b6 00 00               03 00 .var1 FLAGS
  19 b6 00 00                  01 .literal
  1a b6 00 00         53 02 00 00 595
  1e b6 00 00                  ff .end (operand)
  1f b6 00 00                  ff .end (operand)
  20 b6 00 00                     "Feng"

              46 65 6e 67 00 
  25 b6 00 00               03 00 .var1 FLAGS
  27 b6 00 00                  01 .literal
  28 b6 00 00         53 02 00 00 595
  2c b6 00 00                  ff .end (operand)
  2d b6 00 00                  04 .incset
  2e b6 00 00                  01 .literal
  2f b6 00 00         0a 00 00 00 10
  33 b6 00 00                  ff .end (operand)
  34 b6 00 00               01 4e .exec VcTextNum
  36 b6 00 00                  01 .literal
  37 b6 00 00         f5 00 00 00 245
  3b b6 00 00                  ff .end (operand)
  3c b6 00 00               03 00 .var1 FLAGS
  3e b6 00 00                  01 .literal
  3f b6 00 00         53 02 00 00 595
  43 b6 00 00                  ff .end (operand)
  44 b6 00 00                  ff .end (operand)
  45 b6 00 00               03 07 .var1 CURHP
  47 b6 00 00                  01 .literal
  48 b6 00 00         03 00 00 00 3
  4c b6 00 00                  ff .end (operand)
  4d b6 00 00                  ff .end (operand)
  4e b6 00 00               01 3b .exec VcText
  50 b6 00 00                  01 .literal
  51 b6 00 00         09 01 00 00 265
  55 b6 00 00                  ff .end (operand)
  56 b6 00 00               03 00 .var1 FLAGS
  58 b6 00 00                  01 .literal
  59 b6 00 00         53 02 00 00 595
  5d b6 00 00                  ff .end (operand)
  5e b6 00 00                  ff .end (operand)
  5f b6 00 00                     "/"

              2f 00 
  61 b6 00 00               01 4e .exec VcTextNum
  63 b6 00 00                  01 .literal
  64 b6 00 00         13 01 00 00 275
  68 b6 00 00                  ff .end (operand)
  69 b6 00 00               03 00 .var1 FLAGS
  6b b6 00 00                  01 .literal
  6c b6 00 00         53 02 00 00 595
  70 b6 00 00                  ff .end (operand)
  71 b6 00 00                  ff .end (operand)
  72 b6 00 00               03 08 .var1 MAXHP
  74 b6 00 00                  01 .literal
  75 b6 00 00         03 00 00 00 3
  79 b6 00 00                  ff .end (operand)
  7a b6 00 00                  ff .end (operand)
  7b b6 00 00               03 00 .var1 FLAGS
  7d b6 00 00                  01 .literal
  7e b6 00 00         53 02 00 00 595
  82 b6 00 00                  ff .end (operand)
  83 b6 00 00                  04 .incset
  84 b6 00 00                  01 .literal
  85 b6 00 00         0a 00 00 00 10
  89 b6 00 00                  ff .end (operand)
  8a b6 00 00               01 4e .exec VcTextNum
  8c b6 00 00                  01 .literal
  8d b6 00 00         f5 00 00 00 245
  91 b6 00 00                  ff .end (operand)
  92 b6 00 00               03 00 .var1 FLAGS
  94 b6 00 00                  01 .literal
  95 b6 00 00         53 02 00 00 595
  99 b6 00 00                  ff .end (operand)
  9a b6 00 00                  ff .end (operand)
  9b b6 00 00               03 09 .var1 CURMP
  9d b6 00 00                  01 .literal
  9e b6 00 00         03 00 00 00 3
  a2 b6 00 00                  ff .end (operand)
  a3 b6 00 00                  ff .end (operand)
  a4 b6 00 00               01 3b .exec VcText
  a6 b6 00 00                  01 .literal
  a7 b6 00 00         09 01 00 00 265
  ab b6 00 00                  ff .end (operand)
  ac b6 00 00               03 00 .var1 FLAGS
  ae b6 00 00                  01 .literal
  af b6 00 00         53 02 00 00 595
  b3 b6 00 00                  ff .end (operand)
  b4 b6 00 00                  ff .end (operand)
  b5 b6 00 00                     "/"

              2f 00 
  b7 b6 00 00               01 4e .exec VcTextNum
  b9 b6 00 00                  01 .literal
  ba b6 00 00         13 01 00 00 275
  be b6 00 00                  ff .end (operand)
  bf b6 00 00               03 00 .var1 FLAGS
  c1 b6 00 00                  01 .literal
  c2 b6 00 00         53 02 00 00 595
  c6 b6 00 00                  ff .end (operand)
  c7 b6 00 00                  ff .end (operand)
  c8 b6 00 00               03 0a .var1 MAXMP
  ca b6 00 00                  01 .literal
  cb b6 00 00         03 00 00 00 3
  cf b6 00 00                  ff .end (operand)
  d0 b6 00 00                  ff .end (operand)
if429
::d1 b6 00 00               05 01 .if [terms=1]
  d3 b6 00 00         b2 b7 00 00 .else
  d7 b6 00 00               03 02 .var1 CHAR
  d9 b6 00 00                  01 .literal
  da b6 00 00         04 00 00 00 4
  de b6 00 00                  ff .end (operand)
  df b6 00 00                  ff .end (operand)
  e1 b6 00 00                  01 .if-sign-nonzero
  e1 b6 00 00               03 00 .var1 FLAGS
  e3 b6 00 00                  01 .literal
  e4 b6 00 00         53 02 00 00 595
  e8 b6 00 00                  ff .end (operand)
  e9 b6 00 00                  04 .incset
  ea b6 00 00                  01 .literal
  eb b6 00 00         0a 00 00 00 10
  ef b6 00 00                  ff .end (operand)
  f0 b6 00 00               01 3b .exec VcText
  f2 b6 00 00                  01 .literal
  f3 b6 00 00         f5 00 00 00 245
  f7 b6 00 00                  ff .end (operand)
  f8 b6 00 00               03 00 .var1 FLAGS
  fa b6 00 00                  01 .literal
  fb b6 00 00         53 02 00 00 595
  ff b6 00 00                  ff .end (operand)
  00 b7 00 00                  ff .end (operand)
  01 b7 00 00                     "Rikk"

              52 69 6b 6b 00 
  06 b7 00 00               03 00 .var1 FLAGS
  08 b7 00 00                  01 .literal
  09 b7 00 00         53 02 00 00 595
  0d b7 00 00                  ff .end (operand)
  0e b7 00 00                  04 .incset
  0f b7 00 00                  01 .literal
  10 b7 00 00         0a 00 00 00 10
  14 b7 00 00                  ff .end (operand)
  15 b7 00 00               01 4e .exec VcTextNum
  17 b7 00 00                  01 .literal
  18 b7 00 00         f5 00 00 00 245
  1c b7 00 00                  ff .end (operand)
  1d b7 00 00               03 00 .var1 FLAGS
  1f b7 00 00                  01 .literal
  20 b7 00 00         53 02 00 00 595
  24 b7 00 00                  ff .end (operand)
  25 b7 00 00                  ff .end (operand)
  26 b7 00 00               03 07 .var1 CURHP
  28 b7 00 00                  01 .literal
  29 b7 00 00         04 00 00 00 4
  2d b7 00 00                  ff .end (operand)
  2e b7 00 00                  ff .end (operand)
  2f b7 00 00               01 3b .exec VcText
  31 b7 00 00                  01 .literal
  32 b7 00 00         09 01 00 00 265
  36 b7 00 00                  ff .end (operand)
  37 b7 00 00               03 00 .var1 FLAGS
  39 b7 00 00                  01 .literal
  3a b7 00 00         53 02 00 00 595
  3e b7 00 00                  ff .end (operand)
  3f b7 00 00                  ff .end (operand)
  40 b7 00 00                     "/"

              2f 00 
  42 b7 00 00               01 4e .exec VcTextNum
  44 b7 00 00                  01 .literal
  45 b7 00 00         13 01 00 00 275
  49 b7 00 00                  ff .end (operand)
  4a b7 00 00               03 00 .var1 FLAGS
  4c b7 00 00                  01 .literal
  4d b7 00 00         53 02 00 00 595
  51 b7 00 00                  ff .end (operand)
  52 b7 00 00                  ff .end (operand)
  53 b7 00 00               03 08 .var1 MAXHP
  55 b7 00 00                  01 .literal
  56 b7 00 00         04 00 00 00 4
  5a b7 00 00                  ff .end (operand)
  5b b7 00 00                  ff .end (operand)
  5c b7 00 00               03 00 .var1 FLAGS
  5e b7 00 00                  01 .literal
  5f b7 00 00         53 02 00 00 595
  63 b7 00 00                  ff .end (operand)
  64 b7 00 00                  04 .incset
  65 b7 00 00                  01 .literal
  66 b7 00 00         0a 00 00 00 10
  6a b7 00 00                  ff .end (operand)
  6b b7 00 00               01 4e .exec VcTextNum
  6d b7 00 00                  01 .literal
  6e b7 00 00         f5 00 00 00 245
  72 b7 00 00                  ff .end (operand)
  73 b7 00 00               03 00 .var1 FLAGS
  75 b7 00 00                  01 .literal
  76 b7 00 00         53 02 00 00 595
  7a b7 00 00                  ff .end (operand)
  7b b7 00 00                  ff .end (operand)
  7c b7 00 00               03 09 .var1 CURMP
  7e b7 00 00                  01 .literal
  7f b7 00 00         04 00 00 00 4
  83 b7 00 00                  ff .end (operand)
  84 b7 00 00                  ff .end (operand)
  85 b7 00 00               01 3b .exec VcText
  87 b7 00 00                  01 .literal
  88 b7 00 00         09 01 00 00 265
  8c b7 00 00                  ff .end (operand)
  8d b7 00 00               03 00 .var1 FLAGS
  8f b7 00 00                  01 .literal
  90 b7 00 00         53 02 00 00 595
  94 b7 00 00                  ff .end (operand)
  95 b7 00 00                  ff .end (operand)
  96 b7 00 00                     "/"

              2f 00 
  98 b7 00 00               01 4e .exec VcTextNum
  9a b7 00 00                  01 .literal
  9b b7 00 00         13 01 00 00 275
  9f b7 00 00                  ff .end (operand)
  a0 b7 00 00               03 00 .var1 FLAGS
  a2 b7 00 00                  01 .literal
  a3 b7 00 00         53 02 00 00 595
  a7 b7 00 00                  ff .end (operand)
  a8 b7 00 00                  ff .end (operand)
  a9 b7 00 00               03 0a .var1 MAXMP
  ab b7 00 00                  01 .literal
  ac b7 00 00         04 00 00 00 4
  b0 b7 00 00                  ff .end (operand)
  b1 b7 00 00                  ff .end (operand)
if430
::b2 b7 00 00               05 01 .if [terms=1]
  b4 b7 00 00         94 b8 00 00 .else
  b8 b7 00 00               03 02 .var1 CHAR
  ba b7 00 00                  01 .literal
  bb b7 00 00         05 00 00 00 5
  bf b7 00 00                  ff .end (operand)
  c0 b7 00 00                  ff .end (operand)
  c2 b7 00 00                  01 .if-sign-nonzero
  c2 b7 00 00               03 00 .var1 FLAGS
  c4 b7 00 00                  01 .literal
  c5 b7 00 00         53 02 00 00 595
  c9 b7 00 00                  ff .end (operand)
  ca b7 00 00                  04 .incset
  cb b7 00 00                  01 .literal
  cc b7 00 00         0a 00 00 00 10
  d0 b7 00 00                  ff .end (operand)
  d1 b7 00 00               01 3b .exec VcText
  d3 b7 00 00                  01 .literal
  d4 b7 00 00         f5 00 00 00 245
  d8 b7 00 00                  ff .end (operand)
  d9 b7 00 00               03 00 .var1 FLAGS
  db b7 00 00                  01 .literal
  dc b7 00 00         53 02 00 00 595
  e0 b7 00 00                  ff .end (operand)
  e1 b7 00 00                  ff .end (operand)
  e2 b7 00 00                     "Dingo"

              44 69 6e 67 6f 00 
  e8 b7 00 00               03 00 .var1 FLAGS
  ea b7 00 00                  01 .literal
  eb b7 00 00         53 02 00 00 595
  ef b7 00 00                  ff .end (operand)
  f0 b7 00 00                  04 .incset
  f1 b7 00 00                  01 .literal
  f2 b7 00 00         0a 00 00 00 10
  f6 b7 00 00                  ff .end (operand)
  f7 b7 00 00               01 4e .exec VcTextNum
  f9 b7 00 00                  01 .literal
  fa b7 00 00         f5 00 00 00 245
  fe b7 00 00                  ff .end (operand)
  ff b7 00 00               03 00 .var1 FLAGS
  01 b8 00 00                  01 .literal
  02 b8 00 00         53 02 00 00 595
  06 b8 00 00                  ff .end (operand)
  07 b8 00 00                  ff .end (operand)
  08 b8 00 00               03 07 .var1 CURHP
  0a b8 00 00                  01 .literal
  0b b8 00 00         05 00 00 00 5
  0f b8 00 00                  ff .end (operand)
  10 b8 00 00                  ff .end (operand)
  11 b8 00 00               01 3b .exec VcText
  13 b8 00 00                  01 .literal
  14 b8 00 00         09 01 00 00 265
  18 b8 00 00                  ff .end (operand)
  19 b8 00 00               03 00 .var1 FLAGS
  1b b8 00 00                  01 .literal
  1c b8 00 00         53 02 00 00 595
  20 b8 00 00                  ff .end (operand)
  21 b8 00 00                  ff .end (operand)
  22 b8 00 00                     "/"

              2f 00 
  24 b8 00 00               01 4e .exec VcTextNum
  26 b8 00 00                  01 .literal
  27 b8 00 00         13 01 00 00 275
  2b b8 00 00                  ff .end (operand)
  2c b8 00 00               03 00 .var1 FLAGS
  2e b8 00 00                  01 .literal
  2f b8 00 00         53 02 00 00 595
  33 b8 00 00                  ff .end (operand)
  34 b8 00 00                  ff .end (operand)
  35 b8 00 00               03 08 .var1 MAXHP
  37 b8 00 00                  01 .literal
  38 b8 00 00         05 00 00 00 5
  3c b8 00 00                  ff .end (operand)
  3d b8 00 00                  ff .end (operand)
  3e b8 00 00               03 00 .var1 FLAGS
  40 b8 00 00                  01 .literal
  41 b8 00 00         53 02 00 00 595
  45 b8 00 00                  ff .end (operand)
  46 b8 00 00                  04 .incset
  47 b8 00 00                  01 .literal
  48 b8 00 00         0a 00 00 00 10
  4c b8 00 00                  ff .end (operand)
  4d b8 00 00               01 4e .exec VcTextNum
  4f b8 00 00                  01 .literal
  50 b8 00 00         f5 00 00 00 245
  54 b8 00 00                  ff .end (operand)
  55 b8 00 00               03 00 .var1 FLAGS
  57 b8 00 00                  01 .literal
  58 b8 00 00         53 02 00 00 595
  5c b8 00 00                  ff .end (operand)
  5d b8 00 00                  ff .end (operand)
  5e b8 00 00               03 09 .var1 CURMP
  60 b8 00 00                  01 .literal
  61 b8 00 00         05 00 00 00 5
  65 b8 00 00                  ff .end (operand)
  66 b8 00 00                  ff .end (operand)
  67 b8 00 00               01 3b .exec VcText
  69 b8 00 00                  01 .literal
  6a b8 00 00         09 01 00 00 265
  6e b8 00 00                  ff .end (operand)
  6f b8 00 00               03 00 .var1 FLAGS
  71 b8 00 00                  01 .literal
  72 b8 00 00         53 02 00 00 595
  76 b8 00 00                  ff .end (operand)
  77 b8 00 00                  ff .end (operand)
  78 b8 00 00                     "/"

              2f 00 
  7a b8 00 00               01 4e .exec VcTextNum
  7c b8 00 00                  01 .literal
  7d b8 00 00         13 01 00 00 275
  81 b8 00 00                  ff .end (operand)
  82 b8 00 00               03 00 .var1 FLAGS
  84 b8 00 00                  01 .literal
  85 b8 00 00         53 02 00 00 595
  89 b8 00 00                  ff .end (operand)
  8a b8 00 00                  ff .end (operand)
  8b b8 00 00               03 0a .var1 MAXMP
  8d b8 00 00                  01 .literal
  8e b8 00 00         05 00 00 00 5
  92 b8 00 00                  ff .end (operand)
  93 b8 00 00                  ff .end (operand)
if431
::94 b8 00 00               05 01 .if [terms=1]
  96 b8 00 00         78 b9 00 00 .else
  9a b8 00 00               03 02 .var1 CHAR
  9c b8 00 00                  01 .literal
  9d b8 00 00         06 00 00 00 6
  a1 b8 00 00                  ff .end (operand)
  a2 b8 00 00                  ff .end (operand)
  a4 b8 00 00                  01 .if-sign-nonzero
  a4 b8 00 00               03 00 .var1 FLAGS
  a6 b8 00 00                  01 .literal
  a7 b8 00 00         53 02 00 00 595
  ab b8 00 00                  ff .end (operand)
  ac b8 00 00                  04 .incset
  ad b8 00 00                  01 .literal
  ae b8 00 00         0a 00 00 00 10
  b2 b8 00 00                  ff .end (operand)
  b3 b8 00 00               01 3b .exec VcText
  b5 b8 00 00                  01 .literal
  b6 b8 00 00         f5 00 00 00 245
  ba b8 00 00                  ff .end (operand)
  bb b8 00 00               03 00 .var1 FLAGS
  bd b8 00 00                  01 .literal
  be b8 00 00         53 02 00 00 595
  c2 b8 00 00                  ff .end (operand)
  c3 b8 00 00                  ff .end (operand)
  c4 b8 00 00                     "Jeemdub"

              4a 65 65 6d 64 75 62 00 
  cc b8 00 00               03 00 .var1 FLAGS
  ce b8 00 00                  01 .literal
  cf b8 00 00         53 02 00 00 595
  d3 b8 00 00                  ff .end (operand)
  d4 b8 00 00                  04 .incset
  d5 b8 00 00                  01 .literal
  d6 b8 00 00         0a 00 00 00 10
  da b8 00 00                  ff .end (operand)
  db b8 00 00               01 4e .exec VcTextNum
  dd b8 00 00                  01 .literal
  de b8 00 00         f5 00 00 00 245
  e2 b8 00 00                  ff .end (operand)
  e3 b8 00 00               03 00 .var1 FLAGS
  e5 b8 00 00                  01 .literal
  e6 b8 00 00         53 02 00 00 595
  ea b8 00 00                  ff .end (operand)
  eb b8 00 00                  ff .end (operand)
  ec b8 00 00               03 07 .var1 CURHP
  ee b8 00 00                  01 .literal
  ef b8 00 00         06 00 00 00 6
  f3 b8 00 00                  ff .end (operand)
  f4 b8 00 00                  ff .end (operand)
  f5 b8 00 00               01 3b .exec VcText
  f7 b8 00 00                  01 .literal
  f8 b8 00 00         09 01 00 00 265
  fc b8 00 00                  ff .end (operand)
  fd b8 00 00               03 00 .var1 FLAGS
  ff b8 00 00                  01 .literal
  00 b9 00 00         53 02 00 00 595
  04 b9 00 00                  ff .end (operand)
  05 b9 00 00                  ff .end (operand)
  06 b9 00 00                     "/"

              2f 00 
  08 b9 00 00               01 4e .exec VcTextNum
  0a b9 00 00                  01 .literal
  0b b9 00 00         13 01 00 00 275
  0f b9 00 00                  ff .end (operand)
  10 b9 00 00               03 00 .var1 FLAGS
  12 b9 00 00                  01 .literal
  13 b9 00 00         53 02 00 00 595
  17 b9 00 00                  ff .end (operand)
  18 b9 00 00                  ff .end (operand)
  19 b9 00 00               03 08 .var1 MAXHP
  1b b9 00 00                  01 .literal
  1c b9 00 00         06 00 00 00 6
  20 b9 00 00                  ff .end (operand)
  21 b9 00 00                  ff .end (operand)
  22 b9 00 00               03 00 .var1 FLAGS
  24 b9 00 00                  01 .literal
  25 b9 00 00         53 02 00 00 595
  29 b9 00 00                  ff .end (operand)
  2a b9 00 00                  04 .incset
  2b b9 00 00                  01 .literal
  2c b9 00 00         0a 00 00 00 10
  30 b9 00 00                  ff .end (operand)
  31 b9 00 00               01 4e .exec VcTextNum
  33 b9 00 00                  01 .literal
  34 b9 00 00         f5 00 00 00 245
  38 b9 00 00                  ff .end (operand)
  39 b9 00 00               03 00 .var1 FLAGS
  3b b9 00 00                  01 .literal
  3c b9 00 00         53 02 00 00 595
  40 b9 00 00                  ff .end (operand)
  41 b9 00 00                  ff .end (operand)
  42 b9 00 00               03 09 .var1 CURMP
  44 b9 00 00                  01 .literal
  45 b9 00 00         06 00 00 00 6
  49 b9 00 00                  ff .end (operand)
  4a b9 00 00                  ff .end (operand)
  4b b9 00 00               01 3b .exec VcText
  4d b9 00 00                  01 .literal
  4e b9 00 00         09 01 00 00 265
  52 b9 00 00                  ff .end (operand)
  53 b9 00 00               03 00 .var1 FLAGS
  55 b9 00 00                  01 .literal
  56 b9 00 00         53 02 00 00 595
  5a b9 00 00                  ff .end (operand)
  5b b9 00 00                  ff .end (operand)
  5c b9 00 00                     "/"

              2f 00 
  5e b9 00 00               01 4e .exec VcTextNum
  60 b9 00 00                  01 .literal
  61 b9 00 00         13 01 00 00 275
  65 b9 00 00                  ff .end (operand)
  66 b9 00 00               03 00 .var1 FLAGS
  68 b9 00 00                  01 .literal
  69 b9 00 00         53 02 00 00 595
  6d b9 00 00                  ff .end (operand)
  6e b9 00 00                  ff .end (operand)
  6f b9 00 00               03 0a .var1 MAXMP
  71 b9 00 00                  01 .literal
  72 b9 00 00         06 00 00 00 6
  76 b9 00 00                  ff .end (operand)
  77 b9 00 00                  ff .end (operand)
if432
::78 b9 00 00               05 01 .if [terms=1]
  7a b9 00 00         59 ba 00 00 .else
  7e b9 00 00               03 02 .var1 CHAR
  80 b9 00 00                  01 .literal
  81 b9 00 00         07 00 00 00 7
  85 b9 00 00                  ff .end (operand)
  86 b9 00 00                  ff .end (operand)
  88 b9 00 00                  01 .if-sign-nonzero
  88 b9 00 00               03 00 .var1 FLAGS
  8a b9 00 00                  01 .literal
  8b b9 00 00         53 02 00 00 595
  8f b9 00 00                  ff .end (operand)
  90 b9 00 00                  04 .incset
  91 b9 00 00                  01 .literal
  92 b9 00 00         0a 00 00 00 10
  96 b9 00 00                  ff .end (operand)
  97 b9 00 00               01 3b .exec VcText
  99 b9 00 00                  01 .literal
  9a b9 00 00         f5 00 00 00 245
  9e b9 00 00                  ff .end (operand)
  9f b9 00 00               03 00 .var1 FLAGS
  a1 b9 00 00                  01 .literal
  a2 b9 00 00         53 02 00 00 595
  a6 b9 00 00                  ff .end (operand)
  a7 b9 00 00                  ff .end (operand)
  a8 b9 00 00                     "Bull"

              42 75 6c 6c 00 
  ad b9 00 00               03 00 .var1 FLAGS
  af b9 00 00                  01 .literal
  b0 b9 00 00         53 02 00 00 595
  b4 b9 00 00                  ff .end (operand)
  b5 b9 00 00                  04 .incset
  b6 b9 00 00                  01 .literal
  b7 b9 00 00         0a 00 00 00 10
  bb b9 00 00                  ff .end (operand)
  bc b9 00 00               01 4e .exec VcTextNum
  be b9 00 00                  01 .literal
  bf b9 00 00         f5 00 00 00 245
  c3 b9 00 00                  ff .end (operand)
  c4 b9 00 00               03 00 .var1 FLAGS
  c6 b9 00 00                  01 .literal
  c7 b9 00 00         53 02 00 00 595
  cb b9 00 00                  ff .end (operand)
  cc b9 00 00                  ff .end (operand)
  cd b9 00 00               03 07 .var1 CURHP
  cf b9 00 00                  01 .literal
  d0 b9 00 00         07 00 00 00 7
  d4 b9 00 00                  ff .end (operand)
  d5 b9 00 00                  ff .end (operand)
  d6 b9 00 00               01 3b .exec VcText
  d8 b9 00 00                  01 .literal
  d9 b9 00 00         09 01 00 00 265
  dd b9 00 00                  ff .end (operand)
  de b9 00 00               03 00 .var1 FLAGS
  e0 b9 00 00                  01 .literal
  e1 b9 00 00         53 02 00 00 595
  e5 b9 00 00                  ff .end (operand)
  e6 b9 00 00                  ff .end (operand)
  e7 b9 00 00                     "/"

              2f 00 
  e9 b9 00 00               01 4e .exec VcTextNum
  eb b9 00 00                  01 .literal
  ec b9 00 00         13 01 00 00 275
  f0 b9 00 00                  ff .end (operand)
  f1 b9 00 00               03 00 .var1 FLAGS
  f3 b9 00 00                  01 .literal
  f4 b9 00 00         53 02 00 00 595
  f8 b9 00 00                  ff .end (operand)
  f9 b9 00 00                  ff .end (operand)
  fa b9 00 00               03 08 .var1 MAXHP
  fc b9 00 00                  01 .literal
  fd b9 00 00         07 00 00 00 7
  01 ba 00 00                  ff .end (operand)
  02 ba 00 00                  ff .end (operand)
  03 ba 00 00               03 00 .var1 FLAGS
  05 ba 00 00                  01 .literal
  06 ba 00 00         53 02 00 00 595
  0a ba 00 00                  ff .end (operand)
  0b ba 00 00                  04 .incset
  0c ba 00 00                  01 .literal
  0d ba 00 00         0a 00 00 00 10
  11 ba 00 00                  ff .end (operand)
  12 ba 00 00               01 4e .exec VcTextNum
  14 ba 00 00                  01 .literal
  15 ba 00 00         f5 00 00 00 245
  19 ba 00 00                  ff .end (operand)
  1a ba 00 00               03 00 .var1 FLAGS
  1c ba 00 00                  01 .literal
  1d ba 00 00         53 02 00 00 595
  21 ba 00 00                  ff .end (operand)
  22 ba 00 00                  ff .end (operand)
  23 ba 00 00               03 09 .var1 CURMP
  25 ba 00 00                  01 .literal
  26 ba 00 00         07 00 00 00 7
  2a ba 00 00                  ff .end (operand)
  2b ba 00 00                  ff .end (operand)
  2c ba 00 00               01 3b .exec VcText
  2e ba 00 00                  01 .literal
  2f ba 00 00         09 01 00 00 265
  33 ba 00 00                  ff .end (operand)
  34 ba 00 00               03 00 .var1 FLAGS
  36 ba 00 00                  01 .literal
  37 ba 00 00         53 02 00 00 595
  3b ba 00 00                  ff .end (operand)
  3c ba 00 00                  ff .end (operand)
  3d ba 00 00                     "/"

              2f 00 
  3f ba 00 00               01 4e .exec VcTextNum
  41 ba 00 00                  01 .literal
  42 ba 00 00         13 01 00 00 275
  46 ba 00 00                  ff .end (operand)
  47 ba 00 00               03 00 .var1 FLAGS
  49 ba 00 00                  01 .literal
  4a ba 00 00         53 02 00 00 595
  4e ba 00 00                  ff .end (operand)
  4f ba 00 00                  ff .end (operand)
  50 ba 00 00               03 0a .var1 MAXMP
  52 ba 00 00                  01 .literal
  53 ba 00 00         07 00 00 00 7
  57 ba 00 00                  ff .end (operand)
  58 ba 00 00                  ff .end (operand)
if433
::59 ba 00 00               05 01 .if [terms=1]
  5b ba 00 00         3b bb 00 00 .else
  5f ba 00 00               03 02 .var1 CHAR
  61 ba 00 00                  01 .literal
  62 ba 00 00         08 00 00 00 8
  66 ba 00 00                  ff .end (operand)
  67 ba 00 00                  ff .end (operand)
  69 ba 00 00                  01 .if-sign-nonzero
  69 ba 00 00               03 00 .var1 FLAGS
  6b ba 00 00                  01 .literal
  6c ba 00 00         53 02 00 00 595
  70 ba 00 00                  ff .end (operand)
  71 ba 00 00                  04 .incset
  72 ba 00 00                  01 .literal
  73 ba 00 00         0a 00 00 00 10
  77 ba 00 00                  ff .end (operand)
  78 ba 00 00               01 3b .exec VcText
  7a ba 00 00                  01 .literal
  7b ba 00 00         f5 00 00 00 245
  7f ba 00 00                  ff .end (operand)
  80 ba 00 00               03 00 .var1 FLAGS
  82 ba 00 00                  01 .literal
  83 ba 00 00         53 02 00 00 595
  87 ba 00 00                  ff .end (operand)
  88 ba 00 00                  ff .end (operand)
  89 ba 00 00                     "Lumin"

              4c 75 6d 69 6e 00 
  8f ba 00 00               03 00 .var1 FLAGS
  91 ba 00 00                  01 .literal
  92 ba 00 00         53 02 00 00 595
  96 ba 00 00                  ff .end (operand)
  97 ba 00 00                  04 .incset
  98 ba 00 00                  01 .literal
  99 ba 00 00         0a 00 00 00 10
  9d ba 00 00                  ff .end (operand)
  9e ba 00 00               01 4e .exec VcTextNum
  a0 ba 00 00                  01 .literal
  a1 ba 00 00         f5 00 00 00 245
  a5 ba 00 00                  ff .end (operand)
  a6 ba 00 00               03 00 .var1 FLAGS
  a8 ba 00 00                  01 .literal
  a9 ba 00 00         53 02 00 00 595
  ad ba 00 00                  ff .end (operand)
  ae ba 00 00                  ff .end (operand)
  af ba 00 00               03 07 .var1 CURHP
  b1 ba 00 00                  01 .literal
  b2 ba 00 00         08 00 00 00 8
  b6 ba 00 00                  ff .end (operand)
  b7 ba 00 00                  ff .end (operand)
  b8 ba 00 00               01 3b .exec VcText
  ba ba 00 00                  01 .literal
  bb ba 00 00         09 01 00 00 265
  bf ba 00 00                  ff .end (operand)
  c0 ba 00 00               03 00 .var1 FLAGS
  c2 ba 00 00                  01 .literal
  c3 ba 00 00         53 02 00 00 595
  c7 ba 00 00                  ff .end (operand)
  c8 ba 00 00                  ff .end (operand)
  c9 ba 00 00                     "/"

              2f 00 
  cb ba 00 00               01 4e .exec VcTextNum
  cd ba 00 00                  01 .literal
  ce ba 00 00         13 01 00 00 275
  d2 ba 00 00                  ff .end (operand)
  d3 ba 00 00               03 00 .var1 FLAGS
  d5 ba 00 00                  01 .literal
  d6 ba 00 00         53 02 00 00 595
  da ba 00 00                  ff .end (operand)
  db ba 00 00                  ff .end (operand)
  dc ba 00 00               03 08 .var1 MAXHP
  de ba 00 00                  01 .literal
  df ba 00 00         08 00 00 00 8
  e3 ba 00 00                  ff .end (operand)
  e4 ba 00 00                  ff .end (operand)
  e5 ba 00 00               03 00 .var1 FLAGS
  e7 ba 00 00                  01 .literal
  e8 ba 00 00         53 02 00 00 595
  ec ba 00 00                  ff .end (operand)
  ed ba 00 00                  04 .incset
  ee ba 00 00                  01 .literal
  ef ba 00 00         0a 00 00 00 10
  f3 ba 00 00                  ff .end (operand)
  f4 ba 00 00               01 4e .exec VcTextNum
  f6 ba 00 00                  01 .literal
  f7 ba 00 00         f5 00 00 00 245
  fb ba 00 00                  ff .end (operand)
  fc ba 00 00               03 00 .var1 FLAGS
  fe ba 00 00                  01 .literal
  ff ba 00 00         53 02 00 00 595
  03 bb 00 00                  ff .end (operand)
  04 bb 00 00                  ff .end (operand)
  05 bb 00 00               03 09 .var1 CURMP
  07 bb 00 00                  01 .literal
  08 bb 00 00         08 00 00 00 8
  0c bb 00 00                  ff .end (operand)
  0d bb 00 00                  ff .end (operand)
  0e bb 00 00               01 3b .exec VcText
  10 bb 00 00                  01 .literal
  11 bb 00 00         09 01 00 00 265
  15 bb 00 00                  ff .end (operand)
  16 bb 00 00               03 00 .var1 FLAGS
  18 bb 00 00                  01 .literal
  19 bb 00 00         53 02 00 00 595
  1d bb 00 00                  ff .end (operand)
  1e bb 00 00                  ff .end (operand)
  1f bb 00 00                     "/"

              2f 00 
  21 bb 00 00               01 4e .exec VcTextNum
  23 bb 00 00                  01 .literal
  24 bb 00 00         13 01 00 00 275
  28 bb 00 00                  ff .end (operand)
  29 bb 00 00               03 00 .var1 FLAGS
  2b bb 00 00                  01 .literal
  2c bb 00 00         53 02 00 00 595
  30 bb 00 00                  ff .end (operand)
  31 bb 00 00                  ff .end (operand)
  32 bb 00 00               03 0a .var1 MAXMP
  34 bb 00 00                  01 .literal
  35 bb 00 00         08 00 00 00 8
  39 bb 00 00                  ff .end (operand)
  3a bb 00 00                  ff .end (operand)
::3b bb 00 00               01 3b .exec VcText
  3d bb 00 00                  01 .literal
  3e bb 00 00         f5 00 00 00 245
  42 bb 00 00                  ff .end (operand)
  43 bb 00 00                  01 .literal
  44 bb 00 00         ad 00 00 00 173
  48 bb 00 00                  ff .end (operand)
  49 bb 00 00                     "SP"

              53 50 00 
  4c bb 00 00               01 4e .exec VcTextNum
  4e bb 00 00                  01 .literal
  4f bb 00 00         f5 00 00 00 245
  53 bb 00 00                  ff .end (operand)
  54 bb 00 00                  01 .literal
  55 bb 00 00         b7 00 00 00 183
  59 bb 00 00                  ff .end (operand)
  5a bb 00 00               03 00 .var1 FLAGS
  5c bb 00 00                  01 .literal
  5d bb 00 00         bf 02 00 00 703
  61 bb 00 00                  ff .end (operand)
  62 bb 00 00                  ff .end (operand)
  63 bb 00 00               01 20 .exec Redraw
  65 bb 00 00                  ff .end (block)

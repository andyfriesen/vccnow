ParseIfTerm : C >= CurrentScriptEnd after parsing operand,
    bailing...[ParseFailure] NewParseExpression : Illegal opcode 32 ParseIf
    : ParseFailure eject after NewParseExpression ParseIf
    : ParseFailure eject after NewParseExpression Parse failure
          .Attempting to recover... Negative bytes left
    : -1. Skipping to next event... Parse failure
          .Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped Bytes 03 00 00 ff Retry parsing the
          rest of event 27 [ParseFailure] NewParseExpression
    : Illegal opcode 0 Parse failure
          .Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped Bytes 00 00 00 ff Retry parsing the
          rest of event 27 [ParseFailure] NewParseExpression
    : Illegal opcode 11 ParseIf
    : ParseFailure eject after NewParseExpression ParseIf
    : ParseFailure eject after NewParseExpression Parse failure
          .Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped
          Bytes 48 6f 00 00 01 04 01 16 00 00 00 ff Retry parsing the rest of
              event 27 [ParseFailure] NewParseExpression
    : Illegal opcode 11 Parse failure
          .Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped Bytes 0b 05 01 03 00 00 00 ff Retry
          parsing the rest of event 27 [ParseFailure] NewParseExpression
    : Illegal opcode 68 Parse failure.Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped
          Bytes 44 70 00 00 01 04 01 16 00 00 00 ff Retry parsing the rest of
              event 27 ParseIfTerm
    : C >= CurrentScriptEnd after parsing operand,
    bailing...[ParseFailure] NewParseExpression : Illegal opcode 32 ParseIf
    : ParseFailure eject after NewParseExpression Parse failure
          .Attempting to recover... Negative bytes left
    : -1. Skipping to next event... Parse failure
          .Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped Bytes 03 00 00 ff Retry parsing the
          rest of event 28 [ParseFailure] NewParseExpression
    : Illegal opcode 0 Parse failure.Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped Bytes 00 00 00 ff Retry parsing the
          rest of event 28 ParseIfTerm
    : C >= CurrentScriptEnd after parsing operand,
    bailing...[ParseFailure] NewParseExpression : Illegal opcode 32 ParseIf
    : ParseFailure eject after NewParseExpression ParseIf
    : ParseFailure eject after NewParseExpression ParseIf
    : ParseFailure eject after NewParseExpression Parse failure
          .Attempting to recover... Negative bytes left
    : -1. Skipping to next event... Parse failure
          .Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped Bytes 03 00 00 ff Retry parsing the
          rest of event 29 [ParseFailure] NewParseExpression
    : Illegal opcode 0 Parse failure.Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped Bytes 00 00 00 ff Retry parsing the
          rest of event 29 ParseIfTerm
    : C >= CurrentScriptEnd after parsing operand,
    bailing...[ParseFailure] NewParseExpression : Illegal opcode 32 ParseIf
    : ParseFailure eject after NewParseExpression ParseIf
    : ParseFailure eject after NewParseExpression Parse failure
          .Attempting to recover... Negative bytes left
    : -1. Skipping to next event... Parse failure
          .Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped Bytes 03 00 00 ff Retry parsing the
          rest of event 30 [ParseFailure] NewParseExpression
    : Illegal opcode 0 Parse failure.Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped Bytes 00 00 00 ff Retry parsing the
          rest of event 30 ParseIfTerm
    : C >= CurrentScriptEnd after parsing operand,
    bailing...[ParseFailure] NewParseExpression : Illegal opcode 32 ParseIf
    : ParseFailure eject after NewParseExpression ParseIf
    : ParseFailure eject after NewParseExpression Parse failure
          .Attempting to recover... Negative bytes left
    : -1. Skipping to next event... Parse failure
          .Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped Bytes 03 00 00 ff Retry parsing the
          rest of event 31 [ParseFailure] NewParseExpression
    : Illegal opcode 0 Parse failure.Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped Bytes 00 00 00 ff Retry parsing the
          rest of event 31 ParseIfTerm
    : C >= CurrentScriptEnd after parsing operand,
    bailing...[ParseFailure] NewParseExpression : Illegal opcode 32 ParseIf
    : ParseFailure eject after NewParseExpression ParseIf
    : ParseFailure eject after NewParseExpression[ParseFailure] ParseFor0
    : tail but no END found
          .Found 32 ParseIf
    : ParseFailure eject after NewParseExpression Parse failure
          .Attempting to recover... Negative bytes left
    : -1. Skipping to next event... Parse failure
          .Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped Bytes 03 00 00 ff Retry parsing the
          rest of event 32 [ParseFailure] NewParseExpression
    : Illegal opcode 0 Parse failure
          .Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped Bytes 00 00 00 ff Retry parsing the
          rest of event 32 [ParseFailure] NewParseExpression
    : Illegal opcode 11 ParseIf
    : ParseFailure eject after NewParseExpression Parse failure
          .Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped
          Bytes 2f 7c 00 00 08 17 01 01 00 00 00 ff Retry parsing the rest of
              event 32 Parse failure
          .Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped Bytes 00 00 00 ff Retry parsing the
          rest of event 32 Parse failure
          .Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped Bytes 00 00 ff Retry parsing the rest
          of event 32 [ParseFailure] NewParseExpression
    : Illegal opcode 11 Parse failure
          .Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped Bytes 0b 05 01 03 00 00 00 ff Retry
          parsing the rest of event 32 [ParseFailure] NewParseExpression
    : Illegal opcode 167 Parse failure
          .Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped Bytes
          a7 7c 00 00 08 17 01 01 00 00 00 ff Retry parsing the rest of
              event 32 Parse failure
          .Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped Bytes 00 00 00 ff Retry parsing the
          rest of event 32 Parse failure.Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped Bytes 00 00 ff Retry parsing the rest
          of event 32 ParseIfTerm : C >= CurrentScriptEnd after parsing operand,
    bailing...[ParseFailure] NewParseExpression : Illegal opcode 32 ParseIf
    : ParseFailure eject after NewParseExpression ParseIf
    : ParseFailure eject after NewParseExpression Parse failure
          .Attempting to recover... Negative bytes left
    : -1. Skipping to next event... Parse failure
          .Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped Bytes 03 00 00 ff Retry parsing the
          rest of event 33 [ParseFailure] NewParseExpression
    : Illegal opcode 0 Parse failure
          .Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped Bytes 00 00 00 ff Retry parsing the
          rest of event 33 [ParseFailure] NewParseExpression
    : Illegal opcode 11 ParseIf
    : ParseFailure eject after NewParseExpression ParseIf
    : ParseFailure eject after NewParseExpression ParseIf
    : ParseFailure eject after NewParseExpression ParseIf
    : ParseFailure eject after NewParseExpression Parse failure
          .Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped Bytes
          a7 7f 00 00 03 00 01 6b 00 00 00 ff Retry parsing the rest of
              event 33 Parse failure
          .Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped Bytes 00 01 57 02 00 00 ff Retry
          parsing the rest of event 33 [ParseFailure] NewParseExpression
    : Illegal opcode 11 Parse failure
          .Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped Bytes 0b 05 01 03 00 00 00 ff Retry
          parsing the rest of event 33 [ParseFailure] NewParseExpression
    : Illegal opcode 199 Parse failure
          .Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped Bytes
          c7 7f 00 00 03 00 01 6b 00 00 00 ff Retry parsing the rest of
              event 33 Parse failure.Attempting to recover... ParseFailure
    : Skipping past next 0xff byte Skipped Bytes 00 01 58 02 00 00 ff Retry
          parsing the rest of event 33 event /*0*/
{
  if (/*ReturnIndex 0000002b*/ flags(800) == 0)
  {
    banner("Combat Only!", 1);
  }
  if (/*ReturnIndex 00000052*/ flags(851) == 1)
  {
    banner("Used up!", 1);
  }
  if (/*ReturnIndex 0000033a*/ flags(800) == 1 && flags(851) == 0)
  {
    flags(607) = hit(4) + 20;
    flags(607) += random(1, 5);
    callevent(14);
    specialframe(9) = 5;
    wait(10);
    specialframe(9) = 6;
    wait(10);
    specialframe(9) = 7;
    wait(10);
    specialframe(9) = 8;
    wait(10);
    specialframe(9) = 9;
    wait(20);
    banner("Drop: Safe", 1);
    vcloadpcx("safe.pcx", 0);
    switch (flags(643))
    {
      case (1):
        soundeffect(22);
        for (z, 1, 65, 2)
        {
          vctblitimage(40, z, 32, 32, 0);
          wait(1);
          vcclear();
        }
        vcputpcx("safe2.pcx", 40, 65);
        wait(10);
        vcclear();
      case (2):
        soundeffect(22);
        for (z, 1, 97, 2)
        {
          vctblitimage(40, z, 32, 32, 0);
          wait(1);
          vcclear();
        }
        vcputpcx("safe2.pcx", 40, 97);
        wait(10);
        vcclear();
      case (3):
        soundeffect(22);
        for (z, 1, 129, 2)
        {
          vctblitimage(40, z, 32, 32, 0);
          wait(1);
          vcclear();
        }
        vcputpcx("safe2.pcx", 40, 129);
        wait(10);
        vcclear();
    }
    calleffect(61);
    specialframe(9) = 0;
    flags(851) = 1;
    flags(999)++;
    callevent(15);
    if (/*ReturnIndex 0000033a*/ flags(999) == 50)
    {
      banner("Rikk learned:", 1);
      banner("Drop: Vault!", 1);
      getmagic(4, 15);
    }
  }
}
event /*1*/
{
  if (/*ReturnIndex 00000366*/ flags(800) == 0)
  {
    banner("Combat Only!", 1);
  }
  if (/*ReturnIndex 0000038d*/ flags(852) == 1)
  {
    banner("Used up!", 1);
  }
  if (/*ReturnIndex 00000622*/ flags(800) == 1 && flags(852) == 0)
  {
    flags(607) = hit(4) + 40;
    flags(607) += random(1, 10);
    callevent(14);
    specialframe(9) = 5;
    wait(10);
    specialframe(9) = 6;
    wait(10);
    specialframe(9) = 7;
    wait(10);
    specialframe(9) = 8;
    wait(10);
    specialframe(9) = 9;
    wait(20);
    vcloadpcx("anvil.pcx", 0);
    banner("Drop: Anvil", 1);
    switch (flags(643))
    {
      case (1):
        soundeffect(22);
        for (z, 1, 65, 2)
        {
          vctblitimage(40, z, 32, 32, 0);
          wait(1);
          vcclear();
        }
        vcputpcx("anvil2.pcx", 40, 65);
        wait(10);
        vcclear();
      case (2):
        soundeffect(22);
        for (z, 1, 97, 2)
        {
          vctblitimage(40, z, 32, 32, 0);
          wait(1);
          vcclear();
        }
        vcputpcx("anvil2.pcx", 40, 97);
        wait(10);
        vcclear();
      case (3):
        soundeffect(22);
        for (z, 1, 129, 2)
        {
          vctblitimage(40, z, 32, 32, 0);
          wait(1);
          vcclear();
        }
        vcputpcx("anvil2.pcx", 40, 129);
        wait(10);
        vcclear();
    }
    calleffect(61);
    specialframe(9) = 0;
    flags(852) = 1;
    callevent(15);
  }
}
event /*2*/
{
  if (/*ReturnIndex 0000064e*/ flags(800) == 0)
  {
    banner("Combat Only!", 1);
  }
  if (/*ReturnIndex 00000675*/ flags(853) == 1)
  {
    banner("Used up!", 1);
  }
  if (/*ReturnIndex 00000910*/ flags(800) == 1 && flags(853) == 0)
  {
    flags(607) = hit(4) + 60;
    flags(607) += random(1, 10);
    callevent(14);
    specialframe(9) = 5;
    wait(10);
    specialframe(9) = 6;
    wait(10);
    specialframe(9) = 7;
    wait(10);
    specialframe(9) = 8;
    wait(10);
    specialframe(9) = 9;
    wait(20);
    vcloadpcx("tenton.pcx", 0);
    banner("Drop: 10 Tons", 1);
    switch (flags(643))
    {
      case (1):
        soundeffect(22);
        for (z, 1, 65, 2)
        {
          vctblitimage(40, z, 32, 32, 0);
          wait(1);
          vcclear();
        }
        vcputpcx("tenton2.pcx", 40, 65);
        wait(10);
        vcclear();
      case (2):
        soundeffect(22);
        for (z, 1, 97, 2)
        {
          vctblitimage(40, z, 32, 32, 0);
          wait(1);
          vcclear();
        }
        vcputpcx("tenton2.pcx", 40, 97);
        wait(10);
        vcclear();
      case (3):
        soundeffect(22);
        for (z, 1, 129, 2)
        {
          vctblitimage(40, z, 32, 32, 0);
          wait(1);
          vcclear();
        }
        vcputpcx("tenton2.pcx", 40, 129);
        wait(10);
        vcclear();
    }
    calleffect(61);
    specialframe(9) = 0;
    flags(853) = 1;
    callevent(15);
  }
}
event /*3*/
{
  if (/*ReturnIndex 0000093c*/ flags(800) == 0)
  {
    banner("Combat Only!", 1);
  }
  if (/*ReturnIndex 00000963*/ flags(854) == 1)
  {
    banner("Used up!", 1);
  }
  if (/*ReturnIndex 00000c0b*/ flags(800) == 1 && flags(854) == 0)
  {
    flags(607) = hit(4) + 80;
    flags(607) += random(1, 10);
    callevent(14);
    specialframe(9) = 5;
    wait(10);
    specialframe(9) = 6;
    wait(10);
    specialframe(9) = 7;
    wait(10);
    specialframe(9) = 8;
    wait(10);
    specialframe(9) = 9;
    wait(20);
    vcloadpcx("luckyb.pcx", 0);
    banner("Drop: Statue", 1);
    switch (flags(643))
    {
      case (1):
        soundeffect(22);
        for (z, 1, 49, 2)
        {
          vctblitimage(40, z, 32, 48, 0);
          wait(1);
          vcclear();
        }
        vcputpcx("luckyb2.pcx", 40, 49);
        wait(10);
        vcclear();
      case (2):
        soundeffect(22);
        for (z, 1, 81, 2)
        {
          vctblitimage(40, z, 32, 48, 0);
          wait(1);
          vcclear();
        }
        vcputpcx("luckyb2.pcx", 40, 81);
        wait(10);
        vcclear();
      case (3):
        soundeffect(22);
        for (z, 1, 113, 2)
        {
          vctblitimage(40, z, 32, 48, 0);
          wait(1);
          vcclear();
        }
        vcputpcx("luckyb2.pcx", 40, 113);
        wait(10);
        vcclear();
    }
    calleffect(61);
    specialframe(9) = 0;
    givexp(4, 5);
    flags(854) = 1;
    callevent(15);
  }
}
event /*4*/
{
  if (/*ReturnIndex 00000c46*/ flags(800) == 0)
  {
    banner("Combat Only!", 1);
    curmp(5) += 30;
  }
  if (/*ReturnIndex 00001028*/ flags(800) == 1)
  {
    textmenu(18, 18, 112, 1, "Normal Spell", "Powered Spell");
    if (/*ReturnIndex 00000cea*/ flags(112) == 2 && flags(703) < 3)
    {
      stext(0, "Not enough Spell Points!", "", "");
      flags(112) = 1;
    }
    if (/*ReturnIndex 00000d1f*/ flags(112) == 2 && flags(703) > 2)
    {
      flags(703) -= 3;
    }
    if (/*ReturnIndex 00000d4a*/ flags(112) != 2)
    {
      banner("Life Booster", 1);
    }
    if (/*ReturnIndex 00000d75*/ flags(112) == 2)
    {
      banner("Deus Booster", 1);
    }
    specialframe(14) = 5;
    wait(10);
    specialframe(14) = 6;
    wait(10);
    specialframe(14) = 7;
    wait(10);
    specialframe(14) = 8;
    wait(10);
    specialframe(14) = 9;
    wait(10);
    specialframe(14) = 0;
    wait(50);
    if (/*ReturnIndex 00000e43*/ char(1))
    {
      curhp(1) += 50;
      if (/*ReturnIndex 00000e43*/ flags(112) == 2)
      {
        curhp(1) += 100;
      }
    }
    if (/*ReturnIndex 00000e87*/ char(2))
    {
      curhp(2) += 50;
      if (/*ReturnIndex 00000e87*/ flags(112) == 2)
      {
        curhp(2) += 100;
      }
    }
    if (/*ReturnIndex 00000ecb*/ char(3))
    {
      curhp(3) += 50;
      if (/*ReturnIndex 00000ecb*/ flags(112) == 2)
      {
        curhp(3) += 100;
      }
    }
    if (/*ReturnIndex 00000f0f*/ char(4))
    {
      curhp(4) += 50;
      if (/*ReturnIndex 00000f0f*/ flags(112) == 2)
      {
        curhp(4) += 100;
      }
    }
    if (/*ReturnIndex 00000f53*/ char(5))
    {
      curhp(5) += 50;
      if (/*ReturnIndex 00000f53*/ flags(112) == 2)
      {
        curhp(5) += 100;
      }
    }
    if (/*ReturnIndex 00000f97*/ char(6))
    {
      curhp(6) += 50;
      if (/*ReturnIndex 00000f97*/ flags(112) == 2)
      {
        curhp(6) += 100;
      }
    }
    if (/*ReturnIndex 00000fdb*/ char(7))
    {
      curhp(7) += 50;
      if (/*ReturnIndex 00000fdb*/ flags(112) == 2)
      {
        curhp(7) += 100;
      }
    }
    if (/*ReturnIndex 0000101f*/ char(8))
    {
      curhp(8) += 50;
      if (/*ReturnIndex 0000101f*/ flags(112) == 2)
      {
        curhp(8) += 100;
      }
    }
    callevent(18);
  }
}
event /*5*/
{
  if (/*ReturnIndex 00001054*/ flags(800) == 0)
  {
    banner("Combat Only!", 1);
  }
  if (/*ReturnIndex 0000107b*/ flags(855) == 1)
  {
    banner("Used up!", 1);
  }
  if (/*ReturnIndex 000015ae*/ flags(800) == 1 && flags(855) == 0)
  {
    flags(607) = hit(4) + 40;
    flags(607) += random(1, 5);
    flags(607) += flags(250);
    callevent(14);
    specialframe(9) = 5;
    wait(10);
    specialframe(9) = 6;
    wait(10);
    specialframe(9) = 7;
    wait(10);
    specialframe(9) = 8;
    wait(10);
    specialframe(9) = 9;
    wait(20);
    banner("Drop: Shell", 1);
    vcloadpcx("shell1.pcx", 0);
    vcloadpcx("shell2.pcx", 1024);
    vcloadpcx("shell3.pcx", 2048);
    vcloadpcx("shell4.pcx", 3072);
    switch (flags(643))
    {
      case (1):
        soundeffect(22);
        for (z, 1, 65, 8)
        {
          vctblitimage(40, z, 32, 32, 0);
          wait(1);
          vcclear();
          vctblitimage(40, z + 2, 32, 32, 1024);
          wait(1);
          vcclear();
          vctblitimage(40, z + 4, 32, 32, 2048);
          wait(1);
          vcclear();
          vctblitimage(40, z + 6, 32, 32, 3072);
          wait(1);
          vcclear();
        }
        vcputpcx("shell5.pcx", 40, 65);
        wait(10);
        vcclear();
      case (2):
        soundeffect(22);
        for (z, 1, 97, 8)
        {
          vctblitimage(40, z, 32, 32, 0);
          wait(1);
          vcclear();
          vctblitimage(40, z + 2, 32, 32, 1024);
          wait(1);
          vcclear();
          vctblitimage(40, z + 4, 32, 32, 2048);
          wait(1);
          vcclear();
          vctblitimage(40, z + 6, 32, 32, 3072);
          wait(1);
          vcclear();
        }
        vcputpcx("shell5.pcx", 40, 97);
        wait(10);
        vcclear();
      case (3):
        soundeffect(22);
        for (z, 1, 129, 8)
        {
          vctblitimage(40, z, 32, 32, 0);
          wait(1);
          vcclear();
          vctblitimage(40, z + 2, 32, 32, 1024);
          wait(1);
          vcclear();
          vctblitimage(40, z + 4, 32, 32, 2048);
          wait(1);
          vcclear();
          vctblitimage(40, z + 6, 32, 32, 3072);
          wait(1);
          vcclear();
        }
        vcputpcx("shell5.pcx", 40, 129);
        wait(10);
        vcclear();
    }
    calleffect(61);
    specialframe(9) = 0;
    flags(855) = 1;
    flags(998)++;
    callevent(15);
    if (/*ReturnIndex 0000154b*/ flags(998) == 50)
    {
      banner("Rikk learned:", 1);
      banner("Drop: Warhead!", 1);
      getmagic(4, 9);
    }
    if (/*ReturnIndex 000015ae*/ flags(998) > 99 && flags(998) < 102)
    {
      banner("Rikk learned:", 1);
      banner("Drop:VenusShell!", 1);
      getmagic(4, 16);
    }
  }
}
event /*6*/
{
  if (/*ReturnIndex 000015e9*/ flags(800) == 0)
  {
    banner("Combat Only!", 1);
    curmp(1) += 10;
  }
  if (/*ReturnIndex 00001b63*/ flags(800) == 1)
  {
    textmenu(18, 18, 112, 1, "Normal Spell", "Powered Spell");
    if (/*ReturnIndex 0000168d*/ flags(112) == 2 && flags(703) < 1)
    {
      stext(0, "Not enough Spell Points!", "", "");
      flags(112) = 1;
    }
    if (/*ReturnIndex 000016c2*/ flags(112) == 2 && flags(703) > 0)
    {
      flags(703) -= 1;
    }
    if (/*ReturnIndex 000016e5*/ flags(112) != 2)
    {
      banner("Peer", 1);
    }
    if (/*ReturnIndex 00001709*/ flags(112) == 2)
    {
      banner("X-Ray", 1);
    }
    specialframe(8) = 5;
    wait(10);
    specialframe(8) = 6;
    wait(10);
    specialframe(8) = 7;
    wait(10);
    specialframe(8) = 8;
    wait(10);
    specialframe(8) = 9;
    wait(10);
    specialframe(8) = 0;
    wait(50);
    vcclear();
    if (/*ReturnIndex 000018d4*/ flags(598) > 0)
    {
      vcbox(64, 50, 184, 100);
      vctext(72, 55, "Enemy 1:");
      vctextnum(72, 65, flags(598));
      vctext(107, 65, "/");
      vctextnum(117, 65, flags(504));
      if (/*ReturnIndex 000018d4*/ flags(112) == 2)
      {
        vctext(72, 75, "PA:");
        vctextnum(92, 75, flags(502));
        vctext(117, 75, "PD:");
        vctextnum(137, 75, flags(503));
        vctext(72, 85, "MA:");
        vctextnum(92, 85, flags(540));
        vctext(117, 85, "MD:");
        vctextnum(137, 85, flags(541));
      }
    }
    if (/*ReturnIndex 00001a13*/ flags(599) > 0)
    {
      vcbox(64, 100, 184, 150);
      vctext(72, 105, "Enemy 2:");
      vctextnum(72, 115, flags(599));
      vctext(107, 115, "/");
      vctextnum(117, 115, flags(517));
      if (/*ReturnIndex 00001a13*/ flags(112) == 2)
      {
        vctext(72, 125, "PA:");
        vctextnum(92, 125, flags(515));
        vctext(117, 125, "PD:");
        vctextnum(137, 125, flags(516));
        vctext(72, 135, "MA:");
        vctextnum(92, 135, flags(542));
        vctext(117, 135, "MD:");
        vctextnum(137, 135, flags(543));
      }
    }
    if (/*ReturnIndex 00001b52*/ flags(600) > 0)
    {
      vcbox(64, 150, 184, 200);
      vctext(72, 155, "Enemy 3:");
      vctextnum(72, 165, flags(600));
      vctext(107, 165, "/");
      vctextnum(117, 165, flags(530));
      if (/*ReturnIndex 00001b52*/ flags(112) == 2)
      {
        vctext(72, 175, "PA:");
        vctextnum(92, 175, flags(528));
        vctext(117, 175, "PD:");
        vctextnum(137, 175, flags(529));
        vctext(72, 185, "MA:");
        vctextnum(92, 185, flags(544));
        vctext(117, 185, "MD:");
        vctextnum(137, 185, flags(545));
      }
    }
    wait(300);
    callevent(18);
  }
}
event /*7*/
{
  if (/*ReturnIndex 00001b9e*/ flags(800) == 0)
  {
    banner("Combat Only!", 1);
    curmp(3) += 30;
  }
  if (/*ReturnIndex 00001f4a*/ flags(800) == 1)
  {
    textmenu(18, 18, 112, 1, "Normal Spell", "Powered Spell");
    if (/*ReturnIndex 00001c42*/ flags(112) == 2 && flags(703) < 3)
    {
      stext(0, "Not enough Spell Points!", "", "");
      flags(112) = 1;
    }
    if (/*ReturnIndex 00001c77*/ flags(112) == 2 && flags(703) > 2)
    {
      flags(703) -= 3;
    }
    callevent(14);
    flags(720) = mag(3);
    if (/*ReturnIndex 00001cbc*/ flags(112) < 2)
    {
      banner("Thunderbolt", 1);
    }
    if (/*ReturnIndex 00001d09*/ flags(112) == 2)
    {
      banner("Blitzkrieg", 1);
      flags(720) += mag(3);
      flags(720) += mag(3);
    }
    flags(720) += random(1, 5);
    specialframe(10) = 5;
    wait(10);
    specialframe(10) = 6;
    wait(10);
    specialframe(10) = 7;
    wait(10);
    specialframe(10) = 8;
    wait(10);
    specialframe(10) = 9;
    wait(20);
    vcloadpcx("bolt1.pcx", 0);
    vcloadpcx("bolt2.pcx", 3200);
    switch (flags(642))
    {
      case (1):
        vctblitimage(40, 1, 32, 100, 0);
        wait(1);
        vcclear();
        vctblitimage(40, 1, 32, 100, 3200);
        wait(10);
        vcclear();
      case (2):
        for (z, 1, 29, 4)
        {
          vctblitimage(40, z, 32, 100, 0);
          wait(1);
          vcclear();
          vctblitimage(40, z + 2, 32, 100, 3200);
          wait(1);
          vcclear();
        }
        wait(10);
        vcclear();
      case (3):
        for (z, 1, 61, 4)
        {
          vctblitimage(40, z, 32, 100, 0);
          wait(1);
          vcclear();
          vctblitimage(40, z + 2, 32, 100, 3200);
          wait(1);
          vcclear();
        }
        wait(10);
        vcclear();
    }
    calleffect(62);
    specialframe(10) = 0;
    callevent(21);
  }
}
event /*8*/
{
  if (/*ReturnIndex 00001f85*/ flags(800) == 0)
  {
    banner("Combat Only!", 1);
    curmp(3) += 60;
  }
  if (/*ReturnIndex 0000237c*/ flags(800) == 1)
  {
    textmenu(18, 18, 112, 1, "Normal Spell", "Powered Spell");
    if (/*ReturnIndex 00002029*/ flags(112) == 2 && flags(703) < 6)
    {
      stext(0, "Not enough Spell Points!", "", "");
      flags(112) = 1;
    }
    if (/*ReturnIndex 0000205e*/ flags(112) == 2 && flags(703) > 5)
    {
      flags(703) -= 6;
    }
    flags(720) = mag(3);
    if (/*ReturnIndex 0000209e*/ flags(112) < 2)
    {
      banner("Lightning Rider", 1);
    }
    if (/*ReturnIndex 000020ef*/ flags(112) == 2)
    {
      banner("Lightning Soul", 1);
      flags(720) += mag(3);
      flags(720) += mag(3);
    }
    flags(720) += random(1, 5);
    specialframe(10) = 5;
    wait(10);
    specialframe(10) = 6;
    wait(10);
    specialframe(10) = 7;
    wait(10);
    specialframe(10) = 8;
    wait(10);
    specialframe(10) = 9;
    wait(20);
    entity.chrindex(10) = 16;
    vcclear();
    vcputpcx("lrider1.pcx", 62, 84);
    wait(10);
    vcclear();
    vcputpcx("lrider2.pcx", 62, 84);
    wait(10);
    vcclear();
    vcputpcx("lrider3.pcx", 62, 84);
    wait(10);
    vcclear();
    vcputpcx("lrider4.pcx", 62, 84);
    wait(10);
    vcclear();
    vcloadpcx("lrider5.pcx", 0);
    vcloadpcx("lrider6.pcx", 16000);
    for (x, 1, 5, 1)
    {
      vctblitimage(62, 84, 160, 100, 0);
      wait(10);
      vcclear();
      vctblitimage(62, 84, 160, 100, 16000);
      wait(10);
      vcclear();
    }
    vcputpcx("lrider4.pcx", 62, 84);
    wait(10);
    vcclear();
    vcputpcx("lrider3.pcx", 62, 84);
    wait(10);
    vcclear();
    vcputpcx("lrider2.pcx", 62, 84);
    wait(10);
    vcclear();
    vcputpcx("lrider1.pcx", 62, 84);
    wait(10);
    entity.chrindex(10) = 5;
    vcclear();
    flags(642) = 7;
    calleffect(62);
    specialframe(10) = 0;
    callevent(21);
  }
}
event /*9*/
{
  if (/*ReturnIndex 000023b7*/ flags(800) == 0)
  {
    banner("Combat only!", 1);
    curmp(3) += 45;
  }
  if (/*ReturnIndex 000027f0*/ flags(800) == 1)
  {
    textmenu(18, 18, 112, 1, "Normal Spell", "Powered Spell");
    if (/*ReturnIndex 0000245b*/ flags(112) == 2 && flags(703) < 5)
    {
      stext(0, "Not enough Spell Points!", "", "");
      flags(112) = 1;
    }
    if (/*ReturnIndex 00002490*/ flags(112) == 2 && flags(703) > 4)
    {
      flags(703) -= 5;
    }
    flags(720) = mag(3);
    if (/*ReturnIndex 000024cb*/ flags(112) < 2)
    {
      banner("Storm Fury", 1);
    }
    if (/*ReturnIndex 0000251c*/ flags(112) == 2)
    {
      banner("Tempest Attack", 1);
      flags(720) += mag(3);
      flags(720) += mag(3);
    }
    specialframe(10) = 5;
    wait(10);
    specialframe(10) = 6;
    wait(10);
    specialframe(10) = 7;
    wait(10);
    specialframe(10) = 8;
    wait(10);
    specialframe(10) = 9;
    wait(20);
    if (/*ReturnIndex 00002735*/ flags(112) == 2)
    {
      vcloadpcx("bolt1.pcx", 0);
      vcloadpcx("bolt2.pcx", 3200);
      vctblitimage(40, 1, 32, 100, 0);
      wait(1);
      vcclear();
      vctblitimage(40, 1, 32, 100, 3200);
      wait(10);
      vcclear();
      for (z, 1, 29, 4)
      {
        vctblitimage(40, z, 32, 100, 0);
        wait(1);
        vcclear();
        vctblitimage(40, z + 2, 32, 100, 3200);
        wait(1);
        vcclear();
      }
      wait(10);
      vcclear();
      for (z, 1, 61, 4)
      {
        vctblitimage(40, z, 32, 100, 0);
        wait(1);
        vcclear();
        vctblitimage(40, z + 2, 32, 100, 3200);
        wait(1);
        vcclear();
      }
      wait(10);
      vcclear();
      specialframe(10) = 0;
      flags(642) = 7;
      calleffect(62);
      callevent(21);
    }
    stext(0, "Feng is Enraged!", "", "");
    if (/*ReturnIndex 00002775*/ curhp(3) > 0)
    {
      specialframe(10) = 28;
    }
    callevent(14);
    flags(1003) += maxhp(3);
    flags(1003) += fer(3);
    flags(632) = 1;
    flags(605) += random(7, 10);
    flags(605) += 150;
    flags(606) += random(7, 10);
  }
}
event /*10*/
{
  if (/*ReturnIndex 0000282b*/ flags(800) == 0)
  {
    banner("Combat Only!", 1);
    curmp(3) += 1;
  }
  if (/*ReturnIndex 00002bbf*/ flags(800) == 1)
  {
    flags(720) = mag(3);
    flags(720) += mag(3);
    flags(720) += mag(3);
    banner("Evil Blood", 1);
    flags(720) += random(1, 5);
    specialframe(10) = 5;
    wait(10);
    specialframe(10) = 6;
    wait(10);
    specialframe(10) = 7;
    wait(10);
    specialframe(10) = 8;
    wait(10);
    specialframe(10) = 9;
    wait(20);
    vcclear();
    vcloadpcx("evil1.pcx", 0);
    vcloadpcx("evil2.pcx", 3200);
    for (x, 1, 5, 1)
    {
      vctblitimage(48, 64, 100, 32, 0);
      vctblitimage(48, 96, 100, 32, 0);
      vctblitimage(48, 128, 100, 32, 0);
      wait(10);
      vcclear();
      vctblitimage(48, 64, 100, 32, 3200);
      vctblitimage(48, 96, 100, 32, 3200);
      vctblitimage(48, 128, 100, 32, 3200);
      wait(10);
      vcclear();
    }
    flags(642) = 7;
    calleffect(62);
    specialframe(10) = 29;
    curhp(3) = 0;
    curmp(3) = 0;
    callevent(21);
    if (/*ReturnIndex 00002bbf*/ flags(284) == 1)
    {
      stext(0, "Evilchu evolves into Vilechu!", "", "");
      flags(284) = 2;
      flags(599) = 2500;
      entity.chrindex(5) = 23;
      specialframe(5) = 0;
      flags(515) = 150;
      flags(516) = 80;
      flags(518) = 77;
      flags(519) = 76;
      flags(520) = 75;
      flags(521) = 75;
      flags(522) = 60;
      flags(523) = 70;
      flags(524) = 5;
      flags(525) = 65;
      flags(526) = 70;
      flags(542) = 250;
      flags(543) = 100;
      flags(251) = 1;
    }
  }
}
event /*11*/
{
  if (/*ReturnIndex 00002beb*/ flags(800) == 0)
  {
    banner("Combat Only!", 1);
  }
  if (/*ReturnIndex 00002c12*/ flags(851) == 1)
  {
    banner("Used up!", 1);
  }
  if (/*ReturnIndex 00002ec9*/ flags(800) == 1 && flags(851) == 0)
  {
    flags(607) = hit(4) + 20;
    flags(607) += random(1, 5);
    for (x, 1, gp, 100)
    {
      flags(607) += 1;
    }
    callevent(14);
    specialframe(9) = 5;
    wait(10);
    specialframe(9) = 6;
    wait(10);
    specialframe(9) = 7;
    wait(10);
    specialframe(9) = 8;
    wait(10);
    specialframe(9) = 9;
    wait(20);
    banner("Drop: Vault", 1);
    vcloadpcx("vault.pcx", 0);
    switch (flags(643))
    {
      case (1):
        soundeffect(22);
        for (z, 1, 65, 2)
        {
          vctblitimage(40, z, 32, 32, 0);
          wait(1);
          vcclear();
        }
        vcputpcx("vault2.pcx", 40, 65);
        wait(10);
        vcclear();
      case (2):
        soundeffect(22);
        for (z, 1, 97, 2)
        {
          vctblitimage(40, z, 32, 32, 0);
          wait(1);
          vcclear();
        }
        vcputpcx("vault2.pcx", 40, 97);
        wait(10);
        vcclear();
      case (3):
        soundeffect(22);
        for (z, 1, 129, 2)
        {
          vctblitimage(40, z, 32, 32, 0);
          wait(1);
          vcclear();
        }
        vcputpcx("vault2.pcx", 40, 129);
        wait(10);
        vcclear();
    }
    calleffect(61);
    specialframe(9) = 0;
    flags(851) = 1;
    callevent(15);
  }
}
event /*12*/
{
  if (/*ReturnIndex 00002ef5*/ flags(800) == 0)
  {
    banner("Combat Only!", 1);
  }
  if (/*ReturnIndex 00002f1c*/ flags(855) == 1)
  {
    banner("Used up!", 1);
  }
  if (/*ReturnIndex 0000357e*/ flags(800) == 1 && flags(855) == 0)
  {
    flags(607) = hit(4) + 40;
    flags(607) += random(1, 5);
    flags(607) += flags(250);
    callevent(14);
    specialframe(9) = 5;
    wait(10);
    specialframe(9) = 6;
    wait(10);
    specialframe(9) = 7;
    wait(10);
    specialframe(9) = 8;
    wait(10);
    specialframe(9) = 9;
    wait(20);
    banner("Drop: Bombshell", 1);
    vcloadpcx("shell1.pcx", 0);
    vcloadpcx("shell2.pcx", 1024);
    vcloadpcx("shell3.pcx", 2048);
    vcloadpcx("shell4.pcx", 3072);
    switch (flags(643))
    {
      case (1):
        soundeffect(22);
        for (z, 1, 65, 8)
        {
          vctblitimage(40, z, 32, 32, 0);
          wait(1);
          vcclear();
          vctblitimage(40, z + 2, 32, 32, 1024);
          wait(1);
          vcclear();
          vctblitimage(40, z + 4, 32, 32, 2048);
          wait(1);
          vcclear();
          vctblitimage(40, z + 6, 32, 32, 3072);
          wait(1);
          vcclear();
        }
        vcputpcx("shell5.pcx", 40, 65);
        wait(10);
        vcclear();
      case (2):
        soundeffect(22);
        for (z, 1, 97, 8)
        {
          vctblitimage(40, z, 32, 32, 0);
          wait(1);
          vcclear();
          vctblitimage(40, z + 2, 32, 32, 1024);
          wait(1);
          vcclear();
          vctblitimage(40, z + 4, 32, 32, 2048);
          wait(1);
          vcclear();
          vctblitimage(40, z + 6, 32, 32, 3072);
          wait(1);
          vcclear();
        }
        vcputpcx("shell5.pcx", 40, 97);
        wait(10);
        vcclear();
      case (3):
        soundeffect(22);
        for (z, 1, 129, 8)
        {
          vctblitimage(40, z, 32, 32, 0);
          wait(1);
          vcclear();
          vctblitimage(40, z + 2, 32, 32, 1024);
          wait(1);
          vcclear();
          vctblitimage(40, z + 4, 32, 32, 2048);
          wait(1);
          vcclear();
          vctblitimage(40, z + 6, 32, 32, 3072);
          wait(1);
          vcclear();
        }
        vcputpcx("shell5.pcx", 40, 129);
        wait(10);
        vcclear();
    }
    calleffect(61);
    specialframe(9) = 0;
    flags(855) = 1;
    callevent(15);
    flags(112) = random(1, 3);
    if (/*ReturnIndex 000033d3*/ flags(112) == 3)
    {
      banner("A dud!", 1);
    }
    if (/*ReturnIndex 0000350c*/ flags(112) != 3)
    {
      soundeffect(12);
      vcputpcx("Explo1.pcx", 1, 16);
      wait(10);
      vcclear();
      vcputpcx("Explo2.pcx", 1, 16);
      wait(10);
      vcclear();
      vcputpcx("Explo3.pcx", 1, 16);
      wait(10);
      vcclear();
      vcputpcx("Explo4.pcx", 1, 16);
      wait(10);
      vcclear();
      vcputpcx("Explo5.pcx", 1, 16);
      wait(10);
      vcclear();
      vcputpcx("Explo6.pcx", 1, 16);
      wait(10);
      flags(722) = mag(4);
      flags(722) += random(1, 5);
      flags(643) = 7;
      calleffect(62);
      callevent(21);
    }
    flags(998) += 2;
    if (/*ReturnIndex 0000357e*/ flags(998) > 99 && flags(998) < 102)
    {
      banner("Rikk learned:", 1);
      banner("Drop:VenusShell!", 1);
      getmagic(4, 16);
    }
  }
}
event /*13*/
{
  if (/*ReturnIndex 000035aa*/ flags(800) == 0)
  {
    banner("Combat Only!", 1);
  }
  if (/*ReturnIndex 000035d1*/ flags(856) == 1)
  {
    banner("Used up!", 1);
  }
  if (/*ReturnIndex 000038aa*/ flags(800) == 1 && flags(856) == 0)
  {
    flags(607) = hit(4) + curhp(7);
    flags(607) += atk(7);
    callevent(14);
    specialframe(9) = 5;
    wait(10);
    specialframe(9) = 6;
    wait(10);
    specialframe(9) = 7;
    wait(10);
    specialframe(9) = 8;
    wait(10);
    specialframe(9) = 9;
    wait(20);
    banner("Drop: Bull", 1);
    stext(7, "What the?!?", "", "");
    entity.locx(12) += 8;
    vcloadpcx("bullfall.pcx", 0);
    switch (flags(643))
    {
      case (1):
        soundeffect(22);
        for (z, 1, 65, 2)
        {
          vctblitimage(40, z, 32, 32, 0);
          wait(1);
          vcclear();
        }
        vcputpcx("bullhit.pcx", 40, 65);
        wait(10);
        vcclear();
      case (2):
        soundeffect(22);
        for (z, 1, 97, 2)
        {
          vctblitimage(40, z, 32, 32, 0);
          wait(1);
          vcclear();
        }
        vcputpcx("bullhit.pcx", 40, 97);
        wait(10);
        vcclear();
      case (3):
        soundeffect(22);
        for (z, 1, 129, 2)
        {
          vctblitimage(40, z, 32, 32, 0);
          wait(1);
          vcclear();
        }
        vcputpcx("bullhit.pcx", 40, 129);
        wait(10);
        vcclear();
    }
    calleffect(61);
    entity.locx(12) -= 8;
    specialframe(9) = 0;
    flags(856) = 1;
    givexp(7, 50);
    callevent(15);
  }
}
event /*14*/
{
  if (/*ReturnIndex 000038d6*/ flags(800) != 1)
  {
    banner("Combat Only!", 1);
  }
  if (/*ReturnIndex 00003905*/ flags(630) != 5)
  {
    banner("Can't use now...", 1);
  }
  if (/*ReturnIndex 00003949*/ flags(1001) < maxhp(1) + maxhp(1) - fer(1))
  {
    banner("Can't use now...", 1);
  }
  if (/*ReturnIndex 00004743*/ flags(800) == 1 && flags(630) == 5 &&
      flags(1001) >= maxhp(1) + maxhp(1) - fer(1))
  {
    banner("Hyper Tongue!", 1);
    specialframe(8) = 5;
    wait(10);
    specialframe(8) = 6;
    wait(10);
    specialframe(8) = 7;
    wait(10);
    specialframe(8) = 8;
    wait(10);
    specialframe(8) = 9;
    wait(10);
    specialframe(8) = 3;
    wait(10);
    specialframe(8) = 4;
    wait(20);
    entity.chrindex(8) = 16;
    vcclear();
    vcputpcx("tongue.pcx", 81, 53);
    wait(10);
    vcclear();
    vcputpcx("tongue2.pcx", 81, 53);
    wait(10);
    vcclear();
    vcputpcx("tongue3.pcx", 81, 53);
    wait(10);
    vcclear();
    vcputpcx("tongue4.pcx", 81, 53);
    wait(10);
    vcclear();
    vcputpcx("tongue5.pcx", 81, 53);
    wait(10);
    vcclear();
    vcputpcx("tongue6.pcx", 81, 53);
    wait(30);
    vcclear();
    entity.chrindex(8) = 6;
    wait(10);
    specialframe(8) = 0;
    if (/*ReturnIndex 00003f22*/ flags(598) > 0)
    {
      flags(601) = atk(1);
      flags(601) += atk(1);
      flags(601) += flags(601);
      if (/*ReturnIndex 00003bcd*/ flags(601) <= flags(618))
      {
        flags(601) = 0;
      }
      if (/*ReturnIndex 00003bf8*/ flags(601) > flags(618))
      {
        flags(601) -= flags(618);
      }
      if (/*ReturnIndex 00003ee0*/ flags(601) >= flags(598))
      {
        flags(598) = 0;
        vctext(48, 80, "Eaten!");
        switch (flags(1009))
        {
          case (0): banner("Nothing!", 1);
          case (1): heal(1, 30); banner("Yum! Good!", 1);
          case (2): heal(1, maxhp(1)); banner("Mmmm...", 1);
          case (3): curmp(1) = maxmp(1); banner("Refreshing!", 1);
          case (4): flags(703) += 1; banner("Energizing!", 1);
          case (5): flags(703) += 3; banner("Invigorating!", 1);
          case (6): givegp(500); banner("Gold found!", 1);
          case (7): givegp(1800); banner("Rich-tasting!", 1);
          case (8): givexp(1, 500); banner("Ah!", 1);
          case (9): givexp(1, 1500); banner("Aah!", 1);
          case (10): givexp(1, 10000); banner("Egads!!!!!", 1);
          case (11): stext(0, "Sam acquires a musky odor...", "", "");
          case (12):
            banner("Some's left...", 1);
            stext(0, "Acquired Wet Tail!", "", "");
          case (13):
            stext(1, "Whoaaa! The colors!", "", "");
            curmp(1) = maxmp(1);
        }
      }
      if (/*ReturnIndex 00003f22*/ flags(601) < flags(598))
      {
        flags(598) -= flags(601);
        vctextnum(48, 80, flags(601));
      }
    }
    if (/*ReturnIndex 000042eb*/ flags(599) > 0)
    {
      flags(601) = atk(1);
      flags(601) += atk(1);
      flags(601) += flags(601);
      if (/*ReturnIndex 00003f96*/ flags(601) <= flags(620))
      {
        flags(601) = 0;
      }
      if (/*ReturnIndex 00003fc1*/ flags(601) > flags(620))
      {
        flags(601) -= flags(620);
      }
      if (/*ReturnIndex 000042a9*/ flags(601) >= flags(599))
      {
        flags(599) = 0;
        vctext(48, 112, "Eaten!");
        switch (flags(1010))
        {
          case (0): banner("Nothing!", 1);
          case (1): heal(1, 30); banner("Yum! Good!", 1);
          case (2): heal(1, maxhp(1)); banner("Mmmm...", 1);
          case (3): curmp(1) = maxmp(1); banner("Refreshing!", 1);
          case (4): flags(703) += 1; banner("Energizing!", 1);
          case (5): flags(703) += 3; banner("Invigorating!", 1);
          case (6): givegp(500); banner("Gold found!", 1);
          case (7): givegp(1800); banner("Rich-tasting!", 1);
          case (8): givexp(1, 500); banner("Ah!", 1);
          case (9): givexp(1, 1500); banner("Aah!", 1);
          case (10): givexp(1, 10000); banner("Egads!!!!!", 1);
          case (11): stext(0, "Sam acquires a musky odor...", "", "");
          case (12):
            banner("Some's left...", 1);
            stext(0, "Acquired Wet Tail!", "", "");
          case (13):
            stext(1, "Whoaaa! The colors!", "", "");
            curmp(1) = maxmp(1);
        }
      }
      if (/*ReturnIndex 000042eb*/ flags(601) < flags(599))
      {
        flags(599) -= flags(601);
        vctextnum(48, 112, flags(601));
      }
    }
    if (/*ReturnIndex 000046b4*/ flags(600) > 0)
    {
      flags(601) = atk(1);
      flags(601) += atk(1);
      flags(601) += flags(601);
      if (/*ReturnIndex 0000435f*/ flags(601) <= flags(622))
      {
        flags(601) = 0;
      }
      if (/*ReturnIndex 0000438a*/ flags(601) > flags(622))
      {
        flags(601) -= flags(622);
      }
      if (/*ReturnIndex 00004672*/ flags(601) >= flags(600))
      {
        flags(600) = 0;
        vctext(48, 144, "Eaten!");
        switch (flags(1011))
        {
          case (0): banner("Nothing!", 1);
          case (1): heal(1, 30); banner("Yum! Good!", 1);
          case (2): heal(1, maxhp(1)); banner("Mmmm...", 1);
          case (3): curmp(1) = maxmp(1); banner("Refreshing!", 1);
          case (4): flags(703) += 1; banner("Energizing!", 1);
          case (5): flags(703) += 3; banner("Invigorating!", 1);
          case (6): givegp(500); banner("Gold found!", 1);
          case (7): givegp(1800); banner("Rich-tasting!", 1);
          case (8): givexp(1, 500); banner("Ah!", 1);
          case (9): givexp(1, 1500); banner("Aah!", 1);
          case (10): givexp(1, 10000); banner("Egads!!!!!", 1);
          case (11): stext(0, "Sam acquires a musky odor...", "", "");
          case (12):
            banner("Some's left...", 1);
            stext(0, "Acquired Wet Tail!", "", "");
          case (13):
            stext(1, "Whoaaa! The colors!", "", "");
            curmp(1) = maxmp(1);
        }
      }
      if (/*ReturnIndex 000046b4*/ flags(601) < flags(600))
      {
        flags(600) -= flags(601);
        vctextnum(48, 144, flags(601));
      }
    }
    if (/*ReturnIndex 000046d9*/ flags(598) == 0)
    {
      specialframe(7) = 29;
    }
    if (/*ReturnIndex 000046fe*/ flags(599) == 0)
    {
      specialframe(5) = 29;
    }
    if (/*ReturnIndex 00004723*/ flags(600) == 0)
    {
      specialframe(6) = 29;
    }
    wait(50);
    callevent(18);
    flags(1001) = 0;
  }
}
event /*15*/
{
  if (/*ReturnIndex 0000476f*/ flags(800) != 1)
  {
    banner("Combat Only!", 1);
  }
  if (/*ReturnIndex 0000479e*/ flags(631) != 4)
  {
    banner("Can't use now...", 1);
  }
  if (/*ReturnIndex 000047e2*/ flags(1002) < maxhp(2) + maxhp(2) - fer(2))
  {
    banner("Can't use now...", 1);
  }
  if (/*ReturnIndex 000049ff*/ flags(800) == 1 && flags(631) == 4 &&
      flags(1002) >= maxhp(2) + maxhp(2) - fer(2))
  {
    banner("Infernal Aura!", 1);
    specialframe(13) = 20;
    wait(10);
    specialframe(13) = 21;
    wait(10);
    specialframe(13) = 22;
    wait(10);
    specialframe(13) = 23;
    wait(10);
    specialframe(13) = 24;
    wait(10);
    vcloadpcx("firewall.pcx", 0);
    vctblitimage(28, 64, 43, 52, 0);
    soundeffect(9);
    wait(130);
    vctblitimage(88, 96, 43, 52, 0);
    soundeffect(9);
    wait(130);
    vctblitimage(48, 128, 43, 52, 0);
    soundeffect(9);
    wait(140);
    vcclear();
    flags(718) = mag(2);
    flags(718) += flags(718);
    flags(718) += flags(718);
    curhp(2) = maxhp(2);
    curmp(2) = maxmp(2);
    flags(641) = 7;
    calleffect(62);
    callevent(21);
    wait(25);
    specialframe(13) = 0;
    flags(1002) = 0;
  }
}
event /*16*/
{
  if (/*ReturnIndex 00004a2b*/ flags(800) != 1)
  {
    banner("Combat Only!", 1);
  }
  if (/*ReturnIndex 00004a5a*/ flags(632) != 4)
  {
    banner("Can't use now...", 1);
  }
  if (/*ReturnIndex 00004a9e*/ flags(1003) < maxhp(3) + maxhp(3) - fer(3))
  {
    banner("Can't use now...", 1);
  }
  if (/*ReturnIndex 00004ec9*/ flags(800) == 1 && flags(632) == 4 &&
      flags(1003) >= maxhp(3) + maxhp(3) - fer(3))
  {
    banner("Armageddon Kata!", 1);
    specialframe(10) = 5;
    wait(10);
    specialframe(10) = 6;
    wait(10);
    specialframe(10) = 7;
    wait(10);
    specialframe(10) = 8;
    wait(10);
    specialframe(10) = 9;
    wait(20);
    vcclear();
    vcloadpcx("bolt1.pcx", 0);
    vcloadpcx("bolt2.pcx", 3200);
    vctblitimage(40, 1, 32, 100, 0);
    wait(1);
    vcclear();
    vctblitimage(40, 1, 32, 100, 3200);
    wait(10);
    vcclear();
    for (z, 1, 29, 4)
    {
      vctblitimage(40, z, 32, 100, 0);
      wait(1);
      vcclear();
      vctblitimage(40, z + 2, 32, 100, 3200);
      wait(1);
      vcclear();
    }
    wait(10);
    vcclear();
    for (z, 1, 61, 4)
    {
      vctblitimage(40, z, 32, 100, 0);
      wait(1);
      vcclear();
      vctblitimage(40, z + 2, 32, 100, 3200);
      wait(1);
      vcclear();
    }
    wait(10);
    vcclear();
    flags(720) = mag(3);
    flags(720) += mag(3);
    flags(720) += mag(3);
    flags(720) += random(1, 5);
    flags(642) = 7;
    calleffect(62);
    callevent(21);
    vcloadpcx("fengkick.pcx", 0);
    vcloadpcx("fengkik2.pcx", 540);
    for (z, 1, 10, 1)
    {
      specialframe(10) = 3;
      wait(10);
      specialframe(10) = 4;
      wait(10);
    }
    entity.chrindex(10) = 16;
    for (z, 1, 164, 2)
    {
      vctblitimage(48, z, 20, 27, 0);
      wait(1);
      vcclear();
      vctblitimage(48, z, 20, 27, 540);
      wait(1);
      vcclear();
    }
    entity.chrindex(10) = 5;
    specialframe(10) = 0;
    flags(605) = atk(3);
    flags(605) += atk(3);
    flags(605) += atk(3);
    flags(605) += random(1, 5);
    calleffect(61);
    flags(720) = flags(605);
    callevent(21);
    flags(1003) -= curhp(3);
  }
}
event /*17*/
{
  if (/*ReturnIndex 00004ef5*/ flags(800) != 1)
  {
    banner("Combat Only!", 1);
  }
  if (/*ReturnIndex 00004f24*/ flags(633) != 4)
  {
    banner("Can't use now...", 1);
  }
  if (/*ReturnIndex 00004f68*/ flags(1004) < maxhp(4) + maxhp(4) - fer(4))
  {
    banner("Can't use now...", 1);
  }
  if (/*ReturnIndex 000052dd*/ flags(800) == 1 && flags(633) == 4 &&
      flags(1004) >= maxhp(4) + maxhp(4) - fer(4))
  {
    banner("Auto-Fire!", 1);
    specialframe(9) = 5;
    wait(10);
    specialframe(9) = 6;
    wait(10);
    specialframe(9) = 7;
    wait(10);
    specialframe(9) = 8;
    wait(10);
    specialframe(9) = 9;
    wait(20);
    entity.chrindex(9) = 16;
    vcclear();
    vcputpcx("autof.pcx", 81, 21);
    wait(10);
    vcclear();
    vcputpcx("autof2.pcx", 81, 21);
    wait(10);
    vcclear();
    vcputpcx("autof3.pcx", 81, 21);
    wait(10);
    vcclear();
    vcputpcx("autof4.pcx", 81, 21);
    wait(10);
    vcclear();
    vcloadpcx("autof4.pcx", 0);
    vcloadpcx("autof5.pcx", 16000);
    for (x, 1, 20, 1)
    {
      vctblitimage(81, 21, 160, 100, 0);
      wait(5);
      vcclear();
      vctblitimage(81, 21, 160, 100, 16000);
      wait(5);
      vcclear();
    }
    entity.chrindex(9) = 8;
    wait(10);
    specialframe(9) = 0;
    flags(607) = atk(4);
    flags(607) += atk(4);
    flags(607) += atk(4);
    flags(607) += random(1, 5);
    flags(643) = 7;
    calleffect(61);
    callevent(21);
    flags(112) = random(1, 3);
    if (/*ReturnIndex 000052ce*/ flags(112) == 1)
    {
      banner("Reload!", 1);
      flags(851) = 0;
      flags(852) = 0;
      flags(853) = 0;
      flags(854) = 0;
      flags(855) = 0;
      flags(856) = 0;
      flags(857) = 0;
      flags(858) = 0;
      flags(859) = 0;
      flags(860) = 0;
    }
    flags(1004) = 0;
  }
}
event /*18*/
{
  if (/*ReturnIndex 00005309*/ flags(800) != 1)
  {
    banner("Combat Only!", 1);
  }
  if (/*ReturnIndex 00005338*/ flags(634) != 5)
  {
    banner("Can't use now...", 1);
  }
  if (/*ReturnIndex 0000537c*/ flags(1005) < maxhp(5) + maxhp(5) - fer(5))
  {
    banner("Can't use now...", 1);
  }
  if (/*ReturnIndex 000056dc*/ flags(800) == 1 && flags(634) == 5 &&
      flags(1005) >= maxhp(5) + maxhp(5) - fer(5))
  {
    banner("Cold Heart!", 1);
    specialframe(14) = 5;
    wait(10);
    specialframe(14) = 6;
    wait(10);
    specialframe(14) = 7;
    wait(10);
    specialframe(14) = 8;
    wait(10);
    specialframe(14) = 9;
    wait(10);
    specialframe(14) = 0;
    wait(50);
    vcloadpcx("snowflak.pcx", 0);
    for (x, 1, 100, 1)
    {
      for (z, 1, 15, 1)
      {
        flags(107) = random(1, 299);
        flags(112) = random(1, 171);
        vctblitimage(flags(107), flags(112), 20, 20, 0);
      }
      wait(1);
      vcclear();
      palettemorph(63, 63, 63, x, 63);
    }
    wait(100);
    for (x, 1, 100, 1)
    {
      for (z, 1, 15, 1)
      {
        flags(107) = random(1, 299);
        flags(112) = random(1, 171);
        vctblitimage(flags(107), flags(112), 20, 20, 0);
      }
      wait(1);
      vcclear();
      palettemorph(63, 63, 63, 100 - x, 63);
    }
    if (/*ReturnIndex 00005601*/ flags(598) > 0)
    {
      getitem(5, flags(513));
    }
    if (/*ReturnIndex 00005628*/ flags(599) > 0)
    {
      getitem(5, flags(526));
    }
    if (/*ReturnIndex 0000564f*/ flags(600) > 0)
    {
      getitem(5, flags(539));
    }
    flags(724) = mag(5);
    flags(724) += mag(5);
    flags(724) += mag(5);
    flags(724) += random(1, 5);
    flags(644) = 7;
    calleffect(62);
    flags(644) = 7;
    callevent(21);
    flags(1005) = 0;
  }
}
event /*19*/
{
  if (/*ReturnIndex 00005708*/ flags(800) != 1)
  {
    banner("Combat Only!", 1);
  }
  if (/*ReturnIndex 00005737*/ flags(635) != 4)
  {
    banner("Can't use now...", 1);
  }
  if (/*ReturnIndex 0000577b*/ flags(1006) < maxhp(6) + maxhp(6) - fer(6))
  {
    banner("Can't use now...", 1);
  }
  if (/*ReturnIndex 000057e9*/ flags(800) == 1 && flags(635) == 4 &&
      flags(1006) >= maxhp(6) + maxhp(6) - fer(6))
  {
    banner("Burn Magic!", 1);
    flags(1006) = 0;
  }
}
event /*20*/
{
  if (/*ReturnIndex 00005815*/ flags(800) != 1)
  {
    banner("Combat Only!", 1);
  }
  if (/*ReturnIndex 00005844*/ flags(636) != 4)
  {
    banner("Can't use now...", 1);
  }
  if (/*ReturnIndex 00005888*/ flags(1007) < maxhp(7) + maxhp(7) - fer(7))
  {
    banner("Can't use now...", 1);
  }
  if (/*ReturnIndex 000059b2*/ flags(800) == 1 && flags(636) == 4 &&
      flags(1007) >= maxhp(7) + maxhp(7) - fer(7))
  {
    banner("Belchaclypse!", 1);
    specialframe(12) = 5;
    wait(15);
    specialframe(12) = 6;
    wait(15);
    specialframe(12) = 7;
    wait(15);
    specialframe(12) = 6;
    wait(15);
    specialframe(12) = 5;
    wait(15);
    specialframe(12) = 0;
    flags(646) = 7;
    earthquake(16, 16, 300);
    calleffect(62);
    callevent(21);
    flags(1007) -= curhp(7);
  }
}
event /*21*/
{
  if (/*ReturnIndex 000059de*/ flags(800) != 1)
  {
    banner("Combat Only!", 1);
  }
  if (/*ReturnIndex 00005a0d*/ flags(637) != 4)
  {
    banner("Can't use now...", 1);
  }
  if (/*ReturnIndex 00005a51*/ flags(1008) < maxhp(8) + maxhp(8) - fer(8))
  {
    banner("Can't use now...", 1);
  }
  if (/*ReturnIndex 00005ac0*/ flags(800) == 1 && flags(637) == 4 &&
      flags(1008) >= maxhp(8) + maxhp(8) - fer(8))
  {
    banner("Sainted Joy!", 1);
    flags(1008) = 0;
  }
}
event /*22*/
{
  banner("Antidote!", 1);
  if (/*ReturnIndex 00005b73*/ flags(800) == 1)
  {
    specialframe(14) = 5;
    wait(10);
    specialframe(14) = 6;
    wait(10);
    specialframe(14) = 7;
    wait(10);
    specialframe(14) = 8;
    wait(10);
    specialframe(14) = 9;
    wait(10);
    specialframe(14) = 0;
    wait(50);
  }
  flags(1021) = 0;
  flags(1022) = 0;
  flags(1023) = 0;
  flags(1024) = 0;
  flags(1025) = 0;
  flags(1026) = 0;
  flags(1027) = 0;
  flags(1028) = 0;
}
event /*23*/
{
  if (/*ReturnIndex 00005c26*/ flags(800) == 0)
  {
    banner("Combat Only!", 1);
    curmp(2) += 10;
  }
  if (/*ReturnIndex 00005d75*/ flags(800) == 1)
  {
    flags(603) = 0;
    if (/*ReturnIndex 00005ca3*/ gp > 49)
    {
      takegp(50);
      for (x, 1, 20, 1)
      {
        flags(603) += lvl(2);
      }
      flags(603) += random(1, 21);
    }
    if (/*ReturnIndex 00005cc5*/ gp < 50)
    {
      banner("No value!", 1);
    }
    callevent(14);
    specialframe(13) = 5;
    wait(10);
    specialframe(13) = 6;
    wait(10);
    specialframe(13) = 7;
    wait(10);
    specialframe(13) = 8;
    wait(10);
    specialframe(13) = 9;
    wait(20);
    banner("Spit Pearl", 1);
    calleffect(61);
    specialframe(13) = 0;
    callevent(21);
  }
}
event /*24*/
{
  banner("Purity of Soul", 1);
  flags(112) = curmp(1);
  healall();
  curmp(1) = flags(112);
  soundeffect(10);
  if (/*ReturnIndex 00005e5c*/ flags(800) == 1)
  {
    specialframe(8) = 5;
    wait(10);
    specialframe(8) = 6;
    wait(10);
    specialframe(8) = 7;
    wait(10);
    specialframe(8) = 8;
    wait(10);
    specialframe(8) = 9;
    wait(20);
    callevent(18);
    specialframe(8) = 0;
  }
}
event /*25*/
{
  if (/*ReturnIndex 00005e97*/ flags(800) != 1)
  {
    banner("Combat Only!", 1);
    curmp(1) += 75;
  }
  if (/*ReturnIndex 000063c6*/ flags(800) == 1)
  {
    banner("Boo!", 1);
    specialframe(8) = 5;
    wait(10);
    specialframe(8) = 6;
    wait(10);
    specialframe(8) = 7;
    wait(10);
    specialframe(8) = 8;
    wait(10);
    specialframe(8) = 9;
    wait(10);
    specialframe(8) = 3;
    wait(10);
    specialframe(8) = 4;
    wait(20);
    vcclear();
    vcputpcx("ghosty1.pcx", 81, 53);
    wait(10);
    vcclear();
    vcputpcx("ghosty2.pcx", 81, 53);
    wait(20);
    vcclear();
    vcputpcx("ghosty3.pcx", 81, 53);
    wait(30);
    vcclear();
    vcputpcx("ghosty4.pcx", 81, 53);
    wait(40);
    vcclear();
    vcputpcx("ghosty5.pcx", 81, 53);
    wait(50);
    vcclear();
    vcputpcx("ghosty6.pcx", 81, 53);
    wait(100);
    vcclear();
    specialframe(8) = 0;
    if (/*ReturnIndex 00006140*/ flags(598) > 0)
    {
      flags(601) = mag(10);
      if (/*ReturnIndex 00006094*/ flags(601) <= flags(711))
      {
        flags(601) = 0;
      }
      if (/*ReturnIndex 000060bf*/ flags(601) > flags(711))
      {
        flags(601) -= flags(711);
      }
      if (/*ReturnIndex 000060fe*/ flags(601) >= flags(598))
      {
        vctextnum(48, 144, flags(598));
        flags(598) = 0;
      }
      if (/*ReturnIndex 00006140*/ flags(601) < flags(598))
      {
        flags(598) -= flags(601);
        vctextnum(48, 80, flags(601));
      }
    }
    if (/*ReturnIndex 0000623c*/ flags(599) > 0)
    {
      flags(601) = mag(10);
      if (/*ReturnIndex 00006190*/ flags(601) <= flags(713))
      {
        flags(601) = 0;
      }
      if (/*ReturnIndex 000061bb*/ flags(601) > flags(713))
      {
        flags(601) -= flags(713);
      }
      if (/*ReturnIndex 000061fa*/ flags(601) >= flags(599))
      {
        vctextnum(48, 144, flags(599));
        flags(599) = 0;
      }
      if (/*ReturnIndex 0000623c*/ flags(601) < flags(599))
      {
        flags(599) -= flags(601);
        vctextnum(48, 112, flags(601));
      }
    }
    if (/*ReturnIndex 00006338*/ flags(600) > 0)
    {
      flags(601) = mag(10);
      if (/*ReturnIndex 0000628c*/ flags(601) <= flags(715))
      {
        flags(601) = 0;
      }
      if (/*ReturnIndex 000062b7*/ flags(601) > flags(715))
      {
        flags(601) -= flags(715);
      }
      if (/*ReturnIndex 000062f6*/ flags(601) >= flags(600))
      {
        vctextnum(48, 144, flags(600));
        flags(600) = 0;
      }
      if (/*ReturnIndex 00006338*/ flags(601) < flags(600))
      {
        flags(600) -= flags(601);
        vctextnum(48, 144, flags(601));
      }
    }
    if (/*ReturnIndex 0000635d*/ flags(598) == 0)
    {
      specialframe(7) = 29;
    }
    if (/*ReturnIndex 00006382*/ flags(599) == 0)
    {
      specialframe(5) = 29;
    }
    if (/*ReturnIndex 000063a7*/ flags(600) == 0)
    {
      specialframe(6) = 29;
    }
    wait(50);
    givexp(10, 5);
    callevent(18);
  }
}
event /*26*/
{
  if (/*ReturnIndex 00006405*/ flags(800) != 1)
  {
    banner("Moobvuu Milk!", 1);
    curhp(1) = maxhp(1);
  }
  if (/*ReturnIndex 00006baa*/ flags(800) == 1)
  {
    flags(112) = random(1, 4);
    if (/*ReturnIndex 00006516*/ flags(112) == 1)
    {
      flags(107) = atk(13);
      banner("Redroom Stampede", 1);
      wait(20);
      vcclear();
      vcputpcx("mobvuua1.pcx", 81, 53);
      wait(10);
      vcclear();
      vcputpcx("mobvuua2.pcx", 81, 53);
      wait(20);
      vcclear();
      vcputpcx("mobvuua3.pcx", 81, 53);
      wait(30);
      vcclear();
      vcputpcx("mobvuua4.pcx", 81, 53);
      wait(40);
      vcclear();
      if (/*ReturnIndex 000065f7*/ flags(112) == 2)
      {
        flags(107) = mag(13);
        banner("Moobvuu Meteor", 1);
        wait(20);
        vcclear();
        vcputpcx("mobvuum1.pcx", 81, 53);
        wait(10);
        vcclear();
        vcputpcx("mobvuum2.pcx", 81, 53);
        wait(20);
        vcclear();
        vcputpcx("mobvuum3.pcx", 81, 53);
        wait(30);
        vcclear();
        vcputpcx("mobvuum4.pcx", 81, 53);
        wait(40);
        vcclear();
        if (/*ReturnIndex 0000674b*/ flags(112) == 3)
        {
          banner("Bovine Anger", 1);
          banner("Retribution!!!", 1);
          flags(1001) += 1000;
          flags(1002) += 1000;
          flags(1003) += 1000;
          flags(1004) += 1000;
          flags(1005) += 1000;
          flags(1006) += 1000;
          flags(1007) += 1000;
          flags(1008) += 1000;
          wait(20);
          vcclear();
          vcputpcx("bovine1.pcx", 81, 53);
          wait(10);
          vcclear();
          vcputpcx("bovine2.pcx", 81, 53);
          wait(20);
          vcclear();
          vcputpcx("bovine3.pcx", 81, 53);
          wait(30);
          vcclear();
          vcputpcx("bovine4.pcx", 81, 53);
          wait(40);
          vcclear();
          if (/*ReturnIndex 00006ac4*/ flags(112) < 3)
          {
            if (/*ReturnIndex 0000685d*/ flags(598) > 0)
            {
              flags(601) = flags(107);
              if (/*ReturnIndex 000067b1*/ flags(601) <= flags(711))
              {
                flags(601) = 0;
                if (/*ReturnIndex 000067dc*/ flags(601) > flags(711))
                {
                  flags(601) -= flags(711);
                  if (/*ReturnIndex 0000681b*/ flags(601) >= flags(598))
                  {
                    vctextnum(48, 144, flags(598));
                    flags(598) = 0;
                    if (/*ReturnIndex 0000685d*/ flags(601) < flags(598))
                    {
                      flags(598) -= flags(601);
                      vctextnum(48, 80, flags(601));
                      if (/*ReturnIndex 00006959*/ flags(599) > 0)
                      {
                        flags(601) = flags(107);
                        if (/*ReturnIndex 000068ad*/ flags(601) <= flags(713))
                        {
                          flags(601) = 0;
                          if (/*ReturnIndex 000068d8*/ flags(601) > flags(713))
                          {
                            flags(601) -= flags(713);
                            if (/*ReturnIndex 00006917*/ flags(601) >=
                                flags(599))
                            {
                              vctextnum(48, 144, flags(599));
                              flags(599) = 0;
                              if (/*ReturnIndex 00006959*/ flags(601) <
                                  flags(599))
                              {
                                flags(599) -= flags(601);
                                vctextnum(48, 112, flags(601));
                                if (/*ReturnIndex 00006a55*/ flags(600) > 0)
                                {
                                  flags(601) = flags(107);
                                  if (/*ReturnIndex 000069a9*/ flags(601) <=
                                      flags(715))
                                  {
                                    flags(601) = 0;
                                    if (/*ReturnIndex 000069d4*/ flags(601) >
                                        flags(715))
                                    {
                                      flags(601) -= flags(715);
                                      if (/*ReturnIndex 00006a13*/ flags(601) >=
                                          flags(600))
                                      {
                                        vctextnum(48, 144, flags(600));
                                        flags(600) = 0;
                                        if (/*ReturnIndex 00006a55*/ flags(
                                                601) < flags(600))
                                        {
                                          flags(600) -= flags(601);
                                          vctextnum(48, 144, flags(601));
                                          if (/*ReturnIndex 00006a7a*/ flags(
                                                  598) == 0)
                                          {
                                            specialframe(7) = 29;
                                            if (/*ReturnIndex 00006a9f*/ flags(
                                                    599) == 0)
                                            {
                                              specialframe(5) = 29;
                                              if (/*ReturnIndex 00006ac4*/
                                                  flags(600) == 0)
                                              {
                                                specialframe(6) = 29;
                                                wait(50);
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    givexp(13, 5);
    if (/*ReturnIndex 00006ba1*/ flags(112) == 4)
    {
      banner("Cow Bell", 1);
      vcclear();
      vcputpcx("bovine1.pcx", 81, 53);
      wait(10);
      vcclear();
      vcputpcx("bovine2.pcx", 81, 53);
      wait(20);
      vcclear();
      vcputpcx("bovine3.pcx", 81, 53);
      wait(30);
      vcclear();
      vcputpcx("bovine4.pcx", 81, 53);
      wait(40);
      vcclear();
      givexp(13, 45);
      callevent(18);
    }
    return;
    if (/*ReturnIndex 00006bd6*/ flags() +)
    { /*parse failure: NewParseExpression: Illegal opcode 32*/
    }
    event /*27*/
    {
      redraw();
      return;
      b; /*parse failure: NewParseExpression: Illegal opcode 0*/
      banner("Combat Only!", 1);
      if (/*ReturnIndex 00006bfd*/ flags(855) == 1)
      {
        banner("Used up!", 1);
        if (/*ReturnIndex 00007077*/ flags(800) == 1 && flags(855) == 0)
        {
          flags(607) = hit(4) + 40;
          flags(607) += random(1, 5);
          flags(607) += flags(250);
          callevent(14);
          specialframe(9) = 5;
          wait(10);
          specialframe(9) = 6;
          wait(10);
          specialframe(9) = 7;
          wait(10);
          specialframe(9) = 8;
          wait(10);
          specialframe(9) = 9;
          wait(20);
          banner("Drop: VenusShell", 1);
          vcloadpcx("shell1.pcx", 0);
          vcloadpcx("shell2.pcx", 1024);
          vcloadpcx("shell3.pcx", 2048);
          vcloadpcx("shell4.pcx", 3072);
          switch (flags(643))
          {
            case (1):
              soundeffect(22);
              for (z, 1, 65, 8)
              {
                vctblitimage(40, z, 32, 32, 0);
                wait(1);
                vcclear();
                vctblitimage(40, z + 2, 32, 32, 1024);
                wait(1);
                vcclear();
                vctblitimage(40, z + 4, 32, 32, 2048);
                wait(1);
                vcclear();
                vctblitimage(40, z + 6, 32, 32, 3072);
                wait(1);
                vcclear();
              }
              vcputpcx("venus.pcx", 40, 65);
              wait(50);
              vcclear();
              return; /*parse failure: NewParseExpression: Illegal opcode 11*/
          }
          for (z, 1, 97, 8)
          {
            vctblitimage(40, z, 32, 32, 0);
            wait(1);
            vcclear();
            vctblitimage(40, z + 2, 32, 32, 1024);
            wait(1);
            vcclear();
            vctblitimage(40, z + 4, 32, 32, 2048);
            wait(1);
            vcclear();
            vctblitimage(40, z + 6, 32, 32, 3072);
            wait(1);
            vcclear();
          }
          vcputpcx("venus.pcx", 40, 97);
          wait(50);
          vcclear();
          return; /*parse failure: NewParseExpression: Illegal opcode 11*/
          return; /*parse failure: NewParseExpression: Illegal opcode 68*/
          for (z, 1, 129, 8)
          {
            vctblitimage(40, z, 32, 32, 0);
            wait(1);
            vcclear();
            vctblitimage(40, z + 2, 32, 32, 1024);
            wait(1);
            vcclear();
            vctblitimage(40, z + 4, 32, 32, 2048);
            wait(1);
            vcclear();
            vctblitimage(40, z + 6, 32, 32, 3072);
            wait(1);
            vcclear();
          }
          vcputpcx("venus.pcx", 40, 129);
          wait(50);
          vcclear();
          return;
          return;
          calleffect(61);
          specialframe(9) = 0;
          flags(855) = 1;
          healall();
          callevent(15);
          return;
          if (/*ReturnIndex 000070a3*/ flags() +)
          { /*parse failure: NewParseExpression: Illegal opcode 32*/
          }
        }
      }
    }
  }
}
event /*28*/
{
  redraw();
  return;
  b; /*parse failure: NewParseExpression: Illegal opcode 0*/
  banner("Combat Only!", 1);
  if (/*ReturnIndex 000070ca*/ flags(857) == 1)
  {
    banner("Used up!", 1);
    if (/*ReturnIndex 00007269*/ flags(800) == 1 && flags(857) == 0)
    {
      specialframe(9) = 5;
      wait(10);
      specialframe(9) = 6;
      wait(10);
      specialframe(9) = 7;
      wait(10);
      specialframe(9) = 8;
      wait(10);
      specialframe(9) = 9;
      wait(20);
      banner("Drop: Big Foot", 1);
      soundeffect(22);
      vcloadpcx("footfall.pcx", 0);
      for (x, 1, 97, 1)
      {
        vctblitimage(40, x, 48, 32, 0);
        wait(1);
        vcclear();
      }
      earthquake(5, 5, 50);
      specialframe(9) = 0;
      flags(857) = 1;
      flags(722) = hit(4) + 200;
      flags(722) += mag(4);
      flags(722) += random(5, 75);
      flags(643) = 7;
      calleffect(62);
      callevent(21);
      return;
      if (/*ReturnIndex 000072a4*/ flags() +)
      { /*parse failure: NewParseExpression: Illegal opcode 32*/
      }
    }
  }
  event /*29*/
  {
    redraw();
    return;
    b; /*parse failure: NewParseExpression: Illegal opcode 0*/
    banner("Combat Only!", 1);
    curmp(1) += 1;
    if (/*ReturnIndex 000073a6*/ flags(800) == 1)
    {
      specialframe(8) = 5;
      wait(10);
      specialframe(8) = 6;
      wait(10);
      specialframe(8) = 7;
      wait(10);
      specialframe(8) = 8;
      wait(10);
      specialframe(8) = 9;
      wait(20);
      banner("Learn", 1);
      banner("XP is doubled!", 1);
      curmp(1) = 0;
      flags(509) += flags(509);
      flags(522) += flags(522);
      flags(535) += flags(535);
      specialframe(8) = 0;
      return;
      if (/*ReturnIndex 000073e1*/ flags() +)
      { /*parse failure: NewParseExpression: Illegal opcode 32*/
      }
    }
  }
  event /*30*/
  {
    redraw();
    return;
    b; /*parse failure: NewParseExpression: Illegal opcode 0*/
    banner("Combat Only!", 1);
    curmp(2) += 35;
    if (/*ReturnIndex 000074c6*/ flags(800) == 1)
    {
      flags(603) = atk(2);
      flags(603) += fer(2);
      flags(603) += flags(603);
      callevent(14);
      banner("Dive Bomb", 1);
      soundeffect(22);
      entity.locy(13) = 20;
      for (y, 1, 97, 2)
      {
        x = 161 - y;
        vcputpcx("diver.pcx", x, y);
        wait(1);
        vcclear();
      }
      entity.locy(13) = 8;
      calleffect(61);
      callevent(15);
      wait(25);
      return;
      if (/*ReturnIndex 00007501*/ flags() +)
      { /*parse failure: NewParseExpression: Illegal opcode 32*/
      }
    }
  }
  event /*31*/
  {
    redraw();
    return;
    b; /*parse failure: NewParseExpression: Illegal opcode 0*/
    banner("Combat Only!", 1);
    curmp(5) += 65;
    if (/*ReturnIndex 000078de*/ flags(800) == 1)
    {
      banner("Pep Rally", 1);
      entity.chrindex(14) = 16;
      for (x, 1, 8, 1)
      {
        vcclear();
        vcputpcx("pepper.pcx", 81, 53);
        wait(10);
        vcclear();
        vcputpcx("pepper2.pcx", 81, 53);
        wait(10);
      }
      for (x, 1, 8, 1)
      {
        vcclear();
        vcputpcx("pepper3.pcx", 81, 53);
        wait(10);
        vcclear();
        vcputpcx("pepper4.pcx", 81, 53);
        wait(10);
      }
      vcclear();
      vcputpcx("pepper5.pcx", 81, 53);
      wait(50);
      vcclear();
      vcputpcx("pepper6.pcx", 81, 53);
      wait(10);
      vcclear();
      vcputpcx("pepper7.pcx", 81, 53);
      wait(50);
      for (x, 1, 8, 1)
      {
        vcclear();
        vcputpcx("pepper3.pcx", 81, 53);
        wait(10);
        vcclear();
        vcputpcx("pepper4.pcx", 81, 53);
        wait(10);
      }
      vcclear();
      vcputpcx("pepper8.pcx", 81, 53);
      wait(100);
      for (x, 1, 8, 1)
      {
        vcclear();
        vcputpcx("pepper3.pcx", 81, 53);
        wait(10);
        vcclear();
        vcputpcx("pepper4.pcx", 81, 53);
        wait(10);
      }
      for (x, 1, 200, 1)
      {
        vcclear();
        vcputpcx("plane2.pcx", 200 - x, 53);
        wait(1);
      }
      for (x, 1, 8, 1)
      {
        vcclear();
        vcputpcx("pepper3.pcx", 81, 53);
        wait(10);
        vcclear();
        vcputpcx("pepper4.pcx", 81, 53);
        wait(10);
      }
      vcclear();
      vcputpcx("pepper9.pcx", 81, 53);
      wait(200);
      vcclear();
      entity.chrindex(14) = 11;
      wait(10);
      callevent(14);
      for (z, 1, 8, 1)
      {
        if (/*ReturnIndex 000078dd*/ char(z))
        {
          flags(1000 + z) += maxhp(z);
          flags(1000 + z) += fer(z);
          flags(639 + z) = flags(644);
          flags(629 + z) = 1;
          flags(599 + z + z) += random(70, 310);
          flags(599 + z + z) += 100;
          flags(600 + z + z) += random(7, 10);
          return;
          return;
          if (/*ReturnIndex 00007919*/ flags() +)
          { /*parse failure: NewParseExpression: Illegal opcode 32*/ /*parse
                                                                        failure:
                                                                        ParseFor0:
                                                                        tail but
                                                                        no END
                                                                        found.
                                                                        Found
                                                                        32*/
          }
        }
      }
    }
    event /*32*/
    {
      redraw();
      return;
      b; /*parse failure: NewParseExpression: Illegal opcode 0*/
      banner("Combat Only!", 1);
      curmp(2) += 30;
      if (/*ReturnIndex 00007e15*/ flags(800) == 1)
      {
        textmenu(18, 18, 112, 1, "Normal Spell", "Powered Spell");
        if (/*ReturnIndex 000079bd*/ flags(112) == 2 && flags(703) < 3)
        {
          stext(0, "Not enough Spell Points!", "", "");
          flags(112) = 1;
          if (/*ReturnIndex 000079f2*/ flags(112) == 2 && flags(703) > 2)
          {
            flags(703) -= 3;
            callevent(14);
          }
        }
        flags(718) = mag(2);
        if (/*ReturnIndex 00007a35*/ flags(112) < 2)
        {
          banner("Evilshock", 1);
          if (/*ReturnIndex 00007a86*/ flags(112) == 2)
          {
            banner("True Evilshock", 1);
            flags(718) += mag(2);
            flags(718) += mag(2);
            flags(718) += random(8, 85);
          }
        }
        specialframe(13) = 5;
        wait(10);
        specialframe(13) = 6;
        wait(10);
        specialframe(13) = 7;
        wait(10);
        specialframe(13) = 8;
        wait(10);
        specialframe(13) = 9;
        wait(20);
        vcloadpcx("evil1.pcx", 0);
        vcloadpcx("evil2.pcx", 3200);
        switch (flags(641))
        {
          case (1):
            for (x, 1, 5, 1)
            {
              vctblitimage(48, 64, 100, 32, 0);
              wait(10);
              vcclear();
              vctblitimage(48, 64, 100, 32, 3200);
              wait(10);
              vcclear();
            }
            return; /*parse failure: NewParseExpression: Illegal opcode 11*/
        }giveitem(/*parse failure: ParseOperandArg: Unknown op 0*/mapswitch("",/*parse failure: ParseOperandArg: Unknown op 0*/vctblitimage(48,96,100,32,0);wait(10);vcclear();vctblitimage(48,96,100,32,3200);wait(10);vcclear();return;return;/*parse failure: NewParseExpression: Illegal opcode 11*/return;/*parse failure: NewParseExpression: Illegal opcode 167*/giveitem(/*parse failure: ParseOperandArg: Unknown op 0*/mapswitch("",/*parse failure: ParseOperandArg: Unknown op 0*/vctblitimage(48,128,100,32,0);wait(10);vcclear();vctblitimage(48,128,100,32,3200);wait(10);vcclear();return;return;return;calleffect(62);specialframe(13)=0;callevent(21);if(/*ReturnIndex 00007e15*/flags(284)==1){
          stext(0, "Evilchu evolves into Vilechu!", "", "");
          flags(284) = 2;
          flags(599) = 2500;
          entity.chrindex(5) = 23;
          specialframe(5) = 0;
          flags(515) = 150;
          flags(516) = 80;
          flags(518) = 77;
          flags(519) = 76;
          flags(520) = 75;
          flags(521) = 75;
          flags(522) = 60;
          flags(523) = 70;
          flags(524) = 5;
          flags(525) = 65;
          flags(526) = 70;
          flags(542) = 250;
          flags(543) = 100;
          flags(251) = 1;
          return;
          if (/*ReturnIndex 00007e50*/ flags() +)
          { /*parse failure: NewParseExpression: Illegal opcode 32*/
          }}
      }
    }
  }
}
}
}
}
}
event /*33*/
{
  redraw();
  return;
  b; /*parse failure: NewParseExpression: Illegal opcode 0*/
  banner("Combat Only!", 1);
  curmp(2) += 60;
  if (/*ReturnIndex 00008090*/ flags(800) == 1)
  {
    textmenu(18, 18, 112, 1, "Normal Spell", "Powered Spell");
    if (/*ReturnIndex 00007ef4*/ flags(112) == 2 && flags(703) < 6)
    {
      stext(0, "Not enough Spell Points!", "", "");
      flags(112) = 1;
      if (/*ReturnIndex 00007f29*/ flags(112) == 2 && flags(703) > 5)
      {
        flags(703) -= 6;
        if (/*ReturnIndex 00007fc8*/ flags(112) != 2)
        {
          banner("Health Leech", 1);
          callevent(14);
          switch (flags(641))
          {
            case (1):
              flags(107) = flags(598);
              return; /*parse failure: NewParseExpression: Illegal opcode 11*/
          }addcharacter(/*parse failure: ParseOperandArg: Unknown op 0*/return;return;/*parse failure: NewParseExpression: Illegal opcode 11*/return;/*parse failure: NewParseExpression: Illegal opcode 199*/addcharacter(/*parse failure: ParseOperandArg: Unknown op 0*/return;return;return;if(/*ReturnIndex 00008015*/flags(112)==2){
            banner("Mega-Leech", 1);
            flags(107) = flags(598) + flags(599) + flags(600);
            palettemorph(0, 43, 0, 80, 63);}wait(100);palettemorph(0,0,0,0,63);for(z,1,flags(107),10){
            curhp(2) += 1;}vcclear();callevent(18);
        }
      }
    }
  }
}
}
}
}